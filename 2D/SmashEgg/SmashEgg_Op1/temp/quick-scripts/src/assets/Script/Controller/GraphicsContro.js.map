{"version":3,"sources":["assets\\Script\\Controller\\GraphicsContro.js"],"names":["cc","Class","Component","properties","graphics","line_point","Vec2","isCanDraw","onLoad","node","width","height","getComponent","Graphics","start","window","PointPos","v2","isLineStop","isActiveLineLogic","onTouch","update","rigibodyLogic","linearVelocity","x","y","on","Node","EventType","TOUCH_START","touch_start","TOUCH_MOVE","touch_move","TOUCH_END","touch_end","TOUCH_CANCEL","offTouch","off","event","isWin","pos","convertToNodeSpaceAR","getLocation","isStartDraw","moveTo","push","lineTo","isTouchWall","strokeColor","Color","RED","BLACK","stroke","StateForJs","clear","isDraw","createRigibody","addComponent","RigidBody","gravityScale","physicsLine","lineWidth","points","friction","density","tag","apply","scheduleOnce","applyContact","onBeginContact","c","s","o","checkIsCanDraw","lastPoint","nowPoint","sub","mag"],"mappings":"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","sourceRoot":"/","sourcesContent":["import { StateForJs } from \"../Data/StateForJS\";\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        graphics: null,\r\n        line_point: [cc.Vec2],\r\n        isCanDraw: true,\r\n    },\r\n\r\n    onLoad() {\r\n        this.node.width = 320;\r\n        this.node.height = 480;\r\n        this.graphics = this.getComponent(cc.Graphics);\r\n    },\r\n\r\n    start() {\r\n\r\n\r\n        // StateForJs.isCanDraw = true;\r\n        window.PointPos = cc.v2(-50,100);\r\n        window.isLineStop = false;\r\n        this.isActiveLineLogic = false;\r\n        this.onTouch();\r\n    },\r\n\r\n\r\n    update() {\r\n        if(this.rigibodyLogic && this.isActiveLineLogic) {\r\n            if(this.rigibodyLogic.linearVelocity.x === 0 && this.rigibodyLogic.linearVelocity.y === 0) {\r\n                window.isLineStop = true;\r\n            }\r\n        }\r\n    },\r\n\r\n\r\n    onTouch() {\r\n        this.node.on(cc.Node.EventType.TOUCH_START, this.touch_start, this);\r\n        this.node.on(cc.Node.EventType.TOUCH_MOVE, this.touch_move, this);\r\n        this.node.on(cc.Node.EventType.TOUCH_END, this.touch_end, this);\r\n        this.node.on(cc.Node.EventType.TOUCH_CANCEL, this.touch_end, this);\r\n    },\r\n    offTouch() {\r\n        this.node.off(cc.Node.EventType.TOUCH_START);\r\n        this.node.off(cc.Node.EventType.TOUCH_MOVE);\r\n        this.node.off(cc.Node.EventType.TOUCH_END);\r\n        this.node.off(cc.Node.EventType.TOUCH_CANCEL);\r\n    },\r\n    touch_start: function (event) {\r\n        if (!this.isCanDraw || window.isWin) {\r\n            return;\r\n        }\r\n\r\n        let pos = this.node.convertToNodeSpaceAR(event.getLocation());\r\n        window.isStartDraw = true;\r\n        window.PointPos = pos;\r\n        this.graphics.moveTo(pos.x, pos.y);\r\n        this.line_point.push(cc.v2(pos.x, pos.y));\r\n    },\r\n    touch_move: function (event) {\r\n        if (!this.isCanDraw || window.isWin) {\r\n            return;\r\n        }\r\n\r\n        let pos = this.node.convertToNodeSpaceAR(event.getLocation());\r\n        window.PointPos = pos;\r\n        this.graphics.lineTo(pos.x, pos.y);\r\n        this.line_point.push(cc.v2(pos.x, pos.y));\r\n\r\n        if(window.isTouchWall) {\r\n            this.graphics.strokeColor = cc.Color.RED\r\n        } else {\r\n            this.graphics.strokeColor = cc.Color.BLACK\r\n        }\r\n\r\n        this.graphics.stroke();\r\n    },\r\n    touch_end: function (event) {\r\n        if(window.isTouchWall) {\r\n            StateForJs.isCanDraw = true;\r\n            window.isTouchWall = false;\r\n            this.line_point = [];\r\n            this.graphics.clear();\r\n            return;\r\n        }\r\n\r\n        if (!this.isCanDraw || window.isWin) {\r\n            return;\r\n        }\r\n\r\n        \r\n        this.isCanDraw = false;\r\n        window.isDraw = true;\r\n        window.isTouchWall = false\r\n        this.createRigibody();\r\n        this.offTouch();\r\n    },\r\n    createRigibody: function () {\r\n        this.rigibodyLogic = this.addComponent(cc.RigidBody);\r\n        this.rigibodyLogic.gravityScale = 10;\r\n\r\n        this.physicsLine = this.addComponent(\"MyPhysicsCollider\");\r\n        this.physicsLine.lineWidth = 9;\r\n        this.physicsLine.points = this.line_point;\r\n        this.physicsLine.friction = 0;\r\n        this.physicsLine.density = 0;\r\n        this.physicsLine.tag = 5;\r\n        this.physicsLine.apply();\r\n\r\n        this.scheduleOnce(() => {\r\n            this.isActiveLineLogic = true;\r\n        }, 0.3);\r\n    },\r\n\r\n\r\n    applyContact() {\r\n        this.rigibodyLogic.onBeginContact = (c,s,o) => {\r\n            \r\n        }\r\n    },\r\n\r\n\r\n    checkIsCanDraw: function (lastPoint, nowPoint) {\r\n        return lastPoint.sub(nowPoint).mag() >= 20;\r\n    },\r\n\r\n});\r\n"]}