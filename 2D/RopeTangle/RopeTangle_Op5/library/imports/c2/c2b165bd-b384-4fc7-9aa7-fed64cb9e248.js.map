{"version":3,"sources":["assets\\Script\\Controller\\RopeController.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AACM,IAAA,KAAsB,EAAE,CAAC,UAAU,EAAlC,OAAO,aAAA,EAAE,QAAQ,cAAiB,CAAC;AAG1C;IAA4C,kCAAY;IAAxD;QAAA,qEAwCC;QArCG,gBAAU,GAAY,KAAK,CAAC;QAE5B,YAAM,GAAY,IAAI,CAAC;QAEvB,UAAI,GAAY,EAAE,CAAC,IAAI,CAAC,CAAC,EAAC,CAAC,CAAC,CAAC;;QA0B7B,yDAAyD;QACzD,+DAA+D;QAC/D,6BAA6B;QAC7B,6BAA6B;QAC7B,mCAAmC;QACnC,qCAAqC;QACrC,IAAI;IACR,CAAC;IA9Ba,8BAAK,GAAf;QACI,IAAI,KAAK,GAAK,IAAI,CAAC,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC;QACnD,IAAI,MAAM,GAAI,IAAI,CAAC,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC;QAErD,4BAA4B;QAE5B,8CAA8C;QAC9C,uCAAuC;QAEvC,yBAAyB;QACzB,yBAAyB;QACzB,oDAAoD;QACpD,yCAAyC;QACzC,IAAI;QAEJ,kDAAkD;QAClD,mDAAmD;QACnD,mDAAmD;QACnD,kDAAkD;QAElD,2BAA2B;IAC/B,CAAC;IA5BD;QADC,QAAQ,CAAC,EAAE,CAAC,OAAO,CAAC;sDACO;IAE5B;QADC,QAAQ,CAAC,EAAE,CAAC,IAAI,CAAC;kDACK;IAEvB;QADC,QAAQ,CAAC,EAAE,CAAC,IAAI,CAAC;gDACW;IAPZ,cAAc;QADlC,OAAO;OACa,cAAc,CAwClC;IAAD,qBAAC;CAxCD,AAwCC,CAxC2C,EAAE,CAAC,SAAS,GAwCvD;kBAxCoB,cAAc","file":"","sourceRoot":"/","sourcesContent":["\r\nconst {ccclass, property} = cc._decorator;\r\n\r\n@ccclass\r\nexport default class RopeController extends cc.Component {\r\n\r\n    @property(cc.Boolean)\r\n    mouseJoint: boolean = false;\r\n    @property(cc.Node)\r\n    canvas: cc.Node = null;\r\n    @property(cc.Size)\r\n    size: cc.Size = cc.size(0,0);\r\n \r\n\r\n    protected start(): void {\r\n        let width   = this.size.width || this.canvas.width;\r\n        let height  = this.size.height || this.canvas.height;\r\n\r\n        // let node = new cc.Node();\r\n\r\n        // let body = node.addComponent(cc.RigidBody);\r\n        // body.type = cc.RigidBodyType.Static;\r\n\r\n        // if (this.mouseJoint) {\r\n        //     // add mouse joint\r\n        //     let joint = node.addComponent(cc.MouseJoint);\r\n        //     joint.mouseRegion = this.node;    \r\n        // }\r\n\r\n        // this.createBound(node, 0, height/2, width, 20);\r\n        // this.createBound(node, 0, -height/2, width, 20);\r\n        // this.createBound(node, -width/2, 0, 20, height);\r\n        // this.createBound(node, width/2, 0, 20, height);\r\n\r\n        // node.parent = this.node;\r\n    }\r\n\r\n    // private createBound(node, x, y, width, height): void {\r\n    //     let collider = node.addComponent(cc.PhysicsBoxCollider);\r\n    //     collider.offset.x = x;\r\n    //     collider.offset.y = y;\r\n    //     collider.size.width = width;\r\n    //     collider.size.height = height;\r\n    // }\r\n}\r\n"]}