{"version":3,"sources":["assets\\Script\\Controller\\GamePlay.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import { Constants } from \"../Data/constants\";\r\nimport AudioManager from \"../Plugin/AudioManager\";\r\nimport { GameController } from \"./GameController\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class GamePlay extends cc.Component {\r\n\r\n    // Script\r\n    @property(AudioManager)\r\n    AudioManager: AudioManager = null;\r\n    @property(GameController)\r\n    GameController: GameController = null;\r\n\r\n\r\n    // Component\r\n    @property(cc.Node)\r\n    Scratchable: cc.Node = null;\r\n    @property(cc.Node)\r\n    boy1: cc.Node = null;\r\n    @property(cc.Node)\r\n    boy2: cc.Node = null;\r\n    @property(cc.Node)\r\n    star: cc.Node = null;\r\n    @property(cc.Node)\r\n    CTA: cc.Node = null;\r\n\r\n\r\n    // state\r\n    isDoneEraser: boolean = false;\r\n\r\n\r\n    protected onLoad(): void {\r\n\r\n    }\r\n\r\n\r\n    protected start(): void {\r\n        // this.AudioManager.playSound(Constants.SoundTrack.bgSound);\r\n        this.CTA.active = false;\r\n    }\r\n\r\n\r\n    private handleGamePlay(): void {\r\n\r\n    }\r\n\r\n\r\n    private registerEvent(): void {\r\n        // this.Bg_HideMask.on(cc.Node.EventType.TOUCH_START, this.handleBgTouchStart, this);\r\n        // this.Bg_HideMask.on(cc.Node.EventType.TOUCH_MOVE, this.handleBgTouchMove, this);\r\n        // this.Bg_HideMask.on(cc.Node.EventType.TOUCH_END, this.handleBgTouchEnd, this);\r\n        // this.Bg_HideMask.on(cc.Node.EventType.TOUCH_CANCEL, this.handleBgTouchEnd, this);\r\n    }\r\n\r\n\r\n    private handleBgTouchStart(e: cc.Touch): void {\r\n        if (!Constants.isCanTouch) {\r\n            return;\r\n        }\r\n\r\n\r\n        if (Constants.currentLv === 3) {\r\n            this.GameController.installHandle();\r\n            return;\r\n        }\r\n    }\r\n\r\n\r\n    private handleBgTouchMove(e: cc.Touch): void {\r\n        if (!Constants.isCanTouch) {\r\n            return;\r\n        }\r\n    }\r\n\r\n\r\n    private handleBgTouchEnd(): void {\r\n        if (!Constants.isCanTouch) {\r\n            return;\r\n        }\r\n    }\r\n\r\n\r\n    public handleIronSourcePlaySound(): void {\r\n        if (Constants.ironSource.isPlayBgSound) {\r\n            return;\r\n        }\r\n\r\n        if (Constants.ironSource.SoundState) {\r\n            this.AudioManager.playSound(Constants.SoundTrack.bgSound);\r\n        }\r\n\r\n        Constants.ironSource.isPlayBgSound = true;\r\n    }\r\n\r\n\r\n    public handleMuteSoundIronSource(): void {\r\n        Constants.ironSource.State = parseInt(localStorage.getItem(\"cocosSoundState\"), 10)\r\n\r\n        if (Constants.ironSource.State) {\r\n            if (Constants.ironSource.State === 1 && !Constants.ironSource.SoundState && !Constants.ironSource.isEndGame) {\r\n                Constants.ironSource.SoundState = true;\r\n                this.AudioManager.playSound(Constants.SoundTrack.bgSound);\r\n            }\r\n\r\n            if (Constants.ironSource.State === 2 && Constants.ironSource.SoundState) {\r\n                Constants.ironSource.SoundState = false;\r\n                this.AudioManager.stopAllSound();\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    private checkDoneEraser(): void {\r\n        if(this.Scratchable.getComponent(\"Scratchable\").isWin) {\r\n            this.AudioManager.playSound(Constants.SoundTrack.successSound);\r\n            this.Scratchable.active = false;\r\n            Constants.isDoneEraser = true;\r\n            this.isDoneEraser = true;\r\n            this.boy1.active = false;\r\n            this.boy2.active = true;\r\n            this.star.getComponent(cc.Animation).play();\r\n\r\n            this.scheduleOnce(() => {\r\n                this.CTA.active = true;\r\n                this.CTA.getComponent(cc.Animation).play(\"CTA_Anim\");\r\n            }, 2)\r\n        }\r\n    }\r\n\r\n\r\n    protected update(dt: number): void {\r\n        !this.isDoneEraser && this.checkDoneEraser();\r\n        // this.handleMuteSoundIronSource();\r\n    }\r\n}\r\n"]}