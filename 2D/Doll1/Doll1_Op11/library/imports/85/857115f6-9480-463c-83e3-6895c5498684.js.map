{"version":3,"sources":["assets\\Script\\Controller\\TouchAreaController.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import { Constants } from \"../Data/constants\";\r\nimport AudioManager from \"../Plugin/AudioManager\";\r\nimport { GameController } from \"./GameController\";\r\nimport GamePlay from \"./GamePlay\";\r\nimport NodesContainer from \"./NodesContainer\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport class TouchAreaController extends cc.Component {\r\n\r\n  // Component\r\n  @property(NodesContainer)\r\n  NodesContainer: NodesContainer = null;\r\n  @property(AudioManager)\r\n  AudioManager: AudioManager = null;\r\n  @property(GameController)\r\n  GameController: GameController = null;\r\n  @property(GamePlay)\r\n  GamePlay: GamePlay = null;\r\n\r\n\r\n  protected start() {\r\n    this.registerEvent();\r\n  }\r\n\r\n\r\n  private registerEvent(): void {\r\n    for (let index = 0; index < this.NodesContainer.Dolls.length; index++) {\r\n      const doll = this.NodesContainer.Dolls[index];\r\n      doll.on(cc.Node.EventType.TOUCH_START, this.dollClick, this);\r\n    }\r\n\r\n    this.NodesContainer.hideMask.on(cc.Node.EventType.TOUCH_START, this.hideMaskClick, this);\r\n  }\r\n\r\n\r\n  private dollClick(e: cc.Event.EventTouch): void {\r\n    if (Constants.step === 2) this.GameController.installHandle();\r\n\r\n    // ironsource\r\n    this.handleIronSourcePlaySound();\r\n\r\n    if (!Constants.isCanTouch) return;\r\n\r\n    Constants.isCanTouch = false;\r\n\r\n    this.AudioManager.playSound(Constants.SoundTrack.pickItemSound)\r\n\r\n    if (Constants.step === 1 && e.target.name === \"doll2\") {\r\n      Constants.step += 1;\r\n      this.NodesContainer.Hand.active = false;\r\n      this.GamePlay.playGreatSound();\r\n      this.NodesContainer.Lv1_Hint.color = cc.Color.WHITE;\r\n      this.GamePlay.switchToLv2();\r\n      this.NodesContainer.FX_Blink.resetSystem();\r\n      this.NodesContainer.boy_answerWrong.active = false;\r\n      this.NodesContainer.boy_answerCorrect.active = true;\r\n      this.NodesContainer.boy.getComponent(cc.Animation).play();\r\n    } else {\r\n      this.NodesContainer.boy_answerWrong.active = true;\r\n      this.NodesContainer.boy_answerCorrect.active = false;\r\n      this.NodesContainer.boy.getComponent(cc.Animation).play();\r\n    }\r\n\r\n    if (Constants.step === 1) this.scheduleOnce(() => { Constants.isCanTouch = true }, 0.3);\r\n  }\r\n\r\n\r\n  private hideMaskClick(): void {\r\n\r\n    // ironsource\r\n    this.handleIronSourcePlaySound();\r\n\r\n    // mtg & applovin\r\n    // if (Constants.step === 2) this.GameController.installHandle();\r\n  }\r\n\r\n\r\n  public handleIronSourcePlaySound(): void {\r\n    if (Constants.ironSource.isPlayBgSound) {\r\n      return;\r\n    }\r\n\r\n    Constants.ironSource.isPlayBgSound = true;\r\n\r\n    if (Constants.ironSource.SoundState) {\r\n      this.AudioManager.playSound(Constants.SoundTrack.bgSound);\r\n    }\r\n  }\r\n\r\n\r\n  private handleMuteSoundIronSource(): void {\r\n    Constants.ironSource.State = parseInt(localStorage.getItem(\"cocosSoundState\"), 10)\r\n\r\n    if (Constants.ironSource.State) {\r\n      if (Constants.ironSource.State === 1 && !Constants.ironSource.SoundState && !Constants.ironSource.isEndGame) {\r\n        Constants.ironSource.SoundState = true;\r\n        this.AudioManager.playSound(Constants.SoundTrack.bgSound);\r\n      }\r\n\r\n      if (Constants.ironSource.State === 2 && Constants.ironSource.SoundState) {\r\n        Constants.ironSource.SoundState = false;\r\n        this.AudioManager.stopAllSound();\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n  protected update(dt: number): void {\r\n    this.handleMuteSoundIronSource();\r\n  }\r\n}\r\n"]}