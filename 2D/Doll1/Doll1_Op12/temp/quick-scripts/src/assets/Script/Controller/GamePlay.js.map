{"version":3,"sources":["assets\\Script\\Controller\\GamePlay.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import { Constants } from \"../Data/constants\";\r\nimport AudioManager from \"../Plugin/AudioManager\";\r\nimport { GameController } from \"./GameController\";\r\nimport NodesContainer from \"./NodesContainer\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class GamePlay extends cc.Component {\r\n\r\n  @property(AudioManager)\r\n  AudioManager: AudioManager = null;\r\n  @property(NodesContainer)\r\n  NodesContainer: NodesContainer = null;\r\n  @property(GameController)\r\n  GameController: GameController = null;\r\n\r\n  tweenAnims: cc.Tween[] = [];\r\n\r\n\r\n  protected start(): void {\r\n    // this.AudioManager.playSound(Constants.SoundTrack.bgSound);\r\n    this.handleOpenScene();\r\n  }\r\n\r\n\r\n  private handleOpenScene(): void {\r\n    this.scheduleOnce(() => {this.AudioManager.playSound(Constants.SoundTrack.hooooSound)}, 0.7);\r\n  }\r\n\r\n\r\n  public activeBlinkAnimForBtnSubmit(): void {\r\n    Constants.isShowBtnSubmit = true;\r\n\r\n    if (Constants.isRotate) {\r\n      this.tweenAnims.push(cc.tween(this.NodesContainer.Btn_Submit)\r\n        .repeatForever(\r\n          cc.tween(this.NodesContainer.Btn_Submit)\r\n            .to(0.5, { scale: 0.5 })\r\n            .to(0.5, { scale: 0.47 }, { easing: 'elasticOut' })\r\n        ).start())\r\n    } else {\r\n      this.tweenAnims.push(cc.tween(this.NodesContainer.Btn_Submit)\r\n        .repeatForever(\r\n          cc.tween(this.NodesContainer.Btn_Submit)\r\n            .to(0.5, { scale: 0.35 })\r\n            .to(0.5, { scale: 0.32 }, { easing: 'elasticOut' })\r\n        ).start())\r\n    }\r\n  }\r\n\r\n\r\n  public playGreatSound(): void {\r\n    this.AudioManager.playSound(Constants.SoundTrack.pickItemSound)\r\n    this.AudioManager.pickItemSound.volume = 0.5;\r\n    let random = Math.floor(Math.random() * 4) + 1;\r\n\r\n    switch (random) {\r\n      case 1:\r\n        this.AudioManager.playSound(Constants.SoundTrack.Fx_Bonus1)\r\n        break;\r\n      case 2:\r\n        this.AudioManager.playSound(Constants.SoundTrack.Fx_Bonus2)\r\n        break;\r\n      case 3:\r\n        this.AudioManager.playSound(Constants.SoundTrack.Fx_Bonus3)\r\n        break;\r\n      case 4:\r\n        this.AudioManager.playSound(Constants.SoundTrack.Fx_Bonus4)\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n\r\n  public goToNextItem(e: cc.Event.EventTouch): void {\r\n    if (Constants.currentStep >= 2) {\r\n      this.GameController.installHandle();\r\n      return;\r\n    }\r\n\r\n    let node: cc.Node = e.target;\r\n    node.active = false;\r\n\r\n    Constants.currentStep += 1;\r\n    this.AudioManager.playSound(Constants.SoundTrack.openBookSound);\r\n    this.NodesContainer.Items[Constants.currentStep - 1].active = false;\r\n    this.NodesContainer.Items[Constants.currentStep].active = true;\r\n  }\r\n\r\n\r\n  public handleIronSourcePlaySound(): void {\r\n    if (Constants.ironSource.isPlayBgSound) {\r\n      return;\r\n    }\r\n\r\n    if (Constants.ironSource.SoundState) {\r\n      Constants.ironSource.isPlayBgSound = true;\r\n      this.AudioManager.playSound(Constants.SoundTrack.bgSound);\r\n    }\r\n  }\r\n\r\n}\r\n"]}