{"version":3,"sources":["assets\\Script\\Controller\\TouchAreaController.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import { Constants } from \"../Data/constants\";\r\nimport AudioManager from \"../Plugin/AudioManager\";\r\nimport { GameController } from \"./GameController\";\r\nimport GamePlay from \"./GamePlay\";\r\nimport NodesContainer from \"./NodesContainer\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport class TouchAreaController extends cc.Component {\r\n  // Component\r\n  @property(NodesContainer)\r\n  NodesContainer: NodesContainer = null;\r\n  @property(AudioManager)\r\n  AudioManager: AudioManager = null;\r\n  @property(GameController)\r\n  GameController: GameController = null;\r\n  @property(GamePlay)\r\n  GamePlay: GamePlay = null;\r\n\r\n  currentBlockNumber: number = 0;\r\n  currentBlockPositionInTable: number = 0;\r\n  prevPos: cc.Vec2 = null;\r\n\r\n  canMoveLeft: boolean = false;\r\n  canMoveRight: boolean = false;\r\n  canMoveUp: boolean = false;\r\n  canMoveDown: boolean = false;\r\n\r\n\r\n  protected onLoad() {\r\n\r\n  }\r\n\r\n\r\n  protected start() {\r\n    this.registerEvent();\r\n  }\r\n\r\n\r\n  private registerEvent(): void {\r\n    this.NodesContainer.Blocks.forEach((block, index) => {\r\n      block.on(cc.Node.EventType.TOUCH_START, () => {this.blockTouchStart(block, index)}, this);\r\n      block.on(cc.Node.EventType.TOUCH_MOVE, this.blockTouchMove, this);\r\n      block.on(cc.Node.EventType.TOUCH_END, this.blockTouchEnd, this);\r\n      block.on(cc.Node.EventType.TOUCH_CANCEL, this.blockTouchEnd, this);\r\n    });\r\n\r\n    this.NodesContainer.hideMask\r\n      .on(cc.Node.EventType.TOUCH_START, this.hideMaskTouchStart, this);\r\n  }\r\n\r\n\r\n  private blockTouchStart(e: cc.Node, index: number): void {\r\n    // ironsource\r\n    // this.handleIronSourcePlaySound()\r\n\r\n    if(!Constants.isCanTouch) return;\r\n\r\n    if(Constants.isToStore || Constants.movesLeft <= 0) {\r\n      this.GameController.installHandle();\r\n      return;\r\n    }\r\n\r\n    const node: cc.Node = e;\r\n    const orderNumber = this.extractOrderNumber(node.name);\r\n    this.currentBlockPositionInTable = index;    \r\n\r\n    if (orderNumber !== null) {\r\n      console.log(`Curent Block Touch: ${orderNumber}`);\r\n      this.currentBlockNumber = orderNumber;\r\n    }\r\n\r\n    this.NodesContainer.Hand.active = false;\r\n    this.AudioManager.playSound(Constants.SoundTrack.pickItemSound);\r\n\r\n    let canMove = this.isMoveEnable(this.currentBlockPositionInTable);\r\n    let block = this.NodesContainer.Blocks[this.currentBlockPositionInTable];\r\n    let blockPos = block.getPosition(); \r\n\r\n    if(canMove) {\r\n      if(this.canMoveDown) this.moveBlock(block, blockPos.x, blockPos.y - 226);\r\n      if(this.canMoveUp) this.moveBlock(block, blockPos.x, blockPos.y + 226);\r\n      if(this.canMoveLeft)  this.moveBlock(block, blockPos.x - 226, blockPos.y);\r\n      if(this.canMoveRight)  this.moveBlock(block, blockPos.x + 226, blockPos.y);\r\n    }\r\n  }\r\n\r\n\r\n  private blockTouchMove(e: cc.Touch): void {\r\n\r\n  }\r\n\r\n\r\n  private blockTouchEnd(): void {\r\n    if(!Constants.isCanTouch || Constants.ironSource.isEndGame) return;\r\n    Constants.movesLeft -= 1;\r\n    this.canMoveDown = false;\r\n    this.canMoveLeft = false;\r\n    this.canMoveRight = false;\r\n    this.canMoveUp = false;\r\n    this.prevPos = null;\r\n  }\r\n\r\n\r\n  private hideMaskTouchStart(): void {\r\n    // mtg & applovin\r\n    if(Constants.isToStore || Constants.movesLeft <= 0) {\r\n      this.GameController.installHandle();\r\n      return;\r\n    }\r\n\r\n    // ironsource\r\n    // this.handleIronSourcePlaySound();\r\n  }\r\n\r\n\r\n   // Method to extract order number from node name\r\n   private extractOrderNumber(name: string): number | null {\r\n    const match = name.match(/_(\\d+)$/);\r\n    return match ? parseInt(match[1], 10) : null;\r\n  }\r\n\r\n\r\n  private isMoveEnable(orderNumber: number): boolean {\r\n    let result: boolean = false;\r\n    \r\n    if(!Constants.tablePuzzle[orderNumber - 1]) {\r\n      console.log(\"left\");\r\n      this.canMoveLeft = true;\r\n      Constants.tablePuzzle[orderNumber - 1] = true;\r\n      Constants.tablePuzzle[orderNumber] = false;\r\n      return true;\r\n    }\r\n\r\n    if(!Constants.tablePuzzle[orderNumber + 1]) {\r\n      console.log(\"right\");\r\n      this.canMoveRight = true;\r\n      Constants.tablePuzzle[orderNumber + 1] = true;\r\n      Constants.tablePuzzle[orderNumber] = false;\r\n      return true;\r\n    }\r\n\r\n    if(!Constants.tablePuzzle[orderNumber + 4]) {\r\n      console.log(\"down\");\r\n      this.canMoveDown = true;\r\n      Constants.tablePuzzle[orderNumber + 4] = true;\r\n      Constants.tablePuzzle[orderNumber] = false;\r\n      return true;\r\n    }\r\n\r\n    if(!Constants.tablePuzzle[orderNumber - 4]) {\r\n      console.log(\"up\");\r\n      this.canMoveUp = true;\r\n      Constants.tablePuzzle[orderNumber - 4] = true;\r\n      Constants.tablePuzzle[orderNumber] = false;\r\n      return true;\r\n    }\r\n\r\n    return result;\r\n  }\r\n\r\n\r\n  private moveBlock(block: cc.Node, x: number, y: number): void {\r\n    cc.tween(block)\r\n    .to(0.1, {x: x, y: y})\r\n    .call(() => {Constants.isCanTouch = true})\r\n    .start()\r\n  }\r\n\r\n\r\n  public handleIronSourcePlaySound(): void {\r\n    if (Constants.ironSource.isPlayBgSound) {\r\n      return;\r\n    }\r\n\r\n    Constants.ironSource.isPlayBgSound = true;\r\n\r\n    if (Constants.ironSource.SoundState) {\r\n      this.AudioManager.playSound(Constants.SoundTrack.bgSound);\r\n    }\r\n  }\r\n\r\n\r\n  // protected update(dt: number): void {\r\n  //   this.GamePlay.handleMuteSoundIronSource();\r\n  // }\r\n\r\n}\r\n"]}