{"version":3,"sources":["assets\\Script\\Controller\\TouchAreaController.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import { Constants } from \"../Data/constants\";\r\nimport AudioManager from \"../Plugin/AudioManager\";\r\nimport BottleItem from \"../Ultils/BottleItem\";\r\nimport { GameController } from \"./GameController\";\r\nimport GamePlay from \"./GamePlay\";\r\n\r\nimport * as Interfaces from '../Data/interfaces';\r\n\r\nimport NodesContainer from \"./NodesContainer\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport class TouchAreaController extends cc.Component {\r\n\r\n  // Component\r\n  @property(NodesContainer)\r\n  NodesContainer: NodesContainer = null;\r\n  @property(AudioManager)\r\n  AudioManager: AudioManager = null;\r\n  @property(GameController)\r\n  GameController: GameController = null;\r\n  @property(GamePlay)\r\n  GamePlay: GamePlay = null;\r\n\r\n\r\n  protected onLoad() {\r\n\r\n  }\r\n\r\n\r\n  protected start() {\r\n    this.registerEvent();\r\n  }\r\n\r\n\r\n  private registerEvent(): void {\r\n    this.NodesContainer.Tubes.forEach((tube) => {\r\n      tube.on(cc.Node.EventType.TOUCH_START, this.tubeTouchStart, this);\r\n    });\r\n  }\r\n\r\n\r\n  private tubeTouchStart(e: cc.Event.EventTouch): void {\r\n    if (Constants.isToStore) {\r\n      this.GameController.installHandle();\r\n      return;\r\n    }\r\n\r\n    if (!Constants.isCanTouch) return;\r\n\r\n    this.handleIronSourcePlaySound();\r\n\r\n    let clickedNode: cc.Node = e.target;\r\n\r\n    this.NodesContainer.Tutorial.active = false;\r\n\r\n    this.AudioManager.playSound(Constants.SoundTrack.TouchSound);\r\n\r\n    if (Constants.TubeClicked) {\r\n      this.isPickCorrectTube(Constants.TubeClicked, clickedNode)\r\n        ? this.GamePlay.handleMoveToAnotherTube(Constants.TubeClicked, clickedNode)\r\n        : cc.log(\"wrong\");\r\n\r\n      this.scaleDownTube(Constants.TubeClicked);\r\n\r\n      Constants.TubeClicked = null;\r\n    }\r\n\r\n    else {\r\n      Constants.TubeClicked = clickedNode;\r\n\r\n      this.scaleUpTube(clickedNode);\r\n\r\n      cc.log(\"wrong\");\r\n      cc.log(\"------------------------\");\r\n    }\r\n  }\r\n\r\n\r\n  private isPickCorrectTube(tube1: cc.Node, tube2: cc.Node): boolean {\r\n    let reuslt: boolean = false;\r\n\r\n    let tube1BottleItemComponent = tube1.getComponent(BottleItem);\r\n    let tube2BottleItemComponent = tube2.getComponent(BottleItem);\r\n\r\n    let colorA: Interfaces.colorStatus = this.GamePlay.getColorStatus(tube1BottleItemComponent.waterColors);\r\n    let colorB: Interfaces.colorStatus = this.GamePlay.getColorStatus(tube2BottleItemComponent.waterColors);\r\n\r\n    Constants.interactingColorNumber = colorA.indexOfFirstColor;\r\n\r\n    cc.log(colorA.nonTransparentColorArr.length)\r\n\r\n    if (tube1.name === tube2.name) return false;\r\n    else {\r\n      if(colorA.isHasThreeSameOneDiffColor && colorB.nonTransparentColorArr.length === 0) return true;\r\n      if(colorB.nonTransparentColorArr.length === 4 && colorA.nonTransparentColorArr.length === 1) return false;\r\n      if(colorB.nonTransparentColorArr.length === 4 && colorA.nonTransparentColorArr.length === 0) return false;\r\n      if(colorB.nonTransparentColorArr.length === 0 && colorA.nonTransparentColorArr.length === 4) return false;\r\n      if(colorB.nonTransparentColorArr.length === 3 && colorA.nonTransparentColorArr.length == 2) return false;\r\n      if (colorA.firstColorOfTube === colorB.firstColorOfTube)    return true\r\n    }\r\n\r\n    return reuslt;\r\n  }\r\n\r\n\r\n  private scaleUpTube(tube: cc.Node): void {\r\n    cc.tween(tube)\r\n      .to(0.5, { scale: 0.17 }, { easing: cc.easing.elasticOut })\r\n      .start();\r\n  }\r\n\r\n\r\n  private scaleDownTube(tube: cc.Node): void {\r\n    cc.tween(tube)\r\n      .to(0.5, { scale: 0.15 }, { easing: cc.easing.elasticOut })\r\n      .start();\r\n  }\r\n\r\n\r\n  public handleIronSourcePlaySound(): void {\r\n    if (Constants.ironSource.isPlayBgSound) {\r\n      return;\r\n    }\r\n\r\n    if (Constants.ironSource.SoundState) {\r\n      Constants.ironSource.isPlayBgSound = true;\r\n      this.AudioManager.playSound(Constants.SoundTrack.bgSound);\r\n    }\r\n  }\r\n\r\n\r\n  protected update(dt: number): void {\r\n    this.GamePlay.handleMuteSoundIronSource();\r\n  }\r\n}\r\n"]}