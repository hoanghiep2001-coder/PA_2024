{"version":3,"sources":["assets\\Script\\Ultils\\BottleItem.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["const { ccclass, property } = cc._decorator;\r\n\r\nimport { Constants } from '../Data/constants';\r\n\r\ntype GamePlay = import(\"../Controller/GamePlay\").default;\r\n\r\nimport * as Interfaces from '../Data/interfaces';\r\n\r\nimport AudioManager from '../Plugin/AudioManager';\r\nimport { WaterManager } from './WaterManager';\r\n\r\n@ccclass\r\nexport default class BottleItem extends cc.Component {\r\n\r\n    @property([cc.Sprite])\r\n    spriteColors: cc.Sprite[] = [];\r\n\r\n    @property(AudioManager)\r\n    AudioManager: AudioManager = null;\r\n\r\n    public waterColors: cc.Color[] = [];\r\n\r\n    public waterHeights: number[] = [];\r\n\r\n    tubeSide: string = \"\";\r\n\r\n    newState: Interfaces.tubeState = null;\r\n\r\n    height1: number = 210;\r\n\r\n    height2: number = 200;\r\n\r\n    height3: number = 250;\r\n    \r\n    height4: number = 350;\r\n\r\n    GamePlay: GamePlay = null;\r\n\r\n    isIncreasing: boolean = false;\r\n\r\n    initPos: cc.Vec2 = null;\r\n\r\n    @property(cc.ParticleSystem)\r\n    PS_Star: cc.ParticleSystem = null;\r\n\r\n    protected start(): void {\r\n        this.applyWaterColor();\r\n\r\n        this.initTubeSide();\r\n\r\n        const GamePlayNode: cc.Node = this.node.parent.parent.parent.parent;\r\n\r\n        this.GamePlay = GamePlayNode.getComponent(\"GamePlay\") as GamePlay;\r\n\r\n        this.initPos = this.node.getPosition();\r\n    }\r\n\r\n\r\n    private initTubeSide(): void {\r\n        switch (this.node.name) {\r\n            case \"Bottle_1\":\r\n                this.tubeSide = \"left\";\r\n                break;\r\n            case \"Bottle_2\":\r\n                this.tubeSide = \"right\";\r\n                break;\r\n            case \"Bottle_3\":\r\n                this.tubeSide = \"left\";\r\n                break;\r\n            case \"Bottle_4\":\r\n                this.tubeSide = \"right\";\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n\r\n    public applyWaterColor(): void {\r\n        for (let index = 0; index < this.spriteColors.length; index++) {\r\n            const sprite = this.spriteColors[index];\r\n            sprite.node.color = this.waterColors[index];\r\n            this.isTransparentColor(sprite.node.color) && this.setTransparentColor(sprite.node);\r\n        };\r\n    }\r\n\r\n\r\n    public MoveToAnotherTube(newState: Interfaces.tubeState): void {\r\n        cc.log(\"Di chuyển\");\r\n\r\n        Constants.isCanTouch = false;\r\n\r\n        this.newState = newState;\r\n\r\n        cc.tween(this.node)\r\n            .to(0.3, { position: newState.position })\r\n            .call(() => this.rotateTube(newState))\r\n            .start();\r\n    };\r\n\r\n\r\n    public rotateTube(tubeState: Interfaces.tubeState): void {\r\n        cc.log(\"angling\");\r\n\r\n        this.AudioManager.playSound(Constants.SoundTrack.WaterDropSound);\r\n\r\n        this.scheduleOnce(() => {\r\n            this.decreaseHeightOfWater(tubeState);\r\n            tubeState.otherTube.increseHeightOfWater();\r\n        }, 0.5);\r\n\r\n        cc.tween(this.node)\r\n            .to(0.5, { angle: tubeState.angle })\r\n            .start();\r\n    }\r\n\r\n\r\n    private getColorStatus(): Interfaces.colorStatus {\r\n        const GamePlayNode: cc.Node = this.node.parent.parent.parent.parent;\r\n        const GamePlayComp: GamePlay = GamePlayNode.getComponent(\"GamePlay\") as GamePlay;\r\n        const colorStatus = GamePlayComp.getColorStatus(this.waterColors);\r\n\r\n        return colorStatus;\r\n    }\r\n\r\n\r\n    private changeColorWater(colorRgba: string): cc.Color {\r\n        // tách chuỗi string rgba thành từng phần\r\n        let values = colorRgba.match(/\\d+(\\.\\d+)?/g).map(Number);\r\n        let color = new cc.Color(values[0], values[1], values[2], values[3] * 255);\r\n\r\n        cc.log(\"Màu đc chuyển đổi: \" + color);\r\n\r\n        return color;\r\n    }\r\n\r\n\r\n    private increseHeightOfWater(): void {\r\n        cc.log(\"Tăng mực nước\");\r\n\r\n        this.drawLineRender();\r\n        // this.scheduleOnce(() => {\r\n        // }, 0.2);\r\n\r\n        let colorStatus = this.getColorStatus();\r\n\r\n        WaterManager.increaseWater(\r\n            Constants.numberOfIncreaseFloor,\r\n            this.changeColorWater(Constants.colorToIncrease), \r\n            colorStatus.indexOfFirstColor,\r\n            this\r\n        );\r\n\r\n        this.AudioManager.playSound(Constants.SoundTrack.BoilSound);\r\n    }\r\n\r\n\r\n    private activeDoneStepSound(): void {\r\n        this.node.getChildByName(\"PSBase\").children[0].getComponent(cc.ParticleSystem).resetSystem();\r\n        this.AudioManager.playSound(Constants.SoundTrack.winSound)\r\n    }\r\n\r\n\r\n    private decreaseHeightOfWater(tubeState: Interfaces.tubeState): void {\r\n        cc.log(\"giảm mực nước\");\r\n\r\n        let colorStatus = this.getColorStatus();\r\n\r\n        Constants.numberOfIncreaseFloor = colorStatus.numberOfDecreaseFloor;\r\n        Constants.colorToIncrease = colorStatus.firstColorOfTube;\r\n        \r\n        cc.log(colorStatus.isHasThreeSameOneDiffColor)\r\n\r\n        WaterManager.decreaseWater(\r\n            colorStatus.numberOfDecreaseFloor, \r\n            colorStatus.indexOfFirstColor,\r\n            this\r\n        );\r\n    }\r\n\r\n\r\n    private drawLineRender(): void {\r\n        let lineRender = this.node.getChildByName(\"LineRender\");\r\n        lineRender.color = this.changeColorWater(this.getColorStatus().firstColorOfTube)\r\n\r\n        cc.tween(lineRender)\r\n            .to(0.35, { height: 1100 })\r\n            .call(() => {\r\n                cc.tween(lineRender)\r\n                    .to(0.15, { height: 0 })\r\n                    .start();\r\n            })\r\n            .start();\r\n    }\r\n\r\n\r\n    private isTransparentColor(color: cc.Color): boolean {\r\n        if (color.a === 0) return true;\r\n        return false;\r\n    }\r\n\r\n\r\n    private setTransparentColor(node: cc.Node): void {\r\n        node.opacity = 0;\r\n    }\r\n\r\n\r\n    protected update(dt: number): void {\r\n        this.angleColorWithBottle();\r\n    }\r\n\r\n\r\n    private angleColorWithBottle(): void {\r\n        for (let index = 0; index < this.spriteColors.length; index++) {\r\n            const sprite = this.spriteColors[index];\r\n            sprite.node.angle = -this.node.angle / 1.5;\r\n        }\r\n    }\r\n\r\n}\r\n"]}