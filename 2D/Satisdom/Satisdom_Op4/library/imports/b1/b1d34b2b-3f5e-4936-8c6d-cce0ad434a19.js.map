{"version":3,"sources":["assets\\Script\\Controller\\GamePlay.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import { Constants } from \"../Data/constants\";\r\n\r\nimport AudioManager from \"../Plugin/AudioManager\";\r\n\r\nimport Responsive from \"../Plugin/Responsive\";\r\n\r\nimport BottleItem from \"../Ultils/BottleItem\";\r\n\r\nimport { GameController } from \"./GameController\";\r\n\r\nimport NodesContainer from \"./NodesContainer\";\r\n\r\nimport * as Interfaces from '../Data/interfaces';\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n\r\n@ccclass\r\nexport default class GamePlay extends cc.Component {\r\n\r\n  @property(AudioManager)\r\n  AudioManager: AudioManager = null;\r\n  @property(NodesContainer)\r\n  NodesContainer: NodesContainer = null;\r\n  @property(GameController)\r\n  GameController: GameController = null;\r\n  @property(Responsive)\r\n  Responsive: Responsive = null;\r\n\r\n  dollPrecent: number = 0;\r\n  opponentPrecent: number = 0;\r\n  tweenStates: cc.Tween[] = [];\r\n  isShowCTA: boolean = false;\r\n\r\n  @property(cc.Graphics)\r\n  graphics: cc.Graphics = null;\r\n\r\n\r\n  @property(cc.Node)\r\n  Level2: cc.Node = null;\r\n\r\n  isDrawWaterGraphics: boolean = false;\r\n\r\n\r\n  protected onLoad(): void {\r\n\r\n  }\r\n\r\n\r\n  protected start(): void {\r\n    // this.AudioManager.playSound(Constants.SoundTrack.bgSound);\r\n    // this.activeTweenTextTap();\r\n\r\n    // cc.tween(this.NodesContainer.CTA_button)\r\n    // .repeatForever(\r\n    //     cc.tween(this.NodesContainer.CTA_button)\r\n    //         .to(0.5, { scale: 0.45 })\r\n    //         .to(0.5, { scale: 0.5 }, { easing: 'elasticOut' })\r\n    // ).start();\r\n  }\r\n\r\n\r\n  public countingTime(): void {\r\n    if (this.isShowCTA) return;\r\n\r\n    let nodeTimeChild = this.NodesContainer.time.children[0];\r\n    if (nodeTimeChild.scaleX <= 0 && Constants.isCanTouch) {\r\n      this.showCTA(false);\r\n      return;\r\n    }\r\n\r\n    nodeTimeChild.scaleX -= 0.0008;\r\n  }\r\n\r\n\r\n  public showCTA(isWin: boolean): void {\r\n    this.isShowCTA = true;\r\n\r\n    Constants.isCanTouch = false;\r\n    Constants.isShowCTA = true;\r\n    Constants.isToStore = true;\r\n\r\n    this.Level2.active = true;\r\n\r\n    this.scheduleOnce(() => {\r\n\r\n      cc.tween(this.NodesContainer.Tubes[0].parent)\r\n      .to(1, {opacity: 0})\r\n      .start();\r\n  \r\n      cc.tween(this.Level2)\r\n      .to(1, {opacity: 255})\r\n      .start();\r\n\r\n      this.NodesContainer.hideMask.on(cc.Node.EventType.TOUCH_START, this.GameController.installHandle, this);\r\n\r\n    }, 1)\r\n  }\r\n\r\n\r\n  checkThreeSameOneDifferent(colors: cc.Color[]): boolean {\r\n    if (colors.length !== 4) {\r\n        console.error(\"Mảng màu phải chứa chính xác 4 phần tử.\");\r\n        return false;\r\n    }\r\n\r\n    // Đếm số lần xuất hiện của từng màu\r\n    const colorCountMap: Map<string, number> = new Map();\r\n\r\n    for (let color of colors) {\r\n        const colorKey = color.toHEX(); // Sử dụng HEX để đại diện cho màu\r\n        if (colorCountMap.has(colorKey)) {\r\n            colorCountMap.set(colorKey, colorCountMap.get(colorKey)! + 1);\r\n        } else {\r\n            colorCountMap.set(colorKey, 1);\r\n        }\r\n    }\r\n\r\n    // Chuyển đổi Map values thành mảng\r\n    const counts = Array.from(colorCountMap.values());\r\n\r\n    // Kiểm tra nếu có một màu xuất hiện 3 lần và một màu xuất hiện 1 lần\r\n    let hasThreeSame = false;\r\n    let hasOneDifferent = false;\r\n\r\n    for (let count of counts) {\r\n        if (count === 3) {\r\n            hasThreeSame = true;\r\n        } else if (count === 1) {\r\n            hasOneDifferent = true;\r\n        }\r\n    }\r\n\r\n    return hasThreeSame && hasOneDifferent;\r\n}\r\n\r\n\r\n  public getColorStatus(colors: cc.Color[]): Interfaces.colorStatus {\r\n    let firstColorOfTube: string = null,\r\n     indexOfFirstColor: number = null,\r\n     nonTransparentColorArr: string[] = [],\r\n     heightOfFirstColor: number = null,\r\n     colorHeightArr = [210, 200, 250, 350],\r\n     isHasTwoSameColor: boolean = false,\r\n     numberOfDecreaseFloor: number = 0,\r\n     numberOfIncreaseFloor: number = 0,\r\n    //  numberOfDecreaseFloor: number = 0,\r\n    isHasThreeSameOneDiffColor: boolean = false,\r\n     drawWaterSide: string = \"\";\r\n\r\n    // isHasTwoSameColor = this.hasConsecutiveDuplicateColors(colors);\r\n\r\n    isHasThreeSameOneDiffColor = this.checkThreeSameOneDifferent(colors)\r\n\r\n    for (let i = 0; i < colors.length; i++) {\r\n      if (colors[i].a !== 0) {\r\n        if (!firstColorOfTube) {\r\n          firstColorOfTube = colors[i].toCSS();\r\n          heightOfFirstColor = colorHeightArr[i];\r\n          indexOfFirstColor = i;\r\n        };\r\n        nonTransparentColorArr.push(colors[i].toCSS());\r\n      }\r\n\r\n      if(firstColorOfTube) {\r\n        let currentColor = colors[i].toCSS();\r\n        if(currentColor === firstColorOfTube) numberOfDecreaseFloor += 1\r\n        else break;\r\n      }\r\n    }\r\n\r\n\r\n    return {\r\n      firstColorOfTube: firstColorOfTube,\r\n      indexOfFirstColor: indexOfFirstColor,\r\n      nonTransparentColorArr: nonTransparentColorArr,\r\n      heightOfFirstColor: heightOfFirstColor,\r\n      isHasTwoSameColor: isHasTwoSameColor,\r\n      numberOfDecreaseFloor: numberOfDecreaseFloor,\r\n      isHasThreeSameOneDiffColor: isHasThreeSameOneDiffColor\r\n      // numberOfIncreaseFloor: numberOfIncreaseFloor\r\n    }\r\n  }\r\n\r\n\r\n  public handleMoveToAnotherTube(tubeA: cc.Node, tubeB: cc.Node): void {\r\n    const tubeABottleItemComp = tubeA.getComponent(BottleItem);\r\n\r\n    const tubeBBottleItemComp = tubeB.getComponent(BottleItem);\r\n\r\n    tubeB.setSiblingIndex(this.NodesContainer.Tubes.length - 1);\r\n\r\n    tubeA.setSiblingIndex(this.NodesContainer.Tubes.length - 2);\r\n\r\n    let tubeState = this.calculateNewTubeState(tubeBBottleItemComp, tubeABottleItemComp)\r\n\r\n    tubeABottleItemComp.MoveToAnotherTube(tubeState);\r\n\r\n    console.log(\"correct\");\r\n  }\r\n\r\n\r\n  private calculateNewTubeState(tubeBBottleItemComp: BottleItem, tubeABottleItemComp: BottleItem): Interfaces.tubeState {\r\n    let newState: Interfaces.tubeState = {\r\n      position: null,\r\n      angle: null,\r\n      firstColorOfTube: null,\r\n      currentHeightOfColor: null,\r\n      otherTube: null,\r\n      drawWaterSide: null,\r\n    };\r\n\r\n    const tubeBpos: cc.Vec2 = tubeBBottleItemComp.node.getPosition();\r\n\r\n    const colorStatus: Interfaces.colorStatus = this.getColorStatus(tubeABottleItemComp.waterColors);\r\n\r\n    newState.firstColorOfTube = colorStatus.firstColorOfTube;\r\n\r\n    newState.currentHeightOfColor = colorStatus.heightOfFirstColor;\r\n\r\n    newState.otherTube = tubeBBottleItemComp;\r\n\r\n    switch (tubeBBottleItemComp.tubeSide) {\r\n      case \"left\":\r\n        newState.position = new cc.Vec3(30, tubeBpos.y + 120, 0);\r\n        newState.angle = 75\r\n\r\n        newState.drawWaterSide = \"left\";\r\n\r\n        break;\r\n      case \"right\":\r\n        newState.position = new cc.Vec3(-30, tubeBpos.y + 120, 0);\r\n        newState.angle = -75;\r\n\r\n        newState.drawWaterSide = \"right\";\r\n\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n\r\n    return newState;\r\n  }\r\n\r\n\r\n  public handleIronSourcePlaySound(): void {\r\n    if (Constants.ironSource.isPlayBgSound) {\r\n      return;\r\n    }\r\n\r\n    if (Constants.ironSource.SoundState) {\r\n      Constants.ironSource.isPlayBgSound = true;\r\n      this.AudioManager.playSound(Constants.SoundTrack.bgSound);\r\n    }\r\n\r\n  }\r\n\r\n\r\n  public handleMuteSoundIronSource(): void {\r\n    Constants.ironSource.State = parseInt(localStorage.getItem(\"cocosSoundState\"), 10)\r\n\r\n    if (Constants.ironSource.State) {\r\n      if (Constants.ironSource.State === 1 && !Constants.ironSource.SoundState && !Constants.ironSource.isEndGame) {\r\n        Constants.ironSource.SoundState = true;\r\n        this.AudioManager.playSound(Constants.SoundTrack.bgSound);\r\n      }\r\n\r\n      if (Constants.ironSource.State === 2 && Constants.ironSource.SoundState) {\r\n        Constants.ironSource.SoundState = false;\r\n        this.AudioManager.stopAllSound();\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n  public handleDrawWaterGraphics(moveTo: cc.Vec2, lineTo: cc.Vec2, color: cc.Color): void {\r\n    this.graphics.clear();\r\n\r\n    let moveToConverted = this.node.convertToNodeSpaceAR(moveTo);\r\n    let LineToConverted = this.node.convertToNodeSpaceAR(lineTo);\r\n\r\n    this.graphics.strokeColor = color;\r\n    this.graphics.moveTo(moveToConverted.x, moveToConverted.y);\r\n    this.graphics.lineTo(LineToConverted.x, LineToConverted.y);\r\n    this.graphics.stroke();\r\n\r\n    console.log(\"check\");\r\n  }\r\n\r\n\r\n  protected update(dt: number): void {\r\n    // this.isDrawWaterGraphics && this.handleDrawWaterGraphics();\r\n    // Constants.isGameStart && this.countingTime();\r\n  }\r\n\r\n}\r\n"]}