{"version":3,"sources":["assets\\Script\\Controller\\Flow2Controller.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import { Constants } from \"../Data/constants\";\r\nimport AudioManager from \"../Plugin/AudioManager\";\r\nimport GamePlay from \"./GamePlay\";\r\nimport NodesContainer from \"./NodesContainer\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class Flow2Controller extends cc.Component {\r\n\r\n    @property(NodesContainer)\r\n    NodesContainer: NodesContainer = null;\r\n\r\n    @property(AudioManager)\r\n    AudioManager: AudioManager = null;\r\n\r\n    @property(GamePlay)\r\n    GamePlay: GamePlay = null;\r\n\r\n    @property(sp.Skeleton)\r\n    spine: sp.Skeleton = null;\r\n\r\n    @property(cc.Node)\r\n    hand: cc.Node = null;\r\n\r\n    minPosition = cc.v2(0, -160); // Vị trí tối thiểu (x = 0, y = -160)\r\n    maxPosition = cc.v2(151.999, -28.076); // Vị trí ban đầu (x = 151.999, y = -28.076)\r\n    minAngle = 0; // Góc xoay tối thiểu\r\n    maxAngle = 45 // Góc xoay ban đầu\r\n\r\n    tolerance = cc.v2(5, 5);\r\n\r\n    currentPos: cc.Vec2 = new cc.Vec2();\r\n\r\n\r\n    protected start(): void {\r\n        this.registerEvent();\r\n    }\r\n\r\n\r\n    private registerEvent(): void {\r\n        this.NodesContainer.Flow2_SpineNode.on(cc.Node.EventType.TOUCH_START, this.touchStart, this);\r\n        this.NodesContainer.Flow2_SpineNode.on(cc.Node.EventType.TOUCH_MOVE, this.touchMove, this);\r\n        this.NodesContainer.Flow2_SpineNode.on(cc.Node.EventType.TOUCH_END, this.touchEnd, this);\r\n        this.NodesContainer.Flow2_SpineNode.on(cc.Node.EventType.TOUCH_CANCEL, this.touchEnd, this);\r\n    }\r\n\r\n\r\n    private touchStart(): void {\r\n        if(Constants.isDoneFlow2) return;\r\n\r\n        this.AudioManager.playSound(Constants.SoundTrack.TouchSound);\r\n\r\n        this.hand.active = false;\r\n    }\r\n\r\n\r\n    private touchMove(event: cc.Touch): void {\r\n        if(Constants.isDoneFlow2) return;\r\n\r\n        let touchLocation = event.getLocation();\r\n\r\n        // Chuyển đổi vị trí chạm từ không gian thế giới sang không gian của Node\r\n        let localTouchLocation = this.node.parent.convertToNodeSpaceAR(touchLocation);\r\n\r\n        // Tính toán vị trí mới\r\n        let newX = Math.min(Math.max(localTouchLocation.x, this.minPosition.x), this.maxPosition.x);\r\n        let newY = Math.min(Math.max(localTouchLocation.y, this.minPosition.y), this.maxPosition.y);\r\n\r\n        // Tính toán phần trăm thay đổi vị trí\r\n        let positionPercent = (newY - this.minPosition.y) / (this.maxPosition.y - this.minPosition.y);\r\n\r\n        // Tính toán góc xoay mới dựa trên phần trăm thay đổi vị trí\r\n        let newAngle = this.minAngle + (this.maxAngle - this.minAngle) * positionPercent;\r\n\r\n        let currentPos = this.NodesContainer.Flow2_SpineNode.getPosition();\r\n        let targetPos = cc.v2(newX, newY);\r\n        let smoothedPos = currentPos.lerp(targetPos, 0.1);\r\n\r\n        let currentAngle = this.NodesContainer.Flow2_SpineNode.angle;\r\n        let smoothedAngle = cc.misc.lerp(currentAngle, newAngle, 0.1);\r\n\r\n        // Cập nhật vị trí và góc xoay của Node\r\n        this.NodesContainer.Flow2_SpineNode.angle = smoothedAngle;\r\n        this.NodesContainer.Flow2_SpineNode.setPosition(smoothedPos);\r\n\r\n\r\n        this.currentPos = touchLocation;\r\n    }\r\n\r\n\r\n    private touchEnd(): void {\r\n\r\n        if(Constants.isDoneFlow2) return;\r\n\r\n        if (this.isNearMinPosition()) {\r\n\r\n            Constants.isDoneFlow2 = true;\r\n\r\n            this.AudioManager.playSound(Constants.SoundTrack.winSound);\r\n\r\n            this.win();\r\n\r\n            cc.tween(this.NodesContainer.Flow2_SpineNode)\r\n                .to(3.2, { x: 0, y: -160, angle: 0 })\r\n                .start();\r\n\r\n            console.log(\"Okey!\");\r\n        } else {\r\n\r\n            this.AudioManager.playSound(Constants.SoundTrack.LoseSound);\r\n\r\n            console.log(\"Wrong!\");\r\n        }\r\n    }\r\n\r\n\r\n    private win(): void {\r\n        this.spine.setAnimation(0, \"win\", false);\r\n\r\n        this.GamePlay.doneFlow();\r\n\r\n        this.scheduleOnce(() => {\r\n            this.GamePlay.showNextFlow(3)\r\n        }, 2.5)\r\n    }\r\n\r\n\r\n    private isNearMinPosition(): boolean {\r\n        const currentPos = this.NodesContainer.Flow2_SpineNode.getPosition();\r\n        return (\r\n            Math.abs(currentPos.x - this.minPosition.x) <= this.tolerance.x &&\r\n            Math.abs(currentPos.y - this.minPosition.y) <= this.tolerance.y\r\n        );\r\n    }\r\n\r\n    public someOtherFunction(): boolean {\r\n        if (!this.isNearMinPosition()) {\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n}\r\n"]}