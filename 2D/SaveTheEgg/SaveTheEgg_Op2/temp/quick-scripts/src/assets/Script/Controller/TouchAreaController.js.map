{"version":3,"sources":["assets\\Script\\Controller\\TouchAreaController.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["\r\nimport { Constants } from \"../Data/constants\";\r\nimport AudioManager from \"../Plugin/AudioManager\";\r\nimport NodesController from \"./NodesController\";\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\n@ccclass\r\nexport default class TouchAreaController extends cc.Component {\r\n\r\n    @property(NodesController)\r\n    NodesController: NodesController = null;\r\n    @property(AudioManager)\r\n    AudioManager: AudioManager = null;\r\n\r\n\r\n    protected start(): void {\r\n        this.NodesController.HideMask.on(cc.Node.EventType.TOUCH_START, this.handleBgTouchStart, this);\r\n        this.NodesController.HideMask.on(cc.Node.EventType.TOUCH_MOVE, this.handleBgTouchMove, this);\r\n        this.NodesController.HideMask.on(cc.Node.EventType.TOUCH_END, this.handleBgTouchEnd, this);\r\n        this.NodesController.HideMask.on(cc.Node.EventType.TOUCH_CANCEL, this.handleBgTouchEnd, this);\r\n    }\r\n\r\n\r\n    \r\n    private handleBgTouchStart(e: cc.Touch): void {\r\n        if (!Constants.isCanTouch) {\r\n            return;\r\n        }\r\n\r\n\r\n        Constants.currentPosition = e.getLocation();\r\n        this.AudioManager.playSound(Constants.SoundTrack.drawSound);\r\n        this.AudioManager.drawSound.loop = true;\r\n\r\n        // this.handleIronSourcePlaySound();\r\n    }\r\n\r\n\r\n    private handleBgTouchMove(e: cc.Touch): void {\r\n        if (!Constants.isCanTouch) {\r\n            return;\r\n        }\r\n\r\n        this.NodesController.Graphics.moveTo(\r\n            Constants.currentPosition.x - cc.winSize.width / 2,\r\n            Constants.currentPosition.y - cc.winSize.height / 2 - Constants.Responsive.calculated\r\n        );\r\n        this.NodesController.Graphics.lineTo(\r\n            e.getLocation().x - cc.winSize.width / 2,\r\n            e.getLocation().y - cc.winSize.height / 2 - Constants.Responsive.calculated\r\n        );\r\n\r\n        Constants.currentPosition = e.getLocation();\r\n        this.NodesController.Graphics.stroke();\r\n    }\r\n\r\n\r\n    private handleBgTouchEnd(): void {\r\n        if (!Constants.isCanTouch) {\r\n            return;\r\n        }\r\n\r\n        // this.NodesController.Graphics.clear();\r\n        this.AudioManager.stopSound(Constants.SoundTrack.drawSound);\r\n    }\r\n\r\n}\r\n"]}