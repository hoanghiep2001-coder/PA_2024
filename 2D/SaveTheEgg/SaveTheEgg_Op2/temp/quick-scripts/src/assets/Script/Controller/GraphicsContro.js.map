{"version":3,"sources":["assets\\Script\\Controller\\GraphicsContro.js"],"names":["cc","Class","Component","properties","graphics","line_point","Vec2","onLoad","node","width","height","getComponent","Graphics","start","window","PointPos","v2","onTouch","on","Node","EventType","TOUCH_START","touch_start","TOUCH_MOVE","touch_move","TOUCH_END","touch_end","TOUCH_CANCEL","offTouch","off","event","StateForJs","isCanDraw","pos","convertToNodeSpaceAR","getLocation","isStartDraw","moveTo","x","y","push","lineTo","isTouchWall","strokeColor","Color","RED","BLACK","stroke","clear","isDraw","createRigibody","rigibodyLogic","addComponent","RigidBody","gravityScale","physicsLine","lineWidth","points","friction","density","tag","apply","checkIsCanDraw","lastPoint","nowPoint","sub","mag"],"mappings":"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","sourceRoot":"/","sourcesContent":["import { StateForJs } from \"../Data/StateForJS\";\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        graphics: null,\r\n        line_point: [cc.Vec2],\r\n    },\r\n\r\n    onLoad() {\r\n        this.node.width = 5000;\r\n        this.node.height = 5000;\r\n        this.graphics = this.getComponent(cc.Graphics);\r\n    },\r\n\r\n    start() {\r\n\r\n        window.PointPos = cc.v2(-50,100);\r\n        this.onTouch();\r\n    },\r\n    onTouch() {\r\n        this.node.on(cc.Node.EventType.TOUCH_START, this.touch_start, this);\r\n        this.node.on(cc.Node.EventType.TOUCH_MOVE, this.touch_move, this);\r\n        this.node.on(cc.Node.EventType.TOUCH_END, this.touch_end, this);\r\n        this.node.on(cc.Node.EventType.TOUCH_CANCEL, this.touch_end, this);\r\n    },\r\n    offTouch() {\r\n        this.node.off(cc.Node.EventType.TOUCH_START);\r\n        this.node.off(cc.Node.EventType.TOUCH_MOVE);\r\n        this.node.off(cc.Node.EventType.TOUCH_END);\r\n        this.node.off(cc.Node.EventType.TOUCH_CANCEL);\r\n    },\r\n    touch_start: function (event) {\r\n        if (!StateForJs.isCanDraw) {\r\n            return;\r\n        }\r\n\r\n        let pos = this.node.convertToNodeSpaceAR(event.getLocation());\r\n        window.isStartDraw = true;\r\n        window.PointPos = pos;\r\n        this.graphics.moveTo(pos.x, pos.y);\r\n        this.line_point.push(cc.v2(pos.x, pos.y));\r\n    },\r\n    touch_move: function (event) {\r\n        if (!StateForJs.isCanDraw) {\r\n            return;\r\n        }\r\n\r\n        let pos = this.node.convertToNodeSpaceAR(event.getLocation());\r\n        window.PointPos = pos;\r\n        this.graphics.lineTo(pos.x, pos.y);\r\n        this.line_point.push(cc.v2(pos.x, pos.y));\r\n\r\n        if(window.isTouchWall) {\r\n            this.graphics.strokeColor = cc.Color.RED\r\n        } else {\r\n            this.graphics.strokeColor = cc.Color.BLACK\r\n        }\r\n\r\n        this.graphics.stroke();\r\n    },\r\n    touch_end: function (event) {\r\n        if(window.isTouchWall) {\r\n            StateForJs.isCanDraw = true;\r\n            window.isTouchWall = false;\r\n            this.line_point = [];\r\n            this.graphics.clear();\r\n            return;\r\n        }\r\n\r\n        if (!StateForJs.isCanDraw) {\r\n            return;\r\n        }\r\n\r\n        \r\n        StateForJs.isCanDraw = false;\r\n        window.isDraw = true;\r\n        window.isTouchWall = false\r\n        this.createRigibody();\r\n        this.offTouch();\r\n    },\r\n    createRigibody: function () {\r\n        this.rigibodyLogic = this.addComponent(cc.RigidBody);\r\n        this.rigibodyLogic.gravityScale = 2;\r\n\r\n        this.physicsLine = this.addComponent(\"MyPhysicsCollider\");\r\n        this.physicsLine.lineWidth = 7;\r\n        this.physicsLine.points = this.line_point;\r\n        this.physicsLine.friction = 0;\r\n        this.physicsLine.density = 100;\r\n        this.physicsLine.tag = 4;\r\n        this.physicsLine.apply();\r\n    },\r\n\r\n    checkIsCanDraw: function (lastPoint, nowPoint) {\r\n        return lastPoint.sub(nowPoint).mag() >= 20;\r\n    },\r\n\r\n});\r\n"]}