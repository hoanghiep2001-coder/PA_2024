{"version":3,"sources":["assets\\Script\\Controller\\Bee.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import { Constants } from \"../Data/constants\";\r\nimport AudioManager from \"../Plugin/AudioManager\";\r\n// import * as PF from \"pathfinding\";\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class Bee extends cc.Component {\r\n\r\n    @property(AudioManager)\r\n    AudioManager: AudioManager = null;\r\n\r\n    @property(cc.RigidBody)\r\n    rigidBody: cc.RigidBody = null;\r\n\r\n    isCollide: boolean = false;\r\n    initPos: cc.Vec2 = null;\r\n\r\n    protected start(): void {\r\n        this.beginContact();\r\n        this.initPos = this.node.getPosition();\r\n        // let grid = new PF.Grid(100, 100);\r\n        // console.log(grid);\r\n    }\r\n\r\n\r\n    private createPathFinding(): void {\r\n        // let grid = new PF.Grid(10, 10);\r\n        // console.log(PF.Grid(100, 100));\r\n\r\n    }\r\n\r\n\r\n    private beginContact(): void {\r\n        this.rigidBody.onBeginContact = (c, s, o) => {\r\n        \r\n            if (o.tag === 4) {\r\n                console.log(\"collide\");     \r\n                // this.isCollide = true;\r\n                // this.jumpBack();\r\n            }\r\n\r\n            if (o.tag === 3) {\r\n                if(this.isCollide) {\r\n                    return;\r\n                }\r\n\r\n                this.AudioManager.playSound(Constants.SoundTrack.stingSound)\r\n                this.isCollide = true;\r\n                Constants.isHit = true;\r\n                // let random = Math.floor(Math.random() * 3) + 1;\r\n                // console.log(random);\r\n\r\n                // if(random === 1) {\r\n                //     targetPosition = Constants.Char_Point1;\r\n                // } else if (random === 2) {\r\n                //     targetPosition = Constants.Char_Point2;\r\n                // } else {\r\n                //     targetPosition = Constants.Char_Point3;\r\n                // }\r\n                // switch (random) {\r\n                //     case 1:\r\n                //         targetPosition = Constants.Char_Point1;\r\n                //         break;\r\n                //     case 2:\r\n                //         targetPosition = Constants.Char_Point2;\r\n                //         break;\r\n                //     case 3:\r\n                //         targetPosition = Constants.Char_Point3;\r\n                //         break;\r\n                //     default:\r\n                //         break;\r\n                // }\r\n\r\n                // let currentPosition = this.node.getPosition();\r\n                // currentPosition.lerp(targetPosition, 0.5, currentPosition);\r\n                // this.node.setPosition(currentPosition);\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    private jumpBack(): void {\r\n        let targetPosition = new cc.Vec2(this.initPos.x, this.initPos.y)\r\n        let currentPosition = this.node.getPosition();\r\n        currentPosition.lerp(targetPosition, 0.02, currentPosition);\r\n        this.node.setPosition(currentPosition);\r\n    }\r\n\r\n\r\n    private attack(): void {\r\n        let targetPosition = Constants.CharacterPos;\r\n        let currentPosition = this.node.getPosition();\r\n        currentPosition.lerp(targetPosition, 0.015, currentPosition);\r\n        this.node.setPosition(currentPosition);\r\n    }\r\n\r\n\r\n    protected update(dt: number): void {\r\n        if (window.isDraw && !this.isCollide) {\r\n            this.attack();\r\n        }\r\n    }\r\n\r\n}\r\n"]}