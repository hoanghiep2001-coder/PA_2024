{"version":3,"sources":["assets\\Script\\Plugin\\MyPhysicsCollider.js"],"names":["MyPhysicsCollider","cc","Class","PhysicsCollider","editor","menu","CC_EDITOR","requireComponent","RigidBody","properties","lineWidth","points","Vec2","_createShape","scale","shapes","polys","offset","polyIdx","i","length","posBegin","posEnd","linelen","sub","mag","angle","Math","atan2","y","x","PI","midPos","add","mul","shape","b2","PolygonShape","SetAsBox","push","module","exports"],"mappings":";;;;;;AACA,IAAIA,iBAAiB,GAAGC,EAAE,CAACC,KAAH,CAAS;AAC7B,aAASD,EAAE,CAACE,eADiB;AAE7BC,EAAAA,MAAM,EAAE;AACJC,IAAAA,IAAI,EAAEC,SAAS,IAAI,mDADf;AAEJC,IAAAA,gBAAgB,EAAEN,EAAE,CAACO;AAFjB,GAFqB;AAM7BC,EAAAA,UAAU,EAAE;AACRC,IAAAA,SAAS,EAAE,EADH;AAERC,IAAAA,MAAM,EAAE,CAACV,EAAE,CAACW,IAAJ;AAFA,GANiB;AAU7BC,EAAAA,YAAY,EAAE,sBAAUC,KAAV,EAAiB;AAC3B,QAAIC,MAAM,GAAG,EAAb;AAEA,QAAIC,KAAK,GAAG,KAAKL,MAAjB;AACA,QAAIM,MAAM,GAAG,KAAKA,MAAlB;AAEA,QAAIC,OAAO,GAAG,CAAd;;AACA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,KAAK,CAACI,MAAN,GAAe,CAAnC,EAAsCD,CAAC,EAAvC,EAA2C;AACvC,UAAIE,QAAQ,GAAGL,KAAK,CAACG,CAAD,CAApB;AACA,UAAIG,MAAM,GAAGN,KAAK,CAACG,CAAC,GAAG,CAAL,CAAlB;AACA,UAAII,OAAO,GAAGF,QAAQ,CAACG,GAAT,CAAaF,MAAb,EAAqBG,GAArB,EAAd;AAEA,UAAIC,KAAK,GAAGC,IAAI,CAACC,KAAL,CAAWN,MAAM,CAACO,CAAP,GAAWR,QAAQ,CAACQ,CAA/B,EAAkCP,MAAM,CAACQ,CAAP,GAAWT,QAAQ,CAACS,CAAtD,IAA2DH,IAAI,CAACI,EAAL,GAAU,CAAjF;AAEA,UAAIC,MAAM,GAAGX,QAAQ,CAACY,GAAT,CAAaX,MAAb,EAAqBY,GAArB,CAAyB,GAAzB,CAAb;AAEA,UAAIC,KAAK,GAAG,IAAIC,EAAE,CAACC,YAAP,EAAZ;;AAEA,UAAIF,KAAJ,EAAW;AACPA,QAAAA,KAAK,CAACG,QAAN,CAAe,KAAK5B,SAAL,GAAiB,CAAjB,GAAqB,EAApC,EAAwCa,OAAO,GAAG,CAAV,GAAc,EAAtD,EAA0D,IAAIa,EAAE,CAACxB,IAAP,CAAYoB,MAAM,CAACF,CAAP,GAAW,EAAvB,EAA2BE,MAAM,CAACH,CAAP,GAAW,EAAtC,CAA1D,EAAqGH,KAArG;AAEAX,QAAAA,MAAM,CAACwB,IAAP,CAAYJ,KAAZ;AACH;AACJ;;AAED,WAAOpB,MAAP;AACH;AApC4B,CAAT,CAAxB;AAuCAyB,MAAM,CAACC,OAAP,GAAiBzC,iBAAjB","sourceRoot":"/","sourcesContent":["\r\nvar MyPhysicsCollider = cc.Class({\r\n    extends: cc.PhysicsCollider,\r\n    editor: {\r\n        menu: CC_EDITOR && 'i18n:MAIN_MENU.component.physics/Collider/Polygon',\r\n        requireComponent: cc.RigidBody\r\n    },\r\n    properties: {\r\n        lineWidth: 10,\r\n        points: [cc.Vec2]\r\n    },\r\n    _createShape: function (scale) {\r\n        var shapes = [];\r\n\r\n        var polys = this.points;\r\n        var offset = this.offset;\r\n\r\n        var polyIdx = 0;\r\n        for (var i = 0; i < polys.length - 1; i++) {\r\n            var posBegin = polys[i];\r\n            var posEnd = polys[i + 1];\r\n            var linelen = posBegin.sub(posEnd).mag();\r\n\r\n            var angle = Math.atan2(posEnd.y - posBegin.y, posEnd.x - posBegin.x) - Math.PI / 2;\r\n\r\n            var midPos = posBegin.add(posEnd).mul(0.5);\r\n\r\n            var shape = new b2.PolygonShape();\r\n\r\n            if (shape) {\r\n                shape.SetAsBox(this.lineWidth / 2 / 32, linelen / 2 / 32, new b2.Vec2(midPos.x / 32, midPos.y / 32), angle);\r\n    \r\n                shapes.push(shape);\r\n            }\r\n        }\r\n\r\n        return shapes;\r\n    }\r\n});\r\n\r\nmodule.exports = MyPhysicsCollider;"]}