{"version":3,"sources":["assets\\Script\\Controller\\EggController.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA,+CAA8C;AAC9C,uDAAkD;AAClD,uCAAkC;AAE5B,IAAA,KAAsB,EAAE,CAAC,UAAU,EAAlC,OAAO,aAAA,EAAE,QAAQ,cAAiB,CAAC;AAG1C;IAAsC,4BAAY;IAAlD;QAAA,qEA0CC;QAvCG,cAAQ,GAAa,IAAI,CAAC;QAE1B,kBAAY,GAAiB,IAAI,CAAC;QAElC,gBAAU,GAAwB,EAAE,CAAC;QAErC,eAAS,GAAiB,IAAI,CAAC;QAC/B,aAAO,GAAgB,IAAI,CAAC;QAC5B,8BAAwB,GAAY,KAAK,CAAC;;IA+B9C,CAAC;IA5Ba,wBAAK,GAAf;QAAA,iBAcC;QAbG,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,YAAY,CAAC,EAAE,CAAC,SAAS,CAAC,CAAC;QAEjD,IAAI,CAAC,SAAS,CAAC,cAAc,GAAG,UAAC,CAAmB,EAAE,CAAqB,EAAE,CAAqB;YAC9F,IAAG,CAAC,CAAC,GAAG,KAAK,CAAC,EAAE;gBACZ,qBAAS,CAAC,SAAS,GAAG,IAAI,CAAC;gBAC3B,KAAI,CAAC,SAAS,CAAC,OAAO,EAAE,CAAC;gBACzB,KAAI,CAAC,YAAY,CAAC,EAAE,CAAC,QAAQ,CAAC,CAAC,OAAO,EAAE,CAAC;gBACzC,KAAI,CAAC,IAAI,CAAC,cAAc,CAAC,iBAAiB,CAAC,CAAC,MAAM,GAAG,KAAK,CAAC;gBAC3D,KAAI,CAAC,YAAY,CAAC,SAAS,CAAC,qBAAS,CAAC,UAAU,CAAC,cAAc,CAAC,CAAC;gBACjE,KAAI,CAAC,UAAU,CAAC,OAAO,CAAC,UAAA,EAAE,IAAI,OAAA,EAAE,CAAC,WAAW,EAAE,EAAhB,CAAgB,CAAC,CAAC;gBAChD,KAAI,CAAC,YAAY,CAAC,cAAO,KAAI,CAAC,QAAQ,CAAC,OAAO,EAAE,CAAA,CAAA,CAAC,EAAE,GAAG,CAAC,CAAA;aAC1D;QACL,CAAC,CAAA;IACL,CAAC;IAGM,sCAAmB,GAA1B;QACI,IAAI,CAAC,SAAS,CAAC,IAAI,GAAG,EAAE,CAAC,aAAa,CAAC,OAAO,CAAC;IACnD,CAAC;IAGS,yBAAM,GAAhB,UAAiB,EAAU;QACvB,IAAG,MAAM,CAAC,sBAAsB,IAAI,CAAC,IAAI,CAAC,wBAAwB,EAAE;YAChE,IAAI,CAAC,wBAAwB,GAAG,IAAI,CAAC;YACrC,IAAI,CAAC,mBAAmB,EAAE,CAAC;SAC9B;IACL,CAAC;IAtCD;QADC,QAAQ,CAAC,kBAAQ,CAAC;8CACO;IAE1B;QADC,QAAQ,CAAC,sBAAY,CAAC;kDACW;IAElC;QADC,QAAQ,CAAC,CAAC,EAAE,CAAC,cAAc,CAAC,CAAC;gDACO;IAPpB,QAAQ;QAD5B,OAAO;OACa,QAAQ,CA0C5B;IAAD,eAAC;CA1CD,AA0CC,CA1CqC,EAAE,CAAC,SAAS,GA0CjD;kBA1CoB,QAAQ","file":"","sourceRoot":"/","sourcesContent":["import { Constants } from \"../Data/constants\";\r\nimport AudioManager from \"../Plugin/AudioManager\";\r\nimport GamePlay from \"./GamePlay\";\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\n@ccclass\r\nexport default class NewClass extends cc.Component {\r\n\r\n    @property(GamePlay)\r\n    GamePlay: GamePlay = null;\r\n    @property(AudioManager)\r\n    AudioManager: AudioManager = null;\r\n    @property([cc.ParticleSystem])\r\n    effectDies: cc.ParticleSystem[] = [];\r\n\r\n    rigidbody: cc.RigidBody = null;\r\n    collide: cc.Collider = null;\r\n    isChangeEggRigidbodyType: boolean = false;\r\n\r\n\r\n    protected start(): void {\r\n        this.rigidbody = this.getComponent(cc.RigidBody);\r\n\r\n        this.rigidbody.onBeginContact = (c:cc.PhysicsContact, s: cc.PhysicsCollider, o: cc.PhysicsCollider) => {\r\n            if(o.tag === 8) {\r\n                Constants.isLoseLv2 = true;\r\n                this.rigidbody.destroy();\r\n                this.getComponent(cc.Collider).destroy();\r\n                this.node.getChildByName(\"Spine_Character\").active = false;\r\n                this.AudioManager.playSound(Constants.SoundTrack.explosionSound);\r\n                this.effectDies.forEach(fx => fx.resetSystem());\r\n                this.scheduleOnce(() => {this.GamePlay.loseLv2()}, 2.5)\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    public changeRigidbodyType(): void {\r\n        this.rigidbody.type = cc.RigidBodyType.Dynamic;\r\n    }\r\n\r\n\r\n    protected update(dt: number): void {\r\n        if(window.changeEggRigidbodyType && !this.isChangeEggRigidbodyType) {\r\n            this.isChangeEggRigidbodyType = true;\r\n            this.changeRigidbodyType();\r\n        }\r\n    }\r\n}\r\n"]}