{"version":3,"sources":["assets\\Script\\Controller\\NodesController.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA,+CAA8C;AAExC,IAAA,KAAwB,EAAE,CAAC,UAAU,EAAnC,OAAO,aAAA,EAAE,QAAQ,cAAkB,CAAC;AAG5C;IAA6C,mCAAY;IAAzD;QAAA,qEAwCC;QAvCG,YAAY;QAEZ,gBAAU,GAAkB,EAAE,CAAC;QAE/B,qBAAe,GAAgB,IAAI,CAAC;QAGpC,OAAO;QAEP,oBAAc,GAAc,EAAE,CAAC;QAE/B,cAAQ,GAAY,IAAI,CAAC;QAEzB,mBAAa,GAAY,IAAI,CAAC;QAE9B,wBAAkB,GAAY,IAAI,CAAC;QAEnC,iBAAW,GAAY,IAAI,CAAC;QAG5B,SAAG,GAAY,IAAI,CAAC;QAEpB,cAAQ,GAAY,IAAI,CAAC;QAEzB,gBAAU,GAAY,IAAI,CAAC;QAE3B,iBAAW,GAAY,IAAI,CAAC;QAE5B,UAAI,GAAY,IAAI,CAAC;QAErB,SAAS;QAET,qBAAe,GAAc,IAAI,CAAC;;IAOtC,CAAC;IALa,+BAAK,GAAf;QACI,qBAAS,CAAC,WAAW,GAAG,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,WAAW,EAAE,CAAC;QAC7D,qBAAS,CAAC,WAAW,GAAG,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,WAAW,EAAE,CAAC;QAC7D,qBAAS,CAAC,WAAW,GAAG,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,WAAW,EAAE,CAAC;IACjE,CAAC;IApCD;QADC,QAAQ,CAAC,CAAC,EAAE,CAAC,QAAQ,CAAC,CAAC;uDACO;IAE/B;QADC,QAAQ,CAAC,EAAE,CAAC,QAAQ,CAAC;4DACc;IAKpC;QADC,QAAQ,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC;2DACW;IAE/B;QADC,QAAQ,CAAC,EAAE,CAAC,IAAI,CAAC;qDACO;IAEzB;QADC,QAAQ,CAAC,EAAE,CAAC,IAAI,CAAC;0DACY;IAE9B;QADC,QAAQ,CAAC,EAAE,CAAC,IAAI,CAAC;+DACiB;IAEnC;QADC,QAAQ,CAAC,EAAE,CAAC,IAAI,CAAC;wDACU;IAG5B;QADC,QAAQ,CAAC,EAAE,CAAC,IAAI,CAAC;gDACE;IAEpB;QADC,QAAQ,CAAC,EAAE,CAAC,IAAI,CAAC;qDACO;IAEzB;QADC,QAAQ,CAAC,EAAE,CAAC,IAAI,CAAC;uDACS;IAE3B;QADC,QAAQ,CAAC,EAAE,CAAC,IAAI,CAAC;wDACU;IAE5B;QADC,QAAQ,CAAC,EAAE,CAAC,IAAI,CAAC;iDACG;IAIrB;QADC,QAAQ,CAAC,EAAE,CAAC,MAAM,CAAC;4DACc;IAjCjB,eAAe;QADnC,OAAO;OACa,eAAe,CAwCnC;IAAD,sBAAC;CAxCD,AAwCC,CAxC4C,EAAE,CAAC,SAAS,GAwCxD;kBAxCoB,eAAe","file":"","sourceRoot":"/","sourcesContent":["import { Constants } from \"../Data/constants\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class NodesController extends cc.Component {\r\n    // Component\r\n    @property([sp.Skeleton])\r\n    Spine_Bees: sp.Skeleton[] = [];\r\n    @property(sp.Skeleton)\r\n    Spine_Character: sp.Skeleton = null;\r\n\r\n\r\n    // Node\r\n    @property([cc.Node])\r\n    FakeCharacters: cc.Node[] = [];\r\n    @property(cc.Node)\r\n    HideMask: cc.Node = null;\r\n    @property(cc.Node)\r\n    LineContainer: cc.Node = null;\r\n    @property(cc.Node)\r\n    point_checkCollide: cc.Node = null;\r\n    @property(cc.Node)\r\n    Environment: cc.Node = null;\r\n\r\n    @property(cc.Node)\r\n    CTA: cc.Node = null;\r\n    @property(cc.Node)\r\n    CTA_logo: cc.Node = null;\r\n    @property(cc.Node)\r\n    CTA_button: cc.Node = null;\r\n    @property(cc.Node)\r\n    CTA_Overlay: cc.Node = null;\r\n    @property(cc.Node)\r\n    Hint: cc.Node = null;\r\n\r\n    // PreFab\r\n    @property(cc.Prefab)\r\n    Prefab_Graphics: cc.Prefab = null;\r\n\r\n    protected start(): void {\r\n        Constants.Char_Point1 = this.FakeCharacters[0].getPosition();\r\n        Constants.Char_Point2 = this.FakeCharacters[1].getPosition();\r\n        Constants.Char_Point3 = this.FakeCharacters[2].getPosition();\r\n    }\r\n}\r\n"]}