{"version":3,"sources":["assets\\Script\\Controller\\Bee.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA,+CAA8C;AAC9C,uDAAkD;AAClD,uCAAkC;AAClC,qCAAqC;AAC/B,IAAA,KAAwB,EAAE,CAAC,UAAU,EAAnC,OAAO,aAAA,EAAE,QAAQ,cAAkB,CAAC;AAG5C;IAAiC,uBAAY;IAA7C;QAAA,qEA4GC;QAzGG,kBAAY,GAAiB,IAAI,CAAC;QAGlC,cAAQ,GAAa,IAAI,CAAC;QAG1B,eAAS,GAAiB,IAAI,CAAC;QAE/B,eAAS,GAAY,KAAK,CAAC;QAC3B,aAAO,GAAY,IAAI,CAAC;QACxB,eAAS,GAAY,IAAI,CAAC;QAC1B,gBAAU,GAAY,KAAK,CAAC;;IA8FhC,CAAC;IA3Fa,mBAAK,GAAf;QACI,IAAI,CAAC,aAAa,EAAE,CAAC;QACrB,IAAI,CAAC,YAAY,EAAE,CAAC;QACpB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC;IAC3C,CAAC;IAGO,2BAAa,GAArB;QACI,IAAI,MAAM,GAAG,EAAE,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QAE1C,QAAQ,MAAM,EAAE;YACZ,KAAK,CAAC;gBACF,IAAI,CAAC,SAAS,GAAG,qBAAS,CAAC,WAAW,CAAC;gBACvC,MAAM;YACV,KAAK,CAAC;gBACF,IAAI,CAAC,SAAS,GAAG,qBAAS,CAAC,WAAW,CAAC;gBACvC,MAAM;YACV,KAAK,CAAC;gBACF,IAAI,CAAC,SAAS,GAAG,qBAAS,CAAC,WAAW,CAAC;gBACvC,MAAM;YACV;gBACI,MAAM;SACb;IACL,CAAC;IAGO,0BAAY,GAApB;QAAA,iBA8BC;QA7BG,IAAI,CAAC,SAAS,CAAC,cAAc,GAAG,UAAC,CAAC,EAAE,CAAC,EAAE,CAAC;YAEpC,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC,IAAI,CAAC,qBAAS,CAAC,KAAK,EAAE;gBACjC,KAAI,CAAC,QAAQ,EAAE,CAAC;gBAChB,OAAO,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC;aAC/B;YAED,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC,EAAE;gBACb,IAAI,KAAI,CAAC,SAAS,EAAE;oBAChB,OAAO;iBACV;gBAED,+BAA+B;gBAC/B,kCAAkC;gBAClC,8CAA8C;gBAC9C,6CAA6C;gBAC7C,oEAAoE;gBACpE,mEAAmE;gBACnE,8DAA8D;gBAC9D,cAAc;gBACd,IAAI;gBAEJ,KAAI,CAAC,YAAY,CAAC,SAAS,CAAC,qBAAS,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC;gBAC7D,KAAI,CAAC,SAAS,GAAG,IAAI,CAAC;gBACtB,MAAM,CAAC,UAAU,GAAG,IAAI,CAAC;gBACzB,qBAAS,CAAC,KAAK,GAAG,IAAI,CAAC;gBACvB,KAAI,CAAC,YAAY,CAAC,EAAE,CAAC,QAAQ,CAAC,CAAC,YAAY,CAAC,CAAC,EAAE,KAAK,EAAE,IAAI,CAAC,CAAC;aAC/D;QACL,CAAC,CAAA;IACL,CAAC;IAGO,sBAAQ,GAAhB;QAAA,iBAUC;QATG,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;QACvB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,EAAE,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC;aAClB,EAAE,CAAC,GAAG,EAAE,EAAC,CAAC,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC,EAAC,EAAE,EAAC,MAAM,EAAE,EAAE,CAAC,MAAM,CAAC,MAAM,EAAC,CAAC;aAC3E,IAAI,CAAC;YACF,KAAI,CAAC,aAAa,EAAE,CAAC;YACrB,KAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QAC3B,CAAC,CAAC;aACD,KAAK,EAAE,CAAC;IACb,CAAC;IAGO,4BAAc,GAAtB;QAAA,iBAGC;QAFG,IAAI,IAAI,CAAC,UAAU;YAAE,OAAO;QAC5B,IAAI,CAAC,YAAY,CAAC,cAAO,KAAI,CAAC,SAAS,GAAG,KAAK,CAAA,CAAA,CAAC,EAAE,CAAC,CAAC,CAAC;IACzD,CAAC;IAGO,oBAAM,GAAd;QACI,IAAI,eAAe,GAAG,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC;QAC9C,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,EAAE,eAAe,CAAC,CAAC;QAC5D,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,eAAe,CAAC,CAAC;IAC3C,CAAC;IAGS,oBAAM,GAAhB,UAAiB,EAAU;QACvB,IAAI,MAAM,CAAC,MAAM,IAAI,CAAC,IAAI,CAAC,SAAS,IAAI,CAAC,qBAAS,CAAC,SAAS,EAAE;YAC1D,IAAI,CAAC,MAAM,EAAE,CAAC;SACjB;IACL,CAAC;IAvGD;QADC,QAAQ,CAAC,sBAAY,CAAC;6CACW;IAGlC;QADC,QAAQ,CAAC,kBAAQ,CAAC;yCACO;IAG1B;QADC,QAAQ,CAAC,EAAE,CAAC,SAAS,CAAC;0CACQ;IATd,GAAG;QADvB,OAAO;OACa,GAAG,CA4GvB;IAAD,UAAC;CA5GD,AA4GC,CA5GgC,EAAE,CAAC,SAAS,GA4G5C;kBA5GoB,GAAG","file":"","sourceRoot":"/","sourcesContent":["import { Constants } from \"../Data/constants\";\r\nimport AudioManager from \"../Plugin/AudioManager\";\r\nimport GamePlay from \"./GamePlay\";\r\n// import * as PF from \"pathfinding\";\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class Bee extends cc.Component {\r\n\r\n    @property(AudioManager)\r\n    AudioManager: AudioManager = null;\r\n    \r\n    @property(GamePlay)\r\n    GamePlay: GamePlay = null;\r\n\r\n    @property(cc.RigidBody)\r\n    rigidBody: cc.RigidBody = null;\r\n\r\n    isCollide: boolean = false;\r\n    initPos: cc.Vec2 = null;\r\n    targetPos: cc.Vec2 = null;\r\n    isJumpback: boolean = false;\r\n\r\n\r\n    protected start(): void {\r\n        this.initTargetPos();\r\n        this.beginContact();\r\n        this.initPos = this.node.getPosition();\r\n    }\r\n\r\n\r\n    private initTargetPos(): void {\r\n        let random = cc.math.randomRangeInt(1, 4);\r\n        \r\n        switch (random) {\r\n            case 1:\r\n                this.targetPos = Constants.Char_Point1;\r\n                break;\r\n            case 2:\r\n                this.targetPos = Constants.Char_Point2;\r\n                break;\r\n            case 3:\r\n                this.targetPos = Constants.Char_Point3;\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n\r\n    private beginContact(): void {\r\n        this.rigidBody.onBeginContact = (c, s, o) => {\r\n\r\n            if (o.tag === 4 && !Constants.isHit) {\r\n                this.jumpBack();\r\n                console.log(\"collide line\");\r\n            }\r\n\r\n            if (o.tag === 3) {\r\n                if (this.isCollide) {\r\n                    return;\r\n                }\r\n\r\n                // if(window.currentLv === 2) {\r\n                //     Constants.isLoseLv2 = true;\r\n                //     o.getComponent(cc.RigidBody).destroy();\r\n                //     o.getComponent(cc.Collider).destroy();\r\n                //     this.AudioManager.playSound(Constants.SoundTrack.stingSound);\r\n                //     this.getComponent(sp.Skeleton).setAnimation(0, \"Hit\", true);\r\n                //     this.scheduleOnce(() => {this.GamePlay.loseLv2()}, 2.5)\r\n                //     return;\r\n                // }\r\n\r\n                this.AudioManager.playSound(Constants.SoundTrack.stingSound);\r\n                this.isCollide = true;\r\n                window.isLoseGame = true;\r\n                Constants.isHit = true;\r\n                this.getComponent(sp.Skeleton).setAnimation(0, \"Hit\", true);\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    private jumpBack(): void {\r\n        this.isJumpback = true;\r\n        this.isCollide = true;\r\n        cc.tween(this.node)\r\n        .to(0.2, {x: this.initPos.x, y: this.initPos.y}, {easing: cc.easing.smooth})\r\n        .call(() => {\r\n            this.initTargetPos();\r\n            this.isCollide = false;\r\n        })\r\n        .start();\r\n    }\r\n\r\n\r\n    private setAttackAgain(): void {\r\n        if (this.isJumpback) return;\r\n        this.scheduleOnce(() => {this.isCollide = false}, 1);\r\n    }\r\n\r\n\r\n    private attack(): void {\r\n        let currentPosition = this.node.getPosition();\r\n        currentPosition.lerp(this.targetPos, 0.02, currentPosition);\r\n        this.node.setPosition(currentPosition);\r\n    }\r\n\r\n\r\n    protected update(dt: number): void {\r\n        if (window.isDraw && !this.isCollide && !Constants.isWinGame) {\r\n            this.attack();\r\n        }\r\n    }\r\n\r\n}\r\n"]}