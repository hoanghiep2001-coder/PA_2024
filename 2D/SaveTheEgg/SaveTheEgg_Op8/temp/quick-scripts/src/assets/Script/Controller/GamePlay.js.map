{"version":3,"sources":["assets\\Script\\Controller\\GamePlay.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import { Constants } from \"../Data/constants\";\r\nimport AudioManager from \"../Plugin/AudioManager\";\r\nimport { GameController } from \"./GameController\";\r\nimport NodesController from \"./NodesController\";\r\n// import * as PF from \"pathfinding\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class GamePlay extends cc.Component {\r\n\r\n    // Script\r\n    @property(NodesController)\r\n    NodesController: NodesController = null;\r\n    @property(AudioManager)\r\n    AudioManager: AudioManager = null;\r\n    @property(GameController)\r\n    GameController: GameController = null;\r\n\r\n\r\n    // Component\r\n\r\n\r\n    // Node\r\n    @property(cc.Graphics)\r\n    graphic: cc.Graphics = null;\r\n    pathFinding_Grid: any = null;\r\n    pathFinding_Nodes: any = [];\r\n\r\n    @property(cc.Node)\r\n    Overlay: cc.Node = null;\r\n\r\n    // State\r\n    curentPosition: cc.Vec2 = null;\r\n    currentHint: cc.Node = null;\r\n    currentPencil: cc.Graphics = null;\r\n    curerntPoint: cc.Node = null;\r\n    isHit: boolean = false;\r\n    isHint: boolean = false;\r\n\r\n\r\n    protected onLoad(): void {\r\n        let physics = cc.director.getPhysicsManager();\r\n        physics.enabled = true;\r\n        // physics.debugDrawFlags = cc.PhysicsManager.DrawBits.e_shapeBit\r\n    }\r\n\r\n\r\n    protected start(): void {\r\n        if(window.isLoseGame || Constants.isLoseLv2) {\r\n            window.changeEggRigidbodyType = false;\r\n            this.isHit = true;\r\n            this.Overlay.on(cc.Node.EventType.TOUCH_START, this.GameController.installHandle, this);\r\n\r\n            cc.tween(this.Overlay)\r\n            .to(0.5, {opacity: 0}, {easing: cc.easing.smooth})\r\n            .call(() => {Constants.isCanTouch = true})\r\n            .start();\r\n        }\r\n\r\n        Constants.isWinGame = false;\r\n        window.isLoseGame = false;\r\n        this.NodesController.CTA.active = false;\r\n\r\n        // this.AudioManager.playSound(Constants.SoundTrack.bgSound);\r\n        this.handleGamePlay();\r\n        Constants.isCanTouch = true;\r\n    }\r\n\r\n\r\n    private handleGamePlay(): void {\r\n        Constants.CharacterPos = this.NodesController.Spine_Character.node.getPosition()\r\n        Constants.CharacterPos.y = Constants.CharacterPos.y + 25\r\n        this.registerEvent();\r\n    }\r\n\r\n\r\n    private registerEvent(): void {\r\n\r\n    }\r\n\r\n\r\n    public handleIronSourcePlaySound(): void {\r\n        if (Constants.ironSource.isPlayBgSound) {\r\n            return;\r\n        }\r\n\r\n        if (Constants.ironSource.SoundState) {\r\n            this.AudioManager.playSound(Constants.SoundTrack.bgSound);\r\n        }\r\n\r\n        Constants.ironSource.isPlayBgSound = true;\r\n    }\r\n\r\n\r\n    private handleMuteSoundIronSource(): void {\r\n        Constants.ironSource.State = parseInt(localStorage.getItem(\"cocosSoundState\"), 10)\r\n\r\n        if (Constants.ironSource.State) {\r\n            if (Constants.ironSource.State === 1 && !Constants.ironSource.SoundState && !Constants.ironSource.isEndGame) {\r\n                Constants.ironSource.SoundState = true;\r\n                this.AudioManager.playSound(Constants.SoundTrack.bgSound);\r\n            }\r\n\r\n            if (Constants.ironSource.State === 2 && Constants.ironSource.SoundState) {\r\n                Constants.ironSource.SoundState = false;\r\n                this.AudioManager.stopAllSound();\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    private characterHit(): void {\r\n        window.isReplayGame = true;\r\n        this.isHit = true;\r\n        this.NodesController.Spine_Character.setAnimation(0, \"being_hit\", true);\r\n        this.AudioManager.playSound(Constants.SoundTrack.crySound);\r\n\r\n        if(window.currentLv === 2) {\r\n            this.scheduleOnce(() => {            \r\n                cc.tween(this.Overlay)\r\n                .to(0.5, {opacity: 255}, {easing: cc.easing.smooth})\r\n                .call(() => {cc.director.loadScene(\"Lv2\")})\r\n                .start();\r\n            }, 2);\r\n        } else {\r\n            this.scheduleOnce(() => {            \r\n                cc.tween(this.Overlay)\r\n                .to(0.5, {opacity: 255}, {easing: cc.easing.smooth})\r\n                .call(() => {cc.director.loadScene(\"Lv1_PlayAgain\")})\r\n                .start();\r\n            }, 2);\r\n        }\r\n\r\n    }\r\n\r\n\r\n    public loseLv2(): void {\r\n        cc.tween(this.Overlay)\r\n        .to(0.5, {opacity: 255}, {easing: cc.easing.smooth})\r\n        .call(() => {cc.director.loadScene(\"Lv2\")})\r\n        .start();\r\n    }\r\n\r\n\r\n    public winGame(): void {\r\n        Constants.isWinGame = true;\r\n        window.currentLv = 2\r\n        this.NodesController.Spine_Character.setAnimation(0, \"result_win\", true);\r\n        this.AudioManager.playSound(Constants.SoundTrack.winSound);\r\n\r\n        this.scheduleOnce(() => {cc.director.loadScene(\"Lv2\")}, 2);\r\n    }\r\n\r\n\r\n    private unactiveHint(): void {\r\n        this.handleIronSourcePlaySound();\r\n        this.isHint = true;\r\n        this.NodesController.Hint.active = false;\r\n    }\r\n\r\n\r\n    protected update(dt: number): void {\r\n        Constants.isHit && !this.isHit && this.characterHit();\r\n        window.isStartDraw && !this.isHint && this.unactiveHint();\r\n        window.stopDrawSound && this.AudioManager.stopSound(Constants.SoundTrack.drawSound);\r\n\r\n        this.handleMuteSoundIronSource();\r\n    }\r\n}\r\n"]}