{"version":3,"sources":["assets\\Script\\Controller\\TouchAreaController.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import { Ultils } from \"../Data/Ultils\";\r\nimport { Constants } from \"../Data/constants\";\r\nimport AudioManager from \"../Plugin/AudioManager\";\r\nimport { GameController } from \"./GameController\";\r\nimport GamePlay from \"./GamePlay\";\r\nimport NodesContainer from \"./NodesContainer\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport class TouchAreaController extends cc.Component {\r\n\r\n  // Component\r\n  @property(AudioManager)\r\n  AudioManager: AudioManager = null;\r\n  @property(GameController)\r\n  GameController: GameController = null;\r\n  @property(NodesContainer)\r\n  NodesContainer: NodesContainer = null;\r\n  @property(GamePlay)\r\n  GamePlay: GamePlay = null;\r\n\r\n\r\n  // node\r\n\r\n\r\n  // state\r\n\r\n\r\n  protected onLoad() {\r\n\r\n  }\r\n\r\n\r\n  protected start() {\r\n    this.registerEvent();\r\n  }\r\n\r\n\r\n  private registerEvent(): void {\r\n    this.NodesContainer.UI_button_revenge.on(cc.Node.EventType.TOUCH_START, this.btnTouchStart, this);\r\n    this.NodesContainer.item_Dress_btn.on(cc.Node.EventType.TOUCH_START, this.btnDressTouchStart, this);\r\n\r\n    this.NodesContainer.background_1.on(cc.Node.EventType.TOUCH_START, this.handleIronSourcePlaySound, this);\r\n  }\r\n\r\n\r\n  private btnTouchStart(): void {\r\n    if (!Constants.isCanClick || Constants.isChooseRevenge) return;\r\n    this.handleIronSourcePlaySound();\r\n    this.AudioManager.playSound(Constants.SoundTrack.clickSound);\r\n    this.NodesContainer.buttons.active = false;\r\n    this.NodesContainer.scene1.active = false;\r\n    this.NodesContainer.GamePlay.getComponent(cc.Animation).play(\"GamePlay_ShowScene3\");\r\n    this.scheduleOnce(() => {Constants.isChooseRevenge = true}, 2)\r\n  }\r\n\r\n\r\n  private btnDressTouchStart(): void {\r\n    if(!Constants.isChooseRevenge || Constants.isChooseDress) return;\r\n    Constants.isChooseDress = true;\r\n    this.AudioManager.playSound(Constants.SoundTrack.clickSound);\r\n    this.NodesContainer.doll_dress.active = true;\r\n    this.NodesContainer.doll_dress_default.active = false;\r\n    this.NodesContainer.hand_2.active = false;\r\n    this.NodesContainer.effect_blink_Doll.resetSystem();\r\n    this.NodesContainer.effect_heart.resetSystem();\r\n    this.AudioManager.playSound(Constants.SoundTrack.woaAnimeSound);\r\n    this.scheduleOnce(() => {this.showCTA()}, 1.5);\r\n  }\r\n\r\n\r\n  private showCTA(): void {\r\n    this.NodesContainer.CTA.active = true;\r\n    this.NodesContainer.CTA_btn.on(cc.Node.EventType.TOUCH_START, this.GameController.installHandle, this);\r\n\r\n    // applovin & mtg\r\n    // this.NodesContainer.CTA_overlay.on(cc.Node.EventType.TOUCH_START, this.GameController.installHandle, this);\r\n  }\r\n\r\n\r\n  public handleIronSourcePlaySound(): void {\r\n    if (Constants.ironSource.isPlayBgSound) {\r\n      return;\r\n    }\r\n\r\n    if (Constants.ironSource.SoundState) {\r\n      Constants.ironSource.isPlayBgSound = true;\r\n      this.AudioManager.playSound(Constants.SoundTrack.bgSound);\r\n    }\r\n  }\r\n\r\n\r\n  private handleMuteSoundIronSource(): void {\r\n    Constants.ironSource.State = parseInt(localStorage.getItem(\"cocosSoundState\"), 10)\r\n\r\n    if (Constants.ironSource.State) {\r\n      if (Constants.ironSource.State === 1 && !Constants.ironSource.SoundState && !Constants.ironSource.isEndGame) {\r\n        Constants.ironSource.SoundState = true;\r\n        this.AudioManager.playSound(Constants.SoundTrack.bgSound);\r\n      }\r\n\r\n      if (Constants.ironSource.State === 2 && Constants.ironSource.SoundState) {\r\n        Constants.ironSource.SoundState = false;\r\n        this.AudioManager.stopAllSound();\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n  protected update(dt: number): void {\r\n    this.handleMuteSoundIronSource();\r\n  }\r\n}\r\n"]}