{"version":3,"sources":["assets\\Script\\Controller\\TouchAreaController.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["\r\nimport { Constants } from \"../Data/constants\";\r\nimport AudioManager from \"../Plugin/AudioManager\";\r\nimport { GameController } from \"./GameController\";\r\nimport GamePlay from \"./GamePlay\";\r\nimport NodesContainer from \"./NodesContainer\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport class TouchAreaController extends cc.Component {\r\n\r\n  // Component\r\n  @property(NodesContainer)\r\n  NodesContainer: NodesContainer = null;\r\n  @property(AudioManager)\r\n  AudioManager: AudioManager = null;\r\n  @property(GameController)\r\n  GameController: GameController = null;\r\n  @property(GamePlay)\r\n  GamePlay: GamePlay = null;\r\n\r\n\r\n  protected onLoad() {\r\n\r\n  }\r\n\r\n\r\n  protected start() {\r\n    this.registerEvent();\r\n  }\r\n\r\n\r\n  private registerEvent(): void {\r\n    for (let index = 0; index < this.NodesContainer.Dolls.length; index++) {\r\n      const doll = this.NodesContainer.Dolls[index];\r\n      doll.on(cc.Node.EventType.TOUCH_START, this.dollClick, this);\r\n    }\r\n\r\n    // mtg & applovin\r\n    // this.NodesContainer.hideMask.on(cc.Node.EventType.TOUCH_START, this.hideMaskClick, this);\r\n  }\r\n\r\n\r\n  private dollClick(e: cc.Event.EventTouch): void {\r\n    if (Constants.step === 2) this.GameController.installHandle();\r\n    if (!Constants.isCanTouch) return;\r\n\r\n    Constants.isCanTouch = false;\r\n\r\n    this.AudioManager.playSound(Constants.SoundTrack.pickItemSound)\r\n\r\n\r\n    if (Constants.step === 1 && e.target.name === \"doll2\") {\r\n      Constants.step += 1;\r\n      this.NodesContainer.Hand.active = false;\r\n      this.GamePlay.playGreatSound();\r\n      this.NodesContainer.Lv1_Hint.color = cc.Color.WHITE;\r\n      this.GamePlay.switchToLv2();\r\n      this.NodesContainer.FX_Blink.resetSystem();\r\n    }\r\n\r\n    if(Constants.step === 1) this.scheduleOnce(() => { Constants.isCanTouch = true }, 0.3);\r\n  }\r\n\r\n\r\n  public handleIronSourcePlaySound(): void {\r\n    if (Constants.ironSource.isPlayBgSound) {\r\n      return;\r\n    }\r\n\r\n    Constants.ironSource.isPlayBgSound = true;\r\n\r\n    if (Constants.ironSource.SoundState) {\r\n      this.AudioManager.playSound(Constants.SoundTrack.bgSound);\r\n    }\r\n  }\r\n\r\n\r\n  // protected update(dt: number): void {\r\n  //     this.handleMuteSoundIronSource();\r\n  // }\r\n}\r\n"]}