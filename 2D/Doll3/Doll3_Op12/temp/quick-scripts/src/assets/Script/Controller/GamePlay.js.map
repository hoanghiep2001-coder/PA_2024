{"version":3,"sources":["assets\\Script\\Controller\\GamePlay.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import { Constants } from \"../Data/constants\";\r\nimport AudioManager from \"../Plugin/AudioManager\";\r\nimport { GameController } from \"./GameController\";\r\nimport NodesContainer from \"./NodesContainer\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class GamePlay extends cc.Component {\r\n\r\n  @property(AudioManager)\r\n  AudioManager: AudioManager = null;\r\n  @property(NodesContainer)\r\n  NodesContainer: NodesContainer = null;\r\n  @property(GameController)\r\n  GameController: GameController = null;\r\n\r\n  dollPrecent: number = 0;\r\n  opponentPrecent: number = 0;\r\n\r\n\r\n  protected onLoad(): void {\r\n\r\n  }\r\n\r\n\r\n  protected start(): void {\r\n    // this.AudioManager.playSound(Constants.SoundTrack.bgSound);\r\n    this.handleGamePlay();\r\n  }\r\n\r\n\r\n  private handleGamePlay(): void {\r\n    // this.activeBlinkAnimForBtnStart();\r\n  }\r\n\r\n\r\n  private activeBlinkAnimForBtnStart(): void {\r\n    // cc.tween(this.NodesContainer.Btn_Start)\r\n    //   .repeatForever(\r\n    //     cc.tween(this.NodesContainer.Btn_Start)\r\n    //       .to(0.5, { scale: 0.3 })\r\n    //       .to(0.5, { scale: 0.32 }, { easing: 'elasticOut' })\r\n    //   ).start();\r\n  }\r\n\r\n\r\n  public playGreatSound(): void {\r\n    this.AudioManager.playSound(Constants.SoundTrack.woaAnimeSound)\r\n    let random = Math.floor(Math.random() * 4) + 1;\r\n    switch (random) {\r\n      case 1:\r\n        this.AudioManager.playSound(Constants.SoundTrack.Fx_Bonus1)\r\n        this.AudioManager.Fx_Bonus1.volume = 0.5;\r\n        break;\r\n      case 2:\r\n        this.AudioManager.playSound(Constants.SoundTrack.Fx_Bonus2)\r\n        this.AudioManager.Fx_Bonus1.volume = 0.5;\r\n        break;\r\n      case 3:\r\n        this.AudioManager.playSound(Constants.SoundTrack.Fx_Bonus3)\r\n        this.AudioManager.Fx_Bonus1.volume = 0.5;\r\n        break;\r\n      case 4:\r\n        this.AudioManager.playSound(Constants.SoundTrack.Fx_Bonus4)\r\n        this.AudioManager.Fx_Bonus1.volume = 0.5;\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n\r\n  public switchToLv2(): void {\r\n    this.scheduleOnce(() => {\r\n      cc.tween(this.NodesContainer.Overlay)\r\n      .to(1, {opacity: 150})\r\n      .call(() => {\r\n        this.switchDollToStep2();\r\n        this.NodesContainer.Hand.active = true;\r\n      })\r\n      .to(1, {opacity: 0})\r\n      .start();\r\n    }, 1.5) \r\n  }\r\n\r\n\r\n  private switchDollToStep2(): void {\r\n    this.NodesContainer.Dolls[0].active = false;\r\n    this.NodesContainer.Dolls[1].active = false;\r\n    this.NodesContainer.Dolls[2].active = false;\r\n    \r\n    this.NodesContainer.Dolls.splice(0, 3);\r\n    \r\n    this.NodesContainer.Dolls[0].active = true;\r\n    this.NodesContainer.Dolls[1].active = true;\r\n    this.NodesContainer.Dolls[2].active = true;\r\n\r\n    for (let index = 0; index < this.NodesContainer.Dolls.length; index++) {\r\n      const doll = this.NodesContainer.Dolls[index];\r\n      cc.tween(doll)\r\n      .to(1, {scale: 0.45, opacity: 255}, {easing: 'elasticInOut'})\r\n      .call(() => {doll.getComponent(cc.Animation).play()})\r\n      .start();\r\n    }\r\n  }\r\n\r\n\r\n  public handleIronSourcePlaySound(): void {\r\n    if (Constants.ironSource.isPlayBgSound) {\r\n      return;\r\n    }\r\n\r\n    if (Constants.ironSource.SoundState) {\r\n      Constants.ironSource.isPlayBgSound = true;\r\n      this.AudioManager.playSound(Constants.SoundTrack.bgSound);\r\n    }\r\n\r\n  }\r\n\r\n\r\n  private handleMuteSoundIronSource(): void {\r\n    Constants.ironSource.State = parseInt(localStorage.getItem(\"cocosSoundState\"), 10)\r\n\r\n    if (Constants.ironSource.State) {\r\n      if (Constants.ironSource.State === 1 && !Constants.ironSource.SoundState && !Constants.ironSource.isEndGame) {\r\n        Constants.ironSource.SoundState = true;\r\n        this.AudioManager.playSound(Constants.SoundTrack.bgSound);\r\n      }\r\n\r\n      if (Constants.ironSource.State === 2 && Constants.ironSource.SoundState) {\r\n        Constants.ironSource.SoundState = false;\r\n        this.AudioManager.stopAllSound();\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n  protected update(dt: number): void {\r\n      // this.handleMuteSoundIronSource();\r\n  }\r\n\r\n}\r\n"]}