{"version":3,"sources":["assets\\Script\\Controller\\TouchAreaController.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AACA,+CAA8C;AAC9C,uDAAkD;AAClD,mDAAkD;AAClD,uCAAkC;AAClC,2CAAsC;AACtC,iDAA4C;AAEtC,IAAA,KAAwB,EAAE,CAAC,UAAU,EAAnC,OAAO,aAAA,EAAE,QAAQ,cAAkB,CAAC;AAG5C;IAAyC,uCAAY;IAArD;QAAA,qEAsDC;QArDC,YAAY;QAEZ,gBAAU,GAAe,IAAI,CAAC;QAE9B,mBAAa,GAAkB,IAAI,CAAC;QAEpC,kBAAY,GAAiB,IAAI,CAAC;QAElC,oBAAc,GAAmB,IAAI,CAAC;QAEtC,cAAQ,GAAa,IAAI,CAAC;QAG1B,QAAQ;QACR,aAAO,GAAY,KAAK,CAAC;;IAuC3B,CAAC;IApCW,oCAAM,GAAhB;IAEA,CAAC;IAGS,mCAAK,GAAf;QACE,wBAAwB;QACxB,IAAI,CAAC,aAAa,EAAE,CAAC;IACvB,CAAC;IAGO,2CAAa,GAArB;QACI,IAAI,CAAC,aAAa,CAAC,UAAU,CAAC,EAAE,CAAC,EAAE,CAAC,IAAI,CAAC,SAAS,CAAC,WAAW,EAAE,IAAI,CAAC,mBAAmB,EAAE,IAAI,CAAC,CAAC;QAChG,IAAI,CAAC,aAAa,CAAC,iBAAiB,CAAC,EAAE,CAAC,EAAE,CAAC,IAAI,CAAC,SAAS,CAAC,WAAW,EAAE,IAAI,CAAC,mBAAmB,EAAE,IAAI,CAAC,CAAC;QAEvG,iBAAiB;QACjB,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,EAAE,CAAC,EAAE,CAAC,IAAI,CAAC,SAAS,CAAC,WAAW,EAAE,IAAI,CAAC,kBAAkB,EAAE,IAAI,CAAC,CAAC;IACjG,CAAC;IAGO,gDAAkB,GAA1B,UAA2B,CAAM;QAC/B,IAAG,qBAAS,CAAC,SAAS,EAAE;YACtB,IAAI,CAAC,cAAc,CAAC,aAAa,EAAE,CAAC;YACpC,OAAO;SACR;IACH,CAAC;IAGO,iDAAmB,GAA3B;QACE,IAAG,qBAAS,CAAC,SAAS,EAAE;YACtB,IAAI,CAAC,cAAc,CAAC,aAAa,EAAE,CAAC;YACpC,OAAO;SACR;QAED,CAAC,qBAAS,CAAC,WAAW,IAAI,IAAI,CAAC,QAAQ,CAAC,WAAW,EAAE,CAAC;IACxD,CAAC;IAlDD;QADC,QAAQ,CAAC,oBAAU,CAAC;2DACS;IAE9B;QADC,QAAQ,CAAC,uBAAa,CAAC;8DACY;IAEpC;QADC,QAAQ,CAAC,sBAAY,CAAC;6DACW;IAElC;QADC,QAAQ,CAAC,+BAAc,CAAC;+DACa;IAEtC;QADC,QAAQ,CAAC,kBAAQ,CAAC;yDACO;IAXf,mBAAmB;QAD/B,OAAO;OACK,mBAAmB,CAsD/B;IAAD,0BAAC;CAtDD,AAsDC,CAtDwC,EAAE,CAAC,SAAS,GAsDpD;AAtDY,kDAAmB","file":"","sourceRoot":"/","sourcesContent":["import { SpineAnims } from \"../Data/Anims\";\r\nimport { Constants } from \"../Data/constants\";\r\nimport AudioManager from \"../Plugin/AudioManager\";\r\nimport { GameController } from \"./GameController\";\r\nimport GamePlay from \"./GamePlay\";\r\nimport IronSource from \"./IronSource\";\r\nimport NodeContainer from \"./NodeContanier\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport class TouchAreaController extends cc.Component {\r\n  // Component\r\n  @property(IronSource)\r\n  IronSource: IronSource = null;\r\n  @property(NodeContainer)\r\n  NodeContainer: NodeContainer = null;\r\n  @property(AudioManager)\r\n  AudioManager: AudioManager = null;\r\n  @property(GameController)\r\n  GameController: GameController = null;\r\n  @property(GamePlay)\r\n  GamePlay: GamePlay = null;\r\n\r\n\r\n  // state\r\n  isTouch: boolean = false;\r\n\r\n\r\n  protected onLoad() {\r\n\r\n  }\r\n\r\n\r\n  protected start() {\r\n    // this.initVarialbes();\r\n    this.registerEvent();\r\n  }\r\n\r\n\r\n  private registerEvent(): void {\r\n      this.NodeContainer.btn_Active.on(cc.Node.EventType.TOUCH_START, this.btnActiveTouchStart, this);\r\n      this.NodeContainer.Step1_btn_KimTiem.on(cc.Node.EventType.TOUCH_START, this.btnActiveTouchStart, this);\r\n\r\n      // mtg & applovin\r\n      this.NodeContainer.HideMask.on(cc.Node.EventType.TOUCH_START, this.hideMaskTouchStart, this);\r\n  } \r\n\r\n\r\n  private hideMaskTouchStart(e: any): void {\r\n    if(Constants.isToStore) {\r\n      this.GameController.installHandle();\r\n      return;\r\n    }\r\n  }\r\n\r\n\r\n  private btnActiveTouchStart(): void {\r\n    if(Constants.isToStore) {\r\n      this.GameController.installHandle();\r\n      return;\r\n    }\r\n\r\n    !Constants.isDoneStep1 && this.GamePlay.handleStep1();\r\n  }\r\n}\r\n"]}