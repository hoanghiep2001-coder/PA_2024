{"version":3,"sources":["assets\\Script\\Controller\\TouchAreaController.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["\r\nimport { Constants } from \"../Data/constants\";\r\nimport AudioManager from \"../Plugin/AudioManager\";\r\nimport { GameController } from \"./GameController\";\r\nimport GamePlay from \"./GamePlay\";\r\nimport NodesContainer from \"./NodesContainer\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport class TouchAreaController extends cc.Component {\r\n\r\n  // Component\r\n  @property(NodesContainer)\r\n  NodesContainer: NodesContainer = null;\r\n  @property(AudioManager)\r\n  AudioManager: AudioManager = null;\r\n  @property(GameController)\r\n  GameController: GameController = null;\r\n  @property(GamePlay)\r\n  GamePlay: GamePlay = null;\r\n\r\n\r\n  protected onLoad() {\r\n\r\n  }\r\n\r\n\r\n  protected start() {\r\n    this.registerEvent();\r\n  }\r\n\r\n\r\n  private registerEvent(): void {\r\n    this.NodesContainer.Button_1.on(cc.Node.EventType.TOUCH_START, this.handleClick, this);\r\n    this.NodesContainer.Button_2.on(cc.Node.EventType.TOUCH_START, this.handleClick, this);\r\n\r\n    // mtg & applovin\r\n    this.NodesContainer.hideMask.on(cc.Node.EventType.TOUCH_START, this.hideMaskClick, this);\r\n  }\r\n\r\n\r\n  private hideMaskClick(): void {\r\n    // iroon source\r\n    // this.handleIronSourcePlaySound();\r\n    // ----------------------\r\n    \r\n    // mtg & applovin\r\n    Constants.isDresUp && this.GameController.installHandle();\r\n  }\r\n\r\n\r\n  private handleClick(e: any): void {\r\n    if(!Constants.isCanTouch) {\r\n      return;\r\n    }\r\n\r\n    // ironsource\r\n    // this.handleIronSourcePlaySound();\r\n    // --------------\r\n\r\n    let nodeClick: string = e.target._name;\r\n    Constants.isDresUp && this.GameController.installHandle();\r\n    !Constants.isDresUp && this.handleDressUp(nodeClick);\r\n    \r\n  }\r\n\r\n\r\n  private handleDressUp(nodeClick: string): void {\r\n    Constants.isCanTouch = false;\r\n    Constants.isDresUp = true;\r\n    this.AudioManager.stopAllSoundExceptBgSound();\r\n    this.AudioManager.playSound(Constants.SoundTrack.pickItemSound);\r\n    this.AudioManager.playSound(Constants.SoundTrack.waoGameSound);\r\n    this.NodesContainer.Effect_Heart.resetSystem();\r\n    this.NodesContainer.Effect_Blink.resetSystem();\r\n    this.NodesContainer.Doll_DressDefault.active = false;\r\n    this.NodesContainer.Hand.active = false;\r\n    nodeClick === \"Btn_1\" ? this.NodesContainer.Doll_Dress1.active = true : this.NodesContainer.Doll_Dress2.active = true;\r\n\r\n    this.scheduleOnce(() => {\r\n      this.AudioManager.playSound(Constants.SoundTrack.swtichItemSound);\r\n      this.GamePlay.getComponent(cc.Animation).play(\"GamePlay_SwitchItem\");\r\n      Constants.isCanTouch = true;\r\n      this.NodesContainer.Hand.active = true;\r\n    }, 1);\r\n  }\r\n\r\n\r\n  public handleIronSourcePlaySound(): void {\r\n    if (Constants.ironSource.isPlayBgSound) {\r\n      return;\r\n    }\r\n\r\n    Constants.ironSource.isPlayBgSound = true;\r\n\r\n    if (Constants.ironSource.SoundState) {\r\n      this.AudioManager.playSound(Constants.SoundTrack.bgSound);\r\n    }\r\n  }\r\n\r\n\r\n  private handleMuteSoundIronSource(): void {\r\n    Constants.ironSource.State = parseInt(localStorage.getItem(\"cocosSoundState\"), 10)\r\n\r\n    if (Constants.ironSource.State) {\r\n      if (Constants.ironSource.State === 1 && !Constants.ironSource.SoundState && !Constants.ironSource.isEndGame) {\r\n        Constants.ironSource.SoundState = true;\r\n        this.AudioManager.playSound(Constants.SoundTrack.bgSound);\r\n      }\r\n\r\n      if (Constants.ironSource.State === 2 && Constants.ironSource.SoundState) {\r\n        Constants.ironSource.SoundState = false;\r\n        this.AudioManager.stopAllSound();\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n  // protected update(dt: number): void {\r\n  //     this.handleMuteSoundIronSource();\r\n  // }\r\n}\r\n"]}