{"version":3,"sources":["assets\\Script\\Controller\\GamePlay.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AACA,uDAAkD;AAClD,mDAAkD;AAE5C,IAAA,KAAwB,EAAE,CAAC,UAAU,EAAnC,OAAO,aAAA,EAAE,QAAQ,cAAkB,CAAC;AAG5C;IAAsC,4BAAY;IAAlD;QAAA,qEAoEC;QAjEC,kBAAY,GAAiB,IAAI,CAAC;QAElC,oBAAc,GAAmB,IAAI,CAAC;QAEtC,YAAY;QAEZ,aAAO,GAAa,IAAI,CAAC;QAEzB,aAAO,GAAa,IAAI,CAAC;QAEzB,eAAS,GAAY,IAAI,CAAC;QAE1B,cAAQ,GAAY,IAAI,CAAC;;IAqD3B,CAAC;IAnDW,yBAAM,GAAhB;QACE,kDAAkD;QAClD,4DAA4D;QAC5D,mCAAmC;QACnC,kDAAkD;QAClD,4CAA4C;QAE5C,IAAI,CAAC,QAAQ,EAAE,CAAC;IAClB,CAAC;IAAA,CAAC;IAGM,2BAAQ,GAAhB;QACE,IAAI,CAAC,SAAS,EAAE,CAAC;QACjB,IAAI,CAAC,SAAS,EAAE,CAAC;IACnB,CAAC;IAAA,CAAC;IAGM,4BAAS,GAAjB;QACE,IAAI,IAAI,GAAG,IAAI,IAAI,EAAE,CAAC;QACtB,IAAI,KAAK,GAAG,IAAI,CAAC,QAAQ,EAAE,CAAC;QAC5B,IAAI,OAAO,GAAG,IAAI,CAAC,UAAU,EAAE,CAAC;QAChC,IAAI,MAAM,GAAc,KAAK,SAAI,OAAS,CAAC;QAC3C,IAAG,OAAO,GAAG,EAAE,EAAE;YACf,MAAM,GAAM,KAAK,UAAK,OAAS,CAAC;SACjC;QAAA,CAAC;QACF,IAAI,CAAC,OAAO,CAAC,MAAM,GAAG,MAAM,CAAC;IAC/B,CAAC;IAGO,4BAAS,GAAjB;QACE,IAAI,CAAC,OAAO,CAAC,MAAM,GAAG,aAAa,CAAC;QACpC,IAAI,CAAC,OAAO,CAAC,QAAQ,GAAG,EAAE,CAAA;IAC5B,CAAC;IAGS,wBAAK,GAAf;QACE,IAAI,CAAC,cAAc,EAAE,CAAC;QACtB,6DAA6D;IAC/D,CAAC;IAGO,iCAAc,GAAtB;IAEA,CAAC;IAIS,yBAAM,GAAhB,UAAiB,EAAU;IAE3B,CAAC;IA/DD;QADC,QAAQ,CAAC,sBAAY,CAAC;kDACW;IAElC;QADC,QAAQ,CAAC,+BAAc,CAAC;oDACa;IAItC;QADC,QAAQ,CAAC,EAAE,CAAC,KAAK,CAAC;6CACM;IAEzB;QADC,QAAQ,CAAC,EAAE,CAAC,KAAK,CAAC;6CACM;IAEzB;QADC,QAAQ,CAAC,EAAE,CAAC,IAAI,CAAC;+CACQ;IAE1B;QADC,QAAQ,CAAC,EAAE,CAAC,IAAI,CAAC;8CACO;IAfN,QAAQ;QAD5B,OAAO;OACa,QAAQ,CAoE5B;IAAD,eAAC;CApED,AAoEC,CApEqC,EAAE,CAAC,SAAS,GAoEjD;kBApEoB,QAAQ","file":"","sourceRoot":"/","sourcesContent":["import { Constants } from \"../Data/constants\";\r\nimport AudioManager from \"../Plugin/AudioManager\";\r\nimport { GameController } from \"./GameController\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class GamePlay extends cc.Component {\r\n\r\n  @property(AudioManager)\r\n  AudioManager: AudioManager = null;\r\n  @property(GameController)\r\n  GameController: GameController = null;\r\n\r\n  // Container\r\n  @property(cc.Label)\r\n  UI_time: cc.Label = null;\r\n  @property(cc.Label)\r\n  UI_name: cc.Label = null;\r\n  @property(cc.Node)\r\n  UI_avatar: cc.Node = null;\r\n  @property(cc.Node)\r\n  UI_icons: cc.Node = null;\r\n\r\n  protected onLoad(): void {\r\n    // cc.director.getPhysicsManager().enabled = true;\r\n    // let collisionManager = cc.director.getCollisionManager();\r\n    // collisionManager.enabled = true;\r\n    // collisionManager.enabledDrawBoundingBox = true;\r\n    // collisionManager.enabledDebugDraw = true;\r\n\r\n    this.initGame();\r\n  };\r\n\r\n\r\n  private initGame(): void {\r\n    this.setupDate();\r\n    this.setupName();\r\n  };\r\n\r\n\r\n  private setupDate(): void {\r\n    let date = new Date();\r\n    let hours = date.getHours();\r\n    let minutes = date.getMinutes();\r\n    let result: string = `${hours}:${minutes}`;\r\n    if(minutes < 10) {\r\n      result = `${hours}:0${minutes}`;\r\n    };\r\n    this.UI_time.string = result;\r\n  }\r\n\r\n\r\n  private setupName(): void {\r\n    this.UI_name.string = `SANTA CLAUS`;\r\n    this.UI_name.spacingX = 10\r\n  }\r\n\r\n\r\n  protected start(): void {\r\n    this.handleGamePlay();\r\n    // this.AudioManager.playSound(Constants.SoundTrack.bgSound);\r\n  }\r\n\r\n\r\n  private handleGamePlay(): void {\r\n \r\n  }\r\n\r\n\r\n\r\n  protected update(dt: number): void {\r\n\r\n  }\r\n\r\n}\r\n"]}