{"version":3,"sources":["assets\\Script\\Controller\\TouchAreaController.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AACA,+CAA8C;AAC9C,uDAAkD;AAClD,mDAAkD;AAClD,uCAAkC;AAClC,mDAA8C;AAExC,IAAA,KAAwB,EAAE,CAAC,UAAU,EAAnC,OAAO,aAAA,EAAE,QAAQ,cAAkB,CAAC;AAG5C;IAAyC,uCAAY;IAArD;QAAA,qEAuDC;QArDC,YAAY;QAEZ,oBAAc,GAAmB,IAAI,CAAC;QAEtC,kBAAY,GAAiB,IAAI,CAAC;QAElC,oBAAc,GAAmB,IAAI,CAAC;QAEtC,cAAQ,GAAa,IAAI,CAAC;;QA0C1B,uCAAuC;QACvC,wCAAwC;QACxC,IAAI;IACN,CAAC;IA1CW,oCAAM,GAAhB;IAEA,CAAC;IAGS,mCAAK,GAAf;QACE,IAAI,CAAC,aAAa,EAAE,CAAC;IACvB,CAAC;IAGO,2CAAa,GAArB;QAAA,iBAQC;QAPC,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,EAAE,CAAC,EAAE,CAAC,IAAI,CAAC,SAAS,CAAC,WAAW,EAAE;YAC3D,KAAI,CAAC,aAAa,EAAE,CAAC;QACzB,CAAC,EAAE,IAAI,CAAC,CAAC;QAET,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,EAAE,CAAC,EAAE,CAAC,IAAI,CAAC,SAAS,CAAC,WAAW,EAAE;YAC7D,KAAI,CAAC,cAAc,CAAC,aAAa,EAAE,CAAC;QACxC,CAAC,EAAE,IAAI,CAAC,CAAC;IACT,CAAC;IAGO,2CAAa,GAArB;QACE,iBAAiB;QACjB,IAAI,CAAC,cAAc,CAAC,aAAa,EAAE,CAAC;IACtC,CAAC;IAGM,uDAAyB,GAAhC;QACE,IAAI,qBAAS,CAAC,UAAU,CAAC,aAAa,EAAE;YACtC,OAAO;SACR;QAED,IAAI,qBAAS,CAAC,UAAU,CAAC,UAAU,EAAE;YACnC,qBAAS,CAAC,UAAU,CAAC,aAAa,GAAG,IAAI,CAAC;YAC1C,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,qBAAS,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC;SAC3D;IACH,CAAC;IA7CD;QADC,QAAQ,CAAC,wBAAc,CAAC;+DACa;IAEtC;QADC,QAAQ,CAAC,sBAAY,CAAC;6DACW;IAElC;QADC,QAAQ,CAAC,+BAAc,CAAC;+DACa;IAEtC;QADC,QAAQ,CAAC,kBAAQ,CAAC;yDACO;IAVf,mBAAmB;QAD/B,OAAO;OACK,mBAAmB,CAuD/B;IAAD,0BAAC;CAvDD,AAuDC,CAvDwC,EAAE,CAAC,SAAS,GAuDpD;AAvDY,kDAAmB","file":"","sourceRoot":"/","sourcesContent":["\r\nimport { Constants } from \"../Data/constants\";\r\nimport AudioManager from \"../Plugin/AudioManager\";\r\nimport { GameController } from \"./GameController\";\r\nimport GamePlay from \"./GamePlay\";\r\nimport NodesContainer from \"./NodesContainer\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport class TouchAreaController extends cc.Component {\r\n\r\n  // Component\r\n  @property(NodesContainer)\r\n  NodesContainer: NodesContainer = null;\r\n  @property(AudioManager)\r\n  AudioManager: AudioManager = null;\r\n  @property(GameController)\r\n  GameController: GameController = null;\r\n  @property(GamePlay)\r\n  GamePlay: GamePlay = null;\r\n\r\n\r\n  protected onLoad() {\r\n\r\n  }\r\n\r\n\r\n  protected start() {\r\n    this.registerEvent();\r\n  }\r\n\r\n\r\n  private registerEvent(): void {\r\n    this.NodesContainer.hideMask.on(cc.Node.EventType.TOUCH_START, () => {\r\n        this.hideMaskTouch();\r\n    }, this);\r\n\r\n    this.NodesContainer.btn_Play.on(cc.Node.EventType.TOUCH_START, () => {\r\n      this.GameController.installHandle();\r\n  }, this);\r\n  }\r\n\r\n\r\n  private hideMaskTouch(): void {\r\n    // mtg & applovin\r\n    this.GameController.installHandle();\r\n  }\r\n\r\n\r\n  public handleIronSourcePlaySound(): void {\r\n    if (Constants.ironSource.isPlayBgSound) {\r\n      return;\r\n    }\r\n\r\n    if (Constants.ironSource.SoundState) {\r\n      Constants.ironSource.isPlayBgSound = true;\r\n      this.AudioManager.playSound(Constants.SoundTrack.bgSound);\r\n    }\r\n  }\r\n\r\n\r\n  // protected update(dt: number): void {\r\n  //     this.handleMuteSoundIronSource();\r\n  // }\r\n}\r\n"]}