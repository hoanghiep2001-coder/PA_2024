{"version":3,"sources":["assets\\Script\\Controller\\GamePlay.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA,+CAA8C;AAC9C,uDAAkD;AAClD,mDAAkD;AAClD,iDAA4C;AAEtC,IAAA,KAAwB,EAAE,CAAC,UAAU,EAAnC,OAAO,aAAA,EAAE,QAAQ,cAAkB,CAAC;AAG5C;IAAsC,4BAAY;IAAlD;QAAA,qEA6DC;QA3DC,kBAAY,GAAiB,IAAI,CAAC;QAElC,oBAAc,GAAmB,IAAI,CAAC;QAEtC,mBAAa,GAAkB,IAAI,CAAC;QAGpC,QAAQ;QACR,YAAM,GAAW,GAAG,CAAC;;QA+CrB,uCAAuC;QAEvC,IAAI;IAEN,CAAC;IAhDW,yBAAM,GAAhB;IAEA,CAAC;IAGS,wBAAK,GAAf;QACE,IAAI,CAAC,cAAc,EAAE,CAAC;QACtB,6DAA6D;IAC/D,CAAC;IAGO,iCAAc,GAAtB;QAAA,iBAeC;QAdC,IAAI,CAAC,YAAY,CAAC;YAChB,KAAI,CAAC,YAAY,CAAC,SAAS,CAAC,qBAAS,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC;YAC7D,KAAI,CAAC,YAAY,CAAC,SAAS,CAAC,qBAAS,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC;QAC5D,CAAC,EAAE,GAAG,GAAG,IAAI,CAAC,MAAM,CAAC,CAAA;QACrB,IAAI,CAAC,YAAY,CAAC,cAAQ,KAAI,CAAC,aAAa,CAAC,WAAW,CAAC,YAAY,CAAC,EAAE,CAAC,SAAS,CAAC,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,EAAE,GAAG,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC;QAChI,IAAI,CAAC,YAAY,CAAC,cAAQ,KAAI,CAAC,aAAa,CAAC,SAAS,CAAC,MAAM,GAAG,IAAI,CAAC,CAAC,CAAC,EAAE,GAAG,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC;QAC5F,IAAI,CAAC,YAAY,CAAC;YAChB,KAAI,CAAC,aAAa,CAAC,SAAS,CAAC,YAAY,CAAC,EAAE,CAAC,SAAS,CAAC,CAAC,IAAI,EAAE,CAAC;YAC/D,KAAI,CAAC,aAAa,CAAC,SAAS,CAAC,KAAK,GAAG,CAAC,CAAC;YACvC,KAAI,CAAC,aAAa,CAAC,SAAS,CAAC,YAAY,CAAC,EAAE,CAAC,SAAS,CAAC,CAAC,IAAI,CAAC,oBAAoB,CAAC,CAAC;YACnF,KAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,WAAW,EAAE,CAAC;QAC5C,CAAC,EAAE,GAAG,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC;QACtB,IAAI,CAAC,YAAY,CAAC,cAAQ,KAAI,CAAC,QAAQ,EAAE,CAAC,CAAC,qBAAS,CAAC,UAAU,GAAG,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,CAAA;QAC3F,IAAI,CAAC,YAAY,CAAC,cAAQ,KAAI,CAAC,YAAY,CAAC,SAAS,CAAC,qBAAS,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC;IAC5G,CAAC;IAGO,2BAAQ,GAAhB;QAAA,iBAYC;QAXC,EAAE,CAAC,KAAK,CAAC,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC;aAC9B,EAAE,CAAC,GAAG,EAAE,EAAE,OAAO,EAAE,GAAG,EAAE,CAAC;aACzB,IAAI,CAAC;YACJ,EAAE,CAAC,KAAK,CAAC,KAAI,CAAC,aAAa,CAAC,IAAI,CAAC;iBAC9B,aAAa,CACZ,EAAE,CAAC,KAAK,CAAC,KAAI,CAAC,aAAa,CAAC,IAAI,CAAC;iBAC9B,EAAE,CAAC,GAAG,EAAE,EAAE,KAAK,EAAE,GAAG,EAAE,CAAC;iBACvB,EAAE,CAAC,GAAG,EAAE,EAAE,KAAK,EAAE,IAAI,EAAE,EAAE,EAAE,MAAM,EAAE,YAAY,EAAE,CAAC,CACtD,CAAC,KAAK,EAAE,CAAC;QACd,CAAC,CAAC;aACD,KAAK,EAAE,CAAC;IACb,CAAC;IApDD;QADC,QAAQ,CAAC,sBAAY,CAAC;kDACW;IAElC;QADC,QAAQ,CAAC,+BAAc,CAAC;oDACa;IAEtC;QADC,QAAQ,CAAC,uBAAa,CAAC;mDACY;IANjB,QAAQ;QAD5B,OAAO;OACa,QAAQ,CA6D5B;IAAD,eAAC;CA7DD,AA6DC,CA7DqC,EAAE,CAAC,SAAS,GA6DjD;kBA7DoB,QAAQ","file":"","sourceRoot":"/","sourcesContent":["import { Constants } from \"../Data/constants\";\r\nimport AudioManager from \"../Plugin/AudioManager\";\r\nimport { GameController } from \"./GameController\";\r\nimport NodeContainer from \"./NodeContanier\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class GamePlay extends cc.Component {\r\n  @property(AudioManager)\r\n  AudioManager: AudioManager = null;\r\n  @property(GameController)\r\n  GameController: GameController = null;\r\n  @property(NodeContainer)\r\n  NodeContainer: NodeContainer = null;\r\n\r\n\r\n  // state\r\n  timing: number = 0.5;\r\n\r\n\r\n  protected onLoad(): void {\r\n\r\n  }\r\n\r\n\r\n  protected start(): void {\r\n    this.handleGamePlay();\r\n    // this.AudioManager.playSound(Constants.SoundTrack.bgSound);\r\n  }\r\n\r\n\r\n  private handleGamePlay(): void {\r\n    this.scheduleOnce(() => {\r\n      this.AudioManager.playSound(Constants.SoundTrack.MergeSound);\r\n      this.AudioManager.stopSound(Constants.SoundTrack.bgSound);\r\n    }, 1.2 + this.timing)\r\n    this.scheduleOnce(() => { this.NodeContainer.UIContainer.getComponent(cc.Animation).play(\"UI_MergeAnim\"); }, 1.5 + this.timing);\r\n    this.scheduleOnce(() => { this.NodeContainer.CardWhite.active = true; }, 3.5 + this.timing);\r\n    this.scheduleOnce(() => {\r\n      this.NodeContainer.CardWhite.getComponent(cc.Animation).stop();\r\n      this.NodeContainer.CardWhite.angle = 0;\r\n      this.NodeContainer.CardWhite.getComponent(cc.Animation).play(\"CardWhite_BoomAnim\");\r\n      this.NodeContainer.PS_Blink.resetSystem();\r\n    }, 6.5 + this.timing);\r\n    this.scheduleOnce(() => { this.showText(); Constants.isCanTouch = true; }, 9 + this.timing)\r\n    this.scheduleOnce(() => { this.AudioManager.playSound(Constants.SoundTrack.bgSound); }, 12 + this.timing);\r\n  }\r\n\r\n\r\n  private showText(): void {\r\n    cc.tween(this.NodeContainer.Text)\r\n      .to(0.5, { opacity: 255 })\r\n      .call(() => {\r\n        cc.tween(this.NodeContainer.Text)\r\n          .repeatForever(\r\n            cc.tween(this.NodeContainer.Text)\r\n              .to(0.5, { scale: 0.4 })\r\n              .to(0.5, { scale: 0.35 }, { easing: 'elasticOut' })\r\n          ).start();\r\n      })\r\n      .start();\r\n  }\r\n\r\n\r\n  // protected update(dt: number): void {\r\n\r\n  // }\r\n\r\n}\r\n"]}