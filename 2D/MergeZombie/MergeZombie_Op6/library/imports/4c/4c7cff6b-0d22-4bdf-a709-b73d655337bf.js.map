{"version":3,"sources":["assets\\Script\\Plugin\\AudioManager.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA,+CAA8C;AAExC,IAAA,KAAwB,EAAE,CAAC,UAAU,EAAnC,OAAO,aAAA,EAAE,QAAQ,cAAkB,CAAC;AAG5C;IAA0C,gCAAY;IAAtD;QAAA,qEA2EC;QAzEG,SAAS;QAET,aAAO,GAAmB,IAAI,CAAC;QAE/B,gBAAU,GAAmB,IAAI,CAAC;QAElC,gBAAU,GAAmB,IAAI,CAAC;;IAmEtC,CAAC;IAhEU,gCAAS,GAAhB,UAAiB,SAAiB;QAC9B,aAAa;QACb,IAAI,CAAC,iBAAiB,CAAC,SAAS,CAAC,CAAC;QAClC,iCAAiC;IACrC,CAAC;IAEO,wCAAiB,GAAzB,UAA0B,SAAS;QAC/B,IAAI,qBAAS,CAAC,UAAU,CAAC,UAAU,IAAI,qBAAS,CAAC,UAAU,CAAC,aAAa,EAAE;YACvE,QAAQ,SAAS,EAAE;gBACf,KAAK,SAAS;oBACV,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;oBACpB,MAAM;gBACV,KAAK,YAAY;oBACb,IAAI,CAAC,UAAU,CAAC,IAAI,EAAE,CAAC;oBACvB,MAAM;gBACV,KAAK,YAAY;oBACb,IAAI,CAAC,UAAU,CAAC,IAAI,EAAE,CAAC;oBACvB,MAAM;gBACV;oBACI,MAAM;aACb;SACJ;IACL,CAAC;IAEO,oCAAa,GAArB,UAAsB,SAAS;QAC3B,IAAI,qBAAS,CAAC,UAAU,CAAC,UAAU,IAAI,CAAC,qBAAS,CAAC,UAAU,CAAC,SAAS,EAAE;YACpE,QAAQ,SAAS,EAAE;gBACf,KAAK,SAAS;oBACV,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;oBACpB,MAAM;gBACV,KAAK,YAAY;oBACb,IAAI,CAAC,UAAU,CAAC,IAAI,EAAE,CAAC;oBACvB,MAAM;gBACV,KAAK,YAAY;oBACb,IAAI,CAAC,UAAU,CAAC,IAAI,EAAE,CAAC;oBACvB,MAAM;gBACV;oBACI,MAAM;aACb;SACJ;IACL,CAAC;IAGM,gCAAS,GAAhB,UAAiB,SAAiB;QAC9B,QAAQ,SAAS,EAAE;YACf,KAAK,SAAS;gBACV,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;gBACpB,MAAM;YACV,KAAK,YAAY;gBACb,IAAI,CAAC,UAAU,CAAC,IAAI,EAAE,CAAC;gBACvB,MAAM;YACV,KAAK,YAAY;gBACb,IAAI,CAAC,UAAU,CAAC,IAAI,EAAE,CAAC;gBACvB,MAAM;YACV;gBACI,MAAM;SACb;IACL,CAAC;IAEM,mCAAY,GAAnB;QACI,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;QACpB,IAAI,CAAC,UAAU,CAAC,IAAI,EAAE,CAAC;QACvB,IAAI,CAAC,UAAU,CAAC,IAAI,EAAE,CAAC;IAC3B,CAAC;IAtED;QADC,QAAQ,CAAC,EAAE,CAAC,WAAW,CAAC;iDACM;IAE/B;QADC,QAAQ,CAAC,EAAE,CAAC,WAAW,CAAC;oDACS;IAElC;QADC,QAAQ,CAAC,EAAE,CAAC,WAAW,CAAC;oDACS;IARjB,YAAY;QADhC,OAAO;OACa,YAAY,CA2EhC;IAAD,mBAAC;CA3ED,AA2EC,CA3EyC,EAAE,CAAC,SAAS,GA2ErD;kBA3EoB,YAAY","file":"","sourceRoot":"/","sourcesContent":["import { Constants } from \"../Data/constants\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class AudioManager extends cc.Component {\r\n\r\n    // sound \r\n    @property(cc.AudioSource)\r\n    bgSound: cc.AudioSource = null;\r\n    @property(cc.AudioSource)\r\n    MergeSound: cc.AudioSource = null;\r\n    @property(cc.AudioSource)\r\n    ClickSound: cc.AudioSource = null;\r\n\r\n\r\n    public playSound(soundName: string): void {\r\n        // ironsource\r\n        this.ironSourceNetwork(soundName);\r\n        // this.normalNetwork(soundName);\r\n    }\r\n\r\n    private ironSourceNetwork(soundName): void {\r\n        if (Constants.ironSource.SoundState && Constants.ironSource.isPlayBgSound) {\r\n            switch (soundName) {\r\n                case \"bgSound\":\r\n                    this.bgSound.play();\r\n                    break;\r\n                case \"MergeSound\":\r\n                    this.MergeSound.play();\r\n                    break;\r\n                case \"ClickSound\":\r\n                    this.ClickSound.play();\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n        }\r\n    }\r\n\r\n    private normalNetwork(soundName): void {\r\n        if (Constants.ironSource.SoundState && !Constants.ironSource.isEndGame) {\r\n            switch (soundName) {\r\n                case \"bgSound\":\r\n                    this.bgSound.play();\r\n                    break;\r\n                case \"MergeSound\":\r\n                    this.MergeSound.play();\r\n                    break;\r\n                case \"ClickSound\":\r\n                    this.ClickSound.play();\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    public stopSound(soundName: string): void {\r\n        switch (soundName) {\r\n            case \"bgSound\":\r\n                this.bgSound.stop();\r\n                break;\r\n            case \"MergeSound\":\r\n                this.MergeSound.stop();\r\n                break;\r\n            case \"ClickSound\":\r\n                this.ClickSound.stop();\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    public stopAllSound(): void {\r\n        this.bgSound.stop();\r\n        this.MergeSound.stop();\r\n        this.ClickSound.stop();\r\n    }\r\n}\r\n"]}