{"version":3,"sources":["assets\\Script\\Controller\\GamePlay.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA,+CAA8C;AAC9C,uDAAkD;AAClD,mDAAkD;AAClD,mDAA8C;AAExC,IAAA,KAAwB,EAAE,CAAC,UAAU,EAAnC,OAAO,aAAA,EAAE,QAAQ,cAAkB,CAAC;AAG5C;IAAsC,4BAAY;IAAlD;QAAA,qEA2EC;QAxEC,kBAAY,GAAiB,IAAI,CAAC;QAElC,oBAAc,GAAmB,IAAI,CAAC;QAEtC,oBAAc,GAAmB,IAAI,CAAC;;QAgEtC,uCAAuC;QAEvC,IAAI;IAEN,CAAC;IAjEW,yBAAM,GAAhB;IAEA,CAAC;IAGS,wBAAK,GAAf;QAAA,iBAgBC;QAfC,6DAA6D;QAC7D,IAAI,CAAC,qBAAqB,EAAE,CAAC;QAE7B,EAAE,CAAC,IAAI,CAAC,iBAAiB,CAAE;YACvB,KAAI,CAAC,qBAAqB,EAAE,CAAC;QACjC,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;QACnB,IAAI,CAAC,QAAQ,CAAC;YACZ,IAAI,MAAM,GAAG,EAAE,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC,EAAE,KAAI,CAAC,cAAc,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;YACxE,IAAG,KAAI,CAAC,cAAc,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,OAAO,KAAK,GAAG,EAAE;gBACnD,MAAM,GAAG,EAAE,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC,EAAE,KAAI,CAAC,cAAc,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;aACrE;YACD,KAAI,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;QAC1B,CAAC,EAAE,CAAC,CAAC,CAAA;IACP,CAAC;IAGO,gCAAa,GAArB;QACE,KAAK,IAAI,KAAK,GAAG,CAAC,EAAE,KAAK,GAAG,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,MAAM,EAAE,KAAK,EAAE,EAAE;YACrE,IAAM,IAAI,GAAG,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;YAC9C,IAAI,CAAC,MAAM,GAAG,KAAK,CAAA;SACpB;IACH,CAAC;IAGO,6BAAU,GAAlB,UAAmB,KAAa;QAC9B,IAAI,CAAC,aAAa,EAAE,CAAC;QACrB,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,MAAM,GAAG,IAAI,CAAC;QAC/C,EAAE,CAAC,KAAK,CAAC,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;aACzC,EAAE,CAAC,GAAG,EAAE,EAAC,OAAO,EAAE,GAAG,EAAC,CAAC;aACvB,KAAK,EAAE,CAAC;QACT,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,YAAY,CAAC,EAAE,CAAC,SAAS,CAAC,CAAC,IAAI,EAAE,CAAC;IACrE,CAAC;IAGM,kCAAe,GAAtB,UAAuB,KAAa;QAChC,qBAAS,CAAC,QAAQ,IAAI,CAAC,IAAI,IAAI,CAAC,cAAc,CAAC,aAAa,EAAE,CAAC;QAC/D,qBAAS,CAAC,QAAQ,IAAI,CAAC,CAAC;QACxB,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,OAAO,GAAG,GAAG,CAAC;QAC9C,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,MAAM,GAAG,IAAI,CAAC;QAC/C,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,MAAM,GAAG,KAAK,CAAC;IACpD,CAAC;IAGO,wCAAqB,GAA7B;QACE,IAAI,EAAE,CAAC,IAAI,CAAC,YAAY,EAAE,CAAC,KAAK,GAAG,EAAE,CAAC,IAAI,CAAC,YAAY,EAAE,CAAC,MAAM,EAAE;YAChE,IAAI,CAAC,cAAc,CAAC,aAAa,CAAC,CAAC,GAAG,EAAE,CAAC;YACzC,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC,MAAM,GAAG,KAAK,CAAC;SAC/C;aAAM;YACL,IAAI,CAAC,cAAc,CAAC,aAAa,CAAC,CAAC,GAAG,CAAC,CAAC;YACxC,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC,MAAM,GAAG,IAAI,CAAC;SAC9C;IACH,CAAC;IAlED;QADC,QAAQ,CAAC,sBAAY,CAAC;kDACW;IAElC;QADC,QAAQ,CAAC,wBAAc,CAAC;oDACa;IAEtC;QADC,QAAQ,CAAC,+BAAc,CAAC;oDACa;IAPnB,QAAQ;QAD5B,OAAO;OACa,QAAQ,CA2E5B;IAAD,eAAC;CA3ED,AA2EC,CA3EqC,EAAE,CAAC,SAAS,GA2EjD;kBA3EoB,QAAQ","file":"","sourceRoot":"/","sourcesContent":["import { Constants } from \"../Data/constants\";\r\nimport AudioManager from \"../Plugin/AudioManager\";\r\nimport { GameController } from \"./GameController\";\r\nimport NodesContainer from \"./NodesContainer\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class GamePlay extends cc.Component {\r\n\r\n  @property(AudioManager)\r\n  AudioManager: AudioManager = null;\r\n  @property(NodesContainer)\r\n  NodesContainer: NodesContainer = null;\r\n  @property(GameController)\r\n  GameController: GameController = null;\r\n\r\n\r\n  protected onLoad(): void {\r\n\r\n  }\r\n\r\n\r\n  protected start(): void {\r\n    // this.AudioManager.playSound(Constants.SoundTrack.bgSound);\r\n    this.handleYourOrientation();\r\n\r\n    cc.view.setResizeCallback (()=>{\r\n        this.handleYourOrientation();\r\n    });\r\n\r\n    this.activeHint(0);\r\n    this.schedule(() => {\r\n      let random = cc.math.randomRangeInt(0, this.NodesContainer.Cats.length);\r\n      if(this.NodesContainer.Cats[random].opacity === 255) {\r\n        random = cc.math.randomRangeInt(0, this.NodesContainer.Cats.length);\r\n      } \r\n      this.activeHint(random);\r\n    }, 3)\r\n  }\r\n\r\n\r\n  private unActiveHints(): void {\r\n    for (let index = 0; index < this.NodesContainer.Hints.length; index++) {\r\n      const hint = this.NodesContainer.Hints[index];\r\n      hint.active = false\r\n    }\r\n  }\r\n\r\n\r\n  private activeHint(index: number): void {\r\n    this.unActiveHints();\r\n    this.NodesContainer.Hints[index].active = true;\r\n    cc.tween(this.NodesContainer.Hints[index])\r\n    .to(0.5, {opacity: 255})\r\n    .start();\r\n    this.NodesContainer.Hints[index].getComponent(cc.Animation).play();\r\n  }\r\n\r\n\r\n  public handleActiveCat(index: number): void {\r\n      Constants.countCat >= 3 && this.GameController.installHandle();\r\n      Constants.countCat += 1;\r\n      this.NodesContainer.Cats[index].opacity = 255;\r\n      this.NodesContainer.Stars[index].active = true;\r\n      this.NodesContainer.Hints[index].active = false;\r\n  }\r\n\r\n\r\n  private handleYourOrientation(): void {\r\n    if (cc.view.getFrameSize().width > cc.view.getFrameSize().height) {\r\n      this.NodesContainer.CatBackground.y = 32;\r\n      this.NodesContainer.RotateArea.active = false;\r\n    } else {\r\n      this.NodesContainer.CatBackground.y = 0;\r\n      this.NodesContainer.RotateArea.active = true;\r\n    }\r\n  }\r\n\r\n  // protected update(dt: number): void {\r\n\r\n  // }\r\n\r\n}\r\n"]}