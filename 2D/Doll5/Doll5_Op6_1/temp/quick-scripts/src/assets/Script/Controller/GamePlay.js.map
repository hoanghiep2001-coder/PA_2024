{"version":3,"sources":["assets\\Script\\Controller\\GamePlay.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import { Constants } from \"../Data/constants\";\r\nimport AudioManager from \"../Plugin/AudioManager\";\r\nimport { GameController } from \"./GameController\";\r\nimport NodesContainer from \"./NodesContainer\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class GamePlay extends cc.Component {\r\n\r\n  @property(AudioManager)\r\n  AudioManager: AudioManager = null;\r\n  @property(NodesContainer)\r\n  NodesContainer: NodesContainer = null;\r\n  @property(GameController)\r\n  GameController: GameController = null;\r\n\r\n  skinIndex: number = 0;\r\n\r\n\r\n  protected onLoad(): void {\r\n\r\n  }\r\n\r\n\r\n  protected start(): void {\r\n    // this.AudioManager.playSound(Constants.SoundTrack.bgSound);\r\n    // this.activeCasualSkinsWithAnim();\r\n  }\r\n\r\n\r\n  private reset(): void {\r\n    this.NodesContainer.skins[6].active = false;\r\n    this.skinIndex = 0;\r\n    this.NodesContainer.UI.getChildByName(\"Dolls\").y = 0;\r\n    this.NodesContainer.UI.getChildByName(\"Dolls\").scale = 0.25;\r\n    this.NodesContainer.BtnDownload.getChildByName(\"hand\").opacity = 0;\r\n    this.NodesContainer.Logo.opacity = 0;\r\n  }\r\n\r\n\r\n  private activeCasualSkinsWithAnim(): void {\r\n    const intervalID = setInterval(() => {      \r\n      this.NodesContainer.skins[this.skinIndex].active = false;\r\n      this.skinIndex += 1;\r\n      this.NodesContainer.skins[this.skinIndex].active = true;\r\n      this.skinIndex >= 6 && this.showCTA(intervalID);\r\n    }, 400);\r\n  }\r\n\r\n\r\n  private showCTA(intervalID: number): void {\r\n    clearInterval(intervalID);\r\n    this.scheduleOnce(() => {\r\n      this.NodesContainer.UI.getComponent(cc.Animation).play(\"CTA_Anim\");\r\n    }, 0.5);\r\n\r\n    this.scheduleOnce(() => {\r\n      this.reset();\r\n      this.activeCasualSkinsWithAnim();\r\n    }, 2.5);\r\n  }\r\n\r\n\r\n  public playGreatSound(): void {\r\n    this.AudioManager.playSound(Constants.SoundTrack.pickItemSound)\r\n    this.AudioManager.pickItemSound.volume = 0.5;\r\n    let random = Math.floor(Math.random() * 4) + 1;\r\n    switch (random) {\r\n      case 1:\r\n        this.AudioManager.playSound(Constants.SoundTrack.Fx_Bonus1)\r\n        break;\r\n      case 2:\r\n        this.AudioManager.playSound(Constants.SoundTrack.Fx_Bonus2)\r\n        break;\r\n      case 3:\r\n        this.AudioManager.playSound(Constants.SoundTrack.Fx_Bonus3)\r\n        break;\r\n      case 4:\r\n        this.AudioManager.playSound(Constants.SoundTrack.Fx_Bonus4)\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n\r\n  public handleIronSourcePlaySound(): void {\r\n    if (Constants.ironSource.isPlayBgSound) {\r\n      return;\r\n    }\r\n\r\n    if (Constants.ironSource.SoundState) {\r\n      Constants.ironSource.isPlayBgSound = true;\r\n      this.AudioManager.playSound(Constants.SoundTrack.bgSound);\r\n    }\r\n  }\r\n\r\n\r\n  private handleMuteSoundIronSource(): void {\r\n    Constants.ironSource.State = parseInt(localStorage.getItem(\"cocosSoundState\"), 10)\r\n\r\n    if (Constants.ironSource.State) {\r\n      if (Constants.ironSource.State === 1 && !Constants.ironSource.SoundState && !Constants.ironSource.isEndGame) {\r\n        Constants.ironSource.SoundState = true;\r\n        this.AudioManager.playSound(Constants.SoundTrack.bgSound);\r\n      }\r\n\r\n      if (Constants.ironSource.State === 2 && Constants.ironSource.SoundState) {\r\n        Constants.ironSource.SoundState = false;\r\n        this.AudioManager.stopAllSound();\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n  // protected update(dt: number): void {\r\n  //     this.handleMuteSoundIronSource();\r\n  // }\r\n\r\n}\r\n"]}