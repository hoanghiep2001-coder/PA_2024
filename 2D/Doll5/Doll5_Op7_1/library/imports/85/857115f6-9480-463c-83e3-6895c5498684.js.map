{"version":3,"sources":["assets\\Script\\Controller\\TouchAreaController.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import { Constants } from \"../Data/constants\";\r\nimport AudioManager from \"../Plugin/AudioManager\";\r\nimport { GameController } from \"./GameController\";\r\nimport GamePlay from \"./GamePlay\";\r\nimport NodesContainer from \"./NodesContainer\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport class TouchAreaController extends cc.Component {\r\n  // Component\r\n  @property(NodesContainer)\r\n  NodesContainer: NodesContainer = null;\r\n  @property(AudioManager)\r\n  AudioManager: AudioManager = null;\r\n  @property(GameController)\r\n  GameController: GameController = null;\r\n  @property(GamePlay)\r\n  GamePlay: GamePlay = null;\r\n\r\n\r\n  // state\r\n  isCanChangeColor: boolean = false;\r\n  itemChangeColor1: cc.Node = null;\r\n  itemChangeColor2: cc.Node = null;\r\n  checkClick: number = 0;\r\n\r\n\r\n  protected onLoad() {\r\n\r\n  }\r\n\r\n\r\n  protected start() {\r\n    this.registerEvent();\r\n  }\r\n\r\n\r\n  private registerEvent(): void {\r\n\r\n    this.NodesContainer.BtnDownload.getChildByName(\"btnDownload\")\r\n      .on(cc.Node.EventType.TOUCH_START, this.GameController.installHandle, this);\r\n\r\n    // hair on click event\r\n    for (let index = 0; index < this.NodesContainer.Frame_Hairs.length; index++) {\r\n      const frame = this.NodesContainer.Frame_Hairs[index];\r\n      frame.on(cc.Node.EventType.TOUCH_START, () => { this.activeHairOnTouch(index) }, this);\r\n    }\r\n\r\n    // color hair on click event\r\n    for (let index = 0; index < this.NodesContainer.Frame_Colors.length; index++) {\r\n      const frame = this.NodesContainer.Frame_Colors[index];\r\n      frame.on(cc.Node.EventType.TOUCH_START, () => { this.activeColorOnTouch(frame) }, this);\r\n    }\r\n\r\n    // dress on click event\r\n    for (let index = 0; index < this.NodesContainer.Frame_Dresses.length; index++) {\r\n      const frame = this.NodesContainer.Frame_Dresses[index];\r\n      frame.on(cc.Node.EventType.TOUCH_START, () => { this.activeDressOnTouch(index) }, this);\r\n    }\r\n\r\n    // shoe on click event\r\n    for (let index = 0; index < this.NodesContainer.Frame_Shoes.length; index++) {\r\n      const frame = this.NodesContainer.Frame_Shoes[index];\r\n      frame.on(cc.Node.EventType.TOUCH_START, () => { this.activeShoeOnTouch(index) }, this);\r\n    }\r\n\r\n    this.NodesContainer.BtnLeft.children[0].on(cc.Node.EventType.TOUCH_START, this.naviagateItems, this);\r\n    this.NodesContainer.BtnRight.children[0].on(cc.Node.EventType.TOUCH_START, this.naviagateItems, this);\r\n\r\n\r\n    this.NodesContainer.hideMask\r\n      .on(cc.Node.EventType.TOUCH_START, this.hideMaskTouchStart, this);\r\n\r\n\r\n    this.NodesContainer.Btn_DollCamera.on(cc.Node.EventType.TOUCH_START, this.GameController.installHandle, this);\r\n\r\n  }\r\n\r\n\r\n  private hideMaskTouchStart(): void {\r\n    // applovin & mtg\r\n    if ((Constants.countClick >= Constants.maxClickToStore) || Constants.isTakePhoto) {\r\n      this.GameController.installHandle();\r\n      return;\r\n    }\r\n\r\n    // ironsource\r\n    // this.handleIronSourcePlaySound();\r\n  }\r\n\r\n\r\n  private activeHairOnTouch(index: number): void {\r\n    if (Constants.countClick >= Constants.maxClickToStore) {\r\n      this.GameController.installHandle();\r\n      return;\r\n    }\r\n\r\n    // ironsource\r\n    // this.handleIronSourcePlaySound();\r\n\r\n    if (!Constants.isDoneStep1) Constants.currentStep = 1;\r\n\r\n    Constants.countClick += 1;\r\n    Constants.isDoneStep1 = true;\r\n\r\n    if (this.checkClick === 2) this.checkClick = 0;\r\n    if (this.checkClick === 0) {\r\n      this.GamePlay.playGreatSound();\r\n    }\r\n    this.checkClick += 1;\r\n    let result = index + 1;\r\n    this.NodesContainer.Char_Hairs.forEach(hair => hair.active = false);\r\n    this.NodesContainer.Frame_Hairs.forEach(frame => frame.color = cc.Color.WHITE);\r\n    this.NodesContainer.Frame_Hairs[index].color = cc.Color.fromHEX(new cc.Color, \"#FC8C8C\");\r\n    this.NodesContainer.PS_Blink_Head.resetSystem();\r\n    this.NodesContainer.BtnRight.active = true;\r\n    this.NodesContainer.Hand.active = false;\r\n\r\n    switch (result) {\r\n      case 1:\r\n        this.isCanChangeColor = false;\r\n        this.NodesContainer.Char_Hairs[2].active = true;\r\n        this.NodesContainer.Char_Hairs[3].active = true;\r\n        break;\r\n      case 2:\r\n        this.isCanChangeColor = false;\r\n        this.NodesContainer.Char_Hairs[4].active = true;\r\n        break;\r\n      case 3:\r\n        this.isCanChangeColor = false;\r\n        this.NodesContainer.Char_Hairs[5].active = true;\r\n        this.NodesContainer.Char_Hairs[6].active = true;\r\n        break;\r\n      case 4:\r\n        this.isCanChangeColor = false;\r\n        this.NodesContainer.Char_Hairs[7].active = true;\r\n        break;\r\n      case 5:\r\n        this.isCanChangeColor = false;\r\n        this.NodesContainer.Char_Hairs[8].active = true;\r\n        this.NodesContainer.Char_Hairs[9].active = true;\r\n        break;\r\n      case 6:\r\n        this.isCanChangeColor = false;\r\n        this.NodesContainer.Char_Hairs[10].active = true;\r\n        this.NodesContainer.Char_Hairs[11].active = true;\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n\r\n    this.activeChangeColor(this.isCanChangeColor);\r\n  }\r\n\r\n  private activeDressOnTouch(index: number): void {\r\n    if (Constants.countClick >= Constants.maxClickToStore) {\r\n      this.GameController.installHandle();\r\n      return;\r\n    }\r\n\r\n    if (!Constants.isDoneStep2) Constants.currentStep = 2;\r\n\r\n    Constants.countClick += 1;\r\n    Constants.isDoneStep2 = true;\r\n\r\n    if (this.checkClick === 2) this.checkClick = 0;\r\n    if (this.checkClick === 0) {\r\n      this.GamePlay.playGreatSound();\r\n    }\r\n    this.checkClick += 1;\r\n    this.NodesContainer.Char_Dresses.forEach(shoe => shoe.active = false);\r\n    this.NodesContainer.Frame_Dresses.forEach(frame => frame.color = cc.Color.WHITE);\r\n    this.NodesContainer.Frame_Dresses[index].color = cc.Color.fromHEX(new cc.Color, \"#FC8C8C\");\r\n    this.NodesContainer.PS_Blink_Base.resetSystem();\r\n    this.NodesContainer.BtnRight.active = true;\r\n    this.NodesContainer.BtnLeft.active = true;\r\n    this.NodesContainer.Char_Dresses[index].active = true;\r\n\r\n  }\r\n\r\n  private activeShoeOnTouch(index: number): void {\r\n    if (Constants.countClick >= Constants.maxClickToStore) {\r\n      this.GameController.installHandle();\r\n      return;\r\n    }\r\n\r\n    if (!Constants.isDoneStep3) Constants.currentStep = 3;\r\n\r\n    Constants.countClick += 1;\r\n    Constants.isDoneStep3 = true;\r\n\r\n    if (this.checkClick === 2) this.checkClick = 0;\r\n    if (this.checkClick === 0) {\r\n      this.GamePlay.playGreatSound();\r\n    }\r\n    this.checkClick += 1;\r\n    this.NodesContainer.Char_Shoes.forEach(shoe => shoe.active = false);\r\n    this.NodesContainer.Frame_Shoes.forEach(frame => frame.color = cc.Color.WHITE);\r\n    this.NodesContainer.Frame_Shoes[index].color = cc.Color.fromHEX(new cc.Color, \"#FC8C8C\");\r\n    this.NodesContainer.PS_Blink_Shoe.resetSystem();\r\n    this.NodesContainer.BtnRight.active = true;\r\n    this.NodesContainer.BtnLeft.active = true;\r\n    this.NodesContainer.Char_Shoes[index].active = true;\r\n\r\n  }\r\n\r\n  private activeChangeColor(active: boolean): void {\r\n    active ? this.NodesContainer.ListColor.active = true : this.NodesContainer.ListColor.active = false;\r\n  }\r\n\r\n\r\n  private activeColorOnTouch(frame: cc.Node): void {\r\n    if (Constants.countClick >= Constants.maxClickToStore) {\r\n      this.GameController.installHandle();\r\n      return;\r\n    }\r\n\r\n    let color = frame.color.toHEX();\r\n    this.itemChangeColor1.color = cc.Color.fromHEX(new cc.Color, color);\r\n    this.itemChangeColor2.color = cc.Color.fromHEX(new cc.Color, color);\r\n\r\n    if (this.checkClick === 2) this.checkClick = 0;\r\n    if (this.checkClick === 0) {\r\n      this.GamePlay.playGreatSound();\r\n    }\r\n    this.checkClick += 1;\r\n    this.NodesContainer.PS_Blink_Head.resetSystem();\r\n  }\r\n\r\n\r\n  private naviagateItems(e: cc.Event.EventTouch): void {\r\n    if (Constants.countClick >= Constants.maxClickToStore) {\r\n      this.GameController.installHandle();\r\n      return;\r\n    }\r\n\r\n    this.isCanChangeColor = false;\r\n    let Node: cc.Node = e.target;\r\n    this.NodesContainer.BtnRight.active = false;\r\n    if (Node.parent.name === \"Btn_Right\") {\r\n\r\n      if (Constants.isDoneStep3) {\r\n        Constants.isTakePhoto = true;\r\n        this.GamePlay.handleTakePhoto();\r\n      }\r\n\r\n      this.NodesContainer.BtnLeft.active = true;\r\n      Constants.currentListItem += 1;\r\n      if (Constants.currentListItem > 2) Constants.currentListItem = 2;\r\n    } else {\r\n      Constants.currentListItem -= 1;\r\n      if (Constants.currentListItem < 0) Constants.currentListItem = 0;\r\n    }\r\n\r\n    this.GamePlay.updateProgress();\r\n\r\n    this.NodesContainer.Items.forEach(item => item.active = false);\r\n    this.NodesContainer.Items[Constants.currentListItem].active = true;\r\n    this.activeChangeColor(this.isCanChangeColor);\r\n  }\r\n\r\n\r\n  public handleIronSourcePlaySound(): void {\r\n    if (Constants.ironSource.isPlayBgSound) {\r\n      return;\r\n    }\r\n\r\n    Constants.ironSource.isPlayBgSound = true;\r\n\r\n    if (Constants.ironSource.SoundState) {\r\n      this.AudioManager.playSound(Constants.SoundTrack.bgSound);\r\n    }\r\n  }\r\n\r\n\r\n  // protected update(dt: number): void {\r\n  //   this.GamePlay.handleMuteSoundIronSource();\r\n  // }\r\n\r\n}\r\n"]}