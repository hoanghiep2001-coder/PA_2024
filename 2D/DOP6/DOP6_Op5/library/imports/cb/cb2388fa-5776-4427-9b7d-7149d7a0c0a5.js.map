{"version":3,"sources":["assets\\Script\\Controller\\TouchAreaController.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import { Constants } from \"../Data/constants\";\r\nimport AudioManager from \"../Plugin/AudioManager\";\r\nimport { GameController } from \"./GameController\";\r\nimport GamePlay from \"./GamePlay\";\r\nimport NodeController from \"./NodeController\";\r\nimport NeutrinoEffectComponent from \"../../neutrinoparticles/components/NeutrinoEffect_NoNameEffect\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class TouchAreaController extends cc.Component {\r\n    @property(GamePlay)\r\n    GamePlay: GamePlay = null;\r\n    @property(AudioManager)\r\n    AudioManager: AudioManager = null;\r\n    @property(GameController)\r\n    GameController: GameController = null;\r\n    @property(NodeController)\r\n    NodeController: NodeController = null;\r\n\r\n\r\n    @property(cc.Node)\r\n    CTA_Btn: cc.Node = null;\r\n    @property(cc.Node)\r\n    CTA_Overlay: cc.Node = null;\r\n\r\n\r\n    // state\r\n    isTouch: boolean = false;\r\n    isActiveCTA: boolean = false;\r\n    startTouchPos: cc.Vec2 = null;\r\n\r\n    // đây là đồ vật khi tương tác touch\r\n    currentInteractObject: cc.Node = null;\r\n\r\n        // đây là vị trí của đồ vật khi lần đầu tương tác touch\r\n        ObjectPrevPos: cc.Vec2 = null;\r\n\r\n    // đây là vùng impact\r\n    currentAreaToImpact: cc.Node = null;\r\n\r\n    // fx của đồ vật tương đương scene\r\n    currentFX: cc.ParticleSystem = null;\r\n\r\n    // scene hiện tại đang tương tác\r\n    curentScene: cc.Node = null;\r\n\r\n\r\n    protected start(): void {\r\n        this.registerEvent();\r\n    }\r\n\r\n\r\n    private registerEvent(): void {\r\n        this.NodeController.objects.forEach(obj => {\r\n            obj.on(cc.Node.EventType.TOUCH_START, this.touchStart, this);\r\n            obj.on(cc.Node.EventType.TOUCH_MOVE, this.touchMove, this);\r\n            obj.on(cc.Node.EventType.TOUCH_END, this.touchEnd, this);\r\n            obj.on(cc.Node.EventType.TOUCH_CANCEL, this.touchEnd, this);\r\n        });\r\n\r\n        this.CTA_Btn.on(cc.Node.EventType.TOUCH_START, this.GameController.installHandle, this);\r\n\r\n        // mtg && aplovin\r\n        // this.CTA_Overlay.on(cc.Node.EventType.TOUCH_START, this.GameController.installHandle, this);\r\n\r\n        // iroonsoource\r\n        this.NodeController.hideMask.on(cc.Node.EventType.TOUCH_START, this.GamePlay.handleIronSourcePlaySound, this);\r\n    }\r\n\r\n\r\n    private touchStart(e: cc.Event.EventTouch): void {\r\n        this.GamePlay.handleIronSourcePlaySound();\r\n\r\n        if (!Constants.isCanTouch) return;\r\n\r\n        this.isTouch = true;\r\n\r\n        this.currentInteractObject = e.target;\r\n\r\n        this.ObjectPrevPos = this.currentInteractObject.getPosition();\r\n\r\n        this.curentScene = this.currentInteractObject.parent;\r\n\r\n        let pos = e.getLocation();\r\n\r\n        let convertedPos = this.node.convertToNodeSpaceAR(pos);        \r\n\r\n        this.currentInteractObject.setPosition(convertedPos);\r\n\r\n        this.startTouchPos = convertedPos;\r\n\r\n        this.currentAreaToImpact = this.curentScene.getChildByName(\"circle\");\r\n\r\n        this.currentFX = this.curentScene.getChildByName(\"FX_doneStep\").children[0].getComponent(cc.ParticleSystem);\r\n\r\n        let hint = this.curentScene.getChildByName(\"Hint\");\r\n        hint.active = false;\r\n\r\n    }\r\n\r\n\r\n    private touchMove(e: cc.Touch): void {\r\n        if (!Constants.isCanTouch || !this.isTouch) return;\r\n\r\n        let pos = e.getLocation();\r\n\r\n        let convertedPos = this.node.convertToNodeSpaceAR(pos);\r\n\r\n        this.currentInteractObject.setPosition(convertedPos);\r\n    }\r\n\r\n\r\n    private touchEnd(e: cc.Touch): void {\r\n\r\n        if (!Constants.isCanTouch || !this.isTouch) return;\r\n\r\n        this.isTouch = false;\r\n\r\n        let pos = e.getLocation();\r\n\r\n        let convertedPos = this.node.convertToNodeSpaceAR(pos);\r\n\r\n        if(this.isTouchInteractArea()) {\r\n            this.GamePlay.handleDoneLevel(this.currentFX, this.curentScene, this.currentInteractObject);\r\n        } else {\r\n            this.GamePlay.handleDragWrong(convertedPos, this.ObjectPrevPos, this.currentInteractObject);\r\n        }\r\n        \r\n    }\r\n\r\n\r\n    private isTouchInteractArea(): boolean {\r\n        let result = false;\r\n\r\n        if(this.currentInteractObject.name === \"object_true\") {\r\n            let objBdx = this.currentInteractObject.getBoundingBox();\r\n            let areaBdx = this.currentAreaToImpact.getBoundingBox();\r\n    \r\n            if(areaBdx.intersects(objBdx)) return true;\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n\r\n    offEvent(): void {\r\n        this.isActiveCTA = false;\r\n        this.NodeController.hideMask.off(cc.Node.EventType.TOUCH_START);\r\n        this.NodeController.hideMask.off(cc.Node.EventType.TOUCH_MOVE);\r\n        this.NodeController.hideMask.off(cc.Node.EventType.TOUCH_END);\r\n        this.NodeController.hideMask.off(cc.Node.EventType.TOUCH_CANCEL);\r\n    }\r\n\r\n\r\n    protected update(dt: number): void {\r\n        this.GamePlay.handleMuteSoundIronSource();\r\n    }\r\n}\r\n"]}