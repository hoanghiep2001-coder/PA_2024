{"version":3,"sources":["assets\\Script\\Controller\\TouchAreaController.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import { Constants } from \"../Data/constants\";\r\nimport AudioManager from \"../Plugin/AudioManager\";\r\nimport { GameController } from \"./GameController\";\r\nimport GamePlay from \"./GamePlay\";\r\nimport NodeController from \"./NodeController\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class TouchAreaController extends cc.Component {\r\n    @property(GamePlay)\r\n    GamePlay: GamePlay = null;\r\n    @property(AudioManager)\r\n    AudioManager: AudioManager = null;\r\n    @property(GameController)\r\n    GameController: GameController = null;\r\n    @property(NodeController)\r\n    NodeController: NodeController = null;\r\n\r\n\r\n    @property(cc.Node)\r\n    CTA_Btn: cc.Node = null;\r\n    @property(cc.Node)\r\n    CTA_Overlay: cc.Node = null;\r\n\r\n    \r\n    // state\r\n    isTouch: boolean = false;\r\n    isActiveCTA: boolean = false;\r\n    startTouchPos: cc.Vec2 = null;\r\n\r\n\r\n    protected start(): void {\r\n        this.registerEvent();\r\n    }\r\n\r\n\r\n    private registerEvent(): void {\r\n        this.NodeController.hideMask.on(cc.Node.EventType.TOUCH_START, this.touchStart, this);\r\n        this.NodeController.hideMask.on(cc.Node.EventType.TOUCH_MOVE, this.touchMove, this);\r\n        this.NodeController.hideMask.on(cc.Node.EventType.TOUCH_END, this.touchEnd, this);\r\n        this.NodeController.hideMask.on(cc.Node.EventType.TOUCH_CANCEL, this.touchEnd, this);\r\n\r\n        this.CTA_Btn.on(cc.Node.EventType.TOUCH_START, this.GameController.installHandle, this);\r\n\r\n        // mtg && aplovin\r\n        this.CTA_Overlay.on(cc.Node.EventType.TOUCH_START, this.GameController.installHandle, this);\r\n    }\r\n\r\n\r\n    private touchStart(e: cc.Touch): void {\r\n        // ironsource\r\n        this.GamePlay.playYameteKudasaiSound();\r\n\r\n        this.GamePlay.handleIronSourcePlaySound();\r\n\r\n        if (!Constants.isCanTouch) return;\r\n\r\n        this.isTouch = true;\r\n\r\n        this.NodeController.Point.active = true;\r\n\r\n        !Constants.isDoneEraser && this.AudioManager.playSound(Constants.SoundTrack.eraserSound);\r\n\r\n        let pos = e.getLocation();\r\n\r\n        let convertedPos = this.node.convertToNodeSpaceAR(pos);\r\n\r\n        this.NodeController.Point.getComponent(cc.Animation).stop();\r\n\r\n        this.NodeController.Point.setPosition(convertedPos);\r\n\r\n        this.startTouchPos = convertedPos;\r\n    }\r\n\r\n\r\n    private touchMove(e: cc.Touch): void {\r\n        if (!Constants.isCanTouch || !this.isTouch) return;\r\n\r\n        let pos = e.getLocation();\r\n\r\n        let convertedPos = this.node.convertToNodeSpaceAR(pos);\r\n\r\n        this.NodeController.Point.setPosition(convertedPos);\r\n    }\r\n\r\n\r\n    private touchEnd(e: cc.Touch): void {\r\n\r\n        if (!Constants.isCanTouch || !this.isTouch) return;\r\n\r\n        this.isTouch = false;\r\n\r\n        this.AudioManager.stopSound(Constants.SoundTrack.eraserSound);\r\n\r\n        let result: any[];\r\n\r\n        // lọc ra những thằng đã bị xóa\r\n\r\n        // dựa vào result in ra kết quả\r\n        if (result) {\r\n\r\n            // check xóa đúng hoặc sai\r\n            result.length >= 2 && this.GamePlay.handleDeleteWrong(this.startTouchPos, result)\r\n            result.length === 1 && this.GamePlay.filterCorrectResult(result[0], this.startTouchPos);\r\n\r\n            cc.log(\"check Result..\");\r\n\r\n        } else {\r\n            // ko có result là xóa sai, xóa linh tinh, chưa xóa, ...\r\n            this.GamePlay.handleDeleteWrong(this.startTouchPos, result);\r\n        }\r\n\r\n\r\n    }\r\n\r\n\r\n    public unActivePoint(): void {\r\n        this.NodeController.Point.active = false;\r\n    }\r\n\r\n\r\n    offEvent(): void {\r\n        this.isActiveCTA = false;\r\n        this.NodeController.hideMask.off(cc.Node.EventType.TOUCH_START);\r\n        this.NodeController.hideMask.off(cc.Node.EventType.TOUCH_MOVE);\r\n        this.NodeController.hideMask.off(cc.Node.EventType.TOUCH_END);\r\n        this.NodeController.hideMask.off(cc.Node.EventType.TOUCH_CANCEL);\r\n    }\r\n\r\n\r\n    protected update(dt: number): void {\r\n        this.GamePlay.handleMuteSoundIronSource();\r\n    }\r\n}\r\n"]}