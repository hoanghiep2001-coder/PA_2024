{"version":3,"sources":["assets\\Script\\Controller\\GamePlay.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import { SpineAnims } from \"../Data/Anims\";\r\nimport { Constants } from \"../Data/constants\";\r\nimport AudioManager from \"../Plugin/AudioManager\";\r\nimport { GameController } from \"./GameController\";\r\nimport NodeContainer from \"./NodeContanier\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class GamePlay extends cc.Component {\r\n  @property(AudioManager)\r\n  AudioManager: AudioManager = null;\r\n  @property(GameController)\r\n  GameController: GameController = null;\r\n  @property(NodeContainer)\r\n  NodeContainer: NodeContainer = null;\r\n\r\n  @property(cc.Node)\r\n  star: cc.Node = null;\r\n  @property(cc.Node)\r\n  touchArea: cc.Node = null;\r\n\r\n\r\n  // Tools\r\n  @property(cc.Node)\r\n  hand: cc.Node = null;\r\n  @property(cc.Node)\r\n  scratchAble: cc.Node = null;\r\n\r\n\r\n  // state\r\n  trackEnTry: sp.spine.TrackEntry = null;\r\n\r\n  isActiveRemoveSound1: boolean = false;\r\n  isActiveRemoveSound2: boolean = false;\r\n  isActiveRemoveSound3: boolean = false;\r\n  isActiveRemoveSound4: boolean = false;\r\n\r\n  isDoneScratchAble: boolean = false;\r\n\r\n  activeCTA: boolean = false;\r\n  CTA_steps: number = 0;\r\n  CTA_thumbnail: cc.Node = null;\r\n  CTA_isBtn: boolean = false;\r\n  CTA_anyThumbnail: boolean = true;\r\n\r\n\r\n  protected onLoad(): void {\r\n\r\n  }\r\n\r\n\r\n  protected start(): void {\r\n    this.NodeContainer.CTA.active = false;\r\n\r\n    this.AudioManager.playSound(Constants.SoundTrack.bgSound);\r\n\r\n    this.scaleToDollEar();\r\n  }\r\n\r\n\r\n  private scaleToDollEar(): void {\r\n    const DollCurrentPos = this.NodeContainer.Doll.getPosition();\r\n\r\n    this.scheduleOnce(() => {\r\n      cc.tween(this.NodeContainer.Doll)\r\n        .to(1, { y: DollCurrentPos.y - 100, scale: 1.6 })\r\n        .call(() => {\r\n          Constants.isCanTouch = true;\r\n\r\n          this.NodeContainer.Hint_Circle.active = true;\r\n\r\n          this.showTools(this.NodeContainer.Flow1_spineTool, true)\r\n        })\r\n        .start();\r\n    }, 1.5)\r\n  }\r\n\r\n\r\n  private showHint(): void {\r\n    this.NodeContainer.Hand.active = true;\r\n    this.NodeContainer.Hand.getComponent(cc.Animation).play();\r\n\r\n    Constants.isDoneStep1 && this.showHintFlow2();\r\n\r\n  }\r\n\r\n\r\n  private showHintFlow2(): void {\r\n    this.NodeContainer.Hint_Circle_2.active = true;\r\n  }\r\n\r\n\r\n  private activeCTAAnim(): void {\r\n    this.NodeContainer.CTA.active = true;\r\n    this.CTA_thumbnail = this.NodeContainer.CTA_logo;\r\n\r\n    cc.tween(this.NodeContainer.CTA_overlay)\r\n      .to(0.5, { opacity: 150 })\r\n      .call(() => {\r\n        this.showThumbnailTween(this.CTA_thumbnail, this.CTA_anyThumbnail, this.CTA_isBtn);\r\n      })\r\n      .start()\r\n  }\r\n\r\n\r\n  private showThumbnailTween(thumbnail: cc.Node, anyThumbnail: boolean, isBtn: boolean): void {\r\n    switch (this.CTA_steps) {\r\n      case 0:\r\n        this.CTA_thumbnail = this.NodeContainer.CTA_logo;\r\n        break;\r\n      case 1:\r\n        this.CTA_thumbnail = this.NodeContainer.CTA_icon;\r\n        break;\r\n      case 2:\r\n        this.CTA_thumbnail = this.NodeContainer.CTA_Btn;\r\n        this.CTA_anyThumbnail = false;\r\n        this.CTA_isBtn = true;\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n\r\n    this.CTA_steps += 1;\r\n\r\n    cc.tween(thumbnail)\r\n      .to(0.5, { opacity: 255 })\r\n      .call(() => {\r\n        anyThumbnail && this.showThumbnailTween(this.CTA_thumbnail, this.CTA_anyThumbnail, this.CTA_isBtn)\r\n        isBtn && this.activeBtnTween(this.CTA_thumbnail)\r\n      }\r\n      ).start();\r\n  }\r\n\r\n\r\n  private activeBtnTween(btn: cc.Node): void {\r\n    cc.tween(btn)\r\n      .repeatForever(\r\n        cc.tween(btn)\r\n          .to(0.5, { scale: 0.45 })\r\n          .to(0.5, { scale: 0.5 }, { easing: cc.easing.elasticOut })\r\n      ).start();\r\n  }\r\n\r\n\r\n  private showTools(tool: cc.Node, isActive: boolean): void {\r\n\r\n    tool.opacity = 0;\r\n\r\n    if (!isActive) tool.active = true;\r\n\r\n    Constants.isCanTouch = true;\r\n\r\n    this.AudioManager.playSound(Constants.SoundTrack.moveItemSound);\r\n\r\n    let position = tool.getPosition();\r\n\r\n    tool.setPosition(position.x - 30, position.y);\r\n\r\n    cc.tween(tool)\r\n      .to(0.5, { x: position.x, opacity: 255 })\r\n      .call(() => {\r\n\r\n        this.showHint();\r\n      }\r\n      )\r\n      .start();\r\n\r\n  }\r\n\r\n\r\n  public checkCollideAcne(): void {\r\n    const toolHeadBdx = this.NodeContainer.Flow1_ToolHead.getBoundingBox();\r\n    const area = this.NodeContainer.Flow1_Area;\r\n    const areaBdx = area.getBoundingBox();\r\n\r\n    if (areaBdx.intersects(toolHeadBdx)) {\r\n\r\n      Constants.isCanTouch = false;\r\n\r\n      this.NodeContainer.Doll_SpineRmMaggot.node.active = true;\r\n\r\n      this.trackEnTry = this.NodeContainer.Doll_SpineRmMaggot.setAnimation(0, \"Action\", false);\r\n\r\n      this.NodeContainer.Flow1_Tool.active = false;\r\n\r\n      this.NodeContainer.Flow1_spineTool.active = false;\r\n\r\n      this.NodeContainer.Flow1_Tool.opacity = 0;\r\n\r\n      this.setCompleteSpine(this.NodeContainer.Doll_SpineRmMaggot);\r\n    }\r\n  }\r\n\r\n\r\n  private setCompleteSpine(removeSpine: sp.Skeleton): void {\r\n    removeSpine.setCompleteListener((track: sp.spine.TrackEntry) => {\r\n      if (track.animation.name) {\r\n        this.doneFlowAndShowNextOption();\r\n      }\r\n    })\r\n  }\r\n\r\n\r\n  private getCurentTimeOfTrack(): void {\r\n    if (this.trackEnTry) {\r\n      if (this.trackEnTry.trackTime >= 1.2 && !this.isActiveRemoveSound1) {\r\n        this.isActiveRemoveSound1 = true;\r\n        this.NodeContainer.Doll_Maggot.active = false;\r\n\r\n        this.AudioManager.playSound(Constants.SoundTrack.nhoMun1Sound);\r\n      }\r\n\r\n      if (this.trackEnTry.trackTime >= 1.5 && !this.isActiveRemoveSound2) {\r\n        this.isActiveRemoveSound2 = true;\r\n        this.AudioManager.playSound(Constants.SoundTrack.nhoMun2Sound);\r\n      }\r\n\r\n      if (this.trackEnTry.trackTime >= 5) {\r\n        this.isActiveRemoveSound4 = true;\r\n        this.AudioManager.stopSound(Constants.SoundTrack.nhoMun2Sound);\r\n        this.AudioManager.playSound(Constants.SoundTrack.gapRuoiSound);\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n  private doneFlowAndShowNextOption(): void {\r\n    !Constants.isDoneStep1 && this.touchArea.getComponent(\"TouchAreaController\").registerFlow2Event();\r\n\r\n    Constants.isDoneStep1 = true;\r\n\r\n    this.AudioManager.playSound(Constants.SoundTrack.DoneStepSound);\r\n\r\n    this.AudioManager.playSound(Constants.SoundTrack.hmmSound);\r\n\r\n    this.star.getComponent(cc.Animation).play(\"StarAnim\");\r\n\r\n    this.scheduleOnce(() => { this.showTools(this.NodeContainer.Flow2_Tool, false) }, 1.5)\r\n  }\r\n\r\n\r\n  public checkCollideEarsAcne(): void {\r\n    const toolHeadBdx = this.NodeContainer.Flow2_ToolHead.getBoundingBox();\r\n    const area = this.NodeContainer.Flow2_Area;\r\n    const areaBdx = area.getBoundingBox();\r\n\r\n    if (areaBdx.intersects(toolHeadBdx)) {\r\n\r\n      Constants.isCanTouch = false;\r\n\r\n      Constants.collideEarAcneNumber += 1;\r\n\r\n      this.AudioManager.playSound(Constants.SoundTrack.nhoMun1Sound);\r\n\r\n      this.scheduleOnce(() => { this.AudioManager.playSound(Constants.SoundTrack.bopMunSound) }, 0.5);\r\n\r\n      if (Constants.collideEarAcneNumber === 1) {\r\n        this.NodeContainer.Doll_Ear.setAnimation(0, SpineAnims.EarAnim.Action1, false);\r\n\r\n        this.NodeContainer.Doll_Poke.getComponent(cc.Animation).play(\"Poke_Anim1\");\r\n\r\n\r\n      }\r\n\r\n      else {\r\n        this.NodeContainer.Doll_Ear.setAnimation(0, SpineAnims.EarAnim.Action2, false);\r\n\r\n        this.NodeContainer.Doll_Poke.getComponent(cc.Animation).play(\"Poke_Anim2\");\r\n\r\n        this.donePA();\r\n      }\r\n\r\n      this.NodeContainer.Flow2_Tool.active = false;\r\n\r\n      this.NodeContainer.Flow2_Tool.opacity = 0;\r\n\r\n      this.NodeContainer.Flow2_Tool.setPosition(this.NodeContainer.initPosTool_Flow2);\r\n\r\n      this.setCompleteSpine(this.NodeContainer.Doll_Ear);\r\n    }\r\n  }\r\n\r\n\r\n  private donePA(): void {\r\n    Constants.isToStore = true;\r\n  }\r\n\r\n\r\n  protected update(dt: number): void {\r\n    !this.isActiveRemoveSound4 && this.getCurentTimeOfTrack();\r\n  }\r\n\r\n}\r\n"]}