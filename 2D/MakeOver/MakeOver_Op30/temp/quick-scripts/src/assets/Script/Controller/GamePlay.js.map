{"version":3,"sources":["assets\\Script\\Controller\\GamePlay.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import { SpineAnims } from \"../Data/Anims\";\r\nimport { Constants } from \"../Data/constants\";\r\nimport AudioManager from \"../Plugin/AudioManager\";\r\nimport { GameController } from \"./GameController\";\r\nimport NodeContainer from \"./NodeContanier\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class GamePlay extends cc.Component {\r\n  @property(AudioManager)\r\n  AudioManager: AudioManager = null;\r\n  @property(GameController)\r\n  GameController: GameController = null;\r\n  @property(NodeContainer)\r\n  NodeContainer: NodeContainer = null;\r\n\r\n  @property(cc.Node)\r\n  star: cc.Node = null;\r\n  @property(cc.Node)\r\n  star1: cc.Node = null;\r\n  @property(cc.Node)\r\n  star2: cc.Node = null;\r\n  @property(sp.Skeleton)\r\n  sp_mouth: sp.Skeleton = null;\r\n\r\n\r\n  // Tools\r\n  @property(sp.Skeleton)\r\n  sp_dryer: sp.Skeleton = null;\r\n  @property(cc.Node)\r\n  Teeth_scum: cc.Node = null;\r\n  @property(cc.Node)\r\n  Options: cc.Node = null;\r\n  @property(cc.Node)\r\n  hand: cc.Node = null;\r\n\r\n  // state\r\n  tweezersStartPos: cc.Vec2 = null;\r\n  tweezersPointStartPos: cc.Vec2 = null;\r\n\r\n  isInitVars: boolean = false;\r\n  isRunFlow1: boolean = false;\r\n  checkDryerFlag: boolean = false;\r\n  checkshowTweezersFlag: boolean = false;\r\n  isRemovingMaggot: boolean = false;\r\n  checkToothPasteFlag: boolean = false;\r\n  checkBrushTeethFlag: boolean = false;\r\n  isDoneToothPasteFlag: boolean = false;\r\n\r\n\r\n  DryerPoint: cc.Node = null;\r\n  DryerToMouthArea: cc.Node = null;\r\n  DryerSpine: sp.Skeleton = null;\r\n\r\n  toothPastePoint: cc.Node = null;\r\n  toothPasteSpine: sp.Skeleton = null;\r\n  toothPasteHeadPoint: cc.Node = null;\r\n\r\n  WaterBubblePoint: cc.Node = null;\r\n  WaterBubbleSpine: sp.Skeleton = null;\r\n  WaterBubbleHeadPoint: cc.Node = null;\r\n\r\n  initPos: cc.Vec2[] = [];\r\n\r\n\r\n  protected onLoad(): void {\r\n    this.Options.active = false;\r\n  }\r\n\r\n\r\n  private initVariables(): void {\r\n    this.isInitVars = true;\r\n    this.DryerPoint = this.NodeContainer.dryer.getChildByName(\"Point_Dryer\");\r\n    this.DryerSpine = this.NodeContainer.dryer.getChildByName(\"sp_dryer\").getComponent(sp.Skeleton);\r\n    this.DryerToMouthArea = this.NodeContainer.dryer.getChildByName(\"Point_Mouth\");\r\n\r\n    this.toothPastePoint = this.NodeContainer.toothPaste.getChildByName(\"Point_Tooth\");\r\n    this.toothPasteSpine = this.NodeContainer.toothPaste.getChildByName(\"sp_Tooth\").getComponent(sp.Skeleton);\r\n    this.toothPasteHeadPoint = this.NodeContainer.toothPaste.getChildByName(\"HeadPoint_Tooth\");\r\n\r\n    this.WaterBubblePoint = this.NodeContainer.waterTooth.getChildByName(\"Point_WaterTooth\");\r\n    this.WaterBubbleSpine = this.NodeContainer.waterTooth.getChildByName(\"sp_WaterTooth\").getComponent(sp.Skeleton);\r\n    this.WaterBubbleHeadPoint = this.NodeContainer.waterTooth.getChildByName(\"HeadPoint_WaterTooth\");\r\n\r\n    this.initPos[0] = this.WaterBubblePoint.getPosition();\r\n    this.initPos[1] = this.WaterBubbleSpine.node.getPosition();\r\n    this.initPos[2] = this.WaterBubbleHeadPoint.getPosition();\r\n  }\r\n\r\n\r\n  protected start(): void {\r\n    this.AudioManager.playSound(Constants.SoundTrack.bgSound);\r\n\r\n    // to store if user click in intro \r\n    this.NodeContainer.HideMask.on(cc.Node.EventType.TOUCH_START, this.GameController.installHandle, this);\r\n\r\n    this.initVariables();\r\n    this.showIntro();\r\n\r\n    // debug\r\n    // this.showTools(this.NodeContainer.dryer, true);\r\n  }\r\n\r\n\r\n  private showIntro(): void {\r\n    // active sound intro\r\n    this.AudioManager.playSound(Constants.SoundTrack.walkSound);\r\n\r\n    // declare vars\r\n    let Delight_Intro = this.NodeContainer.intro.getChildByName(\"Delight\");\r\n    let spine_Delight: sp.Skeleton = Delight_Intro.getChildByName(\"Spine_Delight\").getComponent(sp.Skeleton);\r\n    let Spider_Intro = this.NodeContainer.intro.getChildByName(\"Spider\");\r\n    let Overlay_Intro = this.NodeContainer.UI.getChildByName(\"Overlay\");\r\n\r\n    // scale intro\r\n    cc.tween(Delight_Intro)\r\n      .to(4, { scale: 1.15 })\r\n      .start();\r\n\r\n    // caculated time to active/unactive Intro steps & sounds\r\n    this.scheduleOnce(() => {\r\n      Spider_Intro.active = true;\r\n      this.AudioManager.stopSound(Constants.SoundTrack.walkSound);\r\n    }, 1.5);\r\n    this.scheduleOnce(() => { this.AudioManager.playSound(Constants.SoundTrack.spiderSound) }, 2.5);\r\n    this.scheduleOnce(() => {\r\n      Spider_Intro.active = false;\r\n      spine_Delight.setAnimation(0, SpineAnims.Intro_DollAnim.Scare, false);\r\n    }, 3.2);\r\n    this.scheduleOnce(() => { this.AudioManager.playSound(Constants.SoundTrack.hmmSound) }, 5);\r\n    this.scheduleOnce(() => { this.AudioManager.playSound(Constants.SoundTrack.scareSound) }, 6.5);\r\n    this.scheduleOnce(() => {\r\n      cc.tween(Overlay_Intro)\r\n        .to(1, { opacity: 255 })\r\n        .to(1, { opacity: 0 })\r\n        .start();\r\n    }, 7);\r\n    this.scheduleOnce(() => {\r\n      this.NodeContainer.MainGame.active = true;\r\n\r\n      cc.tween(this.NodeContainer.MainGame)\r\n        .to(1, { scale: 1.1 })\r\n        .to(1, { scale: 1 })\r\n        .start();\r\n    }, 8);\r\n\r\n    this.scheduleOnce(() => {\r\n      // off click to store if user watch full intro\r\n      // To store\r\n      // this.NodeContainer.HideMask.off(cc.Node.EventType.TOUCH_START);\r\n\r\n      this.showTools(this.NodeContainer.dryer, true);\r\n    }, 10);\r\n  }\r\n\r\n\r\n  private showHint(): void {\r\n    this.hand.active = true;\r\n    cc.tween(this.hand)\r\n    .to(0.5, {opacity: 255})\r\n    .call(() => {\r\n      this.hand.getComponent(cc.Animation).play(\"Hand_HintAnim\");\r\n    })\r\n    .start()\r\n  }\r\n\r\n\r\n  private hideAnim(node: cc.Node) {\r\n    cc.tween(node)\r\n      .to(0.5, { opacity: 0 })\r\n      .start();\r\n  }\r\n\r\n\r\n  private showTools(tool: cc.Node, isActive: boolean): void {\r\n    if(!isActive) tool.active = true;\r\n    this.AudioManager.playSound(Constants.SoundTrack.moveItemSound);\r\n    let position = tool.getPosition();\r\n    tool.setPosition(position.x - 30, position.y);\r\n    cc.tween(tool)\r\n      .to(0.5, { x: position.x, opacity: 255 })\r\n      .start();\r\n\r\n    this.showHint();\r\n  }\r\n\r\n\r\n  public handleDoneDryer(): void {\r\n    let pointBdx = this.DryerPoint.getBoundingBox();\r\n    let areaBdx = this.DryerToMouthArea.getBoundingBox();\r\n    if (pointBdx.intersects(areaBdx)) {\r\n      this.AudioManager.playSound(Constants.SoundTrack.drySound);\r\n\r\n      this.checkDryerFlag = true;\r\n      this.sp_dryer.node.active = true;\r\n      this.Teeth_scum.getComponent(cc.Animation).play();\r\n      this.sp_mouth.setAnimation(0, SpineAnims.LipsAnim.Dry, true);\r\n\r\n      this.scheduleOnce(() => {\r\n        cc.tween(this.sp_dryer.node)\r\n        .to(1.5, { opacity: 0 })\r\n        .call(() => {\r\n          Constants.isDoneDryer = true;\r\n          this.sp_mouth.setAnimation(0, SpineAnims.LipsAnim.Idle, false);\r\n          this.star.getComponent(cc.Animation).play(\"StarAnim\");\r\n          this.AudioManager.playSound(Constants.SoundTrack.DoneStepSound);\r\n          this.sp_mouth.setAnimation(0, SpineAnims.LipsAnim.DirtySmell, true);\r\n        })\r\n        .start();\r\n      }, 2);\r\n\r\n      this.DryerPoint.active = false;\r\n      this.DryerToMouthArea.active = false;\r\n      this.DryerSpine.node.active = false;\r\n    }\r\n  }\r\n\r\n\r\n  public checkCollideBubblePoints = (bdx: cc.Rect): void => {\r\n    for (let i = 0; i < Constants.toothPaste_Points.length; i++) {\r\n      let currentNode = Constants.toothPaste_Points[i];\r\n      if (currentNode.getBoundingBox().intersects(bdx)) {\r\n        Constants.isTouchToothPaste = true;\r\n        for (let j = 0; j < Constants.toothPaste_PointsStatus.length; j++) {\r\n          if (!Constants.toothPaste_PointsStatus[j]) {\r\n            Constants.toothPaste_PointsStatus[j] = true;\r\n            Constants.toothPaste_Points.splice(i, 1);\r\n            !this.AudioManager.toothPaste1Sound.isPlaying && this.AudioManager.playSound(Constants.SoundTrack.toothPaste1Sound);\r\n            Constants.spine_Bubbles[i].setAnimation(0, SpineAnims.bubbleAnim.Show, false);\r\n            Constants.spine_Bubbles.splice(i, 1);\r\n\r\n            if (Constants.toothPaste_PointsStatus.every(status => status === true)) {\r\n              Constants.isCanTouch = false;\r\n              Constants.isDoneToothPaste = true;\r\n              this.NodeContainer.toothPaste.active = false;      \r\n              console.log(\"Done Tooth Paste \");\r\n            }\r\n            break;\r\n          }\r\n        }\r\n        break;\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n  public checkBrushTeeth = (bdx: cc.Rect): void => {\r\n    for (let i = 0; i < Constants.Water_Points.length; i++) {\r\n      let currentNode = Constants.Water_Points[i];\r\n      if (currentNode.getBoundingBox().intersects(bdx)) {\r\n        Constants.isTouchToothPaste = true;\r\n        for (let j = 0; j < Constants.water_PointsStatus.length; j++) {\r\n          if (!Constants.water_PointsStatus[j]) {\r\n            Constants.water_PointsStatus[j] = true;\r\n            Constants.Water_Points.splice(i, 1);\r\n    \r\n            Constants.spine_WaterBubbles[i].setAnimation(0, SpineAnims.bubbleAnim.Clean, false);\r\n            Constants.spine_WaterBubbles.splice(i, 1);\r\n\r\n            if (Constants.water_PointsStatus.every(status => status === true)) {\r\n              Constants.isCanTouch = false;\r\n              Constants.isDoneWaterBrush = true;\r\n              this.NodeContainer.waterTooth.active = false;\r\n              this.AudioManager.stopSound(Constants.SoundTrack.toothPaste2Sound);\r\n              console.log(\"Done Water Bubble \");\r\n            }\r\n            break;\r\n          }\r\n        }\r\n        break;\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n\r\n  private showToothPaste(): void {\r\n    this.checkToothPasteFlag = true;\r\n\r\n    this.scheduleOnce(() => {\r\n      this.showTools(this.NodeContainer.toothPaste, false);\r\n    }, 1.5);\r\n\r\n    this.scheduleOnce(() => {this.AudioManager.playSound(Constants.SoundTrack.ShakeBrush)}, 1.8);\r\n    this.scheduleOnce(() => {this.AudioManager.playSound(\r\n      Constants.SoundTrack.shampooSound)\r\n      Constants.isCanTouch = true;\r\n    }, 3.5);\r\n  } \r\n\r\n\r\n  private showOptions(): void {\r\n    this.checkBrushTeethFlag = true;\r\n    this.AudioManager.playSound(Constants.SoundTrack.DoneStepSound);\r\n    this.star2.getComponent(cc.Animation).play(\"StarAnim\");\r\n\r\n    this.scheduleOnce(() => {\r\n      this.Options.active = true;\r\n      this.Options.getComponent(cc.Animation).play(\"ShowOptions\");\r\n\r\n      // mtg & applovin\r\n      // this.NodeContainer.HideMask.on(cc.Node.EventType.TOUCH_START, this.GameController.installHandle, this);\r\n    }, 1.5)\r\n  }\r\n\r\n\r\n  private showToothBrush(): void {\r\n    this.isDoneToothPasteFlag = true;\r\n    this.sp_mouth.setAnimation(0, SpineAnims.LipsAnim.Idle, true);\r\n\r\n    this.scheduleOnce(() => {\r\n      Constants.isCanTouch = true;\r\n      this.showTools(this.NodeContainer.waterTooth, false);\r\n\r\n      this.WaterBubblePoint.setPosition(this.initPos[0])\r\n      this.WaterBubbleSpine.node.setPosition(this.initPos[1])\r\n      this.WaterBubbleHeadPoint.setPosition(this.initPos[2])\r\n    }, 1.5);\r\n  }\r\n\r\n\r\n  protected update(dt: number): void {\r\n    !this.checkDryerFlag && this.isInitVars && this.handleDoneDryer();\r\n    Constants.isDoneDryer && !this.checkToothPasteFlag && this.showToothPaste();\r\n    Constants.isDoneToothPaste && !this.isDoneToothPasteFlag && this.showToothBrush();\r\n    Constants.isDoneWaterBrush && !this.checkBrushTeethFlag && this.showOptions();\r\n  }\r\n\r\n}\r\n"]}