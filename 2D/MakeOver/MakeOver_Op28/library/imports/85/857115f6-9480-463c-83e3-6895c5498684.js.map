{"version":3,"sources":["assets\\Script\\Controller\\TouchAreaController.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AACA,+CAA8C;AAC9C,uDAAkD;AAClD,mDAAkD;AAClD,uCAAkC;AAClC,2CAAsC;AACtC,iDAA4C;AAEtC,IAAA,KAAwB,EAAE,CAAC,UAAU,EAAnC,OAAO,aAAA,EAAE,QAAQ,cAAkB,CAAC;AAG5C;IAAyC,uCAAY;IAArD;QAAA,qEAwGC;QAvGC,YAAY;QAEZ,gBAAU,GAAe,IAAI,CAAC;QAE9B,mBAAa,GAAkB,IAAI,CAAC;QAEpC,kBAAY,GAAiB,IAAI,CAAC;QAElC,oBAAc,GAAmB,IAAI,CAAC;QAEtC,cAAQ,GAAa,IAAI,CAAC;QAG1B,QAAQ;QACR,aAAO,GAAY,KAAK,CAAC;;IAyF3B,CAAC;IAtFW,oCAAM,GAAhB;IAEA,CAAC;IAGS,mCAAK,GAAf;QACE,IAAI,CAAC,aAAa,EAAE,CAAC;IACvB,CAAC;IAGO,2CAAa,GAArB;QACE,IAAI,CAAC,aAAa,CAAC,UAAU,CAAC,EAAE,CAAC,EAAE,CAAC,IAAI,CAAC,SAAS,CAAC,WAAW,EAAE,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,CAAC;QACvF,IAAI,CAAC,aAAa,CAAC,UAAU,CAAC,EAAE,CAAC,EAAE,CAAC,IAAI,CAAC,SAAS,CAAC,WAAW,EAAE,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,CAAC;QAEvF,IAAI,CAAC,aAAa,CAAC,UAAU,CAAC,EAAE,CAAC,EAAE,CAAC,IAAI,CAAC,SAAS,CAAC,WAAW,EAAE,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,CAAC;QACvF,IAAI,CAAC,aAAa,CAAC,UAAU,CAAC,EAAE,CAAC,EAAE,CAAC,IAAI,CAAC,SAAS,CAAC,WAAW,EAAE,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,CAAC;QAEvF,IAAI,CAAC,aAAa,CAAC,UAAU,CAAC,EAAE,CAAC,EAAE,CAAC,IAAI,CAAC,SAAS,CAAC,WAAW,EAAE,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,CAAC;QACvF,IAAI,CAAC,aAAa,CAAC,UAAU,CAAC,EAAE,CAAC,EAAE,CAAC,IAAI,CAAC,SAAS,CAAC,WAAW,EAAE,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,CAAC;QAEvF,gGAAgG;IAClG,CAAC;IAGO,gDAAkB,GAA1B,UAA2B,CAAM;QAC/B,qBAAS,CAAC,OAAO,IAAI,IAAI,CAAC,cAAc,CAAC,aAAa,EAAE,CAAC;QACzD,iBAAiB;QACjB,0EAA0E;QAE1E,aAAa;QACb,+CAA+C;IACjD,CAAC;IAGO,yCAAW,GAAnB;QACE,qBAAS,CAAC,UAAU,GAAG,KAAK,CAAC;IAC/B,CAAC;IAGO,wCAAU,GAAlB,UAAmB,CAAM;QACvB,qBAAS,CAAC,OAAO,IAAI,IAAI,CAAC,cAAc,CAAC,aAAa,EAAE,CAAC;QACzD,+CAA+C;QAC/C,qCAAqC;QACrC,yDAAyD;QACzD,+BAA+B;QAC/B,oBAAoB;QACpB,mBAAmB;QACnB,qCAAqC;QACrC,aAAa;QACb,mBAAmB;QACnB,qCAAqC;QACrC,aAAa;QACb,mBAAmB;QACnB,qCAAqC;QACrC,aAAa;QACb,mBAAmB;QACnB,qCAAqC;QACrC,aAAa;QACb,mBAAmB;QACnB,2CAA2C;QAC3C,aAAa;QACb,mBAAmB;QACnB,2CAA2C;QAC3C,aAAa;QAEb,aAAa;QACb,aAAa;QACb,IAAI;IACN,CAAC;IAGO,uCAAS,GAAjB,UAAkB,CAAW;QAC3B,IAAI,CAAC,qBAAS,CAAC,UAAU,IAAI,qBAAS,CAAC,UAAU,CAAC,SAAS;YAAE,OAAO;IAEtE,CAAC;IAGO,sCAAQ,GAAhB,UAAiB,CAAW;QAC1B,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;QACrB,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,qBAAS,CAAC,UAAU,CAAC,UAAU,CAAC,CAAA;QAC5D,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,IAAI,GAAG,KAAK,CAAC;IAC5C,CAAC;IAES,oCAAM,GAAhB,UAAiB,EAAU;QACzB,IAAI,CAAC,OAAO,GAAG,qBAAS,CAAC,OAAO,CAAC;IACnC,CAAC;IApGD;QADC,QAAQ,CAAC,oBAAU,CAAC;2DACS;IAE9B;QADC,QAAQ,CAAC,uBAAa,CAAC;8DACY;IAEpC;QADC,QAAQ,CAAC,sBAAY,CAAC;6DACW;IAElC;QADC,QAAQ,CAAC,+BAAc,CAAC;+DACa;IAEtC;QADC,QAAQ,CAAC,kBAAQ,CAAC;yDACO;IAXf,mBAAmB;QAD/B,OAAO;OACK,mBAAmB,CAwG/B;IAAD,0BAAC;CAxGD,AAwGC,CAxGwC,EAAE,CAAC,SAAS,GAwGpD;AAxGY,kDAAmB","file":"","sourceRoot":"/","sourcesContent":["import { Ultils } from \"../Data/Ultils\";\r\nimport { Constants } from \"../Data/constants\";\r\nimport AudioManager from \"../Plugin/AudioManager\";\r\nimport { GameController } from \"./GameController\";\r\nimport GamePlay from \"./GamePlay\";\r\nimport IronSource from \"./IronSource\";\r\nimport NodeContainer from \"./NodeContanier\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport class TouchAreaController extends cc.Component {\r\n  // Component\r\n  @property(IronSource)\r\n  IronSource: IronSource = null;\r\n  @property(NodeContainer)\r\n  NodeContainer: NodeContainer = null;\r\n  @property(AudioManager)\r\n  AudioManager: AudioManager = null;\r\n  @property(GameController)\r\n  GameController: GameController = null;\r\n  @property(GamePlay)\r\n  GamePlay: GamePlay = null;\r\n\r\n\r\n  // state\r\n  isTouch: boolean = false;\r\n\r\n\r\n  protected onLoad() {\r\n\r\n  }\r\n\r\n\r\n  protected start() {\r\n    this.registerEvent();\r\n  }\r\n\r\n\r\n  private registerEvent(): void {\r\n    this.NodeContainer.Flow1_Opt1.on(cc.Node.EventType.TOUCH_START, this.touchStart, this);\r\n    this.NodeContainer.Flow1_Opt2.on(cc.Node.EventType.TOUCH_START, this.touchStart, this);\r\n\r\n    this.NodeContainer.Flow2_Opt1.on(cc.Node.EventType.TOUCH_START, this.touchStart, this);\r\n    this.NodeContainer.Flow2_Opt2.on(cc.Node.EventType.TOUCH_START, this.touchStart, this);\r\n\r\n    this.NodeContainer.Flow3_Opt1.on(cc.Node.EventType.TOUCH_START, this.touchStart, this);\r\n    this.NodeContainer.Flow3_Opt2.on(cc.Node.EventType.TOUCH_START, this.touchStart, this);\r\n\r\n    // this.NodeContainer.HideMask.on(cc.Node.EventType.TOUCH_START, this.hideMaskTouchStart, this);\r\n  }\r\n\r\n\r\n  private hideMaskTouchStart(e: any): void {\r\n    Constants.toStore && this.GameController.installHandle();\r\n    // mtg & applovin\r\n    // Constants.optionDoneLength >= 3 && this.GameController.installHandle();\r\n\r\n    // ironsource\r\n    // this.IronSource.handleIronSourcePlaySound();\r\n  }\r\n\r\n\r\n  private enableTouch(): void {\r\n    Constants.isCanTouch = false;\r\n  }\r\n\r\n\r\n  private touchStart(e: any): void {\r\n    Constants.toStore && this.GameController.installHandle();\r\n    // this.IronSource.handleIronSourcePlaySound();\r\n    // if (!Constants.isCanTouch) return;\r\n    // Constants.optionDoneLength <= 2 && this.enableTouch();\r\n    // let target = e.target._name;\r\n    // switch (target) {\r\n    //   case \"item_1\":\r\n    //     this.GamePlay.runFlow1_Opt1();\r\n    //     break;\r\n    //   case \"item_2\":\r\n    //     this.GamePlay.runFlow1_Opt2();\r\n    //     break;\r\n    //   case \"item_3\":\r\n    //     this.GamePlay.runFlow2_Opt1();\r\n    //     break;\r\n    //   case \"item_4\":\r\n    //     this.GamePlay.runFlow2_Opt2();\r\n    //     break;\r\n    //   case \"item_5\":\r\n    //     this.GameController.installHandle();\r\n    //     break;\r\n    //   case \"item_6\":\r\n    //     this.GameController.installHandle();\r\n    //     break;\r\n\r\n    //   default:\r\n    //     break;\r\n    // }\r\n  }\r\n\r\n\r\n  private touchMove(e: cc.Touch): void {\r\n    if (!Constants.isCanTouch || Constants.ironSource.isEndGame) return;\r\n\r\n  }\r\n\r\n\r\n  private touchEnd(e: cc.Touch): void {\r\n    this.isTouch = false;\r\n    this.AudioManager.stopSound(Constants.SoundTrack.cleanSound)\r\n    this.AudioManager.cleanSound.loop = false;\r\n  }\r\n\r\n  protected update(dt: number): void {\r\n    this.isTouch = Constants.isTouch;\r\n  }\r\n}\r\n"]}