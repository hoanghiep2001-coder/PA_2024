{"version":3,"sources":["assets\\Script\\Controller\\LoadFoodController.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import { Constants } from \"../Data/constants\";\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\n@ccclass\r\nexport default class LoadFoodController extends cc.Component {\r\n    @property(cc.Node)\r\n    overlay: cc.Node = null;\r\n    @property(cc.Label)\r\n    label: cc.Label = null;\r\n\r\n    @property([cc.Label])\r\n    unitCosts: cc.Label[] = [];\r\n    @property([cc.Node])\r\n    unitFrames: cc.Node[] = [];\r\n\r\n\r\n    protected start(): void {\r\n        // this.label.string = String(Constants.food);\r\n    }\r\n\r\n\r\n    public increaseFood(): void {\r\n        this.overlay.scaleX = 0;\r\n        \r\n        if(Constants.isPauseGame) return;\r\n\r\n        cc.tween(this.overlay)\r\n        .to(1.5, {scaleX: 1})\r\n        .call(() => {\r\n            Constants.food += 1;\r\n            this.increaseFood();\r\n        })\r\n        .start();\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    private checkEnableCost(): void {\r\n        for (let index = 0; index < this.unitCosts.length; index++) {\r\n            const label = this.unitCosts[index];\r\n            if(Number(this.label.string) >= Number(label.string)) {\r\n                if(index === 0) {\r\n                    this.unitFrames[index].opacity = 255;\r\n                    label.node.color = cc.Color.WHITE;\r\n                }\r\n                if(index === 1 && Constants.isCanBuyArmyLv2) {\r\n                    this.unitFrames[index].opacity = 255;\r\n                    label.node.color = cc.Color.WHITE;\r\n                }\r\n                if(index === 2 && Constants.isCanBuyArmyLv3) {\r\n                    this.unitFrames[index].opacity = 255;\r\n                    label.node.color = cc.Color.WHITE;\r\n                }\r\n            } else {\r\n                label.node.color = cc.Color.RED;\r\n                if(index === 1 && Constants.isCanBuyArmyLv2) this.unitFrames[index].opacity = 255;\r\n                if(index === 2 && Constants.isCanBuyArmyLv3) this.unitFrames[index].opacity = 255;\r\n                this.unitFrames[index].opacity = 0;\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    protected update(dt: number): void {\r\n        // if(Constants.isPauseGame) return;\r\n        this.label.string = String(Constants.food);\r\n\r\n        this.checkEnableCost();\r\n    }\r\n}\r\n"]}