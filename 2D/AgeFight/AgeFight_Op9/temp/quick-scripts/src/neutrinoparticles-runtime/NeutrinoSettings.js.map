{"version":3,"sources":["packages\\neutrinoparticles\\runtime\\NeutrinoSettings.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAM,IAAA,KAAsB,EAAE,CAAC,UAAU,EAAlC,OAAO,aAAA,EAAE,QAAQ,cAAiB,CAAC;AAE1C;;;;;;;GAOG;AAGH;IAA8C,oCAAY;IAA1D;QAAA,qEAwBC;QAtBG,wBAAkB,GAAG,IAAI,CAAC;QAG1B,+BAAyB,GAAG,EAAE,CAAC;QAG/B,wBAAkB,GAAG,IAAI,CAAC;;IAgB9B,CAAC;yBAxBoB,gBAAgB;IAU1B,yBAAQ,GAAf;QACI,IAAM,MAAM,GAAG,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QACjC,IAAI,CAAC,MAAM,EAAE;YACT,OAAO,IAAI,CAAC;SACf;QAED,IAAI,QAAQ,GAAG,MAAM,CAAC,YAAY,CAAC,kBAAgB,CAAC,CAAC;QACrD,IAAI,CAAC,QAAQ,EAAE;YACX,QAAQ,GAAG,MAAM,CAAC,YAAY,CAAC,kBAAgB,CAAC,CAAC;YACjD,QAAQ,CAAC,kBAAkB,GAAG,MAAM,CAAC;SACxC;QAED,OAAO,QAAQ,CAAC;IACpB,CAAC;;IArBD;QADC,QAAQ,CAAC,EAAE,CAAC,IAAI,CAAC;gEACQ;IAG1B;QADC,QAAQ;uEACsB;IAG/B;QADC,QAAQ,CAAC,EAAE,CAAC,WAAW,CAAC;gEACC;IART,gBAAgB;QADnC,OAAO;OACY,gBAAgB,CAwBpC;IAAD,uBAAC;CAxBD,AAwBC,CAxB6C,EAAE,CAAC,SAAS,GAwBzD;kBAxBoB,gBAAgB;AA0BrC,EAAE,CAAC,gBAAgB,GAAG,gBAAgB,CAAC","file":"","sourceRoot":"/","sourcesContent":["const {ccclass, property} = cc._decorator;\r\n\r\n/**\r\n * NeutrinoSettings component is a container for default values of NeutrinoComponent\r\n * properties. Instance of this class should be a singleton in the scope of a scene\r\n * and has to be accessed only via cc.NeutrinoSettings.instance() static method. This\r\n * method creates a node with name '__NeutrinoParticles__' in the root of the scene\r\n * and attaches NeutrinoSettings component to it. Further properties of the component\r\n * can be changed in the editor or programmatically.\r\n */\r\n\r\n @ccclass\r\nexport default class NeutrinoSettings extends cc.Component {\r\n    @property(cc.Node)\r\n    defaultWorldParent = null;\r\n\r\n    @property\r\n    defaultTexturesPrefixPath = '';\r\n\r\n    @property(cc.SpriteAtlas)\r\n    defaultSpriteAtlas = null;\r\n\r\n    static instance() : NeutrinoSettings {\r\n        const canvas = cc.find('Canvas');\r\n        if (!canvas) {\r\n            return null;\r\n        }\r\n\r\n        let settings = canvas.getComponent(NeutrinoSettings);\r\n        if (!settings) {\r\n            settings = canvas.addComponent(NeutrinoSettings);\r\n            settings.defaultWorldParent = canvas;\r\n        }\r\n\r\n        return settings;\r\n    }\r\n}\r\n\r\ncc.NeutrinoSettings = NeutrinoSettings;"]}