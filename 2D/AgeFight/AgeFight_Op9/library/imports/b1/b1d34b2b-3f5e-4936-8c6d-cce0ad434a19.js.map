{"version":3,"sources":["assets\\Script\\Controller\\GamePlay.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import { Constants } from \"../Data/constants\";\r\nimport AudioManager from \"../Plugin/AudioManager\";\r\nimport { GameController } from \"./GameController\";\r\nimport LoadFoodController from \"./LoadFoodController\";\r\nimport SpawnController from \"./SpawnController\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class GamePlay extends cc.Component {\r\n  @property(AudioManager)\r\n  AudioManager: AudioManager = null;\r\n  @property(GameController)\r\n  GameController: GameController = null;\r\n  @property(LoadFoodController)\r\n  LoadFoodController: LoadFoodController = null;\r\n  @property(SpawnController)\r\n  SpawnController: SpawnController = null;\r\n\r\n  // Node\r\n  @property(cc.Node)\r\n  CTA: cc.Node = null;\r\n\r\n  // state\r\n  isCollideBaseFlag: boolean = false;\r\n\r\n\r\n  protected onLoad(): void {\r\n    cc.director.getPhysicsManager().enabled = true;\r\n    let collisionManager = cc.director.getCollisionManager();\r\n    collisionManager.enabled = true;\r\n    collisionManager.enabledDrawBoundingBox = true;\r\n    // collisionManager.enabledDebugDraw = true;\r\n  }\r\n\r\n\r\n  public resetGame(): void {\r\n    Constants.allyArmies.forEach(army => army.destroy());\r\n    Constants.enemyArmies.forEach(army => army.destroy());\r\n\r\n    Constants.isStartGame = false;\r\n    Constants.isPauseGame = false;\r\n    Constants.isCanBuyArmyLv2 = false;\r\n    Constants.isCanBuyArmyLv3 = false;\r\n    Constants.isUpgrade = false;\r\n    Constants.isWin = false;\r\n    Constants.isLoose = false;\r\n    Constants.isCollideBase = false;\r\n\r\n    Constants.food = 6;\r\n    Constants.enemyDie = 0;\r\n    Constants.currentCoin = 0;\r\n    Constants.EnemyBaseHeal = 1;\r\n    Constants.AllyBaseHeal = 1;\r\n    Constants.allyArmies = [];\r\n    Constants.enemyArmies = [];\r\n\r\n    cc.director.loadScene(\"game\");\r\n  }\r\n\r\n\r\n  private initGame(): void {\r\n    Constants.allyArmies.forEach(army => army.destroy());\r\n    Constants.enemyArmies.forEach(army => army.destroy());\r\n\r\n    Constants.isStartGame = false;\r\n    Constants.isPauseGame = false;\r\n    Constants.isCanBuyArmyLv2 = false;\r\n    Constants.isCanBuyArmyLv3 = false;\r\n    Constants.isUpgrade = false;\r\n    Constants.isWin = false;\r\n    Constants.isLoose = false;\r\n    Constants.isCollideBase = false;\r\n\r\n    Constants.food = 6;\r\n    Constants.enemyDie = 0;\r\n    Constants.currentCoin = 0;\r\n    Constants.EnemyBaseHeal = 1;\r\n    Constants.AllyBaseHeal = 1;\r\n    Constants.allyArmies = [];\r\n    Constants.enemyArmies = [];\r\n  }\r\n\r\n\r\n  protected start(): void {\r\n    this.AudioManager.playSound(Constants.SoundTrack.bgSound);\r\n    this.AudioManager.bgSound.volume = 0.5;\r\n\r\n    this.initGame();\r\n\r\n    cc.view.setResizeCallback(() => {\r\n      if(Constants.ironSource.isEndGame) return;\r\n      this.resetGame();\r\n    });\r\n  }\r\n\r\n\r\n  public spawnArmy(index: number): void {\r\n    Constants.isPauseGame = false;\r\n    !Constants.isStartGame && this.LoadFoodController.increaseFood();\r\n    !Constants.isStartGame && this.SpawnController.SpawnEnemies();\r\n    Constants.isStartGame = true;\r\n\r\n    switch (index) {\r\n      case 1:\r\n        // spawn army lv1\r\n        if (Constants.food >= 3) {\r\n          Constants.food -= 3;\r\n          this.SpawnController.SpawnPlayerArmy(Constants.ArmySkin.Ally, 1);\r\n        }\r\n\r\n        break;\r\n      case 2:\r\n        // spawn army lv2\r\n        if (Constants.food >= 4 && Constants.isCanBuyArmyLv2) {\r\n          Constants.food -= 4;\r\n          this.SpawnController.SpawnPlayerArmy(Constants.ArmySkin.Ally, 2);\r\n        }\r\n        break;\r\n\r\n      case 3:\r\n        // spawn army lv3\r\n        if (Constants.food >= 5 && Constants.isCanBuyArmyLv3) {\r\n          Constants.food -= 5;\r\n          this.SpawnController.SpawnPlayerArmy(Constants.ArmySkin.Ally, 3);\r\n        }\r\n        break;\r\n      default:\r\n        console.log(\"can not spawn\");\r\n        break;\r\n    }\r\n  }\r\n\r\n}\r\n"]}