{"version":3,"sources":["assets\\Script\\Other\\Supporter.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import { Constants } from \"../Data/constants\";\r\nimport AudioManager from \"../Plugin/AudioManager\";\r\nimport Army from \"./Army\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class Supporter extends cc.Component {\r\n\r\n    @property(AudioManager)\r\n    AudioManager: AudioManager = null;\r\n\r\n    collide: cc.PhysicsCollider = null;\r\n    spine: sp.Skeleton = null;\r\n    enemyCollider: cc.PhysicsCollider = null;\r\n\r\n    isActive: boolean = false;\r\n    isDoneAttackAnim: boolean = true;\r\n\r\n\r\n    protected start(): void {\r\n        this.spine = this.getComponent(sp.Skeleton);\r\n    }\r\n\r\n\r\n    onCollisionEnter(o: cc.PhysicsCollider, s) {\r\n        if (!this.isActive || !this.isDoneAttackAnim) return;\r\n\r\n        \r\n        if (o.tag === 2) {\r\n            !(this.spine.animation === \"Attack\") && Constants.isStartGame && this.Attack(o);\r\n            this.enemyCollider = o;\r\n        }\r\n    }\r\n\r\n\r\n    onCollisionStay(o: cc.PhysicsCollider, s) {\r\n        if (!this.isActive || !this.isDoneAttackAnim) return;\r\n        if (o.tag === 2) {\r\n            !(this.spine.animation === \"Attack\") && Constants.isStartGame && this.Attack(o);\r\n            this.enemyCollider = o;\r\n        }\r\n    }\r\n\r\n\r\n    onCollisionExit(o, s) {\r\n        if (!this.isActive) return;\r\n        this.spine.setAnimation(0, Constants.SupporterAnim.Idle, true);\r\n    }\r\n\r\n\r\n    private Attack(o: cc.PhysicsCollider): void {\r\n        this.isDoneAttackAnim = false;\r\n\r\n        this.spine.setAnimation(0, Constants.SupporterAnim.Attack, true);\r\n        this.spine.setCompleteListener((trackEntry: sp.spine.TrackEntry) => {\r\n            this.isDoneAttackAnim = true;\r\n            \r\n            if (trackEntry.animation.name === \"Attack\") {\r\n\r\n                this.node.name === \"Spine_Cauda\" && this.AudioManager.playSound(Constants.SoundTrack.earthQuakeSound);\r\n\r\n                if(this.node.name === \"spine_Phao\") {\r\n                    let spine = this.node.getChildByName(\"Blast\").getComponent(sp.Skeleton);\r\n                    spine.node.active = true;\r\n                    this.node.getChildByName(\"Blast\").getComponent(sp.Skeleton).setAnimation(0, \"2\", false);\r\n                }\r\n\r\n                if (o) {\r\n                    o.getComponent(Army).checkDie();\r\n                    this.node.name === \"spine_Phao\" && this.AudioManager.playSound(Constants.SoundTrack.BoomSound);\r\n                    this.node.name === \"Spine_Laze\" && this.AudioManager.playSound(Constants.SoundTrack.lazerSound);\r\n                }\r\n            }\r\n        })\r\n    }\r\n}\r\n"]}