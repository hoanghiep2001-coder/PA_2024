{"version":3,"sources":["assets\\Script\\Controller\\SpawnController.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import { Constants } from \"../Data/constants\";\r\nimport Army from \"../Other/Army\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class SpawnController extends cc.Component {\r\n\r\n    @property([cc.Node])\r\n    AllyPoints: cc.Node[] = [];\r\n    @property([cc.Node])\r\n    EnemyPoints: cc.Node[] = [];\r\n\r\n    @property(cc.Prefab)\r\n    Army_Lv1: cc.Prefab = null;\r\n    @property(cc.Prefab)\r\n    Army_Lv2: cc.Prefab = null;\r\n    @property(cc.Prefab)\r\n    Army_Lv3: cc.Prefab = null;\r\n\r\n\r\n    protected start(): void {\r\n        if (Constants.enemyArmies[0]) Constants.enemyArmies.splice(0, 1);\r\n        this.SpawnEnemyArmy(Constants.ArmySkin.Enemy, 2);\r\n    }\r\n\r\n\r\n    public SpawnEnemies(): void {\r\n        this.schedule(function () {\r\n            if (Constants.isPauseGame) return;\r\n            this.SpawnEnemyArmy(Constants.ArmySkin.Enemy, 1);\r\n        }, 4, cc.macro.REPEAT_FOREVER, 0.2);\r\n    }\r\n\r\n\r\n    public SpawnEnemyArmy(skin: string, level: number): void {\r\n        let random = cc.math.randomRangeInt(0, 3)\r\n        let newArmy: cc.Node;\r\n\r\n        // create Army\r\n        switch (level) {\r\n            case 1:\r\n                newArmy = cc.instantiate(this.Army_Lv1);\r\n                break;\r\n            case 2:\r\n                newArmy = cc.instantiate(this.Army_Lv2);\r\n            default:\r\n                break;\r\n        }\r\n        Constants.enemyArmies.push(newArmy);\r\n\r\n        // caculate Scale\r\n        newArmy.scaleX = -Constants.scaleArmy;\r\n        newArmy.scaleY = Constants.scaleArmy;\r\n\r\n        // set Pos\r\n        let point = this.EnemyPoints[random];\r\n        point.parent.addChild(newArmy);\r\n        newArmy.setSiblingIndex(0);\r\n        newArmy.setPosition(point.getPosition());\r\n\r\n        // set skin & group\r\n        newArmy.getComponent(Army).skin = skin;\r\n        newArmy.group = \"Enemy\";\r\n        let spine = newArmy.getChildByName(\"Spine\").getComponent(sp.Skeleton);\r\n        spine.setSkin(skin)\r\n    }\r\n\r\n\r\n    public SpawnPlayerArmy(skin: string, level: number): void {\r\n        let random = cc.math.randomRangeInt(0, 3)\r\n        let newArmy: cc.Node;\r\n\r\n\r\n        // create Army\r\n        switch (level) {\r\n            case 1:\r\n                newArmy = cc.instantiate(this.Army_Lv1);\r\n                break;\r\n            case 2:\r\n                newArmy = cc.instantiate(this.Army_Lv2);\r\n                break;\r\n            case 3:\r\n                newArmy = cc.instantiate(this.Army_Lv3);\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        Constants.allyArmies.push(newArmy);\r\n        console.log(\"Allies:\" + Constants.allyArmies.length);\r\n\r\n        // caculate Scale\r\n        newArmy.scale = Constants.scaleArmy;\r\n\r\n        // set Pos\r\n        let point = this.AllyPoints[random];\r\n        point.parent.addChild(newArmy);\r\n        newArmy.setSiblingIndex(0);\r\n        newArmy.setPosition(point.getPosition());\r\n\r\n        // set skin & group\r\n        newArmy.getComponent(Army).skin = skin;\r\n        newArmy.group = \"Ally\";\r\n        let spine = newArmy.getChildByName(\"Spine\").getComponent(sp.Skeleton);\r\n        spine.setSkin(skin);\r\n        spine.timeScale = 0.9\r\n    }\r\n\r\n\r\n}\r\n"]}