{"version":3,"sources":["assets\\Script\\Controller\\CoinController.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import { Constants } from \"../Data/constants\";\r\nimport AudioManager from \"../Plugin/AudioManager\";\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\n@ccclass\r\nexport default class CoinController extends cc.Component {\r\n    @property(AudioManager)\r\n    AudioManager: AudioManager = null;\r\n\r\n\r\n    @property([cc.Node])\r\n    frameUnlockArmies: cc.Node[] = [];\r\n    @property(cc.Label)\r\n    label: cc.Label = null;\r\n\r\n    tempEnemyDie: number = 0;\r\n    isTweenRunning: boolean = false;\r\n\r\n\r\n    protected start(): void {\r\n\r\n    }\r\n\r\n\r\n    public increaseCoin(fromValue: number, toValue: number) {\r\n        if (this.isTweenRunning) return;\r\n\r\n        this.AudioManager.playSound(Constants.SoundTrack.coinSound);\r\n\r\n        this.label.string = String(fromValue);\r\n        cc.tween(Constants)\r\n            .to(0.5, { currentCoin: toValue }, {\r\n                progress: (start, end, current, t) => {\r\n                    let newValue = Math.floor(cc.misc.lerp(start, end, t));\r\n                    this.label.string = newValue.toString();\r\n                    return newValue;\r\n                },\r\n            })\r\n            .call(() => {\r\n                this.isTweenRunning = false;\r\n            })\r\n            .start();\r\n    }\r\n\r\n\r\n    private checkUnlockArmy(): void {\r\n        for (let index = 0; index < this.frameUnlockArmies.length; index++) {            \r\n            const node = this.frameUnlockArmies[index];\r\n            const cost = node.getChildByName(\"Label\").getComponent(cc.Label);\r\n            if(Constants.currentCoin < Number(cost.string)) {\r\n                node.color = cc.color(113, 113, 113, 255);\r\n            } else {\r\n                node.color = cc.color(255, 255, 255, 255);\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    protected update(dt: number): void {\r\n        this.checkUnlockArmy();\r\n\r\n        if(this.tempEnemyDie !== Constants.enemyDie) {\r\n            let toValue = Constants.enemyDie * 10;\r\n            this.increaseCoin(Constants.currentCoin, toValue)\r\n        }\r\n        this.tempEnemyDie = Constants.enemyDie;\r\n    }\r\n}\r\n"]}