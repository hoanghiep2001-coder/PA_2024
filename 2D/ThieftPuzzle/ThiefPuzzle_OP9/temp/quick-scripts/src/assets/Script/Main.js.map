{"version":3,"sources":["assets\\Script\\Main.js"],"names":["cc","Class","Component","properties","Res","require","Hand","Node","posFall","RestrictedArea","ViewEnd","Enable_Click","Body_01","Body_02","Round","AreaWin","HandFake","Graphics","GraphicBackup","PosStart","HandGuild","GuildGmame","LuckyMoney","PointCollider","Rope_Audio","AudioClip","Fight_Audio","Aaaa_Audio","Hahah_Audio","onLoad","physics_manager","director","getPhysicsManager","enabled","gravity","v2","node","on","EventType","TOUCH_START","onTouchStart","TOUCH_MOVE","onTouchMove","TOUCH_END","onTouchEnd","TOUCH_CANCEL","screenW","winSize","width","screenH","height","ColorWinStatus","Color","fromHEX","ColorWaitStatus","ColorLoseStatus","ColorLine","lineWidth","FlagAudio_Rope","Backup","isCollider","FlagAdd","FlagbackupStatus","countCollider","FlagStatus","FlagMove","Fllow_Current","ArrPoint","ArrPointEdit","flagPhysic","lerpFactor","flagDoneOne","threshold","BackupPosMove","start","AddCollider","myCollider","getComponent","Collider","collider","Contact2DType","BEGIN_CONTACT","onBeginContact","END_CONTACT","onEndContact","PRE_SOLVE","onPreSolve","POST_SOLVE","onPostSolve","calculateDistanceBetweenPoints","point1","point2","dx","x","dy","y","distance","Math","sqrt","roundedDistance","round","StartAudio","event","Flag_Done","active","touchPos","getLocation","subSelf","ironSourceSoundState","audioEngine","play","setTimeout","position","lerp","isCheckDone","isOverlappingNodeB","DragMove","checkApproximatelyCollinear","checkPop","checkFalse","end","t","mul","add","_children","forEach","element","rect1","getBoundingBoxToWorld","rect2","intersects","adjustPosition","nodeA","nodeB","number","direction","normalize","newPosition","setPosition","length","posStart","getPosition","Move","onMoveComplete","DoneFn","nodeMove","flagPop","actions","i","startPos","moveSpeed","endPos","sub","mag","moveDuration","moveAction","moveTo","scaleXAction","callFunc","pop","spawnAction","spawn","push","onComplete","sequence","moveWithCallback","runAction","graphics","clear","posEnd","ArrPosNew","unshift","strokeColor","lineTo","stroke","index","DirectionVector","x1","y1","x2","y2","angle","calculateAngle","isApproximatelyCollinear","isSpace","isSpace2","_id","pointA","pointB","pointC","pointD","deviation","abs","Space1","Space2","Space3","Space4","status","DirectionVectorPhysics","deltaY","deltaX","angleInRadians","atan2","angleInDegrees","PI","FlagAudiohaha","update","dt"],"mappings":"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","sourceRoot":"/","sourcesContent":["\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n\r\n        Res: require('Res'),\r\n\r\n        Hand: cc.Node,\r\n\r\n        posFall: cc.Node,\r\n\r\n        RestrictedArea: cc.Node,\r\n\r\n        ViewEnd: cc.Node,\r\n\r\n        Enable_Click: cc.Node,\r\n\r\n        Body_01: cc.Node,\r\n\r\n        Body_02: cc.Node,\r\n\r\n        Round: cc.Node,\r\n\r\n        AreaWin: cc.Node,\r\n\r\n        HandFake: cc.Node,\r\n\r\n        Graphics: cc.Node,\r\n\r\n        GraphicBackup: cc.Node,\r\n\r\n        PosStart: cc.Node,\r\n\r\n        HandGuild: cc.Node,\r\n\r\n        GuildGmame: cc.Node,\r\n\r\n        LuckyMoney: cc.Node,\r\n\r\n        PointCollider: cc.Node,\r\n\r\n        // \r\n\r\n        Rope_Audio: cc.AudioClip,\r\n\r\n        Fight_Audio: cc.AudioClip,\r\n\r\n        Aaaa_Audio: cc.AudioClip,\r\n\r\n        Hahah_Audio: cc.AudioClip,\r\n    },\r\n\r\n    onLoad() {\r\n        let physics_manager = cc.director.getPhysicsManager();\r\n        physics_manager.enabled = true;\r\n        physics_manager.gravity = cc.v2(0, 0);\r\n        // cc.director.getPhysicsManager().debugDrawFlags = cc.PhysicsManager.DrawBits.e_aabbBit |\r\n        //     cc.PhysicsManager.DrawBits.e_pairBit |\r\n        //     cc.PhysicsManager.DrawBits.e_centerOfMassBit |\r\n        //     cc.PhysicsManager.DrawBits.e_joinBit |\r\n        //     cc.PhysicsManager.DrawBits.e_shapeBit\r\n        this.node.on(cc.Node.EventType.TOUCH_START, this.onTouchStart, this);\r\n        this.node.on(cc.Node.EventType.TOUCH_MOVE, this.onTouchMove, this);\r\n\r\n        this.node.on(cc.Node.EventType.TOUCH_END, this.onTouchEnd, this);\r\n        this.node.on(cc.Node.EventType.TOUCH_CANCEL, this.onTouchEnd, this);\r\n\r\n        let screenW = cc.winSize.width;\r\n        let screenH = cc.winSize.height;\r\n\r\n        // if (screenW < screenH) {\r\n        //     this.lineWidth = 2;\r\n        // } else {\r\n        //     this.lineWidth = 10;\r\n        // }\r\n\r\n        this.ColorWinStatus = new cc.Color().fromHEX(\"#8DFAFF\");\r\n\r\n        this.ColorWaitStatus = new cc.Color().fromHEX(\"#000000\");\r\n\r\n        this.ColorLoseStatus = new cc.Color().fromHEX(\"#ff0000\");\r\n\r\n        this.ColorLine = this.ColorWaitStatus;\r\n\r\n        this.lineWidth;\r\n\r\n        this.FlagAudio_Rope = null;\r\n\r\n        this.Backup = null;\r\n\r\n        this.isCollider = false;\r\n\r\n        this.FlagAdd = false;\r\n\r\n        this.FlagbackupStatus = null;\r\n\r\n        this.countCollider = 0;\r\n\r\n        this.FlagStatus = false;\r\n\r\n        this.FlagMove = false;\r\n\r\n        this.Fllow_Current = 1;\r\n\r\n        this.FlagAudio_Rope = null;\r\n\r\n        this.ArrPoint = [];\r\n\r\n        this.ArrPointEdit = [];\r\n\r\n        this.flagPhysic = true;\r\n\r\n        this.lerpFactor = 0.05;\r\n\r\n        this.flagDoneOne = false;\r\n\r\n        this.threshold = 1000;\r\n\r\n        this.BackupPosMove = null;\r\n    },\r\n\r\n    start() {\r\n        // this.AddCollider(this.PointCollider);\r\n    },\r\n\r\n    AddCollider(node) {\r\n        let myCollider = node.getComponent(cc.Collider);\r\n        if (myCollider) {\r\n            collider.on(Contact2DType.BEGIN_CONTACT, this.onBeginContact, this);\r\n            collider.on(Contact2DType.END_CONTACT, this.onEndContact, this);\r\n            collider.on(Contact2DType.PRE_SOLVE, this.onPreSolve, this);\r\n            collider.on(Contact2DType.POST_SOLVE, this.onPostSolve, this);\r\n        }\r\n    },\r\n\r\n    calculateDistanceBetweenPoints(point1, point2) {\r\n        // Sử dụng phương trình khoảng cách Euclid\r\n        const dx = point2.x - point1.x;\r\n        const dy = point2.y - point1.y;\r\n        const distance = Math.sqrt(dx * dx + dy * dy);\r\n        const roundedDistance = Math.round(distance);\r\n        return roundedDistance * 8;\r\n    },\r\n\r\n    onTouchStart() {\r\n        this.Res.StartAudio();\r\n    },\r\n\r\n    onTouchMove(event) {\r\n        if (!this.Res.FlagMove) return;\r\n        if (this.Res.Flag_Done) return;\r\n        this.Res.StartAudio();\r\n        this.HandGuild.active = false;\r\n        const touchPos = event.getLocation().subSelf(cc.v2(cc.winSize.width / 2, cc.winSize.height / 2));\r\n        // const newPosition = this.node.convertToNodeSpaceAR(touchPos);\r\n        if (this.FlagAudio_Rope == null) {\r\n            if (this.Res.ironSourceSoundState) {\r\n                this.FlagAudio_Rope = cc.audioEngine.play(this.Rope_Audio, false, 1);\r\n            }\r\n            setTimeout(() => {\r\n                this.FlagAudio_Rope = null;\r\n            }, 1000);\r\n        }\r\n        this.BackupPosMove = this.Hand.position;\r\n        this.Hand.position = this.lerp(this.Hand.position, touchPos, this.lerpFactor);\r\n        this.HandFake.active = false;\r\n        this.isCheckDone();\r\n        this.isOverlappingNodeB();\r\n        this.DragMove();\r\n        this.checkApproximatelyCollinear();\r\n        this.checkPop();\r\n        this.checkFalse();\r\n    },\r\n\r\n    lerp(start, end, t) {\r\n        return start.mul(1 - t).add(end.mul(t));\r\n    },\r\n\r\n    isOverlappingNodeB() {\r\n        if (this.FlagMove) return;\r\n        this.RestrictedArea._children.forEach(element => {\r\n            const rect1 = this.Hand.getBoundingBoxToWorld();\r\n            const rect2 = element.getBoundingBoxToWorld();\r\n            if (rect1.intersects(rect2)) {\r\n                // if(element._name == 'y') {\r\n                //     this.Hand.setPosition(this.BackupPosMove.x, this.Hand.y);\r\n                // }else{\r\n                //     this.Hand.setPosition(this.Hand.x, this.BackupPosMove.y);\r\n                // }\r\n                this.adjustPosition(this.Hand, element);\r\n            }\r\n        });\r\n    },\r\n\r\n    isCheckDone() {\r\n        const rect1 = this.Hand.getBoundingBoxToWorld();\r\n        const rect2 = this.AreaWin.getBoundingBoxToWorld();\r\n        if (rect2.intersects(rect1)) {\r\n            this.FlagStatus = \"Round\";\r\n        }\r\n    },\r\n\r\n    adjustPosition(nodeA, nodeB) {\r\n        const number = 20;\r\n        const direction = cc.v2(nodeB.x - nodeA.x, nodeB.y - nodeA.y).normalize();\r\n        const distance = nodeA.width / number + nodeB.width / number;\r\n        const newPosition = cc.v2(nodeA.x - direction.x * distance, nodeA.y - direction.y * distance);\r\n        // Update the position of nodeA\r\n        this.Hand.setPosition(newPosition);\r\n    },\r\n\r\n    onTouchEnd() {\r\n        if (this.FlagStatus == \"Round\") {\r\n            if (this.ArrPoint.length == 0) {\r\n                this.ViewEnd.active = true;\r\n                return;\r\n            }\r\n            this.GuildGmame.active = false;\r\n            this.FlagMove = true;\r\n            this.RestrictedArea.active = false;\r\n            this.Round.active = false;\r\n            const posStart = this.PosStart.getPosition();\r\n            this.LuckyMoney.setPosition(this.Hand.getPosition());\r\n            this.Move(this.Hand, true);\r\n            this.Move(this.LuckyMoney, false);\r\n            this.Enable_Click = true;\r\n        } else if (this.FlagStatus == \"God\") {\r\n            return;\r\n        }\r\n\r\n    },\r\n\r\n    onMoveComplete() {\r\n        if (!this.flagDoneOne) {\r\n            this.flagDoneOne = true;\r\n            this.Res.FlagStatus = 'Win';\r\n            this.DoneFn();\r\n        }\r\n    },\r\n\r\n    Move(nodeMove, flagPop) {\r\n        const actions = [];\r\n        for (let i = this.ArrPointEdit.length - 1; i > 0; i--) {\r\n            const startPos = this.ArrPointEdit[i];\r\n            const moveSpeed = 500;\r\n            const endPos = this.ArrPointEdit[i - 1];\r\n            const distance = startPos.sub(endPos).mag();\r\n            const moveDuration = distance / moveSpeed;\r\n\r\n            const moveAction = cc.moveTo(moveDuration, endPos);\r\n\r\n            const scaleXAction = cc.callFunc(() => {\r\n                if (i != this.ArrPointEdit.length - 1 && flagPop) {\r\n                    this.ArrPoint.pop();\r\n                }\r\n            });\r\n            const spawnAction = cc.spawn(moveAction, scaleXAction);\r\n            actions.push(spawnAction);\r\n        }\r\n        let onComplete = cc.callFunc(this.onMoveComplete, this);\r\n        // Tạo sequence từ các action di chuyển và thay đổi scaleX\r\n        const sequence = cc.sequence(actions, onComplete);\r\n        var moveWithCallback = cc.sequence(sequence, onComplete);\r\n        // Áp dụng sequence vào node\r\n        nodeMove.runAction(moveWithCallback);\r\n\r\n    },\r\n\r\n    DragMove() {\r\n        const graphics = this.Graphics.getComponent(cc.Graphics);\r\n        graphics.clear();\r\n        const posStart = this.PosStart.getPosition();\r\n        const posEnd = this.Hand.getPosition();\r\n        let ArrPosNew = [];\r\n        if (this.ArrPoint.length > 0) {\r\n            this.ArrPoint.forEach(element => {\r\n                ArrPosNew.push(element.position);\r\n            });\r\n        }\r\n        ArrPosNew.unshift(posStart);\r\n        ArrPosNew.push(posEnd);\r\n        this.ArrPointEdit = ArrPosNew;\r\n        for (let i = 0; i < ArrPosNew.length - 1; i++) {\r\n            graphics.strokeColor = this.ColorLine;\r\n            // graphics.lineWidth = 3;\r\n            graphics.moveTo(ArrPosNew[i].x, ArrPosNew[i].y);\r\n            graphics.lineTo(ArrPosNew[i + 1].x, ArrPosNew[i + 1].y);\r\n            graphics.stroke();\r\n        }\r\n        const index = ArrPosNew.length;\r\n        this.DirectionVector(ArrPosNew[index - 2], ArrPosNew[index - 1]);\r\n    },\r\n\r\n    DirectionVector(posStart, posEnd) {\r\n        let x1 = posStart.x;\r\n        let y1 = posStart.y;\r\n        let x2 = posEnd.x;\r\n        let y2 = posEnd.y;\r\n        let angle = this.calculateAngle(x1, y1, x2, y2);\r\n        this.Hand.angle = angle + 140;\r\n    },\r\n\r\n    checkApproximatelyCollinear() {\r\n        // Kiểm tra xem ba điểm có gần đúng thẳng hàng hay không với ngưỡng là 5 (hoặc số khác tùy chọn)\r\n        const threshold = 200;\r\n        let isApproximatelyCollinear;\r\n        let isSpace;\r\n        let isSpace2;\r\n        this.PointCollider._children.forEach(element => {\r\n            if (this.ArrPoint.length > 0) {\r\n                if (element._id == this.ArrPoint[this.ArrPoint.length - 1]._id) {\r\n                    return;\r\n                }\r\n            }\r\n            const index = this.ArrPointEdit.length;\r\n            const pointA = this.ArrPointEdit[index - 1];\r\n            const pointB = this.ArrPointEdit[index - 2];\r\n            const pointC = this.ArrPointEdit[index - 2];\r\n            const pointD = this.ArrPointEdit[index - 1];\r\n\r\n            const deviation = Math.abs((element.y - pointA.y) * (pointB.x - pointA.x) - (element.x - pointA.x) * (pointB.y - pointA.y));\r\n            isApproximatelyCollinear = deviation < this.threshold;\r\n            const Space1 = this.calculateDistanceBetweenPoints(pointA, pointB);\r\n            const Space2 = this.calculateDistanceBetweenPoints(pointA, element);\r\n            const Space3 = this.calculateDistanceBetweenPoints(pointC, pointD);\r\n            const Space4 = this.calculateDistanceBetweenPoints(pointC, element);\r\n\r\n            isSpace = Space1 > Space2;\r\n            isSpace2 = Space3 > Space4;\r\n            if (this.ArrPoint.length == 0) {\r\n                this.Backup = null;\r\n            }\r\n            // Nếu trạng thái trước đó là không thẳng hàng và hiện tại là thẳng hàng\r\n            if (this.Backup != null) {\r\n                if (this.Backup._id == element._id) return;\r\n            }\r\n\r\n            if (isSpace && isSpace2) {\r\n                if (isApproximatelyCollinear && !this.isCollider) {\r\n                    if (this.ArrPoint.length == 0) {\r\n                        this.ArrPoint.push(element);\r\n                        this.Backup = element;\r\n                        this.FlagAdd = true;\r\n                        this.FlagbackupStatus = true;\r\n                        this.countCollider = 0;\r\n                    } else {\r\n                        if (element._id != this.Backup._id) {\r\n                            this.FlagAdd = true;\r\n                            this.countCollider = 0;\r\n                            this.ArrPoint.push(element);\r\n                            this.Backup = element;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n        });\r\n    },\r\n\r\n    checkPop() {\r\n        if (this.FlagMove) return;\r\n        const index = this.ArrPointEdit.length;\r\n        if (index <= 2) return;\r\n        const threshold = 200;\r\n        let isApproximatelyCollinear;\r\n        const graphics = this.GraphicBackup.getComponent(cc.Graphics);\r\n        let ArrPosNew = [];\r\n        graphics.clear();\r\n        const posStart = this.ArrPointEdit[index - 3];\r\n        const posEnd = this.ArrPointEdit[index - 1];\r\n        ArrPosNew.unshift(posStart);\r\n        ArrPosNew.push(posEnd);\r\n        for (let i = 0; i < ArrPosNew.length - 1; i++) {\r\n            graphics.moveTo(ArrPosNew[i].x, ArrPosNew[i].y);\r\n            graphics.lineTo(ArrPosNew[i + 1].x, ArrPosNew[i + 1].y);\r\n            graphics.stroke();\r\n        }\r\n        const pointA = posStart;\r\n        const pointB = posEnd;\r\n        const pointC = this.ArrPoint[this.ArrPoint.length - 1];\r\n        const element = pointC;\r\n\r\n        if (this.ArrPoint.length > 0) {\r\n            if (element._id == this.ArrPoint[this.ArrPoint.length - 1]._id) {\r\n                const deviation = Math.abs((element.y - pointA.y) * (pointB.x - pointA.x) - (element.x - pointA.x) * (pointB.y - pointA.y));\r\n                isApproximatelyCollinear = deviation < this.threshold;\r\n                const Space1 = this.calculateDistanceBetweenPoints(pointA, pointB);\r\n                const Space2 = this.calculateDistanceBetweenPoints(pointA, element);\r\n                const isSpace = Space1 > Space2;\r\n                let status;\r\n                if (isSpace) {\r\n                    if (isApproximatelyCollinear) {\r\n                        status = true;\r\n                    } else {\r\n                        status = false;\r\n                    }\r\n                    if (this.FlagbackupStatus != status) {\r\n                        this.FlagbackupStatus = status;\r\n                        if (!status) {\r\n                            ++this.countCollider;\r\n                            if (this.countCollider >= 2) {\r\n                                this.isCollider = false;\r\n                                this.countCollider = 1;\r\n                                this.ArrPoint.pop();\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n    },\r\n\r\n\r\n    checkFalse() {\r\n        if (this.ArrPointEdit.length > 2) {\r\n            let isApproximatelyCollinear;\r\n            let isSpace;\r\n            let isSpace2;\r\n            this.posFall._children.forEach(element => {\r\n                const index = this.ArrPointEdit.length;\r\n                const pointA = this.ArrPointEdit[index - 1];\r\n                const pointB = this.ArrPointEdit[index - 2];\r\n                const pointC = this.ArrPointEdit[index - 2];\r\n                const pointD = this.ArrPointEdit[index - 1];\r\n\r\n                const deviation = Math.abs((element.y - pointA.y) * (pointB.x - pointA.x) - (element.x - pointA.x) * (pointB.y - pointA.y));\r\n                isApproximatelyCollinear = deviation < this.threshold;\r\n                const Space1 = this.calculateDistanceBetweenPoints(pointA, pointB);\r\n                const Space2 = this.calculateDistanceBetweenPoints(pointA, element);\r\n                const Space3 = this.calculateDistanceBetweenPoints(pointC, pointD);\r\n                const Space4 = this.calculateDistanceBetweenPoints(pointC, element);\r\n\r\n                isSpace = Space1 > Space2;\r\n                isSpace2 = Space3 > Space4;\r\n\r\n                if (isSpace && isSpace2) {\r\n                    if (isApproximatelyCollinear) {\r\n                        this.FlagStatus = \"God\";\r\n                        this.Res.FlagMove = false;\r\n                        this.Res.FlagStatus = 'Lose';\r\n                        setTimeout(() => {\r\n                            this.Res.Flag_Done = true;\r\n                        }, 500);\r\n                    }\r\n                }\r\n\r\n            });\r\n        } else {\r\n            let isApproximatelyCollinear;\r\n            const posStart = this.PosStart.getPosition();\r\n            const posEnd = this.Hand.getPosition();\r\n            const pointA = posStart;\r\n            const pointB = posEnd;\r\n            this.posFall._children.forEach(element => {\r\n                const deviation = Math.abs((element.y - pointA.y) * (pointB.x - pointA.x) - (element.x - pointA.x) * (pointB.y - pointA.y));\r\n                isApproximatelyCollinear = deviation < this.threshold;\r\n                const Space1 = this.calculateDistanceBetweenPoints(pointA, pointB);\r\n                const Space2 = this.calculateDistanceBetweenPoints(pointA, element);\r\n                const isSpace = Space1 > Space2;\r\n                if (isSpace) {\r\n                    if (isApproximatelyCollinear) {\r\n                        this.FlagStatus = \"God\";\r\n                        this.Res.FlagMove = false;\r\n                        this.Res.FlagStatus = 'Lose';\r\n                        setTimeout(() => {\r\n                            this.Res.Flag_Done = true;\r\n                        }, 500);\r\n                    }\r\n                }\r\n            });\r\n        }\r\n\r\n\r\n\r\n    },\r\n\r\n    calculateDistanceBetweenPoints(point1, point2) {\r\n        // Sử dụng phương trình khoảng cách Euclid\r\n        const dx = point2.x - point1.x;\r\n        const dy = point2.y - point1.y;\r\n        const distance = Math.sqrt(dx * dx + dy * dy);\r\n        const roundedDistance = Math.round(distance);\r\n        return roundedDistance;\r\n    },\r\n\r\n    DirectionVectorPhysics(posStart, posEnd) {\r\n        let x1 = posStart.x;\r\n        let y1 = posStart.y;\r\n        let x2 = posEnd.x;\r\n        let y2 = posEnd.y;\r\n        let angle = this.calculateAngle(x1, y1, x2, y2);\r\n        return angle;\r\n    },\r\n\r\n    calculateAngle(x1, y1, x2, y2) {\r\n        // Tính hệ số góc của đoạn thẳng nối hai điểm\r\n        let deltaY = y2 - y1;\r\n        let deltaX = x2 - x1;\r\n\r\n        // Tính arctangent của hệ số góc và chuyển đổi từ radian sang độ\r\n        let angleInRadians = Math.atan2(deltaY, deltaX);\r\n\r\n        // Chuyển đổi radian sang độ\r\n        let angleInDegrees = angleInRadians * (180 / Math.PI);\r\n\r\n        // Đảm bảo góc luôn nằm trong khoảng từ 0 đến 360 độ\r\n        angleInDegrees = (angleInDegrees + 360) % 360;\r\n\r\n        return angleInDegrees;\r\n    },\r\n\r\n    DoneFn() {\r\n        this.Graphics.active = false;\r\n        this.Res.Flag_Done = true;\r\n        if (this.Res.FlagStatus == 'Win') {\r\n            this.Body_02._children[0].active = true;\r\n            if (this.Res.ironSourceSoundState) {\r\n                if (this.Res.FlagAudiohaha) {\r\n                    this.Res.FlagAudiohaha = false;\r\n                    cc.audioEngine.play(this.Hahah_Audio, false, 1);\r\n                }\r\n            }\r\n        } else {\r\n            if (this.Res.ironSourceSoundState) {\r\n                if (this.Res.FlagAudiohaha) {\r\n                    this.Res.FlagAudiohaha = false;\r\n                    cc.audioEngine.play(this.Aaaa_Audio, false, 1);\r\n                    cc.audioEngine.play(this.Fight_Audio, false, 1);\r\n                }\r\n            }\r\n            this.Body_02._children[1].active = true;\r\n        }\r\n\r\n        this.Body_01.active = false;\r\n        this.Body_02.active = true;\r\n        this.Hand.active = false;\r\n        this.Round.active = false;\r\n        this.GuildGmame.active = false;\r\n        this.LuckyMoney.active = false;\r\n        setTimeout(() => {\r\n            this.ViewEnd.active = true;\r\n        }, 1500);\r\n    },\r\n    update(dt) {\r\n\r\n        if (!this.FlagMove) {\r\n            if (this.FlagStatus == \"Round\") {\r\n                this.ColorLine = this.ColorWinStatus;\r\n            } else if (this.FlagStatus == false) {\r\n                this.ColorLine = this.ColorWaitStatus;\r\n            } else if (this.FlagStatus == \"God\") {\r\n                this.ColorLine = this.ColorLoseStatus;\r\n                this.DragMove();\r\n            }\r\n        }\r\n\r\n        if (this.FlagMove) {\r\n            this.DragMove();\r\n        }\r\n\r\n        if (this.Res.Flag_Done) {\r\n            if (!this.flagDoneOne) {\r\n                this.flagDoneOne = true;\r\n                this.DoneFn();\r\n            }\r\n        }\r\n\r\n        let screenW = cc.winSize.width;\r\n        let screenH = cc.winSize.height;\r\n        if (screenW < screenH) {\r\n            this.threshold = 200;\r\n        } else {\r\n            this.threshold = 400;\r\n        }\r\n\r\n    },\r\n});\r\n"]}