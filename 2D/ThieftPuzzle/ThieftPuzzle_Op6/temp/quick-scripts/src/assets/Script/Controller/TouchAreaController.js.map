{"version":3,"sources":["assets\\Script\\Controller\\TouchAreaController.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import { Ultils } from \"../Data/Ultils\";\r\nimport { Constants } from \"../Data/constants\";\r\nimport AudioManager from \"../Plugin/AudioManager\";\r\nimport { GameController } from \"./GameController\";\r\nimport GraphicsController from \"./GraphicsController\";\r\nimport HandController from \"./HandController\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport class TouchAreaController extends cc.Component {\r\n\r\n  // Component\r\n  @property(AudioManager)\r\n  AudioManager: AudioManager = null;\r\n  @property(HandController)\r\n  HandController: HandController = null;\r\n  @property(GameController)\r\n  GameController: GameController = null;\r\n  @property(GraphicsController)\r\n  GraphicsController: GraphicsController = null;\r\n\r\n\r\n  // node\r\n  @property(cc.Node)\r\n  HideMask: cc.Node = null;\r\n  @property(cc.Node)\r\n  Line: cc.Node = null;\r\n  @property(cc.Node)\r\n  Tutorial: cc.Node = null;\r\n  @property(cc.Node)\r\n  fence: cc.Node = null;\r\n\r\n  // state\r\n\r\n\r\n  protected start() {\r\n    this.AudioManager.playSound(Constants.SoundTrack.bgSound);\r\n  }\r\n\r\n\r\n  protected onLoad() {\r\n    this.HandController.node.on(cc.Node.EventType.TOUCH_START, this.touchStart, this);\r\n    this.HandController.node.on(cc.Node.EventType.TOUCH_MOVE, this.touchMove, this);\r\n    this.HandController.node.on(cc.Node.EventType.TOUCH_CANCEL, this.touchEnd, this);\r\n    this.HandController.node.on(cc.Node.EventType.TOUCH_END, this.touchEnd, this);\r\n  }\r\n\r\n\r\n  public handleIronSourcePlaySound(): void {\r\n    if (Constants.ironSource.isPlayBgSound) {\r\n      return;\r\n    }\r\n\r\n    if (Constants.ironSource.SoundState) {\r\n      this.AudioManager.playSound(Constants.SoundTrack.bgSound);\r\n    }\r\n\r\n    Constants.ironSource.isPlayBgSound = true;\r\n  }\r\n\r\n\r\n  private touchStart(event: cc.Touch) {\r\n\r\n    if (Constants.ironSource.isEndGame) {\r\n      this.GameController.installHandle();\r\n    }\r\n\r\n    if (Constants.isLoseGame) {\r\n      return;\r\n    }\r\n\r\n    this.Line.active = false;\r\n    Constants.isTouch = true;\r\n    this.Tutorial.active = false;\r\n    this.AudioManager.playSound(Constants.SoundTrack.drawSound);\r\n\r\n\r\n    // this.handleIronSourcePlaySound();\r\n\r\n\r\n    // this.scheduleOnce(() => {\r\n    //   if(event.getLocation() === Constants.currentPosition) {\r\n    //     console.log(\"check\");\r\n    //   }\r\n    // }, 1.5);\r\n  }\r\n\r\n\r\n  private touchMove(event: cc.Touch): void {\r\n    if (Constants.isLoseGame || !Constants.isCanMove) {\r\n      return;\r\n    }\r\n\r\n    // if (Constants.isTouchFence) {\r\n    //   let x = event.getLocation().x;\r\n    //   let y = event.getLocation().y;\r\n    //   Constants.currentLocalPosition = this.node.convertToNodeSpaceAR(new cc.Vec2(Constants.currentLocalPosition.x, y));\r\n    //   this.HandController.move();\r\n    // } else {\r\n    //   console.log(\"check\");\r\n      \r\n    //   Constants.currentPosition = event.getLocation();\r\n    //   Constants.currentLocalPosition = this.node.convertToNodeSpaceAR(event.getLocation());\r\n    //   this.HandController.move();\r\n    // }\r\n\r\n    Constants.currentPosition = event.getLocation();\r\n    Constants.currentLocalPosition = this.node.convertToNodeSpaceAR(event.getLocation());\r\n    this.HandController.move();\r\n\r\n\r\n\r\n    Ultils.TouchArea.checkTouchCondition1(\r\n      this.HandController.node,\r\n      this.HandController.Apple_1_Points[0],\r\n      this.GraphicsController.graphicsNodes[0],\r\n      this.HandController.Apple_1_Points[1]\r\n    );\r\n    // Ultils.TouchArea.checkTouchCondition2(\r\n    //   this.HandController.node, \r\n    //   this.HandController.Apple_1_Points[1], \r\n    //   this.HandController.Apple_1_Points[0] \r\n    // );\r\n    // Ultils.TouchArea.checkTouchCondition3(\r\n    //   this.HandController.node, \r\n    //   this.HandController.Apple_1_Points[2], \r\n    //   this.HandController.Apple_1_Points[1] \r\n    // );\r\n    // Ultils.TouchArea.checkTouchCondition4(\r\n    //   this.HandController.node, \r\n    //   this.HandController.Apple_1_Points[3], \r\n    //   this.HandController.Apple_1_Points[2] \r\n    // );\r\n    // Ultils.TouchArea.checkTouchCondition5(\r\n    //   this.HandController.node, \r\n    //   this.HandController.Apple_1_Points[0], \r\n    //   this.HandController.Apple_1_Points[3],\r\n    //   this.GraphicsController.graphicsNodes[4]\r\n    // );\r\n    Ultils.TouchArea.checkTouchCondition6(\r\n      this.HandController.node,\r\n      this.HandController.Apple_1_Points[4],\r\n      this.HandController.Apple_1_Points[0],\r\n      this.GraphicsController.graphicsNodes[5]\r\n    );\r\n    Ultils.TouchArea.checkTouchCondition7(\r\n      this.HandController.node\r\n    );\r\n    Ultils.TouchArea.checkTouchCondition8(this.HandController.node, this.GraphicsController.graphicsNodes[6])\r\n  }\r\n\r\n\r\n  private touchEnd(event: cc.Touch) {\r\n    if (Constants.isLoseGame) {\r\n      return;\r\n    }\r\n\r\n    Constants.isTouch = false;\r\n    this.AudioManager.stopSound(Constants.SoundTrack.drawSound);\r\n    this.HandController.stop();\r\n  }\r\n\r\n  private handleMuteSoundIronSource(): void {\r\n    Constants.ironSource.State = parseInt(localStorage.getItem(\"cocosSoundState\"), 10)\r\n\r\n    if (Constants.ironSource.State) {\r\n      if (Constants.ironSource.State === 1 && !Constants.ironSource.SoundState && !Constants.ironSource.isEndGame) {\r\n        Constants.ironSource.SoundState = true;\r\n        this.AudioManager.playSound(Constants.SoundTrack.bgSound);\r\n      }\r\n\r\n      if (Constants.ironSource.State === 2 && Constants.ironSource.SoundState) {\r\n        Constants.ironSource.SoundState = false;\r\n        this.AudioManager.stopAllSound();\r\n      }\r\n    }\r\n  }\r\n\r\n  protected update(dt: number): void {\r\n    // Ultils.TouchArea.checkTouchCondition9(this.fence.getBoundingBox(), this.HandController.node);\r\n    // this.handleMuteSoundIronSource();\r\n  }\r\n}\r\n"]}