{"version":3,"sources":["assets\\Script\\Controller\\GamePlay.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA,+CAA8C;AAC9C,uDAAkD;AAClD,mDAAkD;AAClD,2DAAsD;AAGhD,IAAA,KAAwB,EAAE,CAAC,UAAU,EAAnC,OAAO,aAAA,EAAE,QAAQ,cAAkB,CAAC;AAG5C;IAAsC,4BAAY;IAAlD;QAAA,qEAuDC;QApDC,kBAAY,GAAiB,IAAI,CAAC;QAElC,oBAAc,GAAmB,IAAI,CAAC;QAEtC,wBAAkB,GAAuB,IAAI,CAAC;QAG9C,OAAO;QAEP,UAAI,GAAY,IAAI,CAAC;QAErB,SAAG,GAAY,IAAI,CAAC;QAEpB,gBAAU,GAAY,IAAI,CAAC;QAG3B,KAAK;QAEL,gBAAU,GAAY,IAAI,CAAC;QAE3B,mBAAa,GAAY,IAAI,CAAC;QAE9B,kBAAY,GAAY,IAAI,CAAC;QAE7B,uBAAiB,GAAY,IAAI,CAAC;QAElC,eAAS,GAAY,IAAI,CAAC;QAE1B,cAAQ,GAAY,IAAI,CAAC;QAEzB,KAAK;QAEL,kBAAY,GAAY,IAAI,CAAC;;IAoB/B,CAAC;IAjBW,yBAAM,GAAhB;QACE,IAAI,CAAC,WAAW,EAAE,CAAC;IACrB,CAAC;IAGS,wBAAK,GAAf;QACE,qBAAS,CAAC,QAAQ,GAAG,IAAI,CAAC,YAAY,CAAC,WAAW,EAAE,CAAC;QACrD,qBAAS,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,WAAW,EAAE,CAAC,CAAC;IACjE,CAAC;IAGO,8BAAW,GAAnB;QACE,EAAE,CAAC,QAAQ,CAAC,iBAAiB,EAAE,CAAC,OAAO,GAAG,IAAI,CAAC;QAC/C,IAAI,gBAAgB,GAAG,EAAE,CAAC,QAAQ,CAAC,mBAAmB,EAAE,CAAC;QACzD,gBAAgB,CAAC,OAAO,GAAG,IAAI,CAAC;IAClC,CAAC;IAlDD;QADC,QAAQ,CAAC,sBAAY,CAAC;kDACW;IAElC;QADC,QAAQ,CAAC,+BAAc,CAAC;oDACa;IAEtC;QADC,QAAQ,CAAC,4BAAkB,CAAC;wDACiB;IAK9C;QADC,QAAQ,CAAC,EAAE,CAAC,IAAI,CAAC;0CACG;IAErB;QADC,QAAQ,CAAC,EAAE,CAAC,IAAI,CAAC;yCACE;IAEpB;QADC,QAAQ,CAAC,EAAE,CAAC,IAAI,CAAC;gDACS;IAK3B;QADC,QAAQ,CAAC,EAAE,CAAC,IAAI,CAAC;gDACS;IAE3B;QADC,QAAQ,CAAC,EAAE,CAAC,IAAI,CAAC;mDACY;IAE9B;QADC,QAAQ,CAAC,EAAE,CAAC,IAAI,CAAC;kDACW;IAE7B;QADC,QAAQ,CAAC,EAAE,CAAC,IAAI,CAAC;uDACgB;IAElC;QADC,QAAQ,CAAC,EAAE,CAAC,IAAI,CAAC;+CACQ;IAE1B;QADC,QAAQ,CAAC,EAAE,CAAC,IAAI,CAAC;8CACO;IAIzB;QADC,QAAQ,CAAC,EAAE,CAAC,IAAI,CAAC;kDACW;IAnCV,QAAQ;QAD5B,OAAO;OACa,QAAQ,CAuD5B;IAAD,eAAC;CAvDD,AAuDC,CAvDqC,EAAE,CAAC,SAAS,GAuDjD;kBAvDoB,QAAQ","file":"","sourceRoot":"/","sourcesContent":["import { Constants } from \"../Data/constants\";\r\nimport AudioManager from \"../Plugin/AudioManager\";\r\nimport { GameController } from \"./GameController\";\r\nimport GraphicsController from \"./GraphicsController\";\r\n\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class GamePlay extends cc.Component {\r\n\r\n  @property(AudioManager)\r\n  AudioManager: AudioManager = null;\r\n  @property(GameController)\r\n  GameController: GameController = null;\r\n  @property(GraphicsController)\r\n  GraphicsController: GraphicsController = null;\r\n\r\n\r\n  // Node\r\n  @property(cc.Node)\r\n  Hand: cc.Node = null;\r\n  @property(cc.Node)\r\n  CTA: cc.Node = null;\r\n  @property(cc.Node)\r\n  CTA_Button: cc.Node = null;\r\n\r\n\r\n  // UI\r\n  @property(cc.Node)\r\n  background: cc.Node = null;\r\n  @property(cc.Node)\r\n  thieftDefault: cc.Node = null;\r\n  @property(cc.Node)\r\n  guardDefault: cc.Node = null;\r\n  @property(cc.Node)\r\n  guardDefault_Flag: cc.Node = null;\r\n  @property(cc.Node)\r\n  thieftCTA: cc.Node = null;\r\n  @property(cc.Node)\r\n  guardCTA: cc.Node = null;\r\n\r\n  // GP\r\n  @property(cc.Node)\r\n  stickman_arm: cc.Node = null;\r\n\r\n\r\n  protected onLoad(): void {\r\n    this.initPhysics();\r\n  }\r\n\r\n\r\n  protected start(): void {\r\n    Constants.startPos = this.stickman_arm.getPosition();\r\n    Constants.touchPointsPos.push(this.stickman_arm.getPosition());\r\n  }\r\n  \r\n\r\n  private initPhysics(): void {\r\n    cc.director.getPhysicsManager().enabled = true;\r\n    let collisionManager = cc.director.getCollisionManager();\r\n    collisionManager.enabled = true;\r\n  }\r\n\r\n}\r\n"]}