{"version":3,"sources":["assets\\Script\\Data\\Ultils.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import { Constants } from \"./constants\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\nconst rotateDefault = (basePoint: cc.Vec2): number => {\r\n    let thisPos = new cc.Vec2(basePoint.x, basePoint.y);\r\n    let directionVector = thisPos.sub(Constants.pointA_Pos);\r\n    const rotationRadians = Math.atan2(directionVector.y, directionVector.x);\r\n    const rotationDegrees = cc.misc.radiansToDegrees(rotationRadians);\r\n    return rotationDegrees + 20;\r\n}\r\n\r\nconst rotateWithPoint = (basePoint: cc.Vec2): number => {\r\n    let thisPos = new cc.Vec2(basePoint.x, basePoint.y);\r\n    let directionVector = thisPos.sub(Constants.newPoint);\r\n    const rotationRadians = Math.atan2(directionVector.y, directionVector.x);\r\n    const rotationDegrees = cc.misc.radiansToDegrees(rotationRadians);\r\n    return rotationDegrees + 20;\r\n}\r\n\r\n\r\n\r\nconst checkTouchCondition1 = (hand: cc.Node, point: cc.Node, graphic: cc.Graphics, pointCompare: cc.Node): void => {\r\n    if (hand.x > pointCompare.x && hand.y > pointCompare.y) {\r\n        return;\r\n    }\r\n\r\n\r\n    if(hand.x < point.x &&  !Constants.isTouchPoint2) {\r\n            Constants.isDrawPoint1 = false;\r\n            Constants.isTouchPoint1 = false;\r\n            Constants.newPoint = Constants.pointA_Pos;\r\n            graphic.clear();\r\n            return;\r\n    }\r\n\r\n    if (hand.x > point.x && hand.y > point.y && !Constants.isTouchPoint1) {\r\n        Constants.isTouchPoint1 = true;\r\n        Constants.newPoint = point.getPosition();\r\n    }\r\n}\r\n\r\nconst checkTouchCondition6 = (hand: cc.Node, newPoint: cc.Node, oldPoint: cc.Node, graphics: cc.Graphics): void => {\r\n    if(!Constants.isTouchPoint2  && !Constants.isTouchPoint3 && !Constants.isTouchPoint4) {\r\n        if (hand.x < newPoint.x  && Constants.isTouchPoint1) {\r\n            graphics.clear();\r\n            Constants.isDrawPoint6 = false;\r\n            Constants.isTouchPoint6 = false;\r\n            return;\r\n        }\r\n    \r\n        if (hand.x > newPoint.x && hand.y > newPoint.y && Constants.isTouchPoint1) {\r\n            Constants.isTouchPoint6 = true;\r\n            Constants.oldPoint = oldPoint.getPosition();\r\n            Constants.newPoint = newPoint.getPosition();\r\n        }\r\n    } \r\n    \r\n    \r\n    if (Constants.isTouchPoint2  && Constants.isTouchPoint3 && Constants.isTouchPoint4) {\r\n        if (hand.x < newPoint.x) {\r\n            graphics.clear();\r\n            Constants.isDrawPoint6 = false;\r\n            Constants.isTouchPoint6 = false;\r\n            Constants.oldPoint = Constants.point4Pos; \r\n            Constants.newPoint = Constants.point1Pos;\r\n            return;\r\n        }\r\n\r\n        if (hand.x > newPoint.x && hand.y > newPoint.y && Constants.isTouchPoint1) {\r\n            Constants.isTouchPoint6 = true;\r\n            Constants.oldPoint = oldPoint.getPosition();\r\n            Constants.newPoint = newPoint.getPosition();\r\n        }\r\n    }\r\n}\r\n\r\nconst checkTouchCondition7 = (hand: cc.Node): void => {\r\n    if(Constants.isTouchPoint1) {\r\n        if(hand.x < Constants.point5Pos.x) {\r\n            Constants.oldPoint = Constants.pointA_Pos;\r\n            Constants.newPoint = Constants.point1Pos;\r\n        }\r\n    }\r\n}\r\n\r\nconst checkTouchCondition8 = (hand: cc.Node, graphic: cc.Graphics): void => {\r\n    if(Constants.isTouchPoint1 && Constants.isTouchPoint6) {\r\n        if(hand.x < Constants.point6Pos.x && Constants.isTouchPoint7) {\r\n            graphic.clear();\r\n            Constants.isTouchPoint7 = false;\r\n            Constants.isDrawPoint7 = false;\r\n            Constants.oldPoint = Constants.point1Pos;\r\n            Constants.newPoint = Constants.point5Pos;\r\n            return;\r\n        }\r\n\r\n        if(hand.x > Constants.point6Pos.x) {\r\n            Constants.isTouchPoint7 = true;\r\n            Constants.oldPoint = Constants.point5Pos;\r\n            Constants.newPoint = Constants.point6Pos;\r\n        }\r\n    }\r\n}\r\n\r\nconst checkTouchCondition9 = (boudingbox: cc.Rect, hand: cc.Node): void => {\r\n    if(Constants.isTouchPoint1 && boudingbox.intersects(hand.getBoundingBox())) {\r\n        Constants.isTouchFence = true;\r\n    } else {\r\n        Constants.isTouchFence = false;\r\n    }\r\n}\r\n\r\n\r\nconst checkTouchPoint = (fence: cc.Node, hand: cc.Node, fenceLeft: cc.Node): void => {\r\n    let f_BoudingBox = fence.getBoundingBox();\r\n    let fl_BoudingBox = fenceLeft.getBoundingBox();\r\n    let h_BoudingBox = hand.getBoundingBox();\r\n    let checkPosX = Constants.currentPosition.x - cc.winSize.width / 2;\r\n    let checkPosY = Constants.currentPosition.y - cc.winSize.height / 2;\r\n\r\n\r\n    // // touch point 6\r\n    if(Constants.isTouchPoint6 && f_BoudingBox.intersects(h_BoudingBox)) {\r\n        if(checkPosY < Constants.point7Pos.y) {\r\n            return;\r\n        }\r\n\r\n        Constants.currentLocalPosition.x = Constants.currentPosition.x - cc.winSize.width / 2;\r\n        Constants.currentLocalPosition.y = Constants.currentPosition.y - cc.winSize.height / 2;\r\n        return;\r\n    }\r\n\r\n\r\n    // touch fence\r\n    if(f_BoudingBox.intersects(h_BoudingBox)) {\r\n        if(Constants.fencePoint.y > checkPosY) {\r\n            return;\r\n        }\r\n       \r\n        if(Constants.fencePoint.y < checkPosY && Constants.point2Pos.x > checkPosX) {\r\n            Constants.currentLocalPosition.x = Constants.currentPosition.x - cc.winSize.width / 2;\r\n            Constants.currentLocalPosition.y = Constants.currentPosition.y - cc.winSize.height / 2;\r\n            return;\r\n        }\r\n\r\n        Constants.currentLocalPosition.y = Constants.currentPosition.y - cc.winSize.height / 2;\r\n        return;\r\n    }\r\n\r\n\r\n    // touch point 3 && 4\r\n    if(h_BoudingBox.intersects(Constants.point3Bdb) || h_BoudingBox.intersects(Constants.point4Bdb)) {\r\n        if(checkPosY < Constants.point3Pos.y && checkPosX < Constants.point3Pos.x) {\r\n            Constants.currentLocalPosition.x = Constants.currentPosition.x - cc.winSize.width / 2;\r\n            Constants.currentLocalPosition.y = Constants.currentPosition.y - cc.winSize.height / 2;\r\n            return;\r\n        } \r\n\r\n        Constants.currentLocalPosition.x = Constants.currentPosition.x - cc.winSize.width / 2;\r\n        return;\r\n    }\r\n\r\n\r\n    // tooouch fence Left\r\n    if(fl_BoudingBox.intersects(h_BoudingBox)) {\r\n        if(checkPosX <  fenceLeft.x) {\r\n            Constants.currentLocalPosition.x = Constants.currentPosition.x - cc.winSize.width / 2;\r\n            Constants.currentLocalPosition.y = Constants.currentPosition.y - cc.winSize.height / 2;\r\n            return;\r\n        }\r\n\r\n        Constants.currentLocalPosition.y = Constants.currentPosition.y - cc.winSize.height / 2;\r\n        return;\r\n    }\r\n\r\n\r\n    Constants.currentLocalPosition.x = Constants.currentPosition.x - cc.winSize.width / 2;\r\n    Constants.currentLocalPosition.y = Constants.currentPosition.y - cc.winSize.height / 2;\r\n}\r\n\r\n\r\nconst Hand = {\r\n    rotateDefault: rotateDefault,\r\n    rotateWithPoint: rotateWithPoint,\r\n}\r\nconst TouchArea = {\r\n    checkTouchCondition1: checkTouchCondition1,\r\n    checkTouchCondition6: checkTouchCondition6,\r\n    checkTouchCondition7: checkTouchCondition7,\r\n    checkTouchCondition8: checkTouchCondition8,\r\n    checkTouchPoint: checkTouchPoint,\r\n}\r\n\r\nexport class Ultils {\r\n\r\n    static Hand: typeof Hand = Hand;\r\n    static TouchArea: typeof TouchArea = TouchArea;\r\n\r\n}"]}