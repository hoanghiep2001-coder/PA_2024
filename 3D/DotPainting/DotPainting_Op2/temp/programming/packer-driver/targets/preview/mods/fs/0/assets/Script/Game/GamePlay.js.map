{"version":3,"sources":["file:///D:/PA_2024/3D/DotPainting/DotPainting_Op2/assets/Script/Game/GamePlay.ts"],"names":["_decorator","Component","Node","VideoPlayer","ParticleSystem2D","GameController","AudioManager","Constants","ccclass","property","GamePlay","onLoad","start","isCanClick","video","node","on","EventType","READY_TO_PLAY","initVideo","registerEvent","HideMask","TOUCH_START","handleVideo","play","playSound","SoundTrack","bgSound","isSecondClick","stopAllSound","installHandle","scheduleOnce","CompleteSound","isFirstClick","pause","pauseSound","handleMuteSoundIronSource","ironSource","State","parseInt","localStorage","getItem","SoundState","isEndGame","volume","update","dt"],"mappings":"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","sourcesContent":["import { _decorator, Animation, Component, EventTouch, Node, PhysicsSystem, SkeletalAnimation, Vec2, Vec3, ParticleSystem, log, sp, view, UITransform, Label, Sprite, VideoPlayer, director, Button, ParticleSystem2D } from 'cc';\nconst { ccclass, property } = _decorator;\nimport { GameController } from './GameController';\nimport { AudioManager } from './AudioManager';\nimport { Constants } from '../Data/constants';\n\n@ccclass('GamePlay')\nexport class GamePlay extends Component {\n    // Component\n    @property(GameController)\n    GameController: GameController = null;\n    @property(AudioManager)\n    AudioManager: AudioManager = null;\n\n\n    @property(VideoPlayer)\n    video: VideoPlayer = null;\n    @property(Node)\n    HideMask: Node = null;\n    @property(ParticleSystem2D)\n    effect_blink: ParticleSystem2D = null;\n\n\n    protected onLoad(): void {\n\n    }\n\n\n    protected start(): void {\n        Constants.isCanClick = true;\n        this.video.node.on(VideoPlayer.EventType.READY_TO_PLAY, this.initVideo, this);\n        this.registerEvent();\n    }\n\n\n    private registerEvent(): void {\n        this.HideMask.on(Node.EventType.TOUCH_START, this.handleVideo, this);\n    }\n\n\n    private handleVideo(): void {\n        if(!Constants.isCanClick) {\n            return;\n        }\n\n        Constants.isCanClick = false;  \n        this.video.play();\n        this.AudioManager.playSound(Constants.SoundTrack.bgSound);\n\n        if(Constants.isSecondClick ) {\n            this.AudioManager.stopAllSound();\n            this.GameController.installHandle();\n            return;\n        }\n\n        this.scheduleOnce(() => {\n            // this.effect_blink.resetSystem();\n            this.AudioManager.playSound(Constants.SoundTrack.CompleteSound);\n        }, 1.2)\n\n        if(Constants.isFirstClick && !Constants.isSecondClick) {\n            Constants.isSecondClick = true;\n\n            this.scheduleOnce(() => {\n                this.video.pause();\n                Constants.isCanClick = true;\n                this.AudioManager.pauseSound(Constants.SoundTrack.bgSound);\n            }, 2);\n        }\n\n        if(!Constants.isFirstClick) {\n            Constants.isFirstClick = true;\n\n            this.scheduleOnce(() => {\n                this.video.pause();\n                Constants.isCanClick = true;\n                this.AudioManager.pauseSound(Constants.SoundTrack.bgSound);\n            }, 2);\n        }\n    }\n\n\n    private handleMuteSoundIronSource(): void {\n        Constants.ironSource.State = parseInt(localStorage.getItem(\"cocosSoundState\"), 10)\n\n        if (Constants.ironSource.State) {\n            if (Constants.ironSource.State === 1 && !Constants.ironSource.SoundState && !Constants.ironSource.isEndGame) {\n                Constants.ironSource.SoundState = true;\n            }\n\n            if (Constants.ironSource.State === 2 && Constants.ironSource.SoundState) {\n                Constants.ironSource.SoundState = false;\n                this.AudioManager.stopAllSound();\n            }\n        }\n    }\n\n\n    private initVideo(video: VideoPlayer) {\n        video.pause();\n        video.volume = 0;\n    }\n\n\n    protected update(dt: number): void {\n        // ironsource\n        this.handleMuteSoundIronSource();\n    }\n}\n"]}