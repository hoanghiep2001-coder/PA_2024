{"version":3,"sources":["file:///D:/PA_2024/3D/Satisdom/Satisdom_Op4_Testing/assets/Script/Game/Other/BottleItem.ts"],"names":["_decorator","Component","CCInteger","Graphics","Color","tween","log","Vec3","UITransform","Constants","AudioManager","ccclass","property","executeInEditMode","BottleItem","type","waterHeights","_waterHeights","heights","drawWater","waterColors","_waterColors","colors","bottleAngle","_bottleAngle","angle","node","onLoad","start","initPos","getPosition","applyHeightToColors","initTubeSide","tubeController","parent","getComponent","graphics","height1","height2","height3","getColorStatus","GamePlayNode","getChildByName","GamePlayComp","colorStatus","applyWaterColor","values","firstColorOfTube","match","map","Number","color","indexOfFirstColor","rotateTube","tubeState","otherTube","setIndexHeightToZero","currentHeightOfColor","increseHeightOfWater","playSound","SoundTrack","WaterDropSound","to","call","isFillUp2Color","isSorting","clear","scheduleOnce","decreaseHeightOfWater","console","targetNumber","heightObject","height","nonTransparentColorArr","length","onUpdate","target","fakeDrawSortWater","newState","leftPoint","rightPoint","otherTubeMiddlePoint","colorToDraw","posA","posB","drawWaterSide","getWorldPosition","graphicsNodeTransform","nodeAPosition","convertToNodeSpaceAR","nodeBPosition","strokeColor","moveTo","x","y","lineTo","stroke","CompleteSound","comeBackInitPos","interactingColorNumber","transparentColor","position","isCanTouch","MoveToAnotherTube","heightToCompare","name","tubeSide","drawGraphics","index","drawOneWater","radiansA","Math","PI","radiansM","atan","bottleWidth","tempWTan","tan","fillColor","hL","sqrt","bottleHeight","bW","cutOffset","hR","fill","update","dt","eulerAngles","z"],"mappings":"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","sourcesContent":["import { _decorator, Component, Node, CCInteger, Graphics, Color, tween, log, Vec3, color, Vec2, UITransform } from 'cc';\r\nconst { ccclass, property, executeInEditMode } = _decorator;\r\n\r\nimport * as Interfaces from '../../Data/interfaces';\r\nimport { Constants } from '../../Data/constants';\r\nimport { AudioManager } from '../Controller/AudioManager';\r\ntype TubeController = import('../Controller/TubeController').TubeController;\r\n\r\ntype GamePlay = import(\"./GamePlay\").GamePlay;\r\n\r\n@ccclass('BottleItem')\r\n\r\nexport class BottleItem extends Component {\r\n\r\n    @property(AudioManager)\r\n    AudioManager: AudioManager = null;\r\n\r\n    @property({ type: [CCInteger] })\r\n    public _waterHeights: number[] = [];\r\n    get waterHeights() {\r\n        return this._waterHeights;\r\n    }\r\n    set waterHeights(heights) {\r\n        this._waterHeights = heights;\r\n        this.drawWater();\r\n    }\r\n\r\n\r\n    @property({ type: [Color] })\r\n    public _waterColors: Color[] = [];\r\n    get waterColors() {\r\n        return this._waterColors;\r\n    }\r\n    set waterColors(colors) {\r\n        this._waterColors = colors;\r\n        this.drawWater();\r\n    }\r\n\r\n\r\n    @property(CCInteger)\r\n    bottleWidth: number = 564;\r\n\r\n\r\n    @property(CCInteger)\r\n    bottleHeight: number = 1024;\r\n\r\n\r\n    @property(CCInteger)\r\n    _bottleAngle: number = 0;\r\n\r\n\r\n    @property(CCInteger)\r\n    get bottleAngle() {\r\n        return this._bottleAngle;\r\n    }\r\n    set bottleAngle(angle) {\r\n        this._bottleAngle = angle;\r\n        this.node.angle = angle;\r\n        this.drawWater();\r\n    }\r\n\r\n\r\n    @property(Graphics)\r\n    drawGraphics: Graphics = null;\r\n\r\n\r\n    private height1: number = 900;\r\n    private height2: number = 450;\r\n    private height3: number = 200;\r\n\r\n    public tubeSide: string = \"\";\r\n    public initPos: Vec3 = null;\r\n\r\n    tubeController: TubeController = null;\r\n    graphics: Graphics = null;\r\n    isSorting: boolean = false;\r\n    newState: Interfaces.tubeState = null;\r\n\r\n    onLoad() {\r\n\r\n    }\r\n\r\n\r\n    start() {\r\n        // step 1 = 65;\r\n        // step 2 = 85;\r\n        // step 3 = 90;\r\n\r\n        this.initPos = this.node.getPosition();\r\n\r\n        this.applyHeightToColors();\r\n\r\n        this.initTubeSide();\r\n\r\n        this.drawWater();\r\n\r\n        this.tubeController = this.node.parent.getComponent(\"TubeController\") as TubeController;\r\n\r\n        this.graphics = this.tubeController.Graphics;\r\n    }\r\n\r\n\r\n    private applyHeightToColors(): void {\r\n        this._waterHeights = [this.height1, this.height2, this.height3];\r\n    }\r\n\r\n\r\n    private getColorStatus(): Interfaces.colorStatus {\r\n        const GamePlayNode: Node = this.node.parent.parent.parent.getChildByName(\"GamePlay\");\r\n        const GamePlayComp: GamePlay = GamePlayNode.getComponent(\"GamePlay\") as GamePlay;\r\n        const colorStatus = GamePlayComp.getColorStatus(this.waterColors);\r\n\r\n        return colorStatus;\r\n    }\r\n\r\n\r\n    private applyWaterColor(): void {\r\n        const colorStatus = this.getColorStatus();\r\n\r\n        // tách chuỗi string rgba thành từng phần\r\n        let values = colorStatus.firstColorOfTube.match(/\\d+(\\.\\d+)?/g).map(Number);\r\n        let color = new Color(values[0], values[1], values[2], values[3] * 255);\r\n\r\n        this._waterColors[colorStatus.indexOfFirstColor - 1] = color;\r\n\r\n        log(\"Màu đc chuyển đổi: \" + color)\r\n    }\r\n\r\n\r\n    public rotateTube(tubeState: Interfaces.tubeState): void {\r\n        log(\"angling\")\r\n\r\n        tubeState.otherTube.setIndexHeightToZero(tubeState.currentHeightOfColor);\r\n\r\n        tubeState.otherTube.applyWaterColor();\r\n\r\n        tubeState.otherTube.increseHeightOfWater();\r\n\r\n        this.AudioManager.playSound(Constants.SoundTrack.WaterDropSound);\r\n\r\n        tween(this.node)\r\n            .to(1.5, { angle: tubeState.angle })\r\n            .call(() => {\r\n                Constants.isFillUp2Color = false;\r\n\r\n                this.isSorting = false;\r\n\r\n                this.graphics.clear();\r\n            })\r\n            .start();\r\n\r\n            this.scheduleOnce(() => {\r\n                this.isSorting = true;\r\n                this.decreaseHeightOfWater(tubeState)\r\n            }, 0.4)\r\n    }\r\n\r\n\r\n    private increseHeightOfWater(): void {\r\n        console.log(\"Tăng mực nước\");\r\n\r\n        const colorStatus = this.getColorStatus();\r\n        let targetNumber: number = null;\r\n        let heightObject: Interfaces.heightObject = { height: null };\r\n\r\n        switch (colorStatus.nonTransparentColorArr.length) {\r\n            case 3:\r\n                targetNumber = 900;\r\n                heightObject.height = this.height1;\r\n                break;\r\n            case 2:\r\n                targetNumber = 900;\r\n                heightObject.height = this.height2;\r\n                Constants.isFillUp2Color = true;\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        tween(heightObject)\r\n            .to(1.5, { height: targetNumber }, {\r\n                onUpdate: (target: Interfaces.heightObject) => {\r\n\r\n                    if (Constants.isFillUp2Color) {\r\n                        this.height2 = target.height;\r\n                    } else {\r\n                        if (targetNumber === 900) this.height1 = target.height;\r\n                        else if (targetNumber === 450) this.height2 = target.height;\r\n                        else if (targetNumber === 200) this.height3 = target.height;\r\n                    }\r\n\r\n                    this.applyHeightToColors();\r\n                },\r\n            })\r\n            .start();\r\n    };\r\n\r\n\r\n    private fakeDrawSortWater(newState: Interfaces.tubeState): void {\r\n        let leftPoint = this.node.getChildByName(\"LeftPoint\"),\r\n            rightPoint = this.node.getChildByName(\"RightPoint\"),\r\n            otherTube: Node = newState.otherTube.node,\r\n            otherTubeMiddlePoint = otherTube.getChildByName(\"MiddlePoint\"),\r\n\r\n            values = newState.firstColorOfTube.match(/\\d+(\\.\\d+)?/g).map(Number),\r\n            colorToDraw = new Color(values[0], values[1], values[2], values[3] * 255),\r\n            posA: Vec3 = new Vec3(),\r\n            posB: Vec3 = new Vec3();\r\n\r\n        if (newState.drawWaterSide === \"left\") {\r\n            posA = leftPoint.getWorldPosition();\r\n            posB = otherTubeMiddlePoint.getWorldPosition();\r\n        }\r\n        else {\r\n            posA = rightPoint.getWorldPosition();\r\n            posB = otherTubeMiddlePoint.getWorldPosition();\r\n        }\r\n\r\n        // Chuyển đổi vị trí từ không gian thế giới sang không gian của GraphicsNode\r\n        const graphicsNodeTransform = this.graphics.getComponent(UITransform);\r\n        const nodeAPosition = graphicsNodeTransform.convertToNodeSpaceAR(posA);\r\n        const nodeBPosition = graphicsNodeTransform.convertToNodeSpaceAR(posB);\r\n\r\n        // Vẽ đường nối và đặt màu\r\n        this.graphics.clear();\r\n        this.graphics.strokeColor = colorToDraw;  // Đặt màu cho đường vẽ\r\n        this.graphics.moveTo(nodeAPosition.x, nodeAPosition.y);\r\n        this.graphics.lineTo(nodeBPosition.x, nodeBPosition.y);\r\n        this.graphics.stroke();\r\n\r\n        log(\"vẽ giọt nước\");\r\n\r\n    }\r\n\r\n\r\n    private decreaseHeightOfWater(newState: Interfaces.tubeState): void {\r\n\r\n        const colorStatus = this.getColorStatus();\r\n\r\n        let targetNumber: number = null;\r\n        let heightObject: Interfaces.heightObject = { height: null };\r\n\r\n        switch (colorStatus.nonTransparentColorArr.length) {\r\n            case 3:\r\n                targetNumber = 900;\r\n                heightObject.height = this.height1;\r\n                break;\r\n            case 2:\r\n                targetNumber = 900;\r\n                heightObject.height = this.height1;\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        tween(heightObject)\r\n            .to(1.5, { height: 0 }, {\r\n                onUpdate: (target: Interfaces.heightObject) => {\r\n                    if (Constants.isFillUp2Color) {\r\n                        this.height1 = target.height;\r\n                        this.height2 = target.height;\r\n                    } else {\r\n                        if (targetNumber === 900) this.height1 = target.height;\r\n                        else if (targetNumber === 450) this.height2 = target.height;\r\n                        else if (targetNumber === 200) this.height3 = target.height;\r\n                    }\r\n\r\n                    this.applyHeightToColors();\r\n                },\r\n            })\r\n            .call(() => {\r\n                this.AudioManager.playSound(Constants.SoundTrack.CompleteSound);\r\n                this.comeBackInitPos();\r\n                this._waterColors[Constants.interactingColorNumber] = Constants.transparentColor;\r\n\r\n                if (Constants.isFillUp2Color) this._waterColors[Constants.interactingColorNumber + 1] = Constants.transparentColor;\r\n\r\n                console.log(\"Sort Xong\")\r\n                log(\"------------------\")\r\n            })\r\n            .start();\r\n    };\r\n\r\n\r\n    public comeBackInitPos(): void {\r\n        tween(this.node)\r\n            .to(0.3, { position: this.initPos, angle: 0 })\r\n            .call(() => Constants.isCanTouch = true)\r\n            .start();\r\n    };\r\n\r\n\r\n    public MoveToAnotherTube(newState: Interfaces.tubeState): void {\r\n        log(\"Di chuyển\")\r\n\r\n        Constants.isCanTouch = false;\r\n\r\n        this.newState = newState;\r\n\r\n        tween(this.node)\r\n            .to(0.3, { position: newState.position })\r\n            .call(() => this.rotateTube(newState))\r\n            .start();\r\n    };\r\n\r\n\r\n    private setIndexHeightToZero(heightToCompare: number): void {\r\n        let height: string = \"\";\r\n\r\n        switch (heightToCompare) {\r\n            case 900:\r\n                this.height1 = 0;\r\n                height = \"height1\";\r\n                break;\r\n            case 450:\r\n                this.height2 = 450;\r\n                height = \"height2\";\r\n\r\n                if (this.node.name === \"Base_Tube_2\") this.height1 = 0;\r\n                break;\r\n            case 200:\r\n                this.height3 = 200;\r\n                height = \"height3\";\r\n                break;\r\n            default:\r\n                break;\r\n        };\r\n\r\n        log(this.node.name + \" - index Height to zero: \" + height);\r\n\r\n        this.applyHeightToColors();\r\n    }\r\n\r\n\r\n    private initTubeSide(): void {\r\n        switch (this.node.name) {\r\n            case \"Base_Tube_0\":\r\n                this.tubeSide = \"left\";\r\n                break;\r\n            case \"Base_Tube_1\":\r\n                this.tubeSide = \"right\";\r\n                break;\r\n            case \"Base_Tube_2\":\r\n                this.tubeSide = \"right\";\r\n                break;\r\n            case \"Base_Tube_3\":\r\n                this.tubeSide = \"left\";\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n\r\n    private drawWater() {\r\n        if (!this.drawGraphics) return;\r\n\r\n        this.drawGraphics.clear();\r\n        for (let index = 0; index < this.waterHeights.length; index++) {\r\n            const height = this.waterHeights[index];\r\n            this.drawOneWater(height, this.waterColors[index]);\r\n        }\r\n    }\r\n\r\n\r\n    private drawOneWater(height: number, color: Color) {\r\n        const radiansA = this.bottleAngle / 180 * Math.PI;\r\n        const radiansM = Math.atan(2 * height / this.bottleWidth);\r\n        const tempWTan = this.bottleWidth * Math.tan(radiansA);\r\n        this.drawGraphics.fillColor = color;\r\n        if (radiansA <= radiansM) {\r\n            if (radiansA < -radiansM) {\r\n                let hL = Math.sqrt(2 * height * -tempWTan);\r\n                hL = hL > this.bottleHeight ? this.bottleHeight : hL;\r\n                const bW = hL / Math.tan(-radiansA);\r\n                this.drawGraphics.moveTo(this.bottleWidth, 0);\r\n                this.drawGraphics.lineTo(this.bottleWidth, hL);\r\n                this.drawGraphics.lineTo(this.bottleWidth - bW, 0);\r\n                this.drawGraphics.lineTo(this.bottleWidth, 0);\r\n            } else {\r\n                this.drawGraphics.moveTo(0, 0);\r\n                let hL = height + tempWTan / 2;\r\n                let cutOffset = 0;\r\n                if (hL > this.bottleHeight) {\r\n                    cutOffset += hL - this.bottleHeight\r\n                }\r\n                let hR = height - tempWTan / 2;\r\n                if (hR > this.bottleHeight) {\r\n                    cutOffset += hR - this.bottleHeight\r\n                }\r\n\r\n                this.drawGraphics.lineTo(this.bottleWidth, 0);\r\n                this.drawGraphics.lineTo(this.bottleWidth, hR - cutOffset);\r\n                this.drawGraphics.lineTo(0, hL - cutOffset);\r\n                this.drawGraphics.lineTo(0, 0);\r\n            }\r\n        } else {\r\n            let hL = Math.sqrt(2 * height * tempWTan);\r\n            hL = hL > this.bottleHeight ? this.bottleHeight : hL;\r\n            const bW = hL / Math.tan(radiansA);\r\n            this.drawGraphics.moveTo(0, 0);\r\n            this.drawGraphics.lineTo(bW, 0);\r\n            this.drawGraphics.lineTo(0, hL);\r\n            this.drawGraphics.lineTo(0, 0);\r\n        }\r\n\r\n        this.drawGraphics.fill();\r\n    }\r\n\r\n\r\n    protected update(dt: number): void {\r\n        this.bottleAngle = this.node.eulerAngles.z;\r\n\r\n        this.isSorting && this.fakeDrawSortWater(this.newState)\r\n    }\r\n}\r\n"]}