{"version":3,"sources":["file:///D:/PA_2024/3D/Satisdom/Satisdom_Op4_Testing/assets/Script/Game/Controller/TouchController.ts"],"names":["_decorator","Component","easing","log","Node","tween","Vec3","NodeController","Constants","BottleItem","GamePlay","ccclass","property","executeInEditMode","TouchController","start","registerEvent","Tubes","forEach","tube","on","EventType","TOUCH_START","tubeTouchStart","e","isCanTouch","clickedNode","target","TubeClicked","isPickCorrectTube","handleMoveToAnotherTube","console","scaleDownTube","scaleUpTube","to","scale","elasticOut","tube1","tube2","reuslt","tube1BottleItemComponent","getComponent","tube2BottleItemComponent","colorA","getColorStatus","waterColors","colorB","interactingColorNumber","indexOfFirstColor","nonTransparentColorArr","length","firstColorOfTube"],"mappings":"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","sourcesContent":["\nimport { _decorator, color, Color, Component, easing, EventTouch, log, Node, tween, Vec3 } from 'cc';\nimport { NodeController } from './NodeController';\nimport { Constants } from '../../Data/constants';\nimport { BottleItem } from '../Other/BottleItem';\nimport * as Interfaces from '../../Data/interfaces';\nimport { GamePlay } from '../Other/GamePlay';\nconst { ccclass, property, executeInEditMode } = _decorator;\n\n@ccclass('TouchController')\n@executeInEditMode\nexport class TouchController extends Component {\n\n    @property(GamePlay)\n    GamePlay: GamePlay = null;\n\n    @property(NodeController)\n    NodeController: NodeController = null;\n\n\n    protected start(): void {\n        this.registerEvent();\n    }\n\n\n    private registerEvent(): void {\n        this.NodeController.Tubes.forEach((tube) => {\n            tube.on(Node.EventType.TOUCH_START, this.tubeTouchStart, this);\n        })\n    }\n\n\n    private tubeTouchStart(e: EventTouch): void {\n        if(!Constants.isCanTouch) return;\n\n        let clickedNode: Node = e.target;\n\n        if (Constants.TubeClicked) {\n\n            this.isPickCorrectTube(Constants.TubeClicked, clickedNode)\n            ? this.GamePlay.handleMoveToAnotherTube(Constants.TubeClicked, clickedNode)\n            : console.log(\"wrong\");\n\n            this.scaleDownTube(Constants.TubeClicked);\n\n            Constants.TubeClicked = null;\n        }\n\n        else {\n            Constants.TubeClicked = clickedNode;\n\n            this.scaleUpTube(clickedNode);\n\n            console.log(\"wrong\");\n            log(\"------------------------\");\n        }\n\n    }\n\n\n    private scaleUpTube(tube: Node): void {\n        tween(tube)\n            .to(0.5, { scale: new Vec3(0.17, 0.17, 0.17) }, { easing: easing.elasticOut })\n            .start();\n    }\n\n\n    private scaleDownTube(tube: Node): void {\n        tween(tube)\n            .to(0.5, { scale: new Vec3(0.15, 0.15, 0.15) }, { easing: easing.elasticOut })\n            .start();\n    }\n\n\n    private isPickCorrectTube(tube1: Node, tube2: Node): boolean {\n        let reuslt: boolean = false;\n\n        let tube1BottleItemComponent = tube1.getComponent(BottleItem);\n        let tube2BottleItemComponent = tube2.getComponent(BottleItem);\n\n        let colorA: Interfaces.colorStatus = this.GamePlay.getColorStatus(tube1BottleItemComponent.waterColors);\n        let colorB: Interfaces.colorStatus = this.GamePlay.getColorStatus(tube2BottleItemComponent.waterColors);\n\n        Constants.interactingColorNumber = colorA.indexOfFirstColor;\n\n        log(\"Index Màu đang tương tác: \" + Constants.interactingColorNumber)\n\n        if (colorB.nonTransparentColorArr.length === 3) return false;\n        else {\n            if (colorA.firstColorOfTube === colorB.firstColorOfTube) return true;\n        }\n\n        return reuslt;\n    }\n}\n\n"]}