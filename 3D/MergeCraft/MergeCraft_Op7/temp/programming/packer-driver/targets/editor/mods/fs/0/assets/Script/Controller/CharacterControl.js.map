{"version":3,"sources":["file:///D:/PA_2024/3D/MergeCraft/MergeCraft_Op7/assets/Script/Controller/CharacterControl.ts"],"names":["_decorator","Component","ERigidBodyType","math","Node","SkeletalAnimation","Constants","AudioManager","ccclass","property","CharacterControl","onLoad","level","active","node","start","getComponent","play","die","name","isDoneStep1","isDoneStep2","stopSound","SoundTrack","Dino_AttkSound","Run","rigidbody","type","DYNAMIC","setLinearVelocity","Vec3","isRun","runStep2"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AACSA,MAAAA,U,OAAAA,U;AAAyBC,MAAAA,S,OAAAA,S;AAAWC,MAAAA,c,OAAAA,c;AAAiCC,MAAAA,I,OAAAA,I;AAAMC,MAAAA,I,OAAAA,I;AAAiBC,MAAAA,iB,OAAAA,iB;;AAC5FC,MAAAA,S,iBAAAA,S;;AACAC,MAAAA,Y,iBAAAA,Y;;;;;;;OACH;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBT,U;;kCAGjBU,gB,WADZF,OAAO,CAAC,kBAAD,C,UAGHC,QAAQ;AAAA;AAAA,uC,UAERA,QAAQ,CAACL,IAAD,C,oCALb,MACaM,gBADb,SACsCT,SADtC,CACgD;AAAA;AAAA;;AAAA;;AAAA;;AAAA,yCAQ3B,KAR2B;;AAAA,2CASzB,KATyB;;AAAA,6CAUvB,KAVuB;;AAAA;;AAAA;;AAAA,6CAavB,KAbuB;AAAA;;AAgBlCU,QAAAA,MAAM,GAAS;AACrB,eAAKC,KAAL,CAAWC,MAAX,GAAoB,KAApB;AACA,eAAKC,IAAL,CAAUD,MAAV,GAAmB,KAAnB;AACH;;AAGSE,QAAAA,KAAK,GAAS;AACpB,eAAKC,YAAL,CAAkBX,iBAAlB,EAAqCY,IAArC,CAA0C,QAA1C,EADoB,CAEpB;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACH;;AAGOC,QAAAA,GAAG,GAAS;AAChB,eAAKF,YAAL,CAAkBX,iBAAlB,EAAqCY,IAArC,CAA0C,KAA1C;AACA,eAAKH,IAAL,CAAUK,IAAV,KAAmB,KAAnB,GAA2B;AAAA;AAAA,sCAAUC,WAAV,GAAwB,IAAnD,GAA0D;AAAA;AAAA,sCAAUC,WAAV,GAAwB,IAAlF;AACA,eAAKd,YAAL,CAAkBe,SAAlB,CAA4B;AAAA;AAAA,sCAAUC,UAAV,CAAqBC,cAAjD;AACH;;AAGOC,QAAAA,GAAG,GAAS;AAChB,eAAKC,SAAL,CAAeC,IAAf,GAAsBzB,cAAc,CAAC0B,OAArC;AACA,eAAKF,SAAL,CAAeG,iBAAf,CAAiC,IAAI1B,IAAI,CAAC2B,IAAT,CAAc,CAAd,EAAiB,CAAjB,EAAoB,CAAC,CAArB,CAAjC;;AACA,cAAI,CAAC,KAAKC,KAAV,EAAiB;AACb,iBAAKA,KAAL,GAAa,IAAb;AACA,iBAAKf,YAAL,CAAkBX,iBAAlB,EAAqCY,IAArC,CAA0C,KAA1C;AACH;AACJ;;AAGOe,QAAAA,QAAQ,GAAS;AACrB,eAAKN,SAAL,CAAeC,IAAf,GAAsBzB,cAAc,CAAC0B,OAArC;AACA,eAAKF,SAAL,CAAeG,iBAAf,CAAiC,IAAI1B,IAAI,CAAC2B,IAAT,CAAc,CAAC,CAAf,EAAkB,CAAlB,EAAqB,CAAC,CAAtB,CAAjC;;AACA,cAAI,CAAC,KAAKC,KAAV,EAAiB;AACb,iBAAKA,KAAL,GAAa,IAAb;AACA,iBAAKf,YAAL,CAAkBX,iBAAlB,EAAqCY,IAArC,CAA0C,KAA1C;AACH;AACJ,SA1E2C,CA6E5C;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;;AArF4C,O;;;;;iBAGf,I;;;;;;;iBAEf,I","sourcesContent":["\r\nimport { _decorator, BoxCollider, Component, ERigidBodyType, ICollisionEvent, math, Node, RigidBody, SkeletalAnimation, Vec3 } from 'cc';\r\nimport { Constants } from '../Data/Constant';\r\nimport { AudioManager } from '../Plugin/AudioManager';\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass('CharacterControl')\r\nexport class CharacterControl extends Component {\r\n\r\n    @property(AudioManager)\r\n    AudioManager: AudioManager = null;\r\n    @property(Node)\r\n    level: Node = null;\r\n\r\n\r\n    isRun: boolean = false;\r\n    isFight: boolean = false;\r\n    isFight_2: boolean = false;\r\n    rigidbody: RigidBody;\r\n    collider: BoxCollider;\r\n    isCollide: boolean = false;\r\n\r\n\r\n    protected onLoad(): void {\r\n        this.level.active = false;\r\n        this.node.active = false;\r\n    }\r\n\r\n\r\n    protected start(): void {\r\n        this.getComponent(SkeletalAnimation).play(\"Idle_2\");\r\n        // this.node.setScale(new Vec3(0, 0, 0));\r\n\r\n        // this.rigidbody = this.node.getComponent(RigidBody);\r\n        // this.collider = this.node.getComponent(BoxCollider)\r\n\r\n        // this.collider.on(\"onCollisionEnter\", (e: ICollisionEvent) => {\r\n        //     if (e.otherCollider.node.name === \"Rex\") {\r\n        //         if (this.isCollide) {\r\n        //             return;\r\n        //         }\r\n\r\n        //         this.isCollide = true;\r\n        //         this.AudioManager.playSound(Constants.SoundTrack.Dino_AttkSound);\r\n        //         this.AudioManager.Dino_AttkSound.loop = true;\r\n        //         this.getComponent(SkeletalAnimation).play(\"Atk_1\");\r\n        //         this.node.name === \"Rap\" ? this.isFight = true : this.isFight_2 = true;\r\n        //         this.node.name === \"Rap\" ? Constants.isCharacterCollideBoos = true : Constants.isCharacter_2CollideBoos = true;\r\n        //         this.scheduleOnce(() => {\r\n        //             this.node.name === \"Rap\" ? Constants.isFailStep1 = true : Constants.isFailStep2 = true;\r\n        //             this.die();\r\n        //         }, 2)\r\n        //     }\r\n        // });\r\n    }\r\n\r\n\r\n    private die(): void {\r\n        this.getComponent(SkeletalAnimation).play(\"Die\");\r\n        this.node.name === \"Rap\" ? Constants.isDoneStep1 = true : Constants.isDoneStep2 = true;\r\n        this.AudioManager.stopSound(Constants.SoundTrack.Dino_AttkSound);\r\n    }\r\n\r\n\r\n    private Run(): void {\r\n        this.rigidbody.type = ERigidBodyType.DYNAMIC;\r\n        this.rigidbody.setLinearVelocity(new math.Vec3(2, 0, -8))\r\n        if (!this.isRun) {\r\n            this.isRun = true;\r\n            this.getComponent(SkeletalAnimation).play(\"Run\");\r\n        }\r\n    }\r\n\r\n\r\n    private runStep2(): void {\r\n        this.rigidbody.type = ERigidBodyType.DYNAMIC;\r\n        this.rigidbody.setLinearVelocity(new math.Vec3(-3, 0, -8))\r\n        if (!this.isRun) {\r\n            this.isRun = true;\r\n            this.getComponent(SkeletalAnimation).play(\"Run\");\r\n        }\r\n    }\r\n\r\n\r\n    // protected update(dt: number): void {\r\n    //     if (Constants.isFightStep1 && !this.isFight && this.node.name === \"Rap\") {\r\n    //         this.Run();\r\n    //     }\r\n\r\n    //     if (Constants.isFightStep2 && !this.isFight_2) {\r\n    //         this.runStep2();\r\n    //     }\r\n    // }\r\n}\r\n\r\n"]}