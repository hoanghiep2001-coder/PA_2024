// Copyright (c) 2017-2020 Xiamen Yaji Software Co., Ltd.
CCEffect %{
  techniques:
    - name: opaque
        passes:
        - vert: spirte-vs:vert
            frag: spirte-fs:frag
            depthStencilState:
                depthTest: false
                depthWrite: false
            blendState:
                targets:
                - blend: true
                  blendSrc: src_alpha
                  blendDst: one_minus_src_alpha
                  blendDstAlpha: one_minus_src_alpha
            rasterizerState:
                cullMode: false
            properties: &props
                alphaThreshold: {value: 0.5}
                dissolve: {value: white, editor: {tooltip: 'dissolve map'}}
                dissolveThreshold: {value: 0.5, editor: {range: [0,1, 0.01], slide: true}}
}%

CCProgram spirte-vs %{
    precision highp float;
    #include <cc-global>
    #if USE_LOCAL
        #include <cc-local>
    #endif
    in vec3 a_position;
    in vec2 a_texCoord;
    in vec4 a_color;

    out vec4 color;
    out vec2 uv0;

    vec4 vert () {
        vec4 pos = vec4(a_position, 1)

        #if USE_LOCAL
            pos = cc_matWorld * pos;
        #endif

        pos = cc_matViewProj * pos;
        uv0 = a_texCoord;
        color = a_color;

        return pos;
    }
}%

CCProgram sprite-fs %{
    precision highp float;
    #include <alpha-test>

    in vec4 color;

    #if USE_TEXTURE
        in vec2 uv0;
        #pragma builtin(local)
        layout(set = 2, binding = 10) uniform sampler2D cc_spriteTexture;

        uniform sampler2D dissolve;
    #endif

    uniform Dissolve {
        float dissolveThreshold;
    };

    vec4 frag () {
        vec4 o = vec4(1,1,1,1);

          #if USE_TEXTURE
              o *= texture(cc_spriteTexture, uv0);
            #endif

            o *= color;
            ALPHA_TEST(o);
            return o;
    }
}%
