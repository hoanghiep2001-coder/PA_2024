{"version":3,"sources":["file:///D:/PA_2024/3D/ArtPuzzle/ArtPuzzle_Op1/assets/Script/Game/TouchArea.ts"],"names":["_decorator","Component","Vec3","UIController","GameController","AudioManager","GamePlay","Constants","ccclass","property","TouchArea","start","handleTouchStart","e","isCanClick","isToStore","installHandle","handleIronSourcePlaySound","isTouch","handleTouchMove","pos","convertToNodeSpace","getUILocation","screenPos","x","y","handleTouchEnd"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAASA,MAAAA,U,OAAAA,U;AAAYC,MAAAA,S,OAAAA,S;AAA+CC,MAAAA,I,OAAAA,I;;AAC3DC,MAAAA,Y,iBAAAA,Y;;AACAC,MAAAA,c,iBAAAA,c;;AACAC,MAAAA,Y,iBAAAA,Y;;AACAC,MAAAA,Q,iBAAAA,Q;;AACAC,MAAAA,S,iBAAAA,S;;;;;;;OACH;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBT,U;;2BAGjBU,S,WADZF,OAAO,CAAC,WAAD,C,UAGHC,QAAQ;AAAA;AAAA,uC,UAERA,QAAQ;AAAA;AAAA,2C,UAERA,QAAQ;AAAA;AAAA,uC,UAERA,QAAQ;AAAA;AAAA,+B,oCATb,MACaC,SADb,SAC+BT,SAD/B,CACyC;AAAA;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA,2CAalB,KAbkB;AAAA;;AAgB3BU,QAAAA,KAAK,GAAS,CACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACH;;AAGOC,QAAAA,gBAAgB,CAACC,CAAD,EAAsB;AAE1C,cAAI,CAAC;AAAA;AAAA,sCAAUC,UAAf,EAA2B;AAC3B;AAAA;AAAA,sCAAUC,SAAV,IAAsB,KAAKX,cAAL,CAAoBY,aAApB,EAAtB;AACA,eAAKV,QAAL,CAAcW,yBAAd;AAGA,eAAKC,OAAL,GAAe,IAAf;AACH;;AAGOC,QAAAA,eAAe,CAACN,CAAD,EAAsB;AACzC,cAAI,CAAC;AAAA;AAAA,sCAAUC,UAAf,EAA2B;AAC3B,cAAIM,GAAG,GAAG,KAAKC,kBAAL,CAAwBR,CAAC,CAACS,aAAF,EAAxB,CAAV;AAEH;;AAGOD,QAAAA,kBAAkB,CAACE,SAAD,EAAwB;AAC9C,cAAIH,GAAG,GAAG,IAAIlB,IAAJ,CAAS,EAAEqB,SAAS,CAACC,CAAV,GAAc,GAAhB,CAAT,EAA+B,EAAED,SAAS,CAACE,CAAV,GAAc,GAAhB,CAA/B,EAAqD,CAArD,CAAV;AACA,iBAAOL,GAAP;AACH;;AAGOM,QAAAA,cAAc,CAACb,CAAD,EAAsB;AACxC,cAAI,CAAC,KAAKK,OAAV,EAAmB;AACnB,eAAKA,OAAL,GAAe,KAAf;AAEH;;AAvDoC,O;;;;;iBAGR,I;;;;;;;iBAEI,I;;;;;;;iBAEJ,I;;;;;;;iBAER,I","sourcesContent":["import { _decorator, Component, EventTouch, log, Node, tween, Vec2, Vec3 } from 'cc';\nimport { UIController } from './UIController';\nimport { GameController } from './GameController';\nimport { AudioManager } from './AudioManager';\nimport { GamePlay } from './GamePlay';\nimport { Constants } from '../Data/constants';\nconst { ccclass, property } = _decorator;\n\n@ccclass('TouchArea')\nexport class TouchArea extends Component {\n\n    @property(UIController)\n    UIController: UIController = null;\n    @property(GameController)\n    GameController: GameController = null;\n    @property(AudioManager)\n    AudioManager: AudioManager = null;\n    @property(GamePlay)\n    GamePlay: GamePlay = null;\n\n\n    // static\n    isTouch: boolean = false;\n\n\n    protected start(): void {\n        // this.UIController.Items.forEach((item, index) => {\n        //     item.on(Node.EventType.TOUCH_START, () => this.handleTouchStart(index), this);\n        // })\n        // this.UIController.HideMask.on(Node.EventType.TOUCH_START, this.handleTouchStart, this);\n        // this.UIController.HideMask.on(Node.EventType.TOUCH_MOVE, this.handleTouchMove, this);\n        // this.UIController.HideMask.on(Node.EventType.TOUCH_END, this.handleTouchEnd, this);\n        // this.UIController.HideMask.on(Node.EventType.TOUCH_CANCEL, this.handleTouchEnd, this);\n    }\n\n\n    private handleTouchStart(e: EventTouch): void {\n\n        if (!Constants.isCanClick) return;\n        Constants.isToStore&& this.GameController.installHandle();\n        this.GamePlay.handleIronSourcePlaySound();\n\n\n        this.isTouch = true;\n    }\n\n\n    private handleTouchMove(e: EventTouch): void {\n        if (!Constants.isCanClick) return;\n        let pos = this.convertToNodeSpace(e.getUILocation());\n\n    }\n\n\n    private convertToNodeSpace(screenPos: Vec2): Vec3 {\n        let pos = new Vec3(-(screenPos.x - 160), -(screenPos.y - 240), 0);\n        return pos;\n    }\n\n\n    private handleTouchEnd(e: EventTouch): void {\n        if (!this.isTouch) return;\n        this.isTouch = false;\n   \n    }\n\n}\n"]}