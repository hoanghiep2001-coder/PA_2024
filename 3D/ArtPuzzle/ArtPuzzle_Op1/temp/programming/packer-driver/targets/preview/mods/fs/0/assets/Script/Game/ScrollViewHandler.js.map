{"version":3,"sources":["file:///D:/PA_2024/3D/ArtPuzzle/ArtPuzzle_Op1/assets/Script/Game/ScrollViewHandler.ts"],"names":["_decorator","Component","easing","instantiate","log","Node","ScrollView","Sprite","tween","UITransform","Vec3","UIController","Constants","GameCommon","GamePlay","GameController","AudioManager","ccclass","property","ScrollViewHandler","start","Items","forEach","item","on","EventType","TOUCH_START","onItemTouchStart","TOUCH_MOVE","onItemTouchMove","TOUCH_END","onItemTouchEnd","TOUCH_CANCEL","onItemClicked","event","customEventData","Tutorial","active","console","dissolvedItemNumber","installHandle","isCanClick","playSound","SoundTrack","clickSound","isTouching","node","getComponent","enabled","target","subItem","pos","convertToNodeSpace","getUILocation","pickingItem","children","name","match","currentDragNode","prevPos","pickingStep","Number","filterSameArea","ImpactArea","addChild","setPosition","scaleUpNode","checkImpactArea","sameArea","currentStep","matchSound","isDissolveIn","targetNode","removeChild","removeFromParent","turnBack","WrongSound","caculateTimeShowHint","screenPos","x","y","scaleNumber","to","scale","elasticOut","dragNode","position","call","area","nodeBdx","getBoundingBox","impactArea","intersects"],"mappings":"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","sourcesContent":["import { _decorator, Button, Component, easing, EventHandler, EventTouch, instantiate, log, Node, ScrollBar, ScrollView, Sprite, tween, UITransform, Vec2, Vec3 } from 'cc';\nimport { UIController } from './UIController';\nimport { Constants } from '../Data/constants';\nimport { GameCommon } from '../Data/GameCommon';\nimport { GamePlay } from './GamePlay';\nimport { GameController } from './GameController';\nimport { AudioManager } from './AudioManager';\nconst { ccclass, property } = _decorator;\n\n\n@ccclass('ScrollViewHandler')\nexport class ScrollViewHandler extends Component {\n\n    @property(UIController)\n    UIController: UIController = null;\n    @property(AudioManager)\n    AudioManager: AudioManager = null;\n    @property(GameController)\n    GameController: GameController = null;\n    @property(GamePlay)\n    GamePlay: GamePlay = null;\n\n    // state\n    prevPos: Vec3 = null;\n    pickingStep: number = 0;\n\n\n    protected start(): void {\n        this.UIController.Items.forEach((item) => {\n\n            item.on(Node.EventType.TOUCH_START, this.onItemTouchStart, this);\n\n            item.on(Node.EventType.TOUCH_MOVE, this.onItemTouchMove, this);\n\n            item.on(Node.EventType.TOUCH_END, this.onItemTouchEnd, this);\n\n            item.on(Node.EventType.TOUCH_CANCEL, this.onItemTouchEnd, this);\n\n        });\n    };\n\n\n    onItemClicked(event: Event, customEventData: any) {\n        this.UIController.Tutorial.active = false;\n        console.log(\"Item clicked: \", customEventData);\n    };\n\n\n    onItemTouchStart(event: EventTouch): void {\n        if(Constants.dissolvedItemNumber >= 20) {\n            this.GameController.installHandle();\n            return;\n        };\n        \n        if (!Constants.isCanClick) return;\n\n        // ironsource\n        // this.GamePlay.handleIronSourcePlaySound();\n\n        this.AudioManager.playSound(Constants.SoundTrack.clickSound);\n\n        Constants.isTouching = true;\n\n        this.node.getComponent(ScrollView).enabled = false;\n\n        let item: Node = event.target;  \n        let subItem = instantiate(item);\n        let pos = this.convertToNodeSpace(event.getUILocation());\n        let pickingItem = item.children[0].name;\n        let match = pickingItem.match(/Step(\\d+)_/);\n\n        Constants.currentDragNode = subItem;\n\n        this.prevPos = pos;\n\n        this.pickingStep = Number(match[1]);\n\n        this.GamePlay.filterSameArea(pickingItem);\n\n        this.UIController.ImpactArea.addChild(Constants.currentDragNode);\n\n        item.children[0].getComponent(Sprite).enabled = false;\n\n        Constants.currentDragNode.setPosition(pos);\n\n        this.scaleUpNode(Constants.currentDragNode);\n\n        this.UIController.Tutorial.active = false;\n\n        log(\"picking step: \" + this.pickingStep + \", item: \" + pickingItem);\n    }\n\n\n    onItemTouchMove(event: EventTouch): void {\n        if (!Constants.isCanClick) return;\n\n        let item: Node = event.target;\n        let pos = this.convertToNodeSpace(event.getUILocation());\n\n        if(Constants.currentDragNode) {\n            Constants.currentDragNode.setPosition(pos);\n        }\n\n        if(this.checkImpactArea(Constants.sameArea) && (this.pickingStep === GameCommon.currentStep)) {\n\n            this.AudioManager.playSound(Constants.SoundTrack.matchSound);\n\n            Constants.isCanClick = false;\n            Constants.isDissolveIn = true;\n            Constants.targetNode.active = true;\n            Constants.currentDragNode.active = false;\n\n            this.prevPos = null;\n\n            this.node.getComponent(ScrollView).enabled = true;\n\n            this.UIController.ImpactArea.removeChild(Constants.currentDragNode);\n\n            item.active = false;\n\n            item.removeFromParent();\n\n            log(\"Correct!!\");\n        }\n    }\n\n\n    onItemTouchEnd(event: EventTouch): void {\n        if (!Constants.isCanClick || !Constants.currentDragNode) return;\n\n        let item: Node = event.target;\n\n        Constants.isTouching = false;\n        \n        if(this.pickingStep !== GameCommon.currentStep || !this.checkImpactArea(Constants.sameArea)) {\n            this.turnBack(Constants.currentDragNode, item);\n            this.AudioManager.playSound(Constants.SoundTrack.WrongSound);\n        }\n\n        this.GamePlay.caculateTimeShowHint();\n    }\n\n\n    private convertToNodeSpace(screenPos: Vec2): Vec3 {\n        let pos = new Vec3((screenPos.x - 160), (screenPos.y - 240), 0);\n        return pos;\n    }\n\n\n    private scaleUpNode(Node: Node): void {\n        log(\"saleUp ```\")\n\n        let scaleNumber: number = 2;\n\n        if( Node.name === \"item_16\" \n            || Node.name === \"item_17\" \n            || Node.name === \"item_8\") \n            scaleNumber = 3.5;\n\n        tween(Node)\n            .to(0.5, { scale: new Vec3(scaleNumber, scaleNumber, scaleNumber) }, { easing: easing.elasticOut })\n            .start();\n    }\n\n\n    private turnBack(dragNode: Node, item: Node): void {\n        log(\"TurnBack ```\")\n\n        Constants.isCanClick = false;\n        this.node.getComponent(ScrollView).enabled = true;\n\n        tween(dragNode)\n            .to(0.5, { scale: new Vec3(1, 1, 1), position: this.prevPos })\n            .call(() => {\n                this.prevPos = null;\n\n                item.children[0].getComponent(Sprite).enabled = true;\n\n                dragNode.active = false;\n\n                Constants.currentDragNode = null;\n\n                this.node.getComponent(ScrollView).enabled = true;\n\n                Constants.isCanClick = true;\n            }).start();\n    }\n\n\n    private checkImpactArea(area: Node): boolean {\n        if (Constants.currentDragNode) {\n            let nodeBdx = Constants.currentDragNode.getComponent(UITransform).getBoundingBox();\n            let impactArea = area.getComponent(UITransform).getBoundingBox();\n\n            if (impactArea.intersects(nodeBdx)) return true;\n            else return false;\n        }\n    }\n}\n"]}