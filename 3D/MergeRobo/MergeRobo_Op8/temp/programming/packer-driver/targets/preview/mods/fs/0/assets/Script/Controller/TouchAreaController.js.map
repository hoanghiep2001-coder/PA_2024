{"version":3,"sources":["file:///D:/PA_2024/3D/MergeRobo/MergeRobo_Op8/assets/Script/Controller/TouchAreaController.ts"],"names":["_decorator","Component","Node","Vec3","UITransform","ParticleSystem","Constants","NodesController","GameController","AudioManager","IronSource","ccclass","property","TouchAreaController","start","registerEvent","hideMask","on","EventType","TOUCH_START","touchStart","TOUCH_MOVE","touchMove","TOUCH_END","touchEnd","TOUCH_CANCEL","CTA_btn","installHandle","isCanTouch","ironSource","isEndGame","handleIronSourcePlaySound","GameData","touchPointCount","Text_Tap","active","isFightStep1","isTouching","Hand","event","touchPos","convertToLocalLocation","getUILocation","movingPoint","setPosition","handleCollideOtherPoint","value","localX","x","node","getPosition","localY","y","result","pointBdx","getComponent","getBoundingBox","handleCollideStep1","index","points","length","point","otherPointBdx","roboTouchingNumber","intersects","activeCurrentRoboWithTouch","playSound","SoundTrack","chooseSound","robo","robo_Step1","roboFXs","getComponentsInChildren","roboArownDown","getChildByName","forEach","fx","play","isDoneStep1"],"mappings":"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","sourcesContent":["import { _decorator, Component, Node, Vec2, EventTouch, Vec3, UITransform, ParticleSystem, Rect, log } from \"cc\";\r\nimport { Constants } from \"../Data/Constant\";\r\nimport { NodesController } from \"./NodesController\";\r\nimport { GameController } from \"./GameController\";\r\nimport { AudioManager } from \"../Plugin/AudioManager\";\r\nimport { IronSource } from \"../Plugin/IronSource\";\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass(\"TouchAreaController\")\r\nexport class TouchAreaController extends Component {\r\n  @property(IronSource)\r\n  IronSource: IronSource = null;\r\n  @property(AudioManager)\r\n  AudioManager: AudioManager = null;\r\n  @property(NodesController)\r\n  NodesController: NodesController = null;\r\n  @property(GameController)\r\n  GameController: GameController = null;\r\n\r\n  // state\r\n  pos: Vec3 = null;\r\n\r\n\r\n  isDoneMergeStep1: boolean = false;\r\n  isDoneMergeStep2: boolean = false;\r\n\r\n\r\n  protected start(): void {\r\n    this.registerEvent();\r\n  }\r\n\r\n\r\n  private registerEvent(): void {\r\n    this.NodesController.hideMask.on(Node.EventType.TOUCH_START, this.touchStart, this);\r\n    this.NodesController.hideMask.on(Node.EventType.TOUCH_MOVE, this.touchMove, this);\r\n    this.NodesController.hideMask.on(Node.EventType.TOUCH_END, this.touchEnd, this);\r\n    this.NodesController.hideMask.on(Node.EventType.TOUCH_CANCEL, this.touchEnd, this);\r\n\r\n    this.NodesController.CTA_btn.on(Node.EventType.TOUCH_START, this.GameController.installHandle, this);\r\n\r\n    // mtg & applovin\r\n    // this.NodesController.CTA_overlay.on(Node.EventType.TOUCH_START, this.GameController.installHandle, this);\r\n  }\r\n\r\n\r\n  private touchStart(): void {\r\n    if (!Constants.isCanTouch || Constants.ironSource.isEndGame) {\r\n      return;\r\n    }\r\n\r\n    this.IronSource.handleIronSourcePlaySound();\r\n\r\n    if (Constants.GameData.touchPointCount === 2) {\r\n      Constants.GameData.touchPointCount += 1;\r\n\r\n      this.NodesController.Text_Tap.active = false;\r\n\r\n      Constants.isFightStep1 = true;\r\n    }\r\n\r\n    Constants.isTouching = true;\r\n\r\n    this.NodesController.Hand.active = false;\r\n  }\r\n\r\n\r\n  private touchMove(event: EventTouch) {\r\n    if (!Constants.isCanTouch || Constants.ironSource.isEndGame) {\r\n      return;\r\n    }\r\n\r\n    let touchPos = this.convertToLocalLocation(event.getUILocation());\r\n\r\n    this.NodesController.movingPoint.setPosition(touchPos);\r\n\r\n    this.handleCollideOtherPoint();\r\n  }\r\n\r\n\r\n  private touchEnd(): void {\r\n\r\n\r\n    if (!Constants.isCanTouch || Constants.ironSource.isEndGame) {\r\n      return;\r\n    }\r\n\r\n    Constants.isTouching = false;\r\n  }\r\n\r\n\r\n  private convertToLocalLocation(value: Vec2): Vec3 {\r\n    const localX = value.x - 160 - this.node.getPosition().x;\r\n    const localY = value.y - 240 - this.node.getPosition().y;\r\n    const result = new Vec3(localX, localY, 0);\r\n    return result;\r\n  }\r\n\r\n\r\n  private handleCollideOtherPoint(): void {\r\n    let pointBdx = this.NodesController.movingPoint.getComponent(UITransform).getBoundingBox();\r\n\r\n    this.handleCollideStep1(pointBdx);\r\n  }\r\n\r\n\r\n  private handleCollideStep1(pointBdx: Rect): void {\r\n    for (let index = 0; index < this.NodesController.points.length; index++) {\r\n      const point = this.NodesController.points[index];\r\n      let otherPointBdx = point.getComponent(UITransform).getBoundingBox();\r\n\r\n      if (Constants.GameData.roboTouchingNumber !== index && pointBdx.intersects(otherPointBdx))\r\n        this.activeCurrentRoboWithTouch(index);\r\n    }\r\n  }\r\n\r\n\r\n  private activeCurrentRoboWithTouch(index: number): void {\r\n    this.AudioManager.playSound(Constants.SoundTrack.chooseSound);\r\n\r\n    Constants.GameData.roboTouchingNumber = index;\r\n    Constants.GameData.touchPointCount += 1;\r\n\r\n    const robo = this.NodesController.robo_Step1[index];\r\n    const roboFXs = robo.getComponentsInChildren(ParticleSystem);\r\n    const roboArownDown = robo.getChildByName(\"Arrown\");\r\n\r\n    roboFXs.forEach(fx => fx.play());\r\n    roboArownDown.active = true;\r\n\r\n    if (Constants.GameData.touchPointCount === 2) Constants.GameData.isDoneStep1 = true;\r\n  }\r\n}\r\n"]}