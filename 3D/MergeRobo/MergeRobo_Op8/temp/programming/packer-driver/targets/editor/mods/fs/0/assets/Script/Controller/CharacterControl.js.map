{"version":3,"sources":["file:///D:/PA_2024/3D/MergeRobo/MergeRobo_Op8/assets/Script/Controller/CharacterControl.ts"],"names":["_decorator","BoxCollider","Component","ERigidBodyType","math","Node","ParticleSystem","RigidBody","SkeletalAnimation","Constants","AudioManager","NodesController","ccclass","property","CharacterControl","onLoad","start","rigidbody","node","getComponent","collider","on","e","otherCollider","name","isCollide","playFireBallFX","playSound","SoundTrack","Dino_AttkSound","loop","play","isFight","isFight_2","isCharacterCollideBoos","scheduleOnce","isFailStep1","isFailStep2","die","FX_FireBalls","Level","active","isDoneStep1","isDoneStep2","stopSound","DieSound","isDonePA","Run","type","DYNAMIC","setLinearVelocity","Vec3","isRun","runStep2","update","dt","isFightStep1"],"mappings":"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","sourcesContent":["\r\nimport { _decorator, BoxCollider, Component, ERigidBodyType, ICollisionEvent, math, Node, ParticleSystem, RigidBody, SkeletalAnimation, Vec3 } from 'cc';\r\nimport { Constants } from '../Data/Constant';\r\nimport { AudioManager } from '../Plugin/AudioManager';\r\nimport { NodesController } from './NodesController';\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass('CharacterControl')\r\nexport class CharacterControl extends Component {\r\n\r\n    @property(AudioManager)\r\n    AudioManager: AudioManager = null;\r\n\r\n    @property(NodesController)\r\n    NodesController: NodesController = null;\r\n\r\n    @property(Node)\r\n    Level: Node = null;\r\n\r\n    isRun: boolean = false;\r\n    isFight: boolean = false;\r\n    isFight_2: boolean = false;\r\n    rigidbody: RigidBody;\r\n    collider: BoxCollider;\r\n    isCollide: boolean = false;\r\n\r\n\r\n    protected onLoad(): void {\r\n        // this.level.active = false;\r\n        // this.node.active = false;\r\n    }\r\n\r\n\r\n    protected start(): void {\r\n\r\n        this.rigidbody = this.node.getComponent(RigidBody);\r\n        this.collider = this.node.getComponent(BoxCollider)\r\n\r\n        this.collider.on(\"onCollisionEnter\", (e: ICollisionEvent) => {\r\n            if (e.otherCollider.node.name === \"Robo_Boss\") {\r\n                if (this.isCollide) {\r\n                    return;\r\n                }\r\n\r\n                this.isCollide = true;\r\n\r\n                this.playFireBallFX();\r\n\r\n                this.AudioManager.playSound(Constants.SoundTrack.Dino_AttkSound);\r\n\r\n                this.AudioManager.Dino_AttkSound.loop = true;\r\n\r\n                this.getComponent(SkeletalAnimation).play(\"atk\");\r\n\r\n                this.node.name === \"Robo_2\" ? this.isFight = true : this.isFight_2 = true;\r\n\r\n                Constants.isCharacterCollideBoos = true;\r\n\r\n                this.scheduleOnce(() => {\r\n                    this.node.name === \"Robo_2\" ? Constants.isFailStep1 = true : Constants.isFailStep2 = true;\r\n                    this.die();\r\n                }, 2)\r\n            }\r\n        });\r\n    }   \r\n\r\n\r\n    private playFireBallFX(): void {\r\n        // this.NodesController.FX_FireBalls[0].getComponent(ParticleSystem).play();\r\n\r\n        this.scheduleOnce(() => {this.NodesController.FX_FireBalls[0].getComponent(ParticleSystem).play();}, 0.5)\r\n        this.scheduleOnce(() => {this.NodesController.FX_FireBalls[1].getComponent(ParticleSystem).play();}, 1)\r\n        this.scheduleOnce(() => {this.NodesController.FX_FireBalls[2].getComponent(ParticleSystem).play();}, 1.5)\r\n    }\r\n\r\n\r\n    private die(): void {\r\n        \r\n        this.Level.active = false\r\n\r\n        this.getComponent(SkeletalAnimation).play(\"die\");\r\n        this.node.name === \"Robo_2\" ? Constants.isDoneStep1 = true : Constants.isDoneStep2 = true;\r\n        this.AudioManager.stopSound(Constants.SoundTrack.Dino_AttkSound);\r\n        this.AudioManager.playSound(Constants.SoundTrack.DieSound);\r\n\r\n        this.scheduleOnce(() => {Constants.isDonePA = true;}, 1)\r\n    }\r\n\r\n\r\n    private Run(): void {\r\n        this.rigidbody.type = ERigidBodyType.DYNAMIC;\r\n        this.rigidbody.setLinearVelocity(new math.Vec3(0, 0, -10))\r\n        if (!this.isRun) {\r\n            this.isRun = true;\r\n            this.getComponent(SkeletalAnimation).play(\"walk\");\r\n        }\r\n\r\n    }\r\n\r\n\r\n    private runStep2(): void {\r\n        this.rigidbody.type = ERigidBodyType.DYNAMIC;\r\n        this.rigidbody.setLinearVelocity(new math.Vec3(-3, 0, -8))\r\n        if (!this.isRun) {\r\n            this.isRun = true;\r\n            this.getComponent(SkeletalAnimation).play(\"walk\");\r\n        }\r\n    }\r\n\r\n\r\n    protected update(dt: number): void {\r\n        if (Constants.isFightStep1 && !this.isFight) {\r\n            this.Run();\r\n        }\r\n    }\r\n}\r\n\r\n"]}