{"version":3,"sources":["file:///D:/PA_2024/3D/MergeRobo/MergeRobo_Op8/assets/assets/script/reuseList.ts"],"names":["_decorator","Component","Node","ScrollViewComponent","Prefab","WidgetComponent","UITransformComponent","Enum","Vec3","log","Size","PoolManager","ccclass","menu","property","disallowMultiple","requireComponent","SCROLL_NUM","TOP_TO_BOTTOM","LEFT_TO_RIGHT","SCROLL_TYPE","reuseList","tooltip","displayName","type","onLoad","scrollView","node","getComponent","content","setAnchorPoint","widgetComponent","addComponent","top","bottom","isAlignLeft","isAlignTop","isAlignRight","isAlignBottom","isAlignVerticalCenter","isAlignHorizontalCenter","updateAlignment","scrollType","vertical","horizontal","start","onEnable","variableSizeOfChild","on","EventType","CHILD_ADDED","doLayout","CHILD_REMOVED","onDisable","off","init","datas","isChange","positions","Array","size","contentSize","count","Math","floor","width","paddingLeft","getPrefabWidth","spacingX","paddingTop","getPrefabHeight","spacingY","i","length","widthIndex","heightIndex","height","push","sizeWidth","sizeHeight","sizeHeightIndex","ceil","setContentSize","sizeWidthIndex","handleNode","child","num","viewPos","getPositionInView","isOverBorder","getChildByName","String","remove","create","emit","index","data","setPosition","name","children","indexOf","parseInt","update","dt","updateTimer","updateInterval","itemPrefab","prefabScale","position","worldPos","convertToWorldSpaceAR","convertToNodeSpaceAR","onDestory","instance","clearPool","getNode","SIZE_CHANGED","setScale","_doLayoutDirty","putNode","itemHeight","itemWidth","borderHeight","borderWidth","y","x","curWidth","curHeight","getPosition"],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAASA,MAAAA,U,OAAAA,U;AAAYC,MAAAA,S,OAAAA,S;AAAWC,MAAAA,I,OAAAA,I;AAAMC,MAAAA,mB,OAAAA,mB;AAAqBC,MAAAA,M,OAAAA,M;AAAQC,MAAAA,e,OAAAA,e;AAAiBC,MAAAA,oB,OAAAA,oB;AAAsBC,MAAAA,I,OAAAA,I;AAAqBC,MAAAA,I,OAAAA,I;AAAMC,MAAAA,G,OAAAA,G;AAAKC,MAAAA,I,OAAAA,I;;AACnIC,MAAAA,W;;;;;;;OACD;AAAEC,QAAAA,OAAF;AAAWC,QAAAA,IAAX;AAAiBC,QAAAA,QAAjB;AAA2BC,QAAAA,gBAA3B;AAA6CC,QAAAA;AAA7C,O,GAAiEhB,U;AACjEiB,MAAAA,U,GAAaV,IAAI,CAAC;AACpB;AACJ;AACA;AACA;AACA;AACIW,QAAAA,aAAa,EAAE,CANK;;AAOpB;AACJ;AACA;AACA;AACA;AACIC,QAAAA,aAAa,EAAE;AAZK,OAAD,C;AAejBC,MAAAA,W,GAAcb,IAAI,CAAC;AACrB;AACJ;AACA;AACA;AACA;AACI;AACA;AACA,gBAAQ,CARa;;AASrB;AACJ;AACA;AACA;AACA;AACI;AACA;AACA,gBAAQ;AAhBa,OAAD,C;;2BAsBXc,S,WAJZT,OAAO,CAAC,WAAD,C,UACPC,IAAI,CAAC,iBAAD,C,UACJG,gBAAgB,CAACb,mBAAD,C,UAwBZW,QAAQ,CAAC;AAACQ,QAAAA,OAAO,EAAE,QAAV;AAAqBC,QAAAA,WAAW,EAAE,MAAlC;AAA0CC,QAAAA,IAAI,EAAEJ;AAAhD,OAAD,C,UAMRN,QAAQ,CAAC;AAACQ,QAAAA,OAAO,EAAE;AAAV,OAAD,C,UAORR,QAAQ,CAAC;AAACQ,QAAAA,OAAO,EAAE;AAAV,OAAD,C,UAORR,QAAQ,CAAC;AAACQ,QAAAA,OAAO,EAAE;AAAV,OAAD,C,UAORR,QAAQ,CAAC;AAACQ,QAAAA,OAAO,EAAE;AAAV,OAAD,C,UAORR,QAAQ,CAAC;AAACQ,QAAAA,OAAO,EAAE,YAAV;AAAwBE,QAAAA,IAAI,EAAEpB;AAA9B,OAAD,C,WAORU,QAAQ,CAAC;AAACQ,QAAAA,OAAO,EAAE;AAAV,OAAD,C,WAORR,QAAQ,CAAC;AAACQ,QAAAA,OAAO,EAAE;AAAV,OAAD,C,8CAvEZP,gB,8BAHD,MAIaM,SAJb,SAI+BpB,SAJ/B,CAIyC;AAAA;AAAA;;AAAA,+CAQf,CARe;;AAAA,kDASZ,GATY;;AAAA,yCAUtB,EAVsB;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAyErCwB,QAAAA,MAAM,GAAI;AAAA;;AACN,eAAKC,UAAL,GAAkB,KAAKC,IAAL,CAAUC,YAAV,CAAuBzB,mBAAvB,CAAlB;AACA,eAAK0B,OAAL,GAAe,KAAKH,UAAL,CAAgBG,OAA/B;AACA,wCAAKA,OAAL,CAAaD,YAAb,CAA0BtB,oBAA1B,iFAAiDwB,cAAjD,CAAgE,CAAhE,EAAmE,CAAnE;AACA,cAAIC,eAAe,GAAG,KAAKF,OAAL,CAAaD,YAAb,CAA0BvB,eAA1B,CAAtB;;AACA,cAAI,CAAC0B,eAAL,EAAsB;AAClBA,YAAAA,eAAe,GAAG,KAAKF,OAAL,CAAaG,YAAb,CAA0B3B,eAA1B,CAAlB;AACH;;AAED0B,UAAAA,eAAe,CAACE,GAAhB,GAAsB,CAAtB;AACAF,UAAAA,eAAe,CAACG,MAAhB,GAAyB,CAAzB;AACAH,UAAAA,eAAe,CAACI,WAAhB,GAA8B,IAA9B;AACAJ,UAAAA,eAAe,CAACK,UAAhB,GAA6B,IAA7B;AACAL,UAAAA,eAAe,CAACM,YAAhB,GAA+B,KAA/B;AACAN,UAAAA,eAAe,CAACO,aAAhB,GAAgC,KAAhC;AACAP,UAAAA,eAAe,CAACQ,qBAAhB,GAAwC,KAAxC;AACAR,UAAAA,eAAe,CAACS,uBAAhB,GAA0C,KAA1C;AACAT,UAAAA,eAAe,CAACU,eAAhB;;AAEA,cAAI,KAAKC,UAAL,KAAoBzB,UAAU,CAACC,aAAnC,EAAkD;AAC9C,iBAAKQ,UAAL,CAAgBiB,QAAhB,GAA2B,IAA3B;AACA,iBAAKjB,UAAL,CAAgBkB,UAAhB,GAA6B,KAA7B;AACH,WAHD,MAGO,IAAI,KAAKF,UAAL,KAAoBzB,UAAU,CAACE,aAAnC,EAAkD;AACrD,iBAAKO,UAAL,CAAgBiB,QAAhB,GAA2B,KAA3B;AACA,iBAAKjB,UAAL,CAAgBkB,UAAhB,GAA6B,IAA7B;AACH;AACJ;;AAEDC,QAAAA,KAAK,GAAI,CAER;;AAGDC,QAAAA,QAAQ,GAAI;AACR,cAAI,CAAC,KAAKC,mBAAV,EAA+B;AAC/B,eAAKlB,OAAL,CAAamB,EAAb,CAAgB9C,IAAI,CAAC+C,SAAL,CAAeC,WAA/B,EAA4C,KAAKC,QAAjD,EAA2D,IAA3D;AACA,eAAKtB,OAAL,CAAamB,EAAb,CAAgB9C,IAAI,CAAC+C,SAAL,CAAeG,aAA/B,EAA8C,KAAKD,QAAnD,EAA6D,IAA7D;AACH;;AAEDE,QAAAA,SAAS,GAAI;AACT,cAAI,CAAC,KAAKN,mBAAV,EAA+B;AAC/B,eAAKlB,OAAL,CAAayB,GAAb,CAAiBpD,IAAI,CAAC+C,SAAL,CAAeC,WAAhC,EAA6C,KAAKC,QAAlD,EAA4D,IAA5D;AACA,eAAKtB,OAAL,CAAayB,GAAb,CAAiBpD,IAAI,CAAC+C,SAAL,CAAeG,aAAhC,EAA+C,KAAKD,QAApD,EAA8D,IAA9D;AACH;AAED;AACJ;AACA;AACA;AACA;;;AACII,QAAAA,IAAI,CAAEC,KAAF,EAAgB;AAAA;;AAChB,eAAKC,QAAL,GAAgB,IAAhB;AACA,eAAKC,SAAL,GAAiB,EAAjB;AAEA,eAAKF,KAAL,GAAaA,KAAK,YAAYG,KAAjB,GAAyBH,KAAzB,GAAiC,EAA9C;AAEA,cAAMI,IAAI,4BAAG,KAAKjC,IAAL,CAAUC,YAAV,CAAuBtB,oBAAvB,CAAH,0DAAG,sBAA8CuD,WAA3D;;AACA,cAAI,KAAKnB,UAAL,KAAoBzB,UAAU,CAACC,aAAnC,EAAkD;AAC9C,iBAAK4C,KAAL,GAAaC,IAAI,CAACC,KAAL,CAAW,CAACJ,IAAI,CAACK,KAAL,GAAa,KAAKC,WAAnB,KAAmC,KAAKC,cAAL,KAAwB,KAAKC,QAAhE,CAAX,CAAb;AACH,WAFD,MAEO;AACH,iBAAKN,KAAL,GAAaC,IAAI,CAACC,KAAL,CAAW,CAACJ,IAAI,CAACK,KAAL,GAAa,KAAKI,UAAnB,KAAkC,KAAKC,eAAL,KAAyB,KAAKC,QAAhE,CAAX,CAAb;AACH;;AAED,eAAKT,KAAL,GAAa,KAAKA,KAAL,GAAa,CAAb,GAAiB,KAAKA,KAAtB,GAA8B,CAA3C;AAEA,cAAIU,CAAC,GAAG,CAAR;;AACA,iBAAOA,CAAC,GAAG,KAAKhB,KAAL,CAAWiB,MAAtB,EAA8BD,CAAC,EAA/B,EAAmC;AAC/B,gBAAIE,UAAU,SAAd;AACA,gBAAIC,WAAW,SAAf;;AACA,gBAAI,KAAKjC,UAAL,KAAoBzB,UAAU,CAACC,aAAnC,EAAkD;AAC9CwD,cAAAA,UAAU,GAAGF,CAAC,GAAG,KAAKV,KAAtB;AACAa,cAAAA,WAAW,GAAGZ,IAAI,CAACC,KAAL,CAAWQ,CAAC,GAAG,KAAKV,KAApB,CAAd;AACH,aAHD,MAGO;AACHY,cAAAA,UAAU,GAAGX,IAAI,CAACC,KAAL,CAAWQ,CAAC,GAAG,KAAKV,KAApB,CAAb;AACAa,cAAAA,WAAW,GAAGH,CAAC,GAAG,KAAKV,KAAvB;AACH;;AAED,gBAAMG,KAAK,GAAG,KAAKE,cAAL,EAAd;AACA,gBAAMS,MAAM,GAAG,KAAKN,eAAL,EAAf;AACA,iBAAKZ,SAAL,CAAemB,IAAf,CAAoB,IAAIrE,IAAJ,CAAS,KAAK0D,WAAL,GAAmB,KAAKE,QAAL,GAAgBM,UAAnC,GAAgDT,KAAK,IAAIS,UAAU,GAAG,IAAI,CAArB,CAA9D,EAChB,EAAE,KAAKL,UAAL,GAAkB,KAAKE,QAAL,GAAgBI,WAAlC,GAAgDC,MAAM,IAAID,WAAW,GAAG,IAAI,CAAtB,CAAxD,CADgB,EACmE,CADnE,CAApB;AAEH,WA/Be,CAiChB;;;AACA,cAAMG,SAAS,GAAG,KAAKX,cAAL,EAAlB;AACA,cAAMY,UAAU,GAAG,KAAKT,eAAL,EAAnB;;AAEA,cAAI,KAAK5B,UAAL,KAAoBzB,UAAU,CAACC,aAAnC,EAAkD;AAAA;;AAC9C,gBAAM8D,eAAe,GAAGjB,IAAI,CAACkB,IAAL,CAAUT,CAAC,GAAG,KAAKV,KAAnB,CAAxB;AACA,2CAAKjC,OAAL,CAAaD,YAAb,CAA0BtB,oBAA1B,mFAAiD4E,cAAjD,CACI,IAAIxE,IAAJ,CAASkD,IAAI,CAACK,KAAd,EAAqB,KAAKI,UAAL,GAAkB,KAAKE,QAAL,GAAgBS,eAAlC,GAAoDD,UAAU,GAAGC,eAAtF,CADJ;AAGH,WALD,MAKO;AAAA;;AACH,gBAAMG,cAAc,GAAGpB,IAAI,CAACkB,IAAL,CAAUT,CAAC,GAAG,KAAKV,KAAnB,CAAvB;AACA,2CAAKjC,OAAL,CAAaD,YAAb,CAA0BtB,oBAA1B,mFAAiD4E,cAAjD,CACI,IAAIxE,IAAJ,CAAS,KAAKwD,WAAL,GAAmB,KAAKE,QAAL,GAAgBe,cAAnC,GAAoDL,SAAS,GAAGK,cAAzE,EAAyFvB,IAAI,CAACgB,MAA9F,CADJ;AAGH;AACJ;AAED;AACJ;AACA;;;AACIQ,QAAAA,UAAU,GAAI;AACV,cAAIC,KAAJ;AACA,cAAMC,GAAG,GAAG,EAAZ;;AACA,eAAK,IAAId,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKhB,KAAL,CAAWiB,MAA/B,EAAuCD,CAAC,EAAxC,EAA4C;AACxC,gBAAMe,OAAO,GAAG,KAAKC,iBAAL,CAAuB,KAAK9B,SAAL,CAAec,CAAf,CAAvB,CAAhB;;AACA,gBAAI,KAAKiB,YAAL,CAAkBF,OAAlB,CAAJ,EAAgC;AAC5BF,cAAAA,KAAK,GAAG,KAAKxD,OAAL,CAAa6D,cAAb,CAA4BC,MAAM,CAACnB,CAAD,CAAlC,CAAR;;AACA,kBAAIa,KAAJ,EAAW;AACP;AACA,qBAAKO,MAAL,CAAYP,KAAZ;AACH;AACJ,aAND,MAMO;AACHC,cAAAA,GAAG,CAACT,IAAJ,CAASL,CAAT;AACAa,cAAAA,KAAK,GAAG,KAAKxD,OAAL,CAAa6D,cAAb,CAA4BC,MAAM,CAACnB,CAAD,CAAlC,CAAR;;AACA,kBAAI,CAACa,KAAL,EAAY;AACR;AACA,qBAAKQ,MAAL,CAAYR,KAAZ,EAAmBb,CAAnB;AACH,eAHD,MAGO,IAAI,KAAKf,QAAT,EAAmB;AACtB,qBAAK9B,IAAL,CAAUmE,IAAV,CAAe,MAAf,EAAuB;AAAEC,kBAAAA,KAAK,EAAEvB,CAAT;AAAY7C,kBAAAA,IAAI,EAAE0D,KAAlB;AAAyBW,kBAAAA,IAAI,EAAE,KAAKxC,KAAL,CAAWgB,CAAX;AAA/B,iBAAvB;AACAa,gBAAAA,KAAK,CAACY,WAAN,CAAkB,KAAKvC,SAAL,CAAec,CAAf,CAAlB;AACAa,gBAAAA,KAAK,CAACa,IAAN,GAAaP,MAAM,CAACnB,CAAD,CAAnB;AACH;AACJ;AACJ,WAvBS,CAyBV;;;AACA,cAAI,KAAKf,QAAT,EAAmB;AACf,gBAAM;AAAE0C,cAAAA;AAAF,gBAAe,KAAKtE,OAA1B;AACApB,YAAAA,GAAG,SAAO6E,GAAP,CAAH;;AACA,iBAAK,IAAId,EAAC,GAAG,CAAb,EAAgBA,EAAC,GAAG2B,QAAQ,CAAC1B,MAA7B,GAAsC;AAClCY,cAAAA,KAAK,GAAGc,QAAQ,CAAC3B,EAAD,CAAhB;;AACA,kBAAIc,GAAG,CAACc,OAAJ,CAAYC,QAAQ,CAAChB,KAAK,CAACa,IAAP,CAApB,MAAsC,CAAC,CAA3C,EAA8C;AAC1CzF,gBAAAA,GAAG,YAAU4E,KAAK,CAACa,IAAhB,CAAH;AACA,qBAAKN,MAAL,CAAYP,KAAZ;AACH,eAHD,MAGO;AACHb,gBAAAA,EAAC;AACJ;AACJ;AACJ;;AAED,eAAKf,QAAL,GAAgB,KAAhB;AACH;;AAED6C,QAAAA,MAAM,CAAEC,EAAF,EAAM;AACR,eAAKC,WAAL,IAAoBD,EAApB;;AACA,cAAI,KAAKC,WAAL,GAAmB,KAAKC,cAA5B,EAA4C;AACxC,mBADwC,CAChC;AACX;;AAED,eAAKD,WAAL,GAAmB,CAAnB;AACA,eAAKpB,UAAL;AACH;AAED;AACJ;AACA;;;AACId,QAAAA,eAAe,GAAI;AAAA;;AACf,iBAAO,+BAAKoC,UAAL,CAAgBV,IAAhB,CAAqBpE,YAArB,CAAkCtB,oBAAlC,iFAAyDsE,MAAzD,IAAkE,KAAK+B,WAA9E;AACH;AAED;AACJ;AACA;;;AACIxC,QAAAA,cAAc,GAAI;AAAA;;AACd,iBAAO,gCAAKuC,UAAL,CAAgBV,IAAhB,CAAqBpE,YAArB,CAAkCtB,oBAAlC,mFAAyD2D,KAAzD,IAAiE,KAAK0C,WAA7E;AACH;AAED;AACJ;AACA;;;AACInB,QAAAA,iBAAiB,CAAEoB,QAAF,EAAkB;AAAA;;AAAE;AACjC,cAAMC,QAAQ,6BAAG,KAAKhF,OAAL,CAAaD,YAAb,CAA0BtB,oBAA1B,CAAH,2DAAG,uBAAiDwG,qBAAjD,CAAuEF,QAAvE,CAAjB;AACA,cAAMrB,OAAO,6BAAG,KAAK5D,IAAL,CAAUC,YAAV,CAAuBtB,oBAAvB,CAAH,2DAAG,uBAA8CyG,oBAA9C,CAAmEF,QAAnE,CAAhB;AACA,iBAAOtB,OAAP;AACH;;AAEDyB,QAAAA,SAAS,GAAI;AACT;AAAA;AAAA,0CAAYC,QAAZ,CAAqBC,SAArB,CAA+B,KAAKR,UAAL,CAAgBV,IAAhB,CAAqBE,IAApD;AACH;AAED;AACJ;AACA;AACA;AACA;;;AACIL,QAAAA,MAAM,CAAER,KAAF,EAAeU,KAAf,EAA8B;AAChCV,UAAAA,KAAK,GAAG;AAAA;AAAA,0CAAY4B,QAAZ,CAAqBE,OAArB,CAA6B,KAAKT,UAAlC,EAA8C,KAAK7E,OAAnD,CAAR;AACA,cAAI,KAAKkB,mBAAT,EAA8BsC,KAAK,CAACrC,EAAN,CAAS9C,IAAI,CAAC+C,SAAL,CAAemE,YAAxB,EAAsC,KAAKjE,QAA3C,EAAqD,IAArD;AAC9BkC,UAAAA,KAAK,CAACgC,QAAN,CAAe,KAAKV,WAApB,EAAiC,KAAKA,WAAtC,EAAmD,KAAKA,WAAxD;AACAtB,UAAAA,KAAK,CAACY,WAAN,CAAkB,KAAKvC,SAAL,CAAeqC,KAAf,CAAlB;AACAV,UAAAA,KAAK,CAACa,IAAN,GAAaP,MAAM,CAACI,KAAD,CAAnB;AACA,eAAKpE,IAAL,CAAUmE,IAAV,CAAe,MAAf,EAAuB;AAAEC,YAAAA,KAAF;AAASpE,YAAAA,IAAI,EAAE0D,KAAf;AAAsBW,YAAAA,IAAI,EAAE,KAAKxC,KAAL,CAAWuC,KAAX;AAA5B,WAAvB;AACH;AAED;AACJ;AACA;AACA;;;AACIH,QAAAA,MAAM,CAAEP,KAAF,EAAe;AACjB,cAAI,KAAKtC,mBAAT,EAA8BsC,KAAK,CAAC/B,GAAN,CAAUpD,IAAI,CAAC+C,SAAL,CAAemE,YAAzB,EAAuC,KAAKE,cAA5C,EAA4D,IAA5D;AAC9B;AAAA;AAAA,0CAAYL,QAAZ,CAAqBM,OAArB,CAA6BlC,KAA7B;AACH;AAED;AACJ;AACA;AACA;;;AACII,QAAAA,YAAY,CAAEF,OAAF,EAAW;AAAA;;AACnB,cAAM3B,IAAI,6BAAG,KAAKjC,IAAL,CAAUC,YAAV,CAAuBtB,oBAAvB,CAAH,2DAAG,uBAA8CuD,WAA3D;AACA,cAAM;AAAEe,YAAAA;AAAF,cAAahB,IAAnB;AACA,cAAM4D,UAAU,GAAG,KAAKlD,eAAL,EAAnB;AACA,cAAM;AAAEL,YAAAA;AAAF,cAAYL,IAAlB;AACA,cAAM6D,SAAS,GAAG,KAAKtD,cAAL,EAAlB;AACA,cAAMuD,YAAY,GAAG9C,MAAM,GAAG,CAAT,GAAa4C,UAAU,GAAG,CAA/C;AACA,cAAMG,WAAW,GAAG1D,KAAK,GAAGwD,SAAS,GAAG,CAAxC;;AACA,cAAI,KAAK/E,UAAL,KAAoBzB,UAAU,CAACC,aAAnC,EAAkD;AAC9C,mBAAOqE,OAAO,CAACqC,CAAR,GAAYF,YAAZ,IAA4BnC,OAAO,CAACqC,CAAR,GAAY,CAACF,YAAhD;AACH;;AACD,iBAAOnC,OAAO,CAACsC,CAAR,GAAYF,WAAnB;AACH;;AAEDxE,QAAAA,QAAQ,GAAI;AAAA;;AACR,cAAI,CAAC,KAAKK,KAAL,CAAWiB,MAAhB,EAAwB;AACxB,cAAMb,IAAI,6BAAI,KAAKjC,IAAL,CAAUC,YAAV,CAAuBtB,oBAAvB,CAAJ,2DAAI,uBAA8CuD,WAA5D;AAEA,cAAIW,CAAC,GAAG,CAAR;AACA,cAAIsD,QAAQ,GAAG,KAAK5D,WAApB;AACA,cAAI6D,SAAS,GAAG,KAAK1D,UAArB;AACA,cAAIJ,KAAJ;AACA,cAAIW,MAAJ;AACA,eAAKlB,SAAL,GAAiB,EAAjB;;AACA,iBAAOc,CAAC,GAAG,KAAKhB,KAAL,CAAWiB,MAAtB,EAA8BD,CAAC,EAA/B,EAAmC;AAC/B,gBAAMa,KAAK,GAAG,KAAKxD,OAAL,CAAa6D,cAAb,CAA4BC,MAAM,CAACnB,CAAD,CAAlC,CAAd;AACAP,YAAAA,KAAK,GAAG,KAAKE,cAAL,EAAR;AACAS,YAAAA,MAAM,GAAG,KAAKN,eAAL,EAAT;;AACA,gBAAIe,KAAJ,EAAW;AAAA;;AACPpB,cAAAA,KAAK,0BAAGoB,KAAK,CAACzD,YAAN,CAAmBtB,oBAAnB,CAAH,wDAAG,oBAA0C2D,KAAlD;AACAW,cAAAA,MAAM,2BAAGS,KAAK,CAACzD,YAAN,CAAmBtB,oBAAnB,CAAH,yDAAG,qBAA0CsE,MAAnD;AACH;;AAED,gBAAI,KAAKlC,UAAL,KAAoBzB,UAAU,CAACC,aAAnC,EAAkD;AAC9C,kBAAIsD,CAAC,GAAG,KAAKV,KAAT,KAAmB,CAAvB,EAA0B;AACtBgE,gBAAAA,QAAQ,GAAG,KAAK5D,WAAL,GAAmBD,KAAK,GAAG,CAAtC;AACA,oBAAIO,CAAC,KAAK,CAAV,EAAauD,SAAS,IAAInD,MAAM,GAAG,CAAtB,CAAb,KACKmD,SAAS,IAAInD,MAAM,GAAG,CAAT,GAAa,KAAKL,QAA/B;AACR;AACJ,aAND,MAMO,IAAIC,CAAC,GAAG,KAAKV,KAAT,KAAmB,CAAvB,EAA0B;AAC7BiE,cAAAA,SAAS,GAAG,KAAK1D,UAAL,GAAkBO,MAAM,GAAG,CAAvC;AACA,kBAAIJ,CAAC,KAAK,CAAV,EAAasD,QAAQ,IAAI7D,KAAK,GAAG,CAApB,CAAb,KACK6D,QAAQ,IAAI7D,KAAK,GAAG,CAAR,GAAY,KAAKM,QAA7B;AACR;;AAED,iBAAKb,SAAL,CAAemB,IAAf,CAAoB,IAAIrE,IAAJ,CAASsH,QAAT,EAAmB,CAACC,SAApB,EAA+B,CAA/B,CAApB;;AACA,gBAAI1C,KAAK,IAAI,KAAK3B,SAAL,CAAec,CAAf,MAAsBa,KAAK,CAAC2C,WAAN,EAAnC,EAAwD;AACpD3C,cAAAA,KAAK,CAACY,WAAN,CAAkB,KAAKvC,SAAL,CAAec,CAAf,CAAlB;AACH;;AACD,gBAAI,KAAK9B,UAAL,KAAoBzB,UAAU,CAACC,aAAnC,EAAkD;AAC9C4G,cAAAA,QAAQ,IAAI7D,KAAK,GAAG,KAAKG,QAAzB;AACA,kBAAI,CAACI,CAAC,GAAG,CAAL,IAAU,KAAKV,KAAf,KAAyB,CAA7B,EAAgCiE,SAAS,IAAInD,MAAM,GAAG,CAAtB;AACnC,aAHD,MAGO;AACHmD,cAAAA,SAAS,IAAInD,MAAM,GAAG,KAAKL,QAA3B;AACA,kBAAI,CAACC,CAAC,GAAG,CAAL,IAAU,KAAKV,KAAf,KAAyB,CAA7B,EAAgCgE,QAAQ,IAAI7D,KAAK,GAAG,CAApB;AACnC;AACJ;;AAED,cAAI,KAAKvB,UAAL,KAAoBzB,UAAU,CAACC,aAAnC,EAAkD;AAAA;;AAC9C,2CAAKW,OAAL,CAAaD,YAAb,CAA0BtB,oBAA1B,mFAAiD4E,cAAjD,CAAgE,IAAIxE,IAAJ,CAASkD,IAAI,CAACK,KAAd,EAAqB8D,SAArB,CAAhE;AACH,WAFD,MAEO;AAAA;;AACH,2CAAKlG,OAAL,CAAaD,YAAb,CAA0BtB,oBAA1B,mFAAiD4E,cAAjD,CAAgE,IAAIxE,IAAJ,CAASoH,QAAT,EAAmBlE,IAAI,CAACgB,MAAxB,CAAhE;AACH;AACJ;;AA1VoC,O;;;;;iBAuBnB3D,UAAU,CAACC,a;;;;;;;iBAMP,C;;;;;;;iBAOD,C;;;;;;;iBAOF,C;;;;;;;iBAOA,C;;;;;;;iBAOE,I;;;;;;;iBAOC,C;;;;;;;iBAOS,K;;;;AAoRlC;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import { _decorator, Component, Node, ScrollViewComponent, Prefab, WidgetComponent, UITransformComponent, Enum, MaskComponent, Vec3, log, Size} from \"cc\";\nimport PoolManager from \"./poolManager\";\nconst { ccclass, menu, property, disallowMultiple, requireComponent} = _decorator;\nconst SCROLL_NUM = Enum({\n    /**\n     * !#en Items arranged from top to bottom.\n     * !#zh 从上到下排列\n     * @property {Number} TOP_TO_BOTTOM\n     */\n    TOP_TO_BOTTOM: 0,\n    /**\n     * !#en Items arranged from left to right.\n     * !#zh 从左往右排列\n     * @property {Number} LEFT_TO_RIGHT\n     */\n    LEFT_TO_RIGHT: 1,\n});\n\nconst SCROLL_TYPE = Enum({\n    /**\n     * !#en Items arranged from top to bottom.\n     * !#zh 从上到下滑动\n     * @property {Number} 上下滑动\n     */\n    //'上下滑动' = SCROLL_NUM.TOP_TO_BOTTOM,\n    //TOP_TO_BOTTOM: 0,\n    '上下滑动': 0,\n    /**\n     * !#en Items arranged from left to right.\n     * !#zh 从左往右滑动\n     * @property {Number} 左右滑动\n     */\n    //'左右滑动' = SCROLL_NUM.LEFT_TO_RIGHT,\n    //LEFT_TO_RIGHT: 1\n    '左右滑动': 1\n});\n@ccclass(\"reuseList\")\n@menu('自定义组件/reuseList')\n@requireComponent(ScrollViewComponent)\n@disallowMultiple\nexport class reuseList extends Component {\n    /* class member could be defined like this */\n    // dummy = '';\n\n    /* use `property` decorator if your want the member to be serializable */\n    // @property\n    // serializableDummy = 0;\n\n    updateTimer: number = 0;\n    updateInterval: number = 0.2;\n    datas: any[] = [];\n    scrollView: ScrollViewComponent;\n    content: Node;\n    isChange: boolean;\n    positions: any[];\n    count: number;\n    _scrollType: any;\n\n    /**\n     * 容器内左边距\n     * @property {ReuseList.SCROLL_NUM} scrollType\n     */\n    @property({tooltip: '选择滚动类型',  displayName: '滚动类型', type: SCROLL_TYPE})\n    scrollType: any = SCROLL_NUM.TOP_TO_BOTTOM;\n    /**\n     * 容器内左边距\n     * @property {Number} paddingLeft\n     */\n    @property({tooltip: '容器内左边距'})\n    paddingLeft: number = 0;\n\n    /**\n     * 容器内上边距\n     * @property {Number} paddingTop\n     */\n    @property({tooltip: '容器内上边距'})\n    paddingTop: number = 0;\n\n    /**\n     * 子节点之间的水平间距。\n     * @property {Number} spacingX\n     */\n    @property({tooltip: '子节点之间的水平间距'})\n    spacingX: number = 0;\n\n    /**\n     * 子节点之间的垂直间距。\n     * @property {Number} spacingY\n     */\n    @property({tooltip: '子节点之间的垂直间距'})\n    spacingY: number = 0;\n\n    /**\n     * 子节点的Prefab。\n     * @property {cc.Prefab} itemPrefab\n     */\n    @property({tooltip: '子节点的Prefab', type: Prefab})\n    itemPrefab: Prefab = null;\n\n    /**\n     * prefab缩放大小。\n     * @property {cc.Prefab} prefabScale\n     */\n    @property({tooltip: 'prefab缩放大小'})\n    prefabScale: number = 1;\n\n    /**\n     * 子节点大小可变\n     * @property {boolean} variableSizeOfChild\n     */\n    @property({tooltip: '子节点大小可变'})\n    variableSizeOfChild: boolean = false;\n\n    onLoad () {\n        this.scrollView = this.node.getComponent(ScrollViewComponent);\n        this.content = this.scrollView.content;\n        this.content.getComponent(UITransformComponent)?.setAnchorPoint(0, 1);\n        let widgetComponent = this.content.getComponent(WidgetComponent);\n        if (!widgetComponent) {\n            widgetComponent = this.content.addComponent(WidgetComponent);\n        }\n\n        widgetComponent.top = 0;\n        widgetComponent.bottom = 0;\n        widgetComponent.isAlignLeft = true;\n        widgetComponent.isAlignTop = true;\n        widgetComponent.isAlignRight = false;\n        widgetComponent.isAlignBottom = false;\n        widgetComponent.isAlignVerticalCenter = false;\n        widgetComponent.isAlignHorizontalCenter = false;\n        widgetComponent.updateAlignment();\n\n        if (this.scrollType === SCROLL_NUM.TOP_TO_BOTTOM) {\n            this.scrollView.vertical = true;\n            this.scrollView.horizontal = false;\n        } else if (this.scrollType === SCROLL_NUM.LEFT_TO_RIGHT) {\n            this.scrollView.vertical = false;\n            this.scrollView.horizontal = true;\n        }\n    }\n\n    start () {\n\n    }\n\n\n    onEnable () {\n        if (!this.variableSizeOfChild) return;\n        this.content.on(Node.EventType.CHILD_ADDED, this.doLayout, this);\n        this.content.on(Node.EventType.CHILD_REMOVED, this.doLayout, this);\n    }\n\n    onDisable () {\n        if (!this.variableSizeOfChild) return;\n        this.content.off(Node.EventType.CHILD_ADDED, this.doLayout, this);\n        this.content.off(Node.EventType.CHILD_REMOVED, this.doLayout, this);\n    }\n\n    /**\n     * 初始化列表数据\n     * @param {Array} datas 列表数据\n     * @method init\n     */\n    init (datas: Array) {\n        this.isChange = true;\n        this.positions = [];\n\n        this.datas = datas instanceof Array ? datas : [];\n\n        const size = this.node.getComponent(UITransformComponent)?.contentSize;\n        if (this.scrollType === SCROLL_NUM.TOP_TO_BOTTOM) {\n            this.count = Math.floor((size.width - this.paddingLeft) / (this.getPrefabWidth() + this.spacingX));\n        } else {\n            this.count = Math.floor((size.width - this.paddingTop) / (this.getPrefabHeight() + this.spacingY));\n        }\n\n        this.count = this.count > 0 ? this.count : 1;\n\n        let i = 0;\n        for (; i < this.datas.length; i++) {\n            let widthIndex;\n            let heightIndex;\n            if (this.scrollType === SCROLL_NUM.TOP_TO_BOTTOM) {\n                widthIndex = i % this.count;\n                heightIndex = Math.floor(i / this.count);\n            } else {\n                widthIndex = Math.floor(i / this.count);\n                heightIndex = i % this.count;\n            }\n\n            const width = this.getPrefabWidth();\n            const height = this.getPrefabHeight();\n            this.positions.push(new Vec3(this.paddingLeft + this.spacingX * widthIndex + width * (widthIndex + 1 / 2),\n                -(this.paddingTop + this.spacingY * heightIndex + height * (heightIndex + 1 / 2)), 0));\n        }\n\n        // 设置节点大小\n        const sizeWidth = this.getPrefabWidth();\n        const sizeHeight = this.getPrefabHeight();\n\n        if (this.scrollType === SCROLL_NUM.TOP_TO_BOTTOM) {\n            const sizeHeightIndex = Math.ceil(i / this.count);\n            this.content.getComponent(UITransformComponent)?.setContentSize(\n                new Size(size.width, this.paddingTop + this.spacingY * sizeHeightIndex + sizeHeight * sizeHeightIndex),\n            );\n        } else {\n            const sizeWidthIndex = Math.ceil(i / this.count);\n            this.content.getComponent(UITransformComponent)?.setContentSize(\n                new Size(this.paddingLeft + this.spacingX * sizeWidthIndex + sizeWidth * sizeWidthIndex, size.height),\n            );\n        }\n    }\n\n    /**\n     * 处理节点\n     */\n    handleNode () {\n        let child;\n        const num = [];\n        for (let i = 0; i < this.datas.length; i++) {\n            const viewPos = this.getPositionInView(this.positions[i]);\n            if (this.isOverBorder(viewPos)) {\n                child = this.content.getChildByName(String(i));\n                if (child) {\n                    // 超出边缘删除节点\n                    this.remove(child);\n                }\n            } else {\n                num.push(i);\n                child = this.content.getChildByName(String(i));\n                if (!child) {\n                    // 可视范围内显示节点\n                    this.create(child, i);\n                } else if (this.isChange) {\n                    this.node.emit('show', { index: i, node: child, data: this.datas[i] });\n                    child.setPosition(this.positions[i]);\n                    child.name = String(i);\n                }\n            }\n        }\n\n        // 清除多余节点\n        if (this.isChange) {\n            const { children } = this.content;\n            log(`num${num}`);\n            for (let i = 0; i < children.length;) {\n                child = children[i];\n                if (num.indexOf(parseInt(child.name)) === -1) {\n                    log(`remove${child.name}`);\n                    this.remove(child);\n                } else {\n                    i++;\n                }\n            }\n        }\n\n        this.isChange = false;\n    }\n\n    update (dt) {\n        this.updateTimer += dt;\n        if (this.updateTimer < this.updateInterval) {\n            return; // we don't need to do the math every frame\n        }\n\n        this.updateTimer = 0;\n        this.handleNode();\n    }\n\n    /**\n     * 获取子节点高\n     */\n    getPrefabHeight () {\n        return this.itemPrefab.data.getComponent(UITransformComponent)?.height * this.prefabScale;\n    }\n\n    /**\n     * 获取子节点宽\n     */\n    getPrefabWidth () {\n        return this.itemPrefab.data.getComponent(UITransformComponent)?.width * this.prefabScale;\n    }\n\n    /**\n     * 获取子节点的位置\n     */\n    getPositionInView (position: Vec3) { // get item position in scrollview's node space\n        const worldPos = this.content.getComponent(UITransformComponent)?.convertToWorldSpaceAR(position);\n        const viewPos = this.node.getComponent(UITransformComponent)?.convertToNodeSpaceAR(worldPos);\n        return viewPos;\n    }\n\n    onDestory () {\n        PoolManager.instance.clearPool(this.itemPrefab.data.name);\n    }\n\n    /**\n     *\n     * @param {*} child\n     * @param {*} index\n     */\n    create (child: Node, index: number) {\n        child = PoolManager.instance.getNode(this.itemPrefab, this.content);\n        if (this.variableSizeOfChild) child.on(Node.EventType.SIZE_CHANGED, this.doLayout, this);\n        child.setScale(this.prefabScale, this.prefabScale, this.prefabScale);\n        child.setPosition(this.positions[index]);\n        child.name = String(index);\n        this.node.emit('show', { index, node: child, data: this.datas[index] });\n    }\n\n    /**\n     * 移除子节点\n     * @param {cc.Node} child\n     */\n    remove (child: Node) {\n        if (this.variableSizeOfChild) child.off(Node.EventType.SIZE_CHANGED, this._doLayoutDirty, this);\n        PoolManager.instance.putNode(child);\n    }\n\n    /**\n     * 获取当前位置是否超出\n     * @param {cc.v2} viewPos\n     */\n    isOverBorder (viewPos) {\n        const size = this.node.getComponent(UITransformComponent)?.contentSize;\n        const { height } = size;\n        const itemHeight = this.getPrefabHeight();\n        const { width } = size;\n        const itemWidth = this.getPrefabWidth();\n        const borderHeight = height / 2 + itemHeight / 2;\n        const borderWidth = width + itemWidth / 2;\n        if (this.scrollType === SCROLL_NUM.TOP_TO_BOTTOM) {\n            return viewPos.y > borderHeight || viewPos.y < -borderHeight;\n        }\n        return viewPos.x > borderWidth;\n    }\n\n    doLayout () {\n        if (!this.datas.length) return;\n        const size =  this.node.getComponent(UITransformComponent)?.contentSize;\n\n        let i = 0;\n        let curWidth = this.paddingLeft;\n        let curHeight = this.paddingTop;\n        let width;\n        let height;\n        this.positions = [];\n        for (; i < this.datas.length; i++) {\n            const child = this.content.getChildByName(String(i));\n            width = this.getPrefabWidth();\n            height = this.getPrefabHeight();\n            if (child) {\n                width = child.getComponent(UITransformComponent)?.width;\n                height = child.getComponent(UITransformComponent)?.height;\n            }\n\n            if (this.scrollType === SCROLL_NUM.TOP_TO_BOTTOM) {\n                if (i % this.count === 0) {\n                    curWidth = this.paddingLeft + width / 2;\n                    if (i === 0) curHeight += height / 2;\n                    else curHeight += height / 2 + this.spacingY;\n                }\n            } else if (i % this.count === 0) {\n                curHeight = this.paddingTop + height / 2;\n                if (i === 0) curWidth += width / 2;\n                else curWidth += width / 2 + this.spacingY;\n            }\n\n            this.positions.push(new Vec3(curWidth, -curHeight, 0));\n            if (child && this.positions[i] !== child.getPosition()) {\n                child.setPosition(this.positions[i]);\n            }\n            if (this.scrollType === SCROLL_NUM.TOP_TO_BOTTOM) {\n                curWidth += width + this.spacingX;\n                if ((i + 1) % this.count === 0) curHeight += height / 2;\n            } else {\n                curHeight += height + this.spacingY;\n                if ((i + 1) % this.count === 0) curWidth += width / 2;\n            }\n        }\n\n        if (this.scrollType === SCROLL_NUM.TOP_TO_BOTTOM) {\n            this.content.getComponent(UITransformComponent)?.setContentSize(new Size(size.width, curHeight));\n        } else {\n            this.content.getComponent(UITransformComponent)?.setContentSize(new Size(curWidth, size.height));\n        }\n    }\n};\n\n/**\n * 子节点显示监听事件，通过 this.node.on('show', callback, this); 进行监听。\n * @event show\n * @param {Object} obj 返回节点信息对象\n *        {number} obj.index  节点索引\n *        {cc.Node} obj.node  节点\n *        {Object} obj.data  节点信息\n * @example\n * this.node.on('show', callback, this);\n * const callback = (obj) => {\n *     const index = detail.index; //  节点索引\n *     const node = detail.node; // 节点\n *     const data = detail.data; // 节点信息\n * }\n * this.node.off('show', callback, this);\n */"]}