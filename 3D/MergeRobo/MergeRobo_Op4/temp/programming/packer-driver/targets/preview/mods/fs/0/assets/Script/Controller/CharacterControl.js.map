{"version":3,"sources":["file:///D:/PA_2024/3D/MergeRobo/MergeRobo_Op4/assets/Script/Controller/CharacterControl.ts"],"names":["_decorator","BoxCollider","Component","ERigidBodyType","math","Node","RigidBody","SkeletalAnimation","Vec3","Constants","AudioManager","NodesController","ccclass","property","CharacterControl","onLoad","level","active","node","start","getComponent","play","setScale","rigidbody","collider","on","e","otherCollider","name","isCollide","playSound","SoundTrack","Dino_AttkSound","loop","isFight","isFight_2","isCharacterCollideBoos","isCharacter_2CollideBoos","scheduleOnce","FX_FireBall1","FX_FireBall2","FX_FireBall3","isFailStep1","isFailStep2","die","ExplosionSound","isDoneStep1","isDoneStep2","stopSound","Run","type","DYNAMIC","setLinearVelocity","isRun","runStep2","update","dt","isFightStep1","isFightStep2"],"mappings":"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","sourcesContent":["\r\nimport { _decorator, BoxCollider, Component, ERigidBodyType, ICollisionEvent, math, Node, RigidBody, SkeletalAnimation, Vec3 } from 'cc';\r\nimport { Constants } from '../Data/Constant';\r\nimport { AudioManager } from '../Plugin/AudioManager';\r\nimport { NodesController } from './NodesController';\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass('CharacterControl')\r\nexport class CharacterControl extends Component {\r\n\r\n    @property(AudioManager)\r\n    AudioManager: AudioManager = null;\r\n    @property(NodesController)\r\n    NodesController: NodesController = null;\r\n    @property(Node)\r\n    level: Node = null;\r\n\r\n\r\n    isRun: boolean = false;\r\n    isFight: boolean = false;\r\n    isFight_2: boolean = false;\r\n    rigidbody: RigidBody;\r\n    collider: BoxCollider;\r\n    isCollide: boolean = false;\r\n\r\n\r\n    protected onLoad(): void {\r\n        this.level.active = false;\r\n        this.node.active = false;\r\n    }\r\n\r\n\r\n    protected start(): void {\r\n        this.getComponent(SkeletalAnimation).play(\"muscle\");\r\n        this.node.setScale(new Vec3(0, 0, 0));\r\n\r\n        this.rigidbody = this.node.getComponent(RigidBody);\r\n        this.collider = this.node.getComponent(BoxCollider)\r\n\r\n        this.collider.on(\"onCollisionEnter\", (e: ICollisionEvent) => {\r\n            if (e.otherCollider.node.name === \"Robo_Boss\") {\r\n                if (this.isCollide) {\r\n                    return;\r\n                }\r\n\r\n                this.isCollide = true;\r\n                this.AudioManager.playSound(Constants.SoundTrack.Dino_AttkSound);\r\n                this.AudioManager.Dino_AttkSound.loop = true;\r\n                this.getComponent(SkeletalAnimation).play(\"atk\");\r\n                this.node.name === \"Robo\" ? this.isFight = true : this.isFight_2 = true;\r\n                this.node.name === \"Robo\" ? Constants.isCharacterCollideBoos = true : Constants.isCharacter_2CollideBoos = true;\r\n\r\n                this.scheduleOnce(() => this.NodesController.FX_FireBall1.play(), 0.5);\r\n                this.scheduleOnce(() => {\r\n                    this.NodesController.FX_FireBall2.play();\r\n                }\r\n                , 1);\r\n                this.scheduleOnce(() => this.NodesController.FX_FireBall3.play(), 1.5);\r\n\r\n                this.scheduleOnce(() => {\r\n                    this.node.name === \"Robo\" ? Constants.isFailStep1 = true : Constants.isFailStep2 = true;\r\n                    this.die();\r\n\r\n                    this.scheduleOnce(() => {this.AudioManager.playSound(Constants.SoundTrack.ExplosionSound)} ,1.2)\r\n                }, 2)\r\n            }\r\n        });\r\n    }\r\n\r\n\r\n    private die(): void {\r\n        this.getComponent(SkeletalAnimation).play(\"die\");\r\n        this.node.name === \"Robo\" ? Constants.isDoneStep1 = true : Constants.isDoneStep2 = true;\r\n        this.AudioManager.stopSound(Constants.SoundTrack.Dino_AttkSound);\r\n    }\r\n\r\n\r\n    private Run(): void {\r\n        this.rigidbody.type = ERigidBodyType.DYNAMIC;\r\n        this.rigidbody.setLinearVelocity(new math.Vec3(2, 0, -10))\r\n        if (!this.isRun) {\r\n            this.isRun = true;\r\n            this.getComponent(SkeletalAnimation).play(\"walk\");\r\n        }\r\n\r\n    }\r\n\r\n\r\n    private runStep2(): void {\r\n        this.rigidbody.type = ERigidBodyType.DYNAMIC;\r\n        this.rigidbody.setLinearVelocity(new math.Vec3(-3, 0, -10))\r\n        if (!this.isRun) {\r\n            this.isRun = true;\r\n            this.getComponent(SkeletalAnimation).play(\"walk\");\r\n        }\r\n    }\r\n\r\n\r\n    protected update(dt: number): void {\r\n        if (Constants.isFightStep1 && !this.isFight && this.node.name === \"Robo\") {\r\n            this.Run();\r\n        }\r\n\r\n        if (Constants.isFightStep2 && !this.isFight_2) {\r\n            this.runStep2();\r\n        }\r\n    }\r\n}\r\n\r\n"]}