{"version":3,"sources":["file:///D:/PA_2024/3D/CatEscape/CatEscape_OP15/assets/Script/Game/BossAction.ts"],"names":["_decorator","Component","Node","tween","Quat","Vec3","SkeletalAnimation","Collider","Constants","Game","AudioManager","ccclass","property","BossAction","start","tweenState","node","by","position","to","rotation","fromEuler","union","repeatForever","collide","getComponent","handleCollide","on","e","otherCollider","name","laser","isElectricFlag","die","vision","active","stop","play","playSound","SoundTrack","electric2Sound","isCatCatched","ironSource","isEndGame","isStopFlag","scheduleOnce","fakeCat","catAngrySound","EndGame","update","dt","isCatched","isCatLive"],"mappings":"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","sourcesContent":["import { _decorator, Component, Node, tween, Quat, ICollisionEvent, Vec3, Tween, TweenAction, TweenSystem, SkeletalAnimation, RigidBody, Collider } from \"cc\";\nimport { Constants } from \"../Data/Constant\";\nimport { Game } from \"./Game\";\nimport AudioManager from \"../Plugin/AudioManager\";\nconst { ccclass, property } = _decorator;\n\n@ccclass(\"BossAction\")\nexport class BossAction extends Component {\n  @property(AudioManager)\n  AudioManager: AudioManager = null;\n  @property(Game)\n  Game: Game = null;\n  @property(Node)\n  fakeCat: Node = null;\n  @property(Node)\n  vision: Node = null;\n\n  tweenState = null;\n  isElectricFlag: boolean = false;\n  isStopFlag: boolean = false;\n  rigidbody: RigidBody = null;\n  collide: Collider = null;\n\n  protected start(): void {\n      this.tweenState = tween(this.node)\n      .by(3, { position: new Vec3(6, 0, 0) })\n      .to(0, { rotation: Quat.fromEuler(new Quat(), 0, -90, 0) })\n      .by(3, { position: new Vec3(-6, 0, 0) })\n      .to(0, { rotation: Quat.fromEuler(new Quat(), 0, 90, 0) })\n      .union()\n      .repeatForever()\n      .start();\n\n      this.collide = this.getComponent(Collider);\n      this.handleCollide();\n  }\n\n\n  private handleCollide(): void {\n    if(this.collide) {\n      this.collide.on(\"onCollisionEnter\", (e: ICollisionEvent) => {\n        if(e.otherCollider.node.name === \"Electro_vfx_mesh\" && Constants.laser && !this.isElectricFlag) {\n          this.die();\n        }\n      })\n    }\n  }\n\n\n  private die(): void {\n    if(this.isElectricFlag) {\n      return;\n    }\n\n    this.isElectricFlag = true;\n    this.vision.active = false;\n    this.tweenState.stop();\n    this.getComponent(SkeletalAnimation).play(\"CE_police_electrizied\");\n    this.AudioManager.playSound(Constants.SoundTrack.electric2Sound);\n  }\n\n\n  private isCatCatched(): void {\n    Constants.ironSource.isEndGame = true;\n    this.isStopFlag = true;\n    this.tweenState.stop();\n    this.getComponent(SkeletalAnimation).play(\"CE_police_Catch\");\n\n    this.scheduleOnce(() => {\n      this.fakeCat.active = true;\n      this.AudioManager.playSound(Constants.SoundTrack.catAngrySound);\n    }, 0.5);\n\n    this.scheduleOnce(() => {\n      this.Game.EndGame(false);\n    }, 2.5)\n  }\n\n\n  protected update(dt: number): void {\n      !this.isStopFlag && Constants.isCatched && Constants.isCatLive && this.isCatCatched();\n  }\n}\n"]}