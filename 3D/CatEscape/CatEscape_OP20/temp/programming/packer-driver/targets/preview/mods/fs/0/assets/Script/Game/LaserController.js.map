{"version":3,"sources":["file:///D:/PA_2024/3D/CatEscape/CatEscape_OP20/assets/Script/Game/LaserController.ts"],"names":["_decorator","Component","Node","ParticleSystem","Constants","AudioManager","ccclass","property","LaserController","onLoad","LaserBtn_Blue","active","LaserBtn_Red","wallLaserBtn_Blue","wallLaserBtn_Red","Laser","Fx_Lightning","forEach","fx","node","start","schedule","isForceActiveLaser","activeLaser","scheduleOnce","unActiveLaser","laser","laserFlag","wallLaser_1","wallLaser_2","playSound","SoundTrack","electricSound","play","pauseSound"],"mappings":"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","sourcesContent":["\nimport { _decorator, Component, Node, ParticleSystem } from 'cc';\nimport { Constants } from '../Data/Constant';\nimport AudioManager from '../Plugin/AudioManager';\nconst { ccclass, property } = _decorator;\n\n@ccclass('LaserController')\nexport class LaserController extends Component {\n    @property(AudioManager)\n    AudioManager: AudioManager = null;\n\n    @property(Node)\n    wallLaser_1: Node = null;\n    @property(Node)\n    wallLaser_2: Node = null;\n    @property(Node)\n    Laser: Node = null;\n\n    @property(Node)\n    LaserBtn_Red: Node = null;\n    @property(Node)\n    LaserBtn_Blue: Node = null;\n    @property(Node)\n    wallLaserBtn_Red: Node = null;\n    @property(Node)\n    wallLaserBtn_Blue: Node = null;\n\n    @property([ParticleSystem])\n    Fx_Lightning: ParticleSystem[] = [];\n\n\n    laserFlag: boolean = false;\n    wallLaserFlag: boolean = false;\n\n\n    protected onLoad(): void {\n        if (this.LaserBtn_Blue) {\n            this.LaserBtn_Blue.active = false;\n            this.LaserBtn_Red.active = true;\n            this.wallLaserBtn_Blue.active = true;\n            this.wallLaserBtn_Red.active = false;\n        }\n        if (this.Laser) {\n            this.Laser.active = false;\n        }\n\n        this.Fx_Lightning.forEach(fx => {\n            fx.node.active = false;\n        });\n    }\n\n\n    protected start(): void {\n        this.schedule(() => {\n            if(Constants.isForceActiveLaser) return;\n            this.activeLaser();\n            this.scheduleOnce(() => {this.unActiveLaser()}, 1);\n        }, 3);\n    }\n\n\n    public activeLaser(): void {\n        Constants.laser = true;\n        this.laserFlag = true;\n        this.wallLaser_1.active = true;\n        this.wallLaser_2.active = true;\n        this.Laser.active = true;\n        this.AudioManager.playSound(Constants.SoundTrack.electricSound);\n        this.Fx_Lightning.forEach(fx => {\n            fx.node.active = true;\n            fx.play();\n        })\n    }\n\n\n    public unActiveLaser(): void {\n        Constants.laser = false;\n        this.laserFlag = false;\n        this.wallLaser_1.active = false;\n        this.wallLaser_2.active = false;\n        this.Laser.active = false;\n        this.AudioManager.pauseSound(Constants.SoundTrack.electricSound);\n        this.Fx_Lightning.forEach(fx => {\n            fx.node.active = false;\n            fx.play();\n        })\n    }\n\n\n    // private activeLaser(): void {\n    //     if (Constants.wallLaser) {\n    //         this.wallLaserBtn_Blue.active = true;\n    //         this.wallLaserBtn_Red.active = false;\n    //         this.wallLaser_1.active = true;\n    //         this.wallLaser_2.active = true;\n    //     } else {\n    //         this.wallLaserBtn_Red.active = true;\n    //         this.wallLaserBtn_Blue.active = false;\n    //         this.wallLaser_1.active = false;\n    //         this.wallLaser_2.active = false;\n    //     }\n\n    //     if (Constants.laser) {\n    //         if (this.laserFlag) {\n    //             return;\n    //         }\n\n    //         this.laserFlag = true;\n    //         this.LaserBtn_Blue.active = true;\n    //         this.LaserBtn_Red.active = false;\n    //         this.Laser.active = true;\n    //         this.AudioManager.playSound(Constants.SoundTrack.electricSound);\n    //         this.Fx_Lightning.forEach(fx => {\n    //             fx.node.active = true;\n    //             fx.play();\n    //         })\n    //     } else {\n\n    //         if (!this.laserFlag) {\n    //             return;\n    //         }\n\n    //         this.laserFlag = false;\n    //         this.LaserBtn_Red.active = true;\n    //         this.LaserBtn_Blue.active = false;\n    //         this.Laser.active = false;\n    //         this.AudioManager.stopSound(Constants.SoundTrack.electricSound);\n    //         this.Fx_Lightning.forEach(fx => {\n    //             fx.node.active = false;\n    //             fx.stop();\n    //         })\n    //     }\n    // }\n\n\n    // protected update(dt: number): void {\n    //     !Constants.ironSource.isEndGame && this.LaserBtn_Blue && this.activeLaser();\n    // }\n}\n\n"]}