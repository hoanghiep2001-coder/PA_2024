{"version":3,"sources":["file:///D:/PA_2024/3D/CatEscape/CatEscape_OP15/assets/Script/JoyStick.ts"],"names":["_decorator","Component","Node","Vec3","CCBoolean","ccclass","property","JoyStick","start","controlCat","controlCubeBox","getComponent","scheduleOnce","fakeBg","on","cc","EventType","TOUCH_START","stickStart","TOUCH_MOVE","stickMove","TOUCH_CANCEL","stickEnd","TOUCH_END","onLoad","stick","setPosition","event","isTouch","screenPos","getUILocation","pos","x","y","node","opacity","distance","clone","subtract","position","length","max_r","normalize","multiplyScalar","add","isMoving","handleAngleCat","convertToLocalLocation","value","localX","getPosition","localY","result","update","deltaTime"],"mappings":"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","sourcesContent":["import {\n  _decorator,\n  Component,\n  Node,\n  UITransform,\n  v3,\n  Vec2,\n  screen,\n  Touch,\n  EventTouch,\n  v2,\n  view,\n  Vec3,\n  math,\n  CCFloat,\n  CCInteger,\n  CCBoolean,\n  size,\n  SkeletalAnimation,\n  UIOpacity,\n  UIOpacityComponent,\n} from \"cc\";\nimport { controlCubeBox } from \"./controlCubeBox\";\nconst { ccclass, property } = _decorator;\n\n@ccclass(\"JoyStick\")\nexport class JoyStick extends Component {\n  @property(Node)\n  controlCubeBox: Node = null;\n  @property(Node)\n  stick: cc.Node = null;\n  @property(Node)\n  fakeBg: Node = null;\n  @property\n  public max_r: number = 40;\n  @property(CCBoolean)\n  public isTouch: boolean = false;\n  @property\n  public angleMove: number | null = null;\n\n  controlCat: Component = null;\n  setTimeOut: any;\n  currentPos: Vec2 = null;\n\n  start() {\n    // this.stick.getComponent(\"cc.UIOpacity\").opacity = 200;\n    this.controlCat = this.controlCubeBox.getComponent(\"controlCubeBox\");\n\n    this.scheduleOnce(() => {\n      this.fakeBg.on(cc.Node.EventType.TOUCH_START, this.stickStart, this);\n      this.fakeBg.on(cc.Node.EventType.TOUCH_MOVE, this.stickMove, this);\n      this.fakeBg.on(cc.Node.EventType.TOUCH_CANCEL, this.stickEnd, this);\n      this.fakeBg.on(cc.Node.EventType.TOUCH_END, this.stickEnd, this);\n    }, 0.5)\n  }\n\n\n  onLoad() {\n    this.stick.setPosition(0, 0, 0);\n  }\n\n\n  private stickStart(event: EventTouch): void {\n    this.isTouch = true;\n    const screenPos = event.getUILocation();\n\n    let pos = new Vec3(screenPos.x - 160, screenPos.y - 240, 0);\n    this.node.setPosition(pos);\n    this.node.getComponent(\"cc.UIOpacity\").opacity = 200;\n\n    this.stick.getComponent(\"cc.UIOpacity\").opacity = 200;\n    this.stick.setPosition(pos);\n\n  }\n\n\n  private stickMove(event: EventTouch) {\n    const screenPos = event.getUILocation();\n    let pos = new Vec3(screenPos.x - 160, screenPos.y - 240, 0);\n\n    const distance = pos.clone().subtract(this.node.position);\n\n    if (distance.length() > this.max_r) {\n      // Chuyển vị trí stick về ranh giới của joystick\n      distance.normalize().multiplyScalar(this.max_r);\n      pos = this.node.position.clone().add(distance);\n  }\n\n    this.stick.setPosition(pos);\n    this.controlCat.isMoving = true;\n    this.controlCat.handleAngleCat();\n\n  }\n\n\n  private stickEnd(event: cc.Touch) {\n    this.isTouch = false;\n    this.stick.setPosition(0, 0, 0);\n    this.controlCat.isMoving = false;\n    this.stick.getComponent(\"cc.UIOpacity\").opacity  = 0;\n    this.node.getComponent(\"cc.UIOpacity\").opacity  = 0;\n  }\n\n\n  private convertToLocalLocation(value: Vec2) {\n    const localX: number = value.x - 160 - this.stick.getPosition().x;\n    const localY: number = value.y - 240 - this.stick.getPosition().y;\n    const result = new cc.Vec3(localX, localY, 0);\n    return result;\n  }\n\n\n  update(deltaTime: number) {\n    // if (this.isTouch) {\n    //   const clone = this.stick.getPosition();\n    //   const angle = Vec3.angle(v3(clone.x, clone.y, 0), v3(0, 100, 0));\n    //   if (clone.x < 0) {\n    //     this.angleMove = math.toDegree(-angle);\n    //   } else {\n    //     this.angleMove = math.toDegree(angle);\n    //   }\n    // } else {\n    //   this.angleMove = null;\n    // }\n  }\n}\n"]}