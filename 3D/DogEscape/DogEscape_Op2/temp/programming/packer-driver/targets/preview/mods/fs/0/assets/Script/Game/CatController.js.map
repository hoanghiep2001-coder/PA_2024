{"version":3,"sources":["file:///D:/PA_2024/3D/DogEscape/DogEscape_Op2/assets/Script/Game/CatController.ts"],"names":["_decorator","Component","Node","RigidBody","v3","CCString","SkeletalAnimation","Vec3","Vec2","BoxCollider","JoyStick","Game","Constants","AudioManager","ccclass","property","CatController","start","isMoving","_body","node","getComponent","setRotationFromEuler","_aniSkeleton","play","handleCollide","rigidbody","collider","on","e","otherCollider","name","laser","isElectricFlag","die","isEatFood","active","destroy","playSound","SoundTrack","eatSound","isCollideDoor","bossCatchedName","parent","handleCatIsCatched","wallLaser","win","isCatLive","electric2Sound","catAngrySound","GamePlay","EndGame","isExitDoorFlag","isCatched","scheduleOnce","handleAngleCat","directionVector","joyStickPos","joyStick","getPosition","newPos","x","y","stick","subtract","rotationRadians","Math","atan2","rotationDegrees","cc","misc","radiansToDegrees","radian","angle","update","deltaTime","flag","resume","pause","ironSource","isEndGame","moveDirection","sin","cos","normalize","multiplyScalar","speed","pos","z","isRun","setPosition","position","add"],"mappings":"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","sourcesContent":["import {\n  _decorator,\n  Component,\n  Node,\n  RigidBody,\n  v3,\n  CCString,\n  SkeletalAnimation,\n  Quat,\n  Vec3,\n  Vec2,\n  BoxCollider,\n  ICollisionEvent,\n} from \"cc\";\nimport { JoyStick } from \"./JoyStick\";\nimport { Game } from \"./Game\";\nimport { Constants } from \"../Data/Constant\";\nimport AudioManager from \"../Plugin/AudioManager\";\nconst { ccclass, property } = _decorator;\n\n@ccclass(\"CatController\")\nexport class CatController extends Component {\n  @property(AudioManager)\n  AudioManager: AudioManager = null;\n  @property(Game)\n  GamePlay: Game;\n\n  @property(Node)\n  Door1: Node;\n  @property(JoyStick)\n  joyStick: JoyStick;\n  @property(RigidBody)\n  _body: RigidBody = null;\n  @property(CCString)\n  catDirectionMove: string = \"stop\";\n  @property(SkeletalAnimation)\n  _aniSkeleton: SkeletalAnimation = null;\n\n  // state\n  speed: number = 4;\n  radian: number = null;\n\n  isMoving: boolean = false;\n  flag: boolean = false;\n  isRun: boolean = true;\n  isElectricFlag: boolean = false;\n  isExitDoorFlag: boolean = false;\n\n  rigidbody: RigidBody = null;\n  collider: BoxCollider = null;\n\n  angle: number = null;\n\n\n  start() {\n    this.isMoving = false;\n    this._body = this.node.getComponent(RigidBody);\n    this.node.setRotationFromEuler(v3(0, 90, 0));\n    this._aniSkeleton = this.node.getComponent(SkeletalAnimation);\n    this._aniSkeleton.play(\"Cats_Runcycle\");\n    \n\n    this.handleCollide();\n  }\n\n\n  private handleCollide(): void {\n    this.rigidbody = this.getComponent(RigidBody);\n    this.collider = this.getComponent(BoxCollider);\n\n    this.collider.on(\"onCollisionEnter\", (e: ICollisionEvent) => {\n      if(e.otherCollider.node.name === \"Electro_vfx_mesh\" && Constants.laser && !this.isElectricFlag) {\n        this.die();\n      }\n\n      if (e.otherCollider.node.name === \"Food\") {\n        Constants.isEatFood = true;\n        e.otherCollider.node.active = false;\n        e.otherCollider.destroy();\n        this.AudioManager.playSound(Constants.SoundTrack.eatSound);\n      }\n\n      if(e.otherCollider.node.name === \"Door1_1\" || e.otherCollider.node.name === \"Door1_2\") {\n        Constants.isCollideDoor = true;\n      }\n\n      if(e.otherCollider.node.name === \"Vision\" && Constants.isCollideDoor) {\n        Constants.bossCatchedName = e.otherCollider.node.parent.name;\n        this.handleCatIsCatched();\n      }\n\n      if(e.otherCollider.node.name === \"LaserBtn\") {\n        Constants.laser = !Constants.laser;\n      }\n\n      if(e.otherCollider.node.name === \"WallLaserBtn\") {\n        Constants.wallLaser = !Constants.wallLaser;\n      }\n\n      if (e.otherCollider.node.name === \"ExitDoor\") {\n        this.win();\n      }\n  });\n  }\n\n\n  private die(): void {\n    if(this.isElectricFlag) {\n      return;\n    }\n\n    this.collider.destroy();\n    this.isElectricFlag = true;\n    Constants.isCatLive = false;\n    this.getComponent(SkeletalAnimation).play(\"Cats_Electric\");\n    this.AudioManager.playSound(Constants.SoundTrack.electric2Sound);\n    this.AudioManager.playSound(Constants.SoundTrack.catAngrySound);\n    this.GamePlay.EndGame(false);\n  }\n\n\n  private win(): void {\n    if(this.isExitDoorFlag) {\n      return;\n    }\n    \n    this.isExitDoorFlag = true;\n    this.GamePlay.EndGame(true);\n  }\n\n\n  private handleCatIsCatched(): void {\n    Constants.isCatched = true;\n\n    this.scheduleOnce(() => {\n      this.getComponent(SkeletalAnimation).play(\"Cat_Dead\");\n    }, 0.5)\n  }\n\n\n  public handleAngleCat(): void {\n    let directionVector: Vec2;\n    let joyStickPos = this.joyStick.node.getPosition();\n\n    let newPos: Vec2 = new Vec2(joyStickPos.x, joyStickPos.y);\n    directionVector = this.joyStick.stick.getPosition().subtract(newPos);\n    \n    const rotationRadians = Math.atan2(directionVector.y, directionVector.x);\n    const rotationDegrees = cc.misc.radiansToDegrees(rotationRadians);\n    this.radian = rotationRadians;\n    this.angle = rotationDegrees;\n  }\n\n\n  update(deltaTime: number) {\n    if(this.flag && this.isMoving) {\n      this.flag = false;\n      this._aniSkeleton.resume();\n    }\n    \n    if (!this.flag && !this.isMoving) {\n      this.flag = true;\n      this._aniSkeleton.pause();\n    }\n\n    if (this.isMoving && Constants.isCatLive && !Constants.isCatched && !Constants.ironSource.isEndGame) {\n      const moveDirection = new Vec3(Math.sin(this.radian), 0, Math.cos(this.radian));\n      moveDirection.normalize();\n      moveDirection.multiplyScalar(this.speed * deltaTime); \n\n      let pos = new Vec3(moveDirection.x, 0, moveDirection.z)\n\n      this.node.setRotationFromEuler(v3(0, this.angle, 0));\n      if(this.isRun) {\n        if(this.node.getPosition().y > 0.3) {\n          this.node.setPosition(this.node.position.x, 0, this.node.position.z)\n          return;\n        }\n        this.node.setPosition(this.node.position.add(pos));\n      }\n    }\n\n  }\n}\n"]}