[1,["42ClTYZQ5EV57I2AETuZgr","12Y9dMgWdJKJGmTiZyQR9H@fc873","debbXctWlPaZ8O5e04jzkA","1brw/JvvpFnIvdrxpFCgMZ","09ueCIww1CmKGh3lRD6Vj/","7dj5uJT9FMn6OrOOx83tfK@f9941","2eoK5inHRJxbqf39oN36p+","246Tx7yBtOXZoaSl9yNDk+@51cc5","246Tx7yBtOXZoaSl9yNDk+@438fe","adRPVAPz1ELLgFaAdxemP4","246Tx7yBtOXZoaSl9yNDk+@73d50","246Tx7yBtOXZoaSl9yNDk+@82e00","246Tx7yBtOXZoaSl9yNDk+@43cd6","246Tx7yBtOXZoaSl9yNDk+@3e925","246Tx7yBtOXZoaSl9yNDk+@9292d","98SNHRDOpLbaTrSahu3xSu","c3Ci5b0oVFkoWf4F5wpiIM","28d3eHuJpGFYOSG8xZB8le","fbXY8s6StHypsrlG0j58W0@6c48a","3foayWK8pAXofxFm3igdB7@6c48a","05s3D/TilIUqx0SPU8KN/d@fb542","daE/G7gdJGIr80zJcaYdp+","d1NGQ2rJZCcbhjH0/erZWw","18XqHpKn9BR7xbVFnFEZ9Y@f9941","e2lRYZ6rxLiKPJNw4PnROP","d2cvKR7MBD8oSRG69aWYyI","6d0Qs/18ZEmbH2BoZ8Gf8j","cbo+M1sBpOjIjbGBC2MSyS","48vzsCAnpNEoZGlOv2dd/D","07IxIJMV1Le6RqcySBUkW4@f9941","51Ak/qjBpD7bh87cL/QVdO","34+O0Vqs5DYrEog3PBZJuN","05s3D/TilIUqx0SPU8KN/d@052f5","61pi3x/75J9odOz6i2FHCk@8598b","61pi3x/75J9odOz6i2FHCk@438fe","61pi3x/75J9odOz6i2FHCk@73d50","61pi3x/75J9odOz6i2FHCk@82e00","61pi3x/75J9odOz6i2FHCk@43cd6","61pi3x/75J9odOz6i2FHCk@4c32a","61pi3x/75J9odOz6i2FHCk@9292d","40UfVBkRBDbJbQKs2Dr/eB","17f+mB9ctBOKHHfi2ASpgU","49r686cztLgYffy3zfFErP@78249","a1M7/vk15Kx5JeA08wUvk4@57146","40KtS7a1VPdKJCMBkId6DA","07IxIJMV1Le6RqcySBUkW4@6c48a","509AO8N9dCY4JC2+SZLyqN@6c48a","ecuoFLjG1O141ajhJjvo7x@6c48a","11OQcGaDVMF5xihLmQkI5l@6c48a","18XqHpKn9BR7xbVFnFEZ9Y@6c48a","6fwhfuzSdLQIjbmmwcEoHy@6c48a","9398BhvRBG45iTd0Q+8ZkT@6c48a","398kBQuwBAoYxRcDLOgMus@6c48a","92Ym0wJPBDX4tzqCrSh3zi@6c48a","fagV42oNZHOreJMAcTmaSF@6c48a","75220E3nxFx4LsYqowyKOt@6c48a","7dj5uJT9FMn6OrOOx83tfK@6c48a","afHwiiuh5Ctb7Sj3EO3iDM@6c48a","a8cLPnlwNARonQrXZMim+j@6c48a","d3zZQ9KsJO+JEppSewEZva@6c48a","c5w4mequ1CoolNWQTxCExz@6c48a","77wVT4g/FKOLciEBZb9pIB@6c48a","a8cLPnlwNARonQrXZMim+j@f9941","c5w4mequ1CoolNWQTxCExz@f9941","75220E3nxFx4LsYqowyKOt@f9941","ffEMmu6IhGzYhLt4aX8fU5@f9941","398kBQuwBAoYxRcDLOgMus@f9941","eds7dgMW9Ff6VGxjrvFOzL@f9941","11OQcGaDVMF5xihLmQkI5l@f9941","87ySF5t+tCXaoPN0JiKlhe","05s3D/TilIUqx0SPU8KN/d@f1aae","05s3D/TilIUqx0SPU8KN/d@263d4","05s3D/TilIUqx0SPU8KN/d@779a3","05s3D/TilIUqx0SPU8KN/d@6590e","05s3D/TilIUqx0SPU8KN/d@fc6e5","05s3D/TilIUqx0SPU8KN/d@5cfee","05s3D/TilIUqx0SPU8KN/d@777ed","05s3D/TilIUqx0SPU8KN/d@6294c","05s3D/TilIUqx0SPU8KN/d@57ce1","05s3D/TilIUqx0SPU8KN/d@71d61","05s3D/TilIUqx0SPU8KN/d@66354","05s3D/TilIUqx0SPU8KN/d@269f2","05s3D/TilIUqx0SPU8KN/d@8c626","05s3D/TilIUqx0SPU8KN/d@38265","05s3D/TilIUqx0SPU8KN/d@aadcf","59h0wcv0ZNwYahE3dig31Q@0e587","59h0wcv0ZNwYahE3dig31Q@c7870","b0rVZg+udE1pNsXmeBwce2","59h0wcv0ZNwYahE3dig31Q@0245e","adSgwdGcVO67GRK/JoUPpj","35AWkPrIZE77OxQ6HwHWjh","078CoEXBBCVruc3p9EqMu2","a1M7/vk15Kx5JeA08wUvk4@94091","a1M7/vk15Kx5JeA08wUvk4@438fe","a1M7/vk15Kx5JeA08wUvk4@73d50","a1M7/vk15Kx5JeA08wUvk4@82e00","a1M7/vk15Kx5JeA08wUvk4@4c32a","a1M7/vk15Kx5JeA08wUvk4@a2240","a1M7/vk15Kx5JeA08wUvk4@43cd6","95kt3MOoxBJqWFyzatX5tm","4dhNhfObhIpZg74tcb7aTX","d0MqyYBeFAkIi762QNy1/B@b47c0","6fAc9/gb9Kfr1dCvwZaWSA@b47c0","1fSare1X5HUYIiJQ82eQDw","ebvwKmAThPVZDBcvcOKugv","49huUyjmJKFYtpnUb/tJDe","d843JW3Y1KbYL1Q9EmpOqI","841489+zFNhoQYM8muwfPd","12c79ZGAhEUoOKd/HF/FfF","3fct6/xFNAkYd1mNgaePbC","eds7dgMW9Ff6VGxjrvFOzL@6c48a","ffEMmu6IhGzYhLt4aX8fU5@6c48a"],["_parent","node","_mesh","_spriteFrame","_effectAsset","_skeleton","mainTexture","_textureSource","_defaultClip","_clip","_particleSystem","_mainTexture","level","AudioManager","target","source","_cameraComponent","IronSource","scene","Dino_ChooseSound","Dino_FightSound","Dino_MergeSound","Dino_ScreamSound","Dino_LoseSound","Dino_AttkSound","bgSound","Text_Tap","targetNode","FX_Merge_2","FX_Merge","hideMask","point","Camera","_normalSprite","_envmapHDR","_envmapLDR"],[["cc.Node",["_name","_layer","_active","_id","_parent","_lpos","_children","_components","_lscale","_lrot","_euler"],-1,1,5,2,9,5,5,5],"cc.ImageAsset","cc.SpriteFrame",["cc.Node",["_name","_layer","_id","_components","_parent","_children","_lrot","_lscale","_euler","_lpos"],0,2,1,2,5,5,5,5],["cc.RealKeyframeValue",["interpolationMode","value","rightTangent","rightTangentWeight","leftTangent","leftTangentWeight"],-3],["cc.CurveRange",["mode","constantMax","constant","constantMin","multiplier","spline"],-2,4],["cc.Material",["_states","_defines","_name","_techIdx","_props"],-1,12],["cc.Sprite",["_sizeMode","node","_color","_spriteFrame"],2,1,5,6],["cc.MeshRenderer",["_name","_shadowCastingMode","node","_materials","lightmapSettings","_mesh"],1,1,3,4,6],["cc.UITransform",["node","_contentSize","_anchorPoint"],3,1,5,5],["cc.Animation",["playOnLoad","node","_clips","_defaultClip"],2,1,3,6],["cc.GradientRange",["_mode","color","gradient"],2,5,4],"cc.TextureCube",["cc.Node",["_name","_id","_parent","_components","_children","_lpos","_lrot","_euler"],1,1,12,2,5,5,5],["cc.Node",["_name","_layer","_parent","_children","_lpos","_lrot","_euler"],1,1,9,5,5,5],["cc.SkeletalAnimation",["playOnLoad","node","_clips","_defaultClip"],2,1,3,6],["cc.TargetOverrideInfo",["propertyPath","source","target","targetInfo","sourceInfo"],2,1,1,4,4],["cc.ParticleSystem",["duration","loop","playOnAwake","scaleSpace","startSize3D","startRotation3D","_aabbHalfX","_aabbHalfY","_aabbHalfZ","_simulationSpace","node","_materials","startColor","startSizeX","startSizeY","startSizeZ","startSpeed","startRotationX","startRotationY","startRotationZ","startDelay","startLifetime","gravityModifier","rateOverTime","rateOverDistance","bursts","_colorOverLifetimeModule","_shapeModule","_sizeOvertimeModule","_velocityOvertimeModule","_forceOvertimeModule","_limitVelocityOvertimeModule","_rotationOvertimeModule","_textureAnimationModule","_trailModule","renderer"],-7,1,12,4,4,4,4,4,4,4,4,4,4,4,4,4,9,4,4,4,4,4,4,4,4,4,4],["cc.ColorOvertimeModule",["_enable","color"],2,4],["cc.ShapeModule",["emitFrom","_enable","arcSpeed"],1,4],["cc.SizeOvertimeModule",["_enable","separateAxes","size","x","y","z"],1,4,4,4,4],["cc.LimitVelocityOvertimeModule",["_enable","dampen","limitX","limitY","limitZ","limit"],1,4,4,4,4],["cc.RotationOvertimeModule",["_enable","_separateAxes","x","y","z"],1,4,4,4],["cc.TextureAnimationModule",["_enable","_numTilesX","_numTilesY","cycleCount","frameOverTime","startFrame"],-1,4,4],["cc.ParticleSystemRenderer",["_alignSpace","_renderMode","_mainTexture","_mesh"],1,6,6],["cc.Camera",["_priority","_far","_visibility","_name","_fov","_projection","_orthoHeight","_clearFlags","node","_color"],-5,1,5],["cc.AudioSource",["_playOnAwake","_loop","node"],1,1],["cc.Material",["_props","_states","_defines"],0],["cc.Mesh",["_native","_hash","_struct"],1,11],["cc.AudioClip",["_name","_native","_duration"],0],["cc.EffectAsset",["_name","shaders","techniques"],0],["cc.Skeleton",["_name","_hash","_joints","_bindposes"],0,12],["cc.SceneAsset",["_name"],2],["cc.Canvas",["node","_cameraComponent"],3,1,1],["cc.Widget",["_alignFlags","_top","_bottom","node"],0,1],["7c0ab6OlgNN8Ju8uLqdS5KA",["node","AudioManager","level"],3,1,1,1],["cc.BoxCollider",["node","_center","_size"],3,1,5,5],["cc.RigidBody",["_group","_type","node"],1,1],["51538WFcw1P6baoyBNVdquG",["node"],3,1],["c38f329EN1D9YpLdfC+d21z",["node"],3,1],["cc.Scene",["_name","_children","_prefab","_globals"],2,2,4,4],["cc.PrefabInfo",["fileId","targetOverrides"],2,9],["cc.TargetInfo",["localID"],2],["cc.SceneGlobals",["ambient","shadows","_skybox","fog","octree"],3,4,4,4,4,4],["cc.AmbientInfo",["_skyIllumLDR","_skyColorHDR","_groundAlbedoHDR","_skyColorLDR","_groundAlbedoLDR"],2,5,5,5,5],["cc.ShadowsInfo",["_type","_enabled","_pcf","_bias","_normalBias","_near","_shadowDistance","_invisibleOcclusionRange","_orthoSize","_maxReceived","_shadowColor","_size"],-7,5,5],["cc.SkyboxInfo",["_enabled","_envmapHDR","_envmapLDR"],2,6,6],["cc.FogInfo",[],3],["cc.OctreeInfo",[],3],["cc.Button",["_transition","node","_normalSprite"],2,1,6],["dd163zuMEBDDa1UHoAitHH9",["node"],3,1],["cc.UIOpacity",["node"],3,1],["d10beQtB81Cg6A6SV/C935H",["dinoLines","points_1","points_2","unitsStep1","unitstep2","dinoLevels","dinosStep1","dinosStep2","Boss","MainCharacter_1","MainCharacter_2","RewardContainer","BtnClaim","Fail"],3,2,2,2,2,2,2,2,2,1,1,1,1,1,1],["cc.ModelLightmapSettings",[],3],["cc.PlaneCollider",["node"],3,1],["068c9ERAfJF1b4+fsWryUsH",["AudioManager"],3,1],["cc.Burst",["count"],3,4],["cc.Gradient",["colorKeys","alphaKeys"],3,9,9],["cc.ColorKey",["time"],2],["cc.AlphaKey",["alpha","time"],1],["cc.RealCurve",["_times","_values"],2,9],["cc.VelocityOvertimeModule",["x","y","z","speedModifier"],3,4,4,4,4],["cc.ForceOvertimeModule",["x","y","z"],3,4,4,4],["cc.TrailModule",["lifeTime","widthRatio","colorOverTrail","colorOvertime","_particleSystem"],3,4,4,4,4,1],["d6ba26BX9VFWrvN11awPr8L",["node","NodesController","GameController","AudioManager"],3,1,1,1,1],["cc.SkinnedMeshRenderer",["_shadowCastingMode","node","_materials","lightmapSettings","_skinningRoot","_mesh","_skeleton"],2,1,3,4,1,6,6],["cc.DirectionalLight",["_colorTemperature","_illuminanceHDR","_illuminanceLDR","node","_staticSettings"],0,1,4],["cc.StaticLightSettings",[],3],["96cd1/50FZEdpbn/o5xig83",["node","NodesController"],3,1,1],["6c960lg0NRGuppywOJ0wWQL",["node","IronSource","AudioManager","NodesController","GameController"],3,1,1,1,1,1],["9e7afRzdixF9ayAvRwivwpz",["AudioManager"],3,1]],[[0,0,1,4,6,5,9,10,3],[0,0,1,4,5,3],[0,0,1,4,6,5,3],[14,0,1,2,3,4,5,6,3],[0,0,1,6,5,9,10,3],[5,1],[14,0,1,2,3,4,3],[53,1],[0,0,1,4,7,5,9,8,10,3],[8,0,2,3,4,5,2],[5,2,2],[0,0,1,4,5,9,10,3],[9,0,1,1],[0,0,1,4,7,3],[28,0,1,2,3],[0,0,1,4,6,9,8,10,3],[37,0,1,2,3],[36,0,1,2,1],[65,0,1,2,3,4,5,6,2],[0,0,1,6,7,9,8,10,3],[0,0,1,4,6,5,9,8,10,3],[15,1,2,1],[7,0,1,2,3,2],[0,0,1,4,7,9,8,10,3],[38,0,1],[0,0,1,4,7,5,3],[8,1,2,3,4,5,2],[6,0,1,4,3],[11,1],[60,0,1,2],[7,1,3,1],[5,0,5,2],[29,0,1,2,4],[3,0,4,3,2],[6,3,0,1,4,4],[5,0,3,1,4],[59,0,1,3],[4,0,1,3],[26,0,2,2],[10,1,2,3,1],[10,0,1,2,3,2],[8,2,3,4,5,1],[11,1,1],[5,0,1,3],[56,0,1],[4,0,1,2,3,4,5,7],[4,0,2,3,4,5,6],[61,0,1,2,3,1],[62,0,1,2,1],[63,0,1,2,3,4,1],[31,0,1,2,3,4],[0,0,1,6,3],[0,0,1,4,6,7,5,8,3],[0,0,1,4,7,9,10,3],[3,0,2,4,3,3],[9,0,1],[42,0,2],[6,2,0,1,4,4],[30,0,1,2,4],[0,0,1,6,7,5,3],[0,0,1,4,7,5,8,3],[0,0,3,4,7,3],[3,0,1,4,3,3],[9,0,1,2,1],[35,0,1,2,1],[17,3,4,5,0,1,2,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,11],[17,0,1,2,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,4],[11,0,2,2],[5,0,4,5,3],[18,0,1,2],[18,1,1],[57,0,1,1],[58,0,2],[19,0,2,2],[19,1,0,2,3],[20,0,1,2,3,4,5,3],[20,2,3,4,5,1],[4,0,1,2,4,5],[4,0,2],[4,1,3,5,4],[4,1,2,3,4,5,6],[21,0,2,3,4,5,2],[21,0,1,2,3,4,5,3],[22,0,2,3,4,2],[22,0,1,2,3,4,3],[23,0,4,5,2],[23,0,1,2,3,4,5,5],[24,1,0,3,2,3],[24,0,2,2],[6,1],[27,0,1,2,4],[32,0,2],[0,0,1,6,7,3],[0,0,1,6,5,8,3],[0,0,1,4,6,7,3],[0,0,2,1,4,6,7,5,8,4],[0,0,1,7,5,8,3],[0,0,2,1,4,6,5,9,8,10,4],[0,0,1,6,5,3],[0,0,2,1,4,7,5,8,4],[0,0,1,4,6,5,8,3],[0,0,4,7,5,9,10,2],[3,0,2,5,3,3],[3,0,1,5,3,6,7,8,3],[3,0,1,4,5,3,6,7,8,3],[3,0,4,3,9,2],[13,0,1,2,4,3,3],[13,0,2,3,5,6,7,2],[33,0,1,1],[34,0,1,2,3,4],[15,0,1,2,3,2],[39,0,1],[40,0,1,2,3,2],[41,0,1,2],[16,0,1,4,2,3,2],[16,0,1,2,3,2],[43,0,1,2,3,4,1],[44,0,1,2,3,4,2],[45,0,1,2,3,4,5,6,7,8,9,10,11,11],[46,0,1,2,2],[47,1],[48,1],[10,1,1],[7,1,2,1],[7,1,2,3,1],[49,0,1,2,2],[50,0,1],[51,0,1],[52,0,1,2,3,4,5,6,7,8,9,10,11,12,13,1],[8,2,3,4,1],[54,0,1],[55,0,1],[25,3,0,4,1,2,8,9,6],[25,5,0,6,1,7,2,8,9,7],[64,0,1,2,3,1],[26,1,0,2,3],[66,0,1,2,3,4,4],[67,1],[68,0,1,1],[69,0,1,2,3,4,1],[70,0,1]],[[[[57,"da_bg02_mat",[{"rasterizerState":{},"blendState":{"targets":[{}]},"depthStencilState":{}}],[{}],[[[{"metallic":0.4000000059604645,"roughness":0.49053239822387695},"albedoScale",8,[1,0.35183998942375183,0.3452800214290619,0.013760000467300415]]],11]]],0,0,[0],[4],[3]],[[[14,".bin",290814019,[{"primitives":[{"primitiveMode":7,"vertexBundelIndices":[0],"indexView":{"offset":13680,"length":3552,"count":888,"stride":4}}],"vertexBundles":[{"view":{"offset":0,"length":13680,"count":285,"stride":48},"attributes":[{"name":"a_position","format":32,"isNormalized":false},{"name":"a_normal","format":32,"isNormalized":false},{"name":"a_texCoord","format":21,"isNormalized":false},{"name":"a_tangent","format":44,"isNormalized":false}]}]},"minPosition",8,[1,-0.0657588467001915,0.011673233471810818,0.011033191345632076],"maxPosition",8,[1,-0.04904821887612343,0.03990896791219711,0.019469374790787697]]],-1],0,0,[],[],[]],[[[14,".bin",2283670576,[{"primitives":[{"primitiveMode":7,"vertexBundelIndices":[0],"indexView":{"offset":3072,"length":360,"count":90,"stride":4}},{"primitiveMode":7,"vertexBundelIndices":[1],"indexView":{"offset":9576,"length":768,"count":192,"stride":4}}],"vertexBundles":[{"view":{"offset":0,"length":3072,"count":64,"stride":48},"attributes":[{"name":"a_position","format":32,"isNormalized":false},{"name":"a_normal","format":32,"isNormalized":false},{"name":"a_texCoord","format":21,"isNormalized":false},{"name":"a_tangent","format":44,"isNormalized":false}]},{"view":{"offset":3432,"length":6144,"count":128,"stride":48},"attributes":[{"name":"a_position","format":32,"isNormalized":false},{"name":"a_normal","format":32,"isNormalized":false},{"name":"a_texCoord","format":21,"isNormalized":false},{"name":"a_tangent","format":44,"isNormalized":false}]}]},"minPosition",8,[1,-0.031324032694101334,-0.0034276796504855156,0.03774743154644966],"maxPosition",8,[1,0.03141973167657852,0.05688665434718132,0.09963183104991913]]],-1],0,0,[],[],[]],[[[14,".bin",3760382069,[{"primitives":[{"primitiveMode":7,"vertexBundelIndices":[0],"indexView":{"offset":4032,"length":480,"count":120,"stride":4}},{"primitiveMode":7,"vertexBundelIndices":[1],"indexView":{"offset":11616,"length":888,"count":222,"stride":4}}],"vertexBundles":[{"view":{"offset":0,"length":4032,"count":84,"stride":48},"attributes":[{"name":"a_position","format":32,"isNormalized":false},{"name":"a_normal","format":32,"isNormalized":false},{"name":"a_texCoord","format":21,"isNormalized":false},{"name":"a_tangent","format":44,"isNormalized":false}]},{"view":{"offset":4512,"length":7104,"count":148,"stride":48},"attributes":[{"name":"a_position","format":32,"isNormalized":false},{"name":"a_normal","format":32,"isNormalized":false},{"name":"a_texCoord","format":21,"isNormalized":false},{"name":"a_tangent","format":44,"isNormalized":false}]}]},"minPosition",8,[1,-0.0982358381152153,-0.004851451143622398,0.07548447698354721],"maxPosition",8,[1,-0.01611090824007988,0.062079645693302155,0.15229281783103943]]],-1],0,0,[],[],[]],[[[14,".bin",1330630405,[{"primitives":[{"primitiveMode":7,"vertexBundelIndices":[0],"indexView":{"offset":2640,"length":348,"count":87,"stride":4}}],"vertexBundles":[{"view":{"offset":0,"length":2640,"count":55,"stride":48},"attributes":[{"name":"a_position","format":32,"isNormalized":false},{"name":"a_normal","format":32,"isNormalized":false},{"name":"a_texCoord","format":21,"isNormalized":false},{"name":"a_tangent","format":44,"isNormalized":false}]}]},"minPosition",8,[1,-0.06265480071306229,0.003486273344606161,0.012462625280022621],"maxPosition",8,[1,-0.03434235230088234,0.020720714703202248,0.03455923870205879]]],-1],0,0,[],[],[]],[[[14,".bin",476499624,[{"primitives":[{"primitiveMode":7,"vertexBundelIndices":[0],"indexView":{"offset":1920,"length":264,"count":66,"stride":4}}],"vertexBundles":[{"view":{"offset":0,"length":1920,"count":40,"stride":48},"attributes":[{"name":"a_position","format":32,"isNormalized":false},{"name":"a_normal","format":32,"isNormalized":false},{"name":"a_texCoord","format":21,"isNormalized":false},{"name":"a_tangent","format":44,"isNormalized":false}]}]},"minPosition",8,[1,-0.05440886318683624,0.002912665717303753,0.04448632150888443],"maxPosition",8,[1,-0.04324953258037567,0.009661662392318249,0.060059212148189545]]],-1],0,0,[],[],[]],[[[14,".bin",2816360669,[{"primitives":[{"primitiveMode":7,"vertexBundelIndices":[0],"indexView":{"offset":2016,"length":264,"count":66,"stride":4}}],"vertexBundles":[{"view":{"offset":0,"length":2016,"count":42,"stride":48},"attributes":[{"name":"a_position","format":32,"isNormalized":false},{"name":"a_normal","format":32,"isNormalized":false},{"name":"a_texCoord","format":21,"isNormalized":false},{"name":"a_tangent","format":44,"isNormalized":false}]}]},"minPosition",8,[1,0.04413438215851784,0.007800501771271229,0.007111740298569202],"maxPosition",8,[1,0.05843620002269745,0.013721439056098461,0.02140580117702484]]],-1],0,0,[],[],[]],[[[14,".bin",1391289333,[{"primitives":[{"primitiveMode":7,"vertexBundelIndices":[0],"indexView":{"offset":1824,"length":264,"count":66,"stride":4}}],"vertexBundles":[{"view":{"offset":0,"length":1824,"count":38,"stride":48},"attributes":[{"name":"a_position","format":32,"isNormalized":false},{"name":"a_normal","format":32,"isNormalized":false},{"name":"a_texCoord","format":21,"isNormalized":false},{"name":"a_tangent","format":44,"isNormalized":false}]}]},"minPosition",8,[1,0.09798592329025269,0.01094103790819645,0.10653182119131088],"maxPosition",8,[1,0.1130295842885971,0.018907684832811356,0.11717860400676727]]],-1],0,0,[],[],[]],[[[14,".bin",2936848587,[{"primitives":[{"primitiveMode":7,"vertexBundelIndices":[0],"indexView":{"offset":4032,"length":480,"count":120,"stride":4}},{"primitiveMode":7,"vertexBundelIndices":[1],"indexView":{"offset":11616,"length":888,"count":222,"stride":4}}],"vertexBundles":[{"view":{"offset":0,"length":4032,"count":84,"stride":48},"attributes":[{"name":"a_position","format":32,"isNormalized":false},{"name":"a_normal","format":32,"isNormalized":false},{"name":"a_texCoord","format":21,"isNormalized":false},{"name":"a_tangent","format":44,"isNormalized":false}]},{"view":{"offset":4512,"length":7104,"count":148,"stride":48},"attributes":[{"name":"a_position","format":32,"isNormalized":false},{"name":"a_normal","format":32,"isNormalized":false},{"name":"a_texCoord","format":21,"isNormalized":false},{"name":"a_tangent","format":44,"isNormalized":false}]}]},"minPosition",8,[1,0.02336186170578003,-0.004851451143622398,0.07883740216493607],"maxPosition",8,[1,0.1007058247923851,0.062072768807411194,0.1571252942085266]]],-1],0,0,[],[],[]],[[[14,".bin",2084010265,[{"primitives":[{"primitiveMode":7,"vertexBundelIndices":[0],"indexView":{"offset":3072,"length":360,"count":90,"stride":4}},{"primitiveMode":7,"vertexBundelIndices":[1],"indexView":{"offset":9576,"length":768,"count":192,"stride":4}}],"vertexBundles":[{"view":{"offset":0,"length":3072,"count":64,"stride":48},"attributes":[{"name":"a_position","format":32,"isNormalized":false},{"name":"a_normal","format":32,"isNormalized":false},{"name":"a_texCoord","format":21,"isNormalized":false},{"name":"a_tangent","format":44,"isNormalized":false}]},{"view":{"offset":3432,"length":6144,"count":128,"stride":48},"attributes":[{"name":"a_position","format":32,"isNormalized":false},{"name":"a_normal","format":32,"isNormalized":false},{"name":"a_texCoord","format":21,"isNormalized":false},{"name":"a_tangent","format":44,"isNormalized":false}]}]},"minPosition",8,[1,0.018425393849611282,-0.003130981931462884,0.05624449625611305],"maxPosition",8,[1,0.06225204095244408,0.03196131810545921,0.10126908123493195]]],-1],0,0,[],[],[]],[[[14,".bin",789816052,[{"primitives":[{"primitiveMode":7,"vertexBundelIndices":[0],"indexView":{"offset":1920,"length":264,"count":66,"stride":4}}],"vertexBundles":[{"view":{"offset":0,"length":1920,"count":40,"stride":48},"attributes":[{"name":"a_position","format":32,"isNormalized":false},{"name":"a_normal","format":32,"isNormalized":false},{"name":"a_texCoord","format":21,"isNormalized":false},{"name":"a_tangent","format":44,"isNormalized":false}]}]},"minPosition",8,[1,-0.10282742232084274,0.012076876126229763,0.008560237474739552],"maxPosition",8,[1,-0.0959044098854065,0.01799789071083069,0.015483150258660316]]],-1],0,0,[],[],[]],[[[14,".bin",2204158882,[{"primitives":[{"primitiveMode":7,"vertexBundelIndices":[0],"indexView":{"offset":26928,"length":7104,"count":1776,"stride":4}}],"vertexBundles":[{"view":{"offset":0,"length":26928,"count":561,"stride":48},"attributes":[{"name":"a_position","format":32,"isNormalized":false},{"name":"a_normal","format":32,"isNormalized":false},{"name":"a_texCoord","format":21,"isNormalized":false},{"name":"a_tangent","format":44,"isNormalized":false}]}]},"minPosition",8,[1,-0.06525079905986786,0.00849352590739727,-0.04249957948923111],"maxPosition",8,[1,-0.039518579840660095,0.0398770309984684,-0.028451748192310333]]],-1],0,0,[],[],[]],[[[14,".bin",2473646468,[{"primitives":[{"primitiveMode":7,"vertexBundelIndices":[0],"indexView":{"offset":3072,"length":360,"count":90,"stride":4}},{"primitiveMode":7,"vertexBundelIndices":[1],"indexView":{"offset":9576,"length":768,"count":192,"stride":4}}],"vertexBundles":[{"view":{"offset":0,"length":3072,"count":64,"stride":48},"attributes":[{"name":"a_position","format":32,"isNormalized":false},{"name":"a_normal","format":32,"isNormalized":false},{"name":"a_texCoord","format":21,"isNormalized":false},{"name":"a_tangent","format":44,"isNormalized":false}]},{"view":{"offset":3432,"length":6144,"count":128,"stride":48},"attributes":[{"name":"a_position","format":32,"isNormalized":false},{"name":"a_normal","format":32,"isNormalized":false},{"name":"a_texCoord","format":21,"isNormalized":false},{"name":"a_tangent","format":44,"isNormalized":false}]}]},"minPosition",8,[1,-0.06755116581916809,-0.0032968521118164062,0.052908170968294144],"maxPosition",8,[1,-0.01270479429513216,0.039824701845645905,0.1051742285490036]]],-1],0,0,[],[],[]],[[[14,".bin",2952666576,[{"primitives":[{"primitiveMode":7,"vertexBundelIndices":[0],"indexView":{"offset":23232,"length":3360,"count":840,"stride":4}}],"vertexBundles":[{"view":{"offset":0,"length":23232,"count":484,"stride":48},"attributes":[{"name":"a_position","format":32,"isNormalized":false},{"name":"a_normal","format":32,"isNormalized":false},{"name":"a_texCoord","format":21,"isNormalized":false},{"name":"a_tangent","format":44,"isNormalized":false}]}]},"minPosition",8,[1,-0.1360626220703125,0.007632313761860132,-0.19197143614292145],"maxPosition",8,[1,0.13518768548965454,0.01632555201649666,0.18959487974643707]]],-1],0,0,[],[],[]],[[[14,".bin",2541362164,[{"primitives":[{"primitiveMode":7,"vertexBundelIndices":[0],"indexView":{"offset":13776,"length":3552,"count":888,"stride":4}}],"vertexBundles":[{"view":{"offset":0,"length":13776,"count":287,"stride":48},"attributes":[{"name":"a_position","format":32,"isNormalized":false},{"name":"a_normal","format":32,"isNormalized":false},{"name":"a_texCoord","format":21,"isNormalized":false},{"name":"a_tangent","format":44,"isNormalized":false}]}]},"minPosition",8,[1,0.05331192538142204,0.007382706273347139,0.012066269293427467],"maxPosition",8,[1,0.0717863142490387,0.03984296694397926,0.023654012009501457]]],-1],0,0,[],[],[]],[[[57,"xuong_rong_bg02_mat",[{"rasterizerState":{},"blendState":{"targets":[{}]},"depthStencilState":{}}],[{}],[[[{"metallic":0.4000000059604645,"roughness":0.49053239822387695},"albedoScale",8,[1,0.11813759803771973,0.4032000005245209,0.1463872343301773]]],11]]],0,0,[0],[4],[3]],[[[14,".bin",3137053937,[{"primitives":[{"primitiveMode":7,"vertexBundelIndices":[0],"indexView":{"offset":1824,"length":264,"count":66,"stride":4}}],"vertexBundles":[{"view":{"offset":0,"length":1824,"count":38,"stride":48},"attributes":[{"name":"a_position","format":32,"isNormalized":false},{"name":"a_normal","format":32,"isNormalized":false},{"name":"a_texCoord","format":21,"isNormalized":false},{"name":"a_tangent","format":44,"isNormalized":false}]}]},"minPosition",8,[1,-0.1009969636797905,0.009611057117581367,0.11746508628129959],"maxPosition",8,[1,-0.0898614227771759,0.013929659500718117,0.12662501633167267]]],-1],0,0,[],[],[]],[[{"name":"btn_claim","rect":{"x":0,"y":0,"width":303,"height":114},"offset":{"x":0,"y":0},"originalSize":{"width":303,"height":114},"rotated":false,"capInsets":[0,0,0,0],"packable":true}],[2],0,[0],[7],[45]],[[[34,"1",[{"rasterizerState":{},"depthStencilState":{},"blendState":{"targets":[{}]}},{},{}],[{"USE_LIGHTMAP":true,"USE_ALBEDO_MAP":true},{},{}],[[[{},"mainTexture",6,0],{},{}],11,0,0]]],0,0,[0,0],[6,4],[46,3]],[[[27,[{"rasterizerState":{},"depthStencilState":{},"blendState":{"targets":[{}]}},{},{}],[{"USE_LIGHTMAP":true,"USE_ALBEDO_MAP":true},{},{}],[[[{},"mainTexture",6,0],{},{}],11,0,0]]],0,0,[0,0],[6,4],[47,3]],[[{"name":"glow","rect":{"x":0,"y":0,"width":693,"height":707},"offset":{"x":0,"y":0},"originalSize":{"width":693,"height":707},"rotated":false,"capInsets":[0,0,0,0],"packable":true}],[2],0,[0],[7],[48]],[[[14,".bin",3383603168,[{"primitives":[{"primitiveMode":7,"vertexBundelIndices":[0],"indexView":{"offset":224,"length":24,"count":6,"stride":4}}],"vertexBundles":[{"view":{"offset":0,"length":224,"count":4,"stride":56},"attributes":[{"name":"a_position","format":32,"isNormalized":false},{"name":"a_normal","format":32,"isNormalized":false},{"name":"a_texCoord","format":21,"isNormalized":false},{"name":"a_tangent","format":44,"isNormalized":false},{"name":"a_texCoord1","format":21,"isNormalized":false}]}]},"minPosition",8,[1,-0.5,-0.5,0],"maxPosition",8,[1,0.5,0.5,0]]],-1],0,0,[],[],[]],[[[32,"DinoAttack4",".mp3",0.7047],-1],0,0,[],[],[]],[[[27,[{"rasterizerState":{},"depthStencilState":{},"blendState":{"targets":[{}]}}],[{}],[[[{},"mainTexture",6,0]],11]]],0,0,[0,0],[6,4],[18,22]],[[{"name":"hand-001","rect":{"x":0,"y":0,"width":201,"height":257},"offset":{"x":0,"y":0},"originalSize":{"width":201,"height":257},"rotated":false,"capInsets":[0,0,0,0],"packable":true}],[2],0,[0],[7],[49]],[[[58,"builtin-standard",[{"hash":4038009253,"name":"builtin-standard|standard-vs|standard-fs","blocks":[{"name":"Constants","stageFlags":17,"binding":0,"members":[{"name":"tilingOffset","type":16,"count":1},{"name":"albedo","type":16,"count":1},{"name":"albedoScaleAndCutoff","type":16,"count":1},{"name":"pbrParams","type":16,"count":1},{"name":"emissive","type":16,"count":1},{"name":"emissiveScaleParam","type":16,"count":1}],"defines":[]}],"samplerTextures":[{"name":"albedoMap","type":28,"count":1,"stageFlags":16,"binding":1,"defines":["USE_ALBEDO_MAP"]},{"name":"normalMap","type":28,"count":1,"stageFlags":16,"binding":2,"defines":["USE_NORMAL_MAP"]},{"name":"pbrMap","type":28,"count":1,"stageFlags":16,"binding":3,"defines":["USE_PBR_MAP"]},{"name":"metallicRoughnessMap","type":28,"count":1,"stageFlags":16,"binding":4,"defines":["USE_METALLIC_ROUGHNESS_MAP"]},{"name":"occlusionMap","type":28,"count":1,"stageFlags":16,"binding":5,"defines":["USE_OCCLUSION_MAP"]},{"name":"emissiveMap","type":28,"count":1,"stageFlags":16,"binding":6,"defines":["USE_EMISSIVE_MAP"]}],"samplers":[],"textures":[],"buffers":[{"name":"b_ccLightsBuffer","memoryAccess":1,"stageFlags":16,"binding":7,"defines":["CC_FORWARD_ADD","CC_ENABLE_CLUSTERED_LIGHT_CULLING"]},{"name":"b_clusterLightIndicesBuffer","memoryAccess":1,"stageFlags":16,"binding":8,"defines":["CC_FORWARD_ADD","CC_ENABLE_CLUSTERED_LIGHT_CULLING"]},{"name":"b_clusterLightGridBuffer","memoryAccess":1,"stageFlags":16,"binding":9,"defines":["CC_FORWARD_ADD","CC_ENABLE_CLUSTERED_LIGHT_CULLING"]}],"images":[],"subpassInputs":[],"attributes":[{"name":"a_position","format":32,"location":0,"defines":[]},{"name":"a_normal","format":32,"location":1,"defines":[]},{"name":"a_texCoord","format":21,"location":2,"defines":[]},{"name":"a_tangent","format":44,"location":3,"defines":[]},{"name":"a_vertexId","format":11,"location":6,"defines":["CC_USE_MORPH"]},{"name":"a_joints","location":4,"defines":["CC_USE_SKINNING"]},{"name":"a_weights","format":44,"location":5,"defines":["CC_USE_SKINNING"]},{"name":"a_jointAnimInfo","format":44,"isInstanced":true,"location":7,"defines":["CC_USE_SKINNING","CC_USE_BAKED_ANIMATION","USE_INSTANCING"]},{"name":"a_matWorld0","format":44,"isInstanced":true,"location":8,"defines":["USE_INSTANCING"]},{"name":"a_matWorld1","format":44,"isInstanced":true,"location":9,"defines":["USE_INSTANCING"]},{"name":"a_matWorld2","format":44,"isInstanced":true,"location":10,"defines":["USE_INSTANCING"]},{"name":"a_lightingMapUVParam","format":44,"isInstanced":true,"location":11,"defines":["USE_INSTANCING","USE_LIGHTMAP"]},{"name":"a_dyn_batch_id","format":11,"location":12,"defines":["!USE_INSTANCING","USE_BATCHING"]},{"name":"a_color","format":44,"location":13,"defines":["USE_VERTEX_COLOR"]},{"name":"a_texCoord1","format":21,"location":14,"defines":[]}],"varyings":[{"name":"v_fog_factor","type":13,"count":1,"stageFlags":17,"location":0,"defines":["!CC_USE_ACCURATE_FOG"]},{"name":"v_shadowPos","type":16,"count":1,"stageFlags":17,"location":1,"defines":[]},{"name":"v_color","type":16,"count":1,"stageFlags":17,"location":2,"defines":["USE_VERTEX_COLOR"]},{"name":"v_position","type":15,"count":1,"stageFlags":17,"location":3,"defines":[]},{"name":"v_normal","type":15,"count":1,"stageFlags":17,"location":4,"defines":[]},{"name":"v_uv","type":14,"count":1,"stageFlags":17,"location":5,"defines":[]},{"name":"v_uv1","type":14,"count":1,"stageFlags":17,"location":6,"defines":[]},{"name":"v_tangent","type":15,"count":1,"stageFlags":17,"location":7,"defines":["USE_NORMAL_MAP"]},{"name":"v_bitangent","type":15,"count":1,"stageFlags":17,"location":8,"defines":["USE_NORMAL_MAP"]},{"name":"v_luv","type":15,"count":1,"stageFlags":17,"location":9,"defines":["USE_LIGHTMAP","!USE_BATCHING","!CC_FORWARD_ADD"]}],"fragColors":[{"name":"fragColorX","typename":"vec4","type":16,"count":1,"stageFlags":16,"location":0,"defines":["CC_FORWARD_ADD"]},{"name":"fragColor0","typename":"vec4","type":16,"count":1,"stageFlags":16,"location":1,"defines":["!CC_FORWARD_ADD","CC_PIPELINE_TYPE"]},{"name":"fragColor1","typename":"vec4","type":16,"count":1,"stageFlags":16,"location":2,"defines":["!CC_FORWARD_ADD","CC_PIPELINE_TYPE"]},{"name":"fragColor2","typename":"vec4","type":16,"count":1,"stageFlags":16,"location":3,"defines":["!CC_FORWARD_ADD","CC_PIPELINE_TYPE"]}],"glsl4":{"vert":"#extension GL_EXT_shader_explicit_arithmetic_types_int32: require\nprecision highp float;\nhighp float decode32 (highp vec4 rgba) {\n  rgba = rgba * 255.0;\n  highp float Sign = 1.0 - (step(128.0, (rgba[3]) + 0.5)) * 2.0;\n  highp float Exponent = 2.0 * (mod(float(int((rgba[3]) + 0.5)), 128.0)) + (step(128.0, (rgba[2]) + 0.5)) - 127.0;\n  highp float Mantissa = (mod(float(int((rgba[2]) + 0.5)), 128.0)) * 65536.0 + rgba[1] * 256.0 + rgba[0] + 8388608.0;\n  return Sign * exp2(Exponent - 23.0) * Mantissa;\n}\nstruct StandardVertInput {\n  highp vec4 position;\n  vec3 normal;\n  vec4 tangent;\n};\nlayout(location = 0) in vec3 a_position;\nlayout(location = 1) in vec3 a_normal;\nlayout(location = 2) in vec2 a_texCoord;\nlayout(location = 3) in vec4 a_tangent;\n#if CC_USE_MORPH\n    int getVertexId() {\n      return gl_VertexIndex;\n    }\n  layout(set = 2, binding = 4) uniform CCMorph {\n    vec4 cc_displacementWeights[15];\n    vec4 cc_displacementTextureInfo;\n  };\n  vec2 getPixelLocation(vec2 textureResolution, int pixelIndex) {\n    float pixelIndexF = float(pixelIndex);\n    float x = mod(pixelIndexF, textureResolution.x);\n    float y = floor(pixelIndexF / textureResolution.x);\n    return vec2(x, y);\n  }\n  vec2 getPixelCoordFromLocation(vec2 location, vec2 textureResolution) {\n    return (vec2(location.x, location.y) + .5) / textureResolution;\n  }\n  #if CC_DEVICE_SUPPORT_FLOAT_TEXTURE\n      vec4 fetchVec3ArrayFromTexture(sampler2D tex, int pixelIndex) {\n        ivec2 texSize = textureSize(tex, 0);\n        return texelFetch(tex, ivec2(pixelIndex % texSize.x, pixelIndex / texSize.x), 0);\n      }\n  #else\n    vec4 fetchVec3ArrayFromTexture(sampler2D tex, int elementIndex) {\n      int pixelIndex = elementIndex * 4;\n      vec2 location = getPixelLocation(cc_displacementTextureInfo.xy, pixelIndex);\n      vec2 x = getPixelCoordFromLocation(location + vec2(0.0, 0.0), cc_displacementTextureInfo.xy);\n      vec2 y = getPixelCoordFromLocation(location + vec2(1.0, 0.0), cc_displacementTextureInfo.xy);\n      vec2 z = getPixelCoordFromLocation(location + vec2(2.0, 0.0), cc_displacementTextureInfo.xy);\n      return vec4(\n        decode32(texture(tex, x)),\n        decode32(texture(tex, y)),\n        decode32(texture(tex, z)),\n        1.0\n      );\n    }\n  #endif\n  float getDisplacementWeight(int index) {\n    int quot = index / 4;\n    int remainder = index - quot * 4;\n    if (remainder == 0) {\n      return cc_displacementWeights[quot].x;\n    } else if (remainder == 1) {\n      return cc_displacementWeights[quot].y;\n    } else if (remainder == 2) {\n      return cc_displacementWeights[quot].z;\n    } else {\n      return cc_displacementWeights[quot].w;\n    }\n  }\n  vec3 getVec3DisplacementFromTexture(sampler2D tex, int vertexIndex) {\n  #if CC_MORPH_PRECOMPUTED\n    return fetchVec3ArrayFromTexture(tex, vertexIndex).rgb;\n  #else\n    vec3 result = vec3(0, 0, 0);\n    int nVertices = int(cc_displacementTextureInfo.z);\n    for (int iTarget = 0; iTarget < CC_MORPH_TARGET_COUNT; ++iTarget) {\n      result += (fetchVec3ArrayFromTexture(tex, nVertices * iTarget + vertexIndex).rgb * getDisplacementWeight(iTarget));\n    }\n    return result;\n  #endif\n  }\n  #if CC_MORPH_TARGET_HAS_POSITION\n    layout(set = 2, binding = 7) uniform sampler2D cc_PositionDisplacements;\n    vec3 getPositionDisplacement(int vertexId) {\n      return getVec3DisplacementFromTexture(cc_PositionDisplacements, vertexId);\n    }\n  #endif\n  #if CC_MORPH_TARGET_HAS_NORMAL\n    layout(set = 2, binding = 8) uniform sampler2D cc_NormalDisplacements;\n    vec3 getNormalDisplacement(int vertexId) {\n      return getVec3DisplacementFromTexture(cc_NormalDisplacements, vertexId);\n    }\n  #endif\n  #if CC_MORPH_TARGET_HAS_TANGENT\n    layout(set = 2, binding = 9) uniform sampler2D cc_TangentDisplacements;\n    vec3 getTangentDisplacement(int vertexId) {\n      return getVec3DisplacementFromTexture(cc_TangentDisplacements, vertexId);\n    }\n  #endif\n  void applyMorph (inout StandardVertInput attr) {\n    int vertexId = getVertexId();\n  #if CC_MORPH_TARGET_HAS_POSITION\n    attr.position.xyz = attr.position.xyz + getPositionDisplacement(vertexId);\n  #endif\n  #if CC_MORPH_TARGET_HAS_NORMAL\n    attr.normal.xyz = attr.normal.xyz + getNormalDisplacement(vertexId);\n  #endif\n  #if CC_MORPH_TARGET_HAS_TANGENT\n    attr.tangent.xyz = attr.tangent.xyz + getTangentDisplacement(vertexId);\n  #endif\n  }\n  void applyMorph (inout vec4 position) {\n  #if CC_MORPH_TARGET_HAS_POSITION\n    position.xyz = position.xyz + getPositionDisplacement(getVertexId());\n  #endif\n  }\n#endif\n#if CC_USE_SKINNING\n    layout(location = 4) in u32vec4 a_joints;\n  layout(location = 5) in vec4 a_weights;\n  #if CC_USE_BAKED_ANIMATION\n    #if USE_INSTANCING\n      layout(location = 7) in highp vec4 a_jointAnimInfo;\n    #endif\n    layout(set = 2, binding = 3) uniform CCSkinningTexture {\n      highp vec4 cc_jointTextureInfo;\n    };\n    layout(set = 2, binding = 2) uniform CCSkinningAnimation {\n      highp vec4 cc_jointAnimInfo;\n    };\n    layout(set = 2, binding = 6) uniform highp sampler2D cc_jointTexture;\n      #else\n    layout(set = 2, binding = 3) uniform CCSkinning {\n      highp vec4 cc_joints[30 * 3];\n    };\n  #endif\n  #if CC_USE_BAKED_ANIMATION\n    #if CC_DEVICE_SUPPORT_FLOAT_TEXTURE\n      mat4 getJointMatrix (float i) {\n              #if USE_INSTANCING\n                highp float j = 3.0 * (a_jointAnimInfo.x * a_jointAnimInfo.y + i) + a_jointAnimInfo.z;\n              #else\n                highp float j = 3.0 * (cc_jointAnimInfo.x * cc_jointTextureInfo.y + i) + cc_jointTextureInfo.z;\n              #endif\n              highp float invSize = cc_jointTextureInfo.w;\n              highp float y = floor(j * invSize);\n              highp float x = floor(j - y * cc_jointTextureInfo.x);\n              y = (y + 0.5) * invSize;\n        vec4 v1 = texture(cc_jointTexture, vec2((x + 0.5) * invSize, y));\n        vec4 v2 = texture(cc_jointTexture, vec2((x + 1.5) * invSize, y));\n        vec4 v3 = texture(cc_jointTexture, vec2((x + 2.5) * invSize, y));\n        return mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n      }\n    #else\n      mat4 getJointMatrix (float i) {\n              #if USE_INSTANCING\n                highp float j = 12.0 * (a_jointAnimInfo.x * a_jointAnimInfo.y + i) + a_jointAnimInfo.z;\n              #else\n                highp float j = 12.0 * (cc_jointAnimInfo.x * cc_jointTextureInfo.y + i) + cc_jointTextureInfo.z;\n              #endif\n              highp float invSize = cc_jointTextureInfo.w;\n              highp float y = floor(j * invSize);\n              highp float x = floor(j - y * cc_jointTextureInfo.x);\n              y = (y + 0.5) * invSize;\n        vec4 v1 = vec4(\n          decode32(texture(cc_jointTexture, vec2((x + 0.5) * invSize, y))),\n          decode32(texture(cc_jointTexture, vec2((x + 1.5) * invSize, y))),\n          decode32(texture(cc_jointTexture, vec2((x + 2.5) * invSize, y))),\n          decode32(texture(cc_jointTexture, vec2((x + 3.5) * invSize, y)))\n        );\n        vec4 v2 = vec4(\n          decode32(texture(cc_jointTexture, vec2((x + 4.5) * invSize, y))),\n          decode32(texture(cc_jointTexture, vec2((x + 5.5) * invSize, y))),\n          decode32(texture(cc_jointTexture, vec2((x + 6.5) * invSize, y))),\n          decode32(texture(cc_jointTexture, vec2((x + 7.5) * invSize, y)))\n        );\n        vec4 v3 = vec4(\n          decode32(texture(cc_jointTexture, vec2((x + 8.5) * invSize, y))),\n          decode32(texture(cc_jointTexture, vec2((x + 9.5) * invSize, y))),\n          decode32(texture(cc_jointTexture, vec2((x + 10.5) * invSize, y))),\n          decode32(texture(cc_jointTexture, vec2((x + 11.5) * invSize, y)))\n        );\n        return mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n      }\n    #endif\n  #else\n    mat4 getJointMatrix (float i) {\n      int idx = int(i);\n      vec4 v1 = cc_joints[idx * 3];\n      vec4 v2 = cc_joints[idx * 3 + 1];\n      vec4 v3 = cc_joints[idx * 3 + 2];\n      return mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n    }\n  #endif\n  mat4 skinMatrix () {\n    vec4 joints = vec4(a_joints);\n    return getJointMatrix(joints.x) * a_weights.x\n         + getJointMatrix(joints.y) * a_weights.y\n         + getJointMatrix(joints.z) * a_weights.z\n         + getJointMatrix(joints.w) * a_weights.w;\n  }\n  void CCSkin (inout vec4 position) {\n    mat4 m = skinMatrix();\n    position = m * position;\n  }\n  void CCSkin (inout StandardVertInput attr) {\n    mat4 m = skinMatrix();\n    attr.position = m * attr.position;\n    attr.normal = (m * vec4(attr.normal, 0.0)).xyz;\n    attr.tangent.xyz = (m * vec4(attr.tangent.xyz, 0.0)).xyz;\n  }\n#endif\nlayout(set = 0, binding = 0) uniform CCGlobal {\n  highp   vec4 cc_time;\n  mediump vec4 cc_screenSize;\n  mediump vec4 cc_nativeSize;\n};\nlayout(set = 0, binding = 1) uniform CCCamera {\n  highp   mat4 cc_matView;\n  highp   mat4 cc_matViewInv;\n  highp   mat4 cc_matProj;\n  highp   mat4 cc_matProjInv;\n  highp   mat4 cc_matViewProj;\n  highp   mat4 cc_matViewProjInv;\n  highp   vec4 cc_cameraPos;\n  mediump vec4 cc_screenScale;\n  mediump vec4 cc_exposure;\n  mediump vec4 cc_mainLitDir;\n  mediump vec4 cc_mainLitColor;\n  mediump vec4 cc_ambientSky;\n  mediump vec4 cc_ambientGround;\n  mediump vec4 cc_fogColor;\n  mediump vec4 cc_fogBase;\n  mediump vec4 cc_fogAdd;\n  mediump vec4 cc_nearFar;\n  mediump vec4 cc_viewPort;\n};\n#if USE_INSTANCING\n  layout(location = 8) in vec4 a_matWorld0;\n  layout(location = 9) in vec4 a_matWorld1;\n  layout(location = 10) in vec4 a_matWorld2;\n  #if USE_LIGHTMAP\n    layout(location = 11) in vec4 a_lightingMapUVParam;\n  #endif\n#elif USE_BATCHING\n  layout(location = 12) in float a_dyn_batch_id;\n  layout(set = 2, binding = 0) uniform CCLocalBatched {\n    highp mat4 cc_matWorlds[10];\n  };\n#else\n  layout(set = 2, binding = 0) uniform CCLocal {\n    highp mat4 cc_matWorld;\n    highp mat4 cc_matWorldIT;\n    highp vec4 cc_lightingMapUVParam;\n  };\n#endif\nlayout(set = 1, binding = 0) uniform Constants {\n  vec4 tilingOffset;\n  vec4 albedo;\n  vec4 albedoScaleAndCutoff;\n  vec4 pbrParams;\n  vec4 emissive;\n  vec4 emissiveScaleParam;\n};\nfloat LinearFog(vec4 pos) {\n  vec4 wPos = pos;\n  float cam_dis = distance(cc_cameraPos, wPos);\n  float fogStart = cc_fogBase.x;\n  float fogEnd = cc_fogBase.y;\n  return clamp((fogEnd - cam_dis) / (fogEnd - fogStart), 0., 1.);\n}\nfloat ExpFog(vec4 pos) {\n  vec4 wPos = pos;\n  float fogAtten = cc_fogAdd.z;\n  float fogStart = cc_fogBase.x;\n  float fogDensity = cc_fogBase.z;\n  float cam_dis = max(distance(cc_cameraPos, wPos) - fogStart, 0.0) / fogAtten * 4.;\n  float f = exp(-cam_dis * fogDensity);\n  return f;\n}\nfloat ExpSquaredFog(vec4 pos) {\n  vec4 wPos = pos;\n  float fogAtten = cc_fogAdd.z;\n  float fogStart = cc_fogBase.x;\n  float fogDensity = cc_fogBase.z;\n  float cam_dis = max(distance(cc_cameraPos, wPos) - fogStart, 0.0) / fogAtten * 4.;\n  float f = exp(-cam_dis * cam_dis * fogDensity * fogDensity);\n  return f;\n}\nfloat LayeredFog(vec4 pos) {\n  vec4 wPos = pos;\n  float fogAtten = cc_fogAdd.z;\n  float _FogTop = cc_fogAdd.x;\n  float _FogRange = cc_fogAdd.y;\n  vec3 camWorldProj = cc_cameraPos.xyz;\n  camWorldProj.y = 0.;\n  vec3 worldPosProj = wPos.xyz;\n  worldPosProj.y = 0.;\n  float fDeltaD = distance(worldPosProj, camWorldProj) / fogAtten * 2.0;\n  float fDeltaY, fDensityIntegral;\n  if (cc_cameraPos.y > _FogTop) {\n    if (wPos.y < _FogTop) {\n      fDeltaY = (_FogTop - wPos.y) / _FogRange * 2.0;\n      fDensityIntegral = fDeltaY * fDeltaY * 0.5;\n    } else {\n      fDeltaY = 0.;\n      fDensityIntegral = 0.;\n    }\n  } else {\n    if (wPos.y < _FogTop) {\n      float fDeltaA = (_FogTop - cc_cameraPos.y) / _FogRange * 2.;\n      float fDeltaB = (_FogTop - wPos.y) / _FogRange * 2.;\n      fDeltaY = abs(fDeltaA - fDeltaB);\n      fDensityIntegral = abs((fDeltaA * fDeltaA * 0.5) - (fDeltaB * fDeltaB * 0.5));\n    } else {\n      fDeltaY = abs(_FogTop - cc_cameraPos.y) / _FogRange * 2.;\n      fDensityIntegral = abs(fDeltaY * fDeltaY * 0.5);\n    }\n  }\n  float fDensity;\n  if (fDeltaY != 0.) {\n    fDensity = (sqrt(1.0 + ((fDeltaD / fDeltaY) * (fDeltaD / fDeltaY)))) * fDensityIntegral;\n  } else {\n    fDensity = 0.;\n  }\n  float f = exp(-fDensity);\n  return f;\n}\nvoid CC_TRANSFER_FOG_BASE(vec4 pos, out float factor)\n{\n  #if CC_USE_FOG == 0\n\tfactor = LinearFog(pos);\n  #elif CC_USE_FOG == 1\n    factor = ExpFog(pos);\n  #elif CC_USE_FOG == 2\n    factor = ExpSquaredFog(pos);\n  #elif CC_USE_FOG == 3\n    factor = LayeredFog(pos);\n  #else\n    factor = 1.0;\n  #endif\n}\n#if !CC_USE_ACCURATE_FOG\nlayout(location = 0) out float v_fog_factor;\n#endif\nvoid CC_TRANSFER_FOG(vec4 pos) {\n#if !CC_USE_ACCURATE_FOG\n    CC_TRANSFER_FOG_BASE(pos, v_fog_factor);\n#endif\n}\nlayout(location = 1) out highp vec4 v_shadowPos;\nlayout(set = 0, binding = 2) uniform CCShadow {\n  highp mat4 cc_matLightPlaneProj;\n  highp mat4 cc_matLightView;\n  highp mat4 cc_matLightViewProj;\n  highp vec4 cc_shadowInvProjDepthInfo;\n  highp vec4 cc_shadowProjDepthInfo;\n  highp vec4 cc_shadowProjInfo;\n  mediump vec4 cc_shadowNFLSInfo;\n  mediump vec4 cc_shadowWHPBInfo;\n  mediump vec4 cc_shadowLPNNInfo;\n  lowp vec4 cc_shadowColor;\n  mediump vec4 cc_planarNDInfo;\n};\n#if CC_RECEIVE_SHADOW\n  layout(set = 0, binding = 3) uniform highp sampler2D cc_shadowMap;\n  layout(set = 0, binding = 5) uniform highp sampler2D cc_spotLightingMap;\n#endif\n#if USE_VERTEX_COLOR\n  layout(location = 13) in vec4 a_color;\n  layout(location = 2) out vec4 v_color;\n#endif\nlayout(location = 3) out vec3 v_position;\nlayout(location = 4) out vec3 v_normal;\nlayout(location = 5) out vec2 v_uv;\nlayout(location = 6) out vec2 v_uv1;\n#if USE_NORMAL_MAP\n  layout(location = 7) out vec3 v_tangent;\n  layout(location = 8) out vec3 v_bitangent;\n#endif\n#if HAS_SECOND_UV || USE_LIGHTMAP\n  layout(location = 14) in vec2 a_texCoord1;\n#endif\n#if USE_LIGHTMAP && !USE_BATCHING && !CC_FORWARD_ADD\n  layout(location = 9) out vec3 v_luv;\n  void CCLightingMapCaclUV()\n  {\n  #if !USE_INSTANCING\n    v_luv.xy = cc_lightingMapUVParam.xy + a_texCoord1 * cc_lightingMapUVParam.zw;\n    v_luv.z = cc_lightingMapUVParam.z;\n  #else\n    v_luv.xy = a_lightingMapUVParam.xy + a_texCoord1 * a_lightingMapUVParam.zw;\n    v_luv.z = a_lightingMapUVParam.z;\n  #endif\n  }\n#endif\nvoid main () {\n  StandardVertInput In;\n      In.position = vec4(a_position, 1.0);\n      In.normal = a_normal;\n      In.tangent = a_tangent;\n    #if CC_USE_MORPH\n      applyMorph(In);\n    #endif\n    #if CC_USE_SKINNING\n      CCSkin(In);\n    #endif\n  mat4 matWorld, matWorldIT;\n    #if USE_INSTANCING\n      matWorld = mat4(\n        vec4(a_matWorld0.xyz, 0.0),\n        vec4(a_matWorld1.xyz, 0.0),\n        vec4(a_matWorld2.xyz, 0.0),\n        vec4(a_matWorld0.w, a_matWorld1.w, a_matWorld2.w, 1.0)\n      );\n      matWorldIT = matWorld;\n    #elif USE_BATCHING\n      matWorld = cc_matWorlds[int(a_dyn_batch_id)];\n      matWorldIT = matWorld;\n    #else\n      matWorld = cc_matWorld;\n      matWorldIT = cc_matWorldIT;\n    #endif\n  vec4 pos = matWorld * In.position;\n  v_position = pos.xyz;\n  v_normal = normalize((matWorldIT * vec4(In.normal, 0.0)).xyz);\n  #if USE_TWOSIDE\n    vec3 viewDirect = normalize(cc_cameraPos.xyz - v_position);\n    v_normal *= dot(v_normal, viewDirect) < 0.0 ? -1.0 : 1.0;\n  #endif\n  #if USE_NORMAL_MAP\n    v_tangent = normalize((matWorld * vec4(In.tangent.xyz, 0.0)).xyz);\n    v_bitangent = cross(v_normal, v_tangent) * In.tangent.w;\n  #endif\n  v_uv = a_texCoord * tilingOffset.xy + tilingOffset.zw;\n  #if SAMPLE_FROM_RT\n    v_uv = cc_cameraPos.w > 1.0 ? vec2(v_uv.x, 1.0 - v_uv.y) : v_uv;\n  #endif\n  #if HAS_SECOND_UV\n    v_uv1 = a_texCoord1 * tilingOffset.xy + tilingOffset.zw;\n    #if SAMPLE_FROM_RT\n      v_uv1 = cc_cameraPos.w > 1.0 ? vec2(v_uv1.x, 1.0 - v_uv1.y) : v_uv1;\n    #endif\n  #endif\n  #if USE_VERTEX_COLOR\n    v_color = a_color;\n  #endif\n  CC_TRANSFER_FOG(pos);\n  v_shadowPos = cc_matLightViewProj * pos;\n  #if USE_LIGHTMAP && !USE_BATCHING && !CC_FORWARD_ADD\n    CCLightingMapCaclUV();\n  #endif\n  gl_Position = cc_matProj * (cc_matView * matWorld) * In.position;\n}","frag":"\nprecision highp float;\nlayout(set = 0, binding = 0) uniform CCGlobal {\n  highp   vec4 cc_time;\n  mediump vec4 cc_screenSize;\n  mediump vec4 cc_nativeSize;\n};\nlayout(set = 0, binding = 1) uniform CCCamera {\n  highp   mat4 cc_matView;\n  highp   mat4 cc_matViewInv;\n  highp   mat4 cc_matProj;\n  highp   mat4 cc_matProjInv;\n  highp   mat4 cc_matViewProj;\n  highp   mat4 cc_matViewProjInv;\n  highp   vec4 cc_cameraPos;\n  mediump vec4 cc_screenScale;\n  mediump vec4 cc_exposure;\n  mediump vec4 cc_mainLitDir;\n  mediump vec4 cc_mainLitColor;\n  mediump vec4 cc_ambientSky;\n  mediump vec4 cc_ambientGround;\n  mediump vec4 cc_fogColor;\n  mediump vec4 cc_fogBase;\n  mediump vec4 cc_fogAdd;\n  mediump vec4 cc_nearFar;\n  mediump vec4 cc_viewPort;\n};\nlayout(set = 1, binding = 0) uniform Constants {\n  vec4 tilingOffset;\n  vec4 albedo;\n  vec4 albedoScaleAndCutoff;\n  vec4 pbrParams;\n  vec4 emissive;\n  vec4 emissiveScaleParam;\n};\nfloat LinearFog(vec4 pos) {\n  vec4 wPos = pos;\n  float cam_dis = distance(cc_cameraPos, wPos);\n  float fogStart = cc_fogBase.x;\n  float fogEnd = cc_fogBase.y;\n  return clamp((fogEnd - cam_dis) / (fogEnd - fogStart), 0., 1.);\n}\nfloat ExpFog(vec4 pos) {\n  vec4 wPos = pos;\n  float fogAtten = cc_fogAdd.z;\n  float fogStart = cc_fogBase.x;\n  float fogDensity = cc_fogBase.z;\n  float cam_dis = max(distance(cc_cameraPos, wPos) - fogStart, 0.0) / fogAtten * 4.;\n  float f = exp(-cam_dis * fogDensity);\n  return f;\n}\nfloat ExpSquaredFog(vec4 pos) {\n  vec4 wPos = pos;\n  float fogAtten = cc_fogAdd.z;\n  float fogStart = cc_fogBase.x;\n  float fogDensity = cc_fogBase.z;\n  float cam_dis = max(distance(cc_cameraPos, wPos) - fogStart, 0.0) / fogAtten * 4.;\n  float f = exp(-cam_dis * cam_dis * fogDensity * fogDensity);\n  return f;\n}\nfloat LayeredFog(vec4 pos) {\n  vec4 wPos = pos;\n  float fogAtten = cc_fogAdd.z;\n  float _FogTop = cc_fogAdd.x;\n  float _FogRange = cc_fogAdd.y;\n  vec3 camWorldProj = cc_cameraPos.xyz;\n  camWorldProj.y = 0.;\n  vec3 worldPosProj = wPos.xyz;\n  worldPosProj.y = 0.;\n  float fDeltaD = distance(worldPosProj, camWorldProj) / fogAtten * 2.0;\n  float fDeltaY, fDensityIntegral;\n  if (cc_cameraPos.y > _FogTop) {\n    if (wPos.y < _FogTop) {\n      fDeltaY = (_FogTop - wPos.y) / _FogRange * 2.0;\n      fDensityIntegral = fDeltaY * fDeltaY * 0.5;\n    } else {\n      fDeltaY = 0.;\n      fDensityIntegral = 0.;\n    }\n  } else {\n    if (wPos.y < _FogTop) {\n      float fDeltaA = (_FogTop - cc_cameraPos.y) / _FogRange * 2.;\n      float fDeltaB = (_FogTop - wPos.y) / _FogRange * 2.;\n      fDeltaY = abs(fDeltaA - fDeltaB);\n      fDensityIntegral = abs((fDeltaA * fDeltaA * 0.5) - (fDeltaB * fDeltaB * 0.5));\n    } else {\n      fDeltaY = abs(_FogTop - cc_cameraPos.y) / _FogRange * 2.;\n      fDensityIntegral = abs(fDeltaY * fDeltaY * 0.5);\n    }\n  }\n  float fDensity;\n  if (fDeltaY != 0.) {\n    fDensity = (sqrt(1.0 + ((fDeltaD / fDeltaY) * (fDeltaD / fDeltaY)))) * fDensityIntegral;\n  } else {\n    fDensity = 0.;\n  }\n  float f = exp(-fDensity);\n  return f;\n}\nvoid CC_TRANSFER_FOG_BASE(vec4 pos, out float factor)\n{\n  #if CC_USE_FOG == 0\n\tfactor = LinearFog(pos);\n  #elif CC_USE_FOG == 1\n    factor = ExpFog(pos);\n  #elif CC_USE_FOG == 2\n    factor = ExpSquaredFog(pos);\n  #elif CC_USE_FOG == 3\n    factor = LayeredFog(pos);\n  #else\n    factor = 1.0;\n  #endif\n}\nvoid CC_APPLY_FOG_BASE(inout vec4 color, float factor) {\n  color = vec4(mix(cc_fogColor.rgb, color.rgb, factor), color.a);\n}\n#if !CC_USE_ACCURATE_FOG\nlayout(location = 0) in float v_fog_factor;\n#endif\nvoid CC_APPLY_FOG(inout vec4 color) {\n#if !CC_USE_ACCURATE_FOG\n    CC_APPLY_FOG_BASE(color, v_fog_factor);\n#endif\n}\nvoid CC_APPLY_FOG(inout vec4 color, vec3 worldPos) {\n#if CC_USE_ACCURATE_FOG\n    float factor;\n    CC_TRANSFER_FOG_BASE(vec4(worldPos, 1.0), factor);\n#else\n    float factor = v_fog_factor;\n#endif\n    CC_APPLY_FOG_BASE(color, factor);\n}\nvec3 SRGBToLinear (vec3 gamma) {\n  return gamma * gamma;\n}\nlayout(set = 0, binding = 2) uniform CCShadow {\n  highp mat4 cc_matLightPlaneProj;\n  highp mat4 cc_matLightView;\n  highp mat4 cc_matLightViewProj;\n  highp vec4 cc_shadowInvProjDepthInfo;\n  highp vec4 cc_shadowProjDepthInfo;\n  highp vec4 cc_shadowProjInfo;\n  mediump vec4 cc_shadowNFLSInfo;\n  mediump vec4 cc_shadowWHPBInfo;\n  mediump vec4 cc_shadowLPNNInfo;\n  lowp vec4 cc_shadowColor;\n  mediump vec4 cc_planarNDInfo;\n};\nhighp float unpackHighpData (float mainPart, float modPart) {\n  highp float data = mainPart;\n  return data + modPart;\n}\nvoid packHighpData (out float mainPart, out float modPart, highp float data) {\n  mainPart = fract(data);\n  modPart = data - mainPart;\n}\nhighp float unpackHighpData (float mainPart, float modPart, const float modValue) {\n  highp float data = mainPart * modValue;\n  return data + modPart * modValue;\n}\nvoid packHighpData (out float mainPart, out float modPart, highp float data, const float modValue) {\n  highp float divide = data / modValue;\n  mainPart = floor(divide);\n  modPart = (data - mainPart * modValue) / modValue;\n}\nhighp vec2 unpackHighpData (vec2 mainPart, vec2 modPart) {\n  highp vec2 data = mainPart;\n  return data + modPart;\n}\nvoid packHighpData (out vec2 mainPart, out vec2 modPart, highp vec2 data) {\n  mainPart = fract(data);\n  modPart = data - mainPart;\n}\nhighp vec2 unpackHighpData (vec2 mainPart, vec2 modPart, const float modValue) {\n  highp vec2 data = mainPart * modValue;\n  return data + modPart * modValue;\n}\nvoid packHighpData (out vec2 mainPart, out vec2 modPart, highp vec2 data, const float modValue) {\n  highp vec2 divide = data / modValue;\n  mainPart = floor(divide);\n  modPart = (data - mainPart * modValue) / modValue;\n}\nhighp vec3 unpackHighpData (vec3 mainPart, vec3 modPart) {\n  highp vec3 data = mainPart;\n  return data + modPart;\n}\nvoid packHighpData (out vec3 mainPart, out vec3 modPart, highp vec3 data) {\n  mainPart = fract(data);\n  modPart = data - mainPart;\n}\nhighp vec3 unpackHighpData (vec3 mainPart, vec3 modPart, const float modValue) {\n  highp vec3 data = mainPart * modValue;\n  return data + modPart * modValue;\n}\nvoid packHighpData (out vec3 mainPart, out vec3 modPart, highp vec3 data, const float modValue) {\n  highp vec3 divide = data / modValue;\n  mainPart = floor(divide);\n  modPart = (data - mainPart * modValue) / modValue;\n}\nhighp vec4 unpackHighpData (vec4 mainPart, vec4 modPart) {\n  highp vec4 data = mainPart;\n  return data + modPart;\n}\nvoid packHighpData (out vec4 mainPart, out vec4 modPart, highp vec4 data) {\n  mainPart = fract(data);\n  modPart = data - mainPart;\n}\nhighp vec4 unpackHighpData (vec4 mainPart, vec4 modPart, const float modValue) {\n  highp vec4 data = mainPart * modValue;\n  return data + modPart * modValue;\n}\nvoid packHighpData (out vec4 mainPart, out vec4 modPart, highp vec4 data, const float modValue) {\n  highp vec4 divide = data / modValue;\n  mainPart = floor(divide);\n  modPart = (data - mainPart * modValue) / modValue;\n}\nfloat CCGetLinearDepthFromViewSpace(vec3 viewPos) {\n  float dist = length(viewPos);\n  return (dist - cc_shadowNFLSInfo.x) / (cc_shadowNFLSInfo.y - cc_shadowNFLSInfo.x);\n}\nfloat CCGetLinearDepth(vec3 worldPos) {\n  vec4 viewStartPos = cc_matLightView * vec4(worldPos.xyz, 1.0);\n  return CCGetLinearDepthFromViewSpace(viewStartPos.xyz);\n}\n#if CC_RECEIVE_SHADOW\n  layout(set = 0, binding = 3) uniform highp sampler2D cc_shadowMap;\n  layout(set = 0, binding = 5) uniform highp sampler2D cc_spotLightingMap;\n  vec4 ApplyShadowDepthBias_FaceNormal(vec4 shadowPos, vec3 worldNormal)\n  {\n    vec4 newShadowPos = shadowPos;\n    if(cc_shadowLPNNInfo.z > 0.0001)\n    {\n      vec4 viewNormal = cc_matLightView * vec4(worldNormal, 0.0);\n      if(viewNormal.z < 0.1)\n        newShadowPos.xy += viewNormal.xy * cc_shadowProjInfo.xy * cc_shadowLPNNInfo.z * clamp(viewNormal.z, 0.001, 0.1);\n    }\n    return newShadowPos;\n  }\n  vec4 ApplyShadowDepthBias_Perspective(vec4 shadowPos, float viewspaceDepthBias)\n  {\n    vec3 viewSpacePos;\n    viewSpacePos.xy = shadowPos.xy * cc_shadowProjInfo.zw;\n    viewSpacePos.z = shadowPos.z * cc_shadowInvProjDepthInfo.x + shadowPos.w * cc_shadowInvProjDepthInfo.y;\n    viewSpacePos.xyz += cc_shadowProjDepthInfo.z * normalize(viewSpacePos.xyz) * viewspaceDepthBias;\n    vec4 clipSpacePos;\n    clipSpacePos.xy = viewSpacePos.xy * cc_shadowProjInfo.xy;\n    clipSpacePos.zw = viewSpacePos.z * cc_shadowProjDepthInfo.xz + vec2(cc_shadowProjDepthInfo.y, 0.0);\n    if (cc_shadowNFLSInfo.z > 0.000001) {\n      clipSpacePos.z = CCGetLinearDepthFromViewSpace(viewSpacePos.xyz);\n      clipSpacePos.z = (clipSpacePos.z * 2.0 - 1.0) * clipSpacePos.w;\n    }\n    return clipSpacePos;\n  }\n  vec4 ApplyShadowDepthBias_Orthographic(vec4 shadowPos, float viewspaceDepthBias)\n  {\n    float coeffA = cc_shadowProjDepthInfo.x;\n    float coeffB = cc_shadowProjDepthInfo.y;\n    float viewSpacePos_z = (shadowPos.z - coeffB) / coeffA;\n    viewSpacePos_z += viewspaceDepthBias;\n    vec4 result = shadowPos;\n    result.z = viewSpacePos_z * coeffA + coeffB;\n    return result;\n  }\n  float CCGetShadowFactorHard (vec4 shadowPos) {\n    vec4 clipPosNew = ApplyShadowDepthBias_Orthographic(shadowPos, cc_shadowWHPBInfo.w);\n    vec3 clipPos = clipPosNew.xyz / clipPosNew.w * 0.5 + 0.5;\n    if (clipPos.x < 0.0 || clipPos.x > 1.0 ||\n        clipPos.y < 0.0 || clipPos.y > 1.0 ||\n        clipPos.z < 0.0 || clipPos.z > 1.0) { return 1.0; }\n    clipPos.xy = cc_cameraPos.w == 1.0 ? vec2(clipPos.xy.x, 1.0 - clipPos.xy.y) : clipPos.xy;\n    float shadow = 0.0;\n    float closestDepth = 0.0;\n    if (cc_shadowLPNNInfo.y > 0.000001) {\n      closestDepth = dot(texture(cc_shadowMap, clipPos.xy), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0));\n    } else {\n      closestDepth = texture(cc_shadowMap, clipPos.xy).x;\n    }\n    shadow = step(clipPos.z, closestDepth);\n    return shadow;\n  }\n  float CCGetShadowFactorSoft (vec4 shadowPos) {\n    vec4 clipPosNew = ApplyShadowDepthBias_Orthographic(shadowPos, cc_shadowWHPBInfo.w);\n    vec3 clipPos = clipPosNew.xyz / clipPosNew.w * 0.5 + 0.5;\n    if (clipPos.x < 0.0 || clipPos.x > 1.0 ||\n        clipPos.y < 0.0 || clipPos.y > 1.0 ||\n        clipPos.z < 0.0 || clipPos.z > 1.0) { return 1.0; }\n    clipPos.xy = cc_cameraPos.w == 1.0 ? vec2(clipPos.xy.x, 1.0 - clipPos.xy.y) : clipPos.xy;\n    float offsetDepth = clipPos.z;\n    vec2 mapSize = cc_shadowWHPBInfo.xy;\n    vec2 oneTap = 1.0 / mapSize;\n    vec2 clipPos_offset = clipPos.xy + oneTap;\n    float block0, block1, block2, block3;\n    if (cc_shadowLPNNInfo.y > 0.000001) {\n      block0 = step(offsetDepth, dot(texture(cc_shadowMap, vec2(clipPos.x, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n      block1 = step(offsetDepth, dot(texture(cc_shadowMap, vec2(clipPos_offset.x, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n      block2 = step(offsetDepth, dot(texture(cc_shadowMap, vec2(clipPos.x, clipPos_offset.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n      block3 = step(offsetDepth, dot(texture(cc_shadowMap, vec2(clipPos_offset.x, clipPos_offset.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n    } else {\n      block0 = step(offsetDepth, texture(cc_shadowMap, vec2(clipPos.x, clipPos.y)).x);\n      block1 = step(offsetDepth, texture(cc_shadowMap, vec2(clipPos_offset.x, clipPos.y)).x);\n      block2 = step(offsetDepth, texture(cc_shadowMap, vec2(clipPos.x, clipPos_offset.y)).x);\n      block3 = step(offsetDepth, texture(cc_shadowMap, vec2(clipPos_offset.x, clipPos_offset.y)).x);\n    }\n    float coefX   = mod(clipPos.x, oneTap.x) * mapSize.x;\n    float resultX = mix(block0, block1, coefX);\n    float resultY = mix(block2, block3, coefX);\n    float coefY   = mod(clipPos.y, oneTap.y) * mapSize.y;\n    return mix(resultX, resultY, coefY);\n  }\n  float CCGetShadowFactorSoft2X (vec4 shadowPos) {\n    vec4 clipPosNew = ApplyShadowDepthBias_Orthographic(shadowPos, cc_shadowWHPBInfo.w);\n    vec3 clipPos = clipPosNew.xyz / clipPosNew.w * 0.5 + 0.5;\n    if (clipPos.x < 0.0 || clipPos.x > 1.0 ||\n        clipPos.y < 0.0 || clipPos.y > 1.0 ||\n        clipPos.z < 0.0 || clipPos.z > 1.0) { return 1.0; }\n    clipPos.xy = cc_cameraPos.w == 1.0 ? vec2(clipPos.xy.x, 1.0 - clipPos.xy.y) : clipPos.xy;\n    float offsetDepth = clipPos.z;\n    vec2 mapSize = cc_shadowWHPBInfo.xy;\n    vec2 oneTap = 1.0 / mapSize;\n    float clipPos_offset_L = clipPos.x - oneTap.x;\n    float clipPos_offset_R = clipPos.x + oneTap.x;\n    float clipPos_offset_U = clipPos.y - oneTap.y;\n    float clipPos_offset_D = clipPos.y + oneTap.y;\n    float block0, block1, block2, block3, block4, block5, block6, block7, block8;\n    if (cc_shadowLPNNInfo.y > 0.000001) {\n      block0 = step(offsetDepth, dot(texture(cc_shadowMap, vec2(clipPos_offset_L, clipPos_offset_U)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n      block1 = step(offsetDepth, dot(texture(cc_shadowMap, vec2(clipPos.x, clipPos_offset_U)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n      block2 = step(offsetDepth, dot(texture(cc_shadowMap, vec2(clipPos_offset_R, clipPos_offset_U)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n      block3 = step(offsetDepth, dot(texture(cc_shadowMap, vec2(clipPos_offset_L, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n      block4 = step(offsetDepth, dot(texture(cc_shadowMap, vec2(clipPos.x, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n      block5 = step(offsetDepth, dot(texture(cc_shadowMap, vec2(clipPos_offset_R, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n      block6 = step(offsetDepth, dot(texture(cc_shadowMap, vec2(clipPos_offset_L, clipPos_offset_D)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n      block7 = step(offsetDepth, dot(texture(cc_shadowMap, vec2(clipPos.x, clipPos_offset_D)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n      block8 = step(offsetDepth, dot(texture(cc_shadowMap, vec2(clipPos_offset_R, clipPos_offset_D)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n    } else {\n      block0 = step(offsetDepth, texture(cc_shadowMap, vec2(clipPos_offset_L, clipPos_offset_U)).x);\n      block1 = step(offsetDepth, texture(cc_shadowMap, vec2(clipPos.x, clipPos_offset_U)).x);\n      block2 = step(offsetDepth, texture(cc_shadowMap, vec2(clipPos_offset_R, clipPos_offset_U)).x);\n      block3 = step(offsetDepth, texture(cc_shadowMap, vec2(clipPos_offset_L, clipPos.y)).x);\n      block4 = step(offsetDepth, texture(cc_shadowMap, vec2(clipPos.x, clipPos.y)).x);\n      block5 = step(offsetDepth, texture(cc_shadowMap, vec2(clipPos_offset_R, clipPos.y)).x);\n      block6 = step(offsetDepth, texture(cc_shadowMap, vec2(clipPos_offset_L, clipPos_offset_D)).x);\n      block7 = step(offsetDepth, texture(cc_shadowMap, vec2(clipPos.x, clipPos_offset_D)).x);\n      block8 = step(offsetDepth, texture(cc_shadowMap, vec2(clipPos_offset_R, clipPos_offset_D)).x);\n    }\n    float coefX = mod(clipPos.x, oneTap.x) * mapSize.x;\n    float coefY = mod(clipPos.y, oneTap.y) * mapSize.y;\n    float shadow = 0.0;\n    float resultX = mix(block0, block1, coefX);\n    float resultY = mix(block3, block4, coefX);\n    shadow += mix(resultX , resultY, coefY);\n    resultX = mix(block1, block2, coefX);\n    resultY = mix(block4, block5, coefX);\n    shadow += mix(resultX , resultY, coefY);\n    resultX = mix(block3, block4, coefX);\n    resultY = mix(block6, block7, coefX);\n    shadow += mix(resultX, resultY, coefY);\n    resultX = mix(block4, block5, coefX);\n    resultY = mix(block7, block8, coefX);\n    shadow += mix(resultX, resultY, coefY);\n    return shadow * 0.25;\n  }\n  float CCGetSpotLightShadowFactorHard (vec4 shadowPos, vec3 worldPos) {\n    vec4 clipPosNew = ApplyShadowDepthBias_Perspective(shadowPos, cc_shadowWHPBInfo.w);\n    vec3 clipPos = clipPosNew.xyz / clipPosNew.w * 0.5 + 0.5;\n    if (clipPos.x < 0.0 || clipPos.x > 1.0 ||\n        clipPos.y < 0.0 || clipPos.y > 1.0 ||\n        clipPos.z < 0.0 || clipPos.z > 1.0) { return 1.0; }\n    clipPos.xy = cc_cameraPos.w == 1.0 ? vec2(clipPos.xy.x, 1.0 - clipPos.xy.y) : clipPos.xy;\n    float shadow = 0.0;\n    float closestDepth = 0.0;\n    float depth = clipPos.z;\n    if (cc_shadowLPNNInfo.y > 0.000001) {\n      closestDepth = dot(texture(cc_spotLightingMap, clipPos.xy), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0));\n    } else {\n      closestDepth = texture(cc_spotLightingMap, clipPos.xy).x;\n    }\n    shadow = step(depth, closestDepth);\n    return shadow;\n  }\n  float CCGetSpotLightShadowFactorSoft (vec4 shadowPos, vec3 worldPos) {\n    vec4 clipPosNew = ApplyShadowDepthBias_Perspective(shadowPos, cc_shadowWHPBInfo.w);\n    vec3 clipPos = clipPosNew.xyz / clipPosNew.w * 0.5 + 0.5;\n    if (clipPos.x < 0.0 || clipPos.x > 1.0 ||\n        clipPos.y < 0.0 || clipPos.y > 1.0 ||\n        clipPos.z < 0.0 || clipPos.z > 1.0) { return 1.0; }\n    clipPos.xy = cc_cameraPos.w == 1.0 ? vec2(clipPos.xy.x, 1.0 - clipPos.xy.y) : clipPos.xy;\n    float depth = 0.0;\n    if (cc_shadowNFLSInfo.z > 0.000001) {\n      depth = CCGetLinearDepth(worldPos);\n    } else {\n      depth = clipPos.z;\n    }\n    float bias = cc_shadowWHPBInfo.w;\n    vec2 oneTap = 1.0 / cc_shadowWHPBInfo.xy;\n    vec2 clipPos_offset = clipPos.xy + oneTap;\n    float block0, block1, block2, block3;\n    if (cc_shadowLPNNInfo.y > 0.000001) {\n      block0 = step(depth, dot(texture(cc_spotLightingMap, vec2(clipPos.x, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n      block1 = step(depth, dot(texture(cc_spotLightingMap, vec2(clipPos_offset.x, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n      block2 = step(depth, dot(texture(cc_spotLightingMap, vec2(clipPos.x, clipPos_offset.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n      block3 = step(depth, dot(texture(cc_spotLightingMap, vec2(clipPos_offset.x, clipPos_offset.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n    } else {\n      block0 = step(depth, texture(cc_spotLightingMap, vec2(clipPos.x, clipPos.y)).x);\n      block1 = step(depth, texture(cc_spotLightingMap, vec2(clipPos_offset.x, clipPos.y)).x);\n      block2 = step(depth, texture(cc_spotLightingMap, vec2(clipPos.x, clipPos_offset.y)).x);\n      block3 = step(depth, texture(cc_spotLightingMap, vec2(clipPos_offset.x, clipPos_offset.y)).x);\n    }\n    float coefX   = mod(clipPos.x, oneTap.x) * cc_shadowWHPBInfo.x;\n    float resultX = mix(block0, block1, coefX);\n    float resultY = mix(block2, block3, coefX);\n    float coefY   = mod(clipPos.y, oneTap.y) * cc_shadowWHPBInfo.y;\n    return mix(resultX, resultY, coefY);\n  }\n  float CCGetSpotLightShadowFactorSoft2X (vec4 shadowPos, vec3 worldPos) {\n    vec4 clipPosNew = ApplyShadowDepthBias_Perspective(shadowPos, cc_shadowWHPBInfo.w);\n    vec3 clipPos = clipPosNew.xyz / clipPosNew.w * 0.5 + 0.5;\n    if (clipPos.x < 0.0 || clipPos.x > 1.0 ||\n        clipPos.y < 0.0 || clipPos.y > 1.0 ||\n        clipPos.z < 0.0 || clipPos.z > 1.0) { return 1.0; }\n    clipPos.xy = cc_cameraPos.w == 1.0 ? vec2(clipPos.xy.x, 1.0 - clipPos.xy.y) : clipPos.xy;\n    float depth = 0.0;\n    if (cc_shadowNFLSInfo.z > 0.000001) {\n      depth = CCGetLinearDepth(worldPos);\n    } else {\n      depth = clipPos.z;\n    }\n    float bias = cc_shadowWHPBInfo.w;\n    vec2 mapSize = cc_shadowWHPBInfo.xy;\n    vec2 oneTap = 1.0 / mapSize;\n    float clipPos_offset_L = clipPos.x - oneTap.x;\n    float clipPos_offset_R = clipPos.x + oneTap.x;\n    float clipPos_offset_U = clipPos.y - oneTap.y;\n    float clipPos_offset_D = clipPos.y + oneTap.y;\n    float block0, block1, block2, block3, block4, block5, block6, block7, block8;\n    if (cc_shadowLPNNInfo.y > 0.000001) {\n      block0 = step(depth, dot(texture(cc_spotLightingMap, vec2(clipPos_offset_L, clipPos_offset_U)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n      block1 = step(depth, dot(texture(cc_spotLightingMap, vec2(clipPos.x, clipPos_offset_U)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n      block2 = step(depth, dot(texture(cc_spotLightingMap, vec2(clipPos_offset_R, clipPos_offset_U)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n      block3 = step(depth, dot(texture(cc_spotLightingMap, vec2(clipPos_offset_L, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n      block4 = step(depth, dot(texture(cc_spotLightingMap, vec2(clipPos.x, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n      block5 = step(depth, dot(texture(cc_spotLightingMap, vec2(clipPos_offset_R, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n      block6 = step(depth, dot(texture(cc_spotLightingMap, vec2(clipPos_offset_L, clipPos_offset_D)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n      block7 = step(depth, dot(texture(cc_spotLightingMap, vec2(clipPos.x, clipPos_offset_D)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n      block8 = step(depth, dot(texture(cc_spotLightingMap, vec2(clipPos_offset_R, clipPos_offset_D)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n    } else {\n      block0 = step(depth, texture(cc_spotLightingMap, vec2(clipPos_offset_L, clipPos_offset_U)).x);\n      block1 = step(depth, texture(cc_spotLightingMap, vec2(clipPos.x, clipPos_offset_U)).x);\n      block2 = step(depth, texture(cc_spotLightingMap, vec2(clipPos_offset_R, clipPos_offset_U)).x);\n      block3 = step(depth, texture(cc_spotLightingMap, vec2(clipPos_offset_L, clipPos.y)).x);\n      block4 = step(depth, texture(cc_spotLightingMap, vec2(clipPos.x, clipPos.y)).x);\n      block5 = step(depth, texture(cc_spotLightingMap, vec2(clipPos_offset_R, clipPos.y)).x);\n      block6 = step(depth, texture(cc_spotLightingMap, vec2(clipPos_offset_L, clipPos_offset_D)).x);\n      block7 = step(depth, texture(cc_spotLightingMap, vec2(clipPos.x, clipPos_offset_D)).x);\n      block8 = step(depth, texture(cc_spotLightingMap, vec2(clipPos_offset_R, clipPos_offset_D)).x);\n    }\n    float coefX = mod(clipPos.x, oneTap.x) * mapSize.x;\n    float coefY = mod(clipPos.y, oneTap.y) * mapSize.y;\n    float shadow = 0.0;\n    float resultX = mix(block0, block1, coefX);\n    float resultY = mix(block3, block4, coefX);\n    shadow += mix(resultX , resultY, coefY);\n    resultX = mix(block1, block2, coefX);\n    resultY = mix(block4, block5, coefX);\n    shadow += mix(resultX , resultY, coefY);\n    resultX = mix(block3, block4, coefX);\n    resultY = mix(block6, block7, coefX);\n    shadow += mix(resultX, resultY, coefY);\n    resultX = mix(block4, block5, coefX);\n    resultY = mix(block7, block8, coefX);\n    shadow += mix(resultX, resultY, coefY);\n    return shadow * 0.25;\n  }\n#endif\n#if CC_USE_IBL\n  layout(set = 0, binding = 4) uniform samplerCube cc_environment;\n  vec4 fragTextureLod (sampler2D tex, vec2 coord, float lod) {\n      return textureLod(tex, coord, lod);\n  }\n  vec4 fragTextureLod (samplerCube tex, vec3 coord, float lod) {\n      return textureLod(tex, coord, lod);\n  }\n  vec3 unpackRGBE (vec4 rgbe) {\n    return rgbe.rgb * pow(1.1, rgbe.a * 255.0 - 128.0);\n  }\n  #if CC_USE_DIFFUSEMAP\n    layout(set = 0, binding = 6) uniform samplerCube cc_diffuseMap;\n  #endif\n#endif\nfloat GGXMobile (float roughness, float NoH, vec3 H, vec3 N) {\n  vec3 NxH = cross(N, H);\n  float OneMinusNoHSqr = dot(NxH, NxH);\n  float a = roughness * roughness;\n  float n = NoH * a;\n  float p = a / (OneMinusNoHSqr + n * n);\n  return p * p;\n}\nfloat CalcSpecular (float roughness, float NoH, vec3 H, vec3 N) {\n  return (roughness * 0.25 + 0.25) * GGXMobile(roughness, NoH, H, N);\n}\nvec3 BRDFApprox (vec3 specular, float roughness, float NoV) {\n  const vec4 c0 = vec4(-1.0, -0.0275, -0.572, 0.022);\n  const vec4 c1 = vec4(1.0, 0.0425, 1.04, -0.04);\n  vec4 r = roughness * c0 + c1;\n  float a004 = min(r.x * r.x, exp2(-9.28 * NoV)) * r.x + r.y;\n  vec2 AB = vec2(-1.04, 1.04) * a004 + r.zw;\n  AB.y *= clamp(50.0 * specular.g, 0.0, 1.0);\n  return specular * AB.x + AB.y;\n}\n#if USE_REFLECTION_DENOISE\n  vec3 GetEnvReflectionWithMipFiltering(vec3 R, float roughness, float mipCount, float denoiseIntensity) {\n    #if CC_USE_IBL\n    \tfloat mip = roughness * mipCount;\n    \tfloat delta = (dot(dFdx(R), dFdy(R))) * 1000.0;\n    \tfloat mipBias = mix(0.0, 5.0, clamp(delta, 0.0, 1.0));\n    \tvec4 biased = fragTextureLod(cc_environment, R, mip + mipBias);\n     \tvec4 filtered = texture(cc_environment, R);\n      #if CC_USE_IBL == 2\n      \tbiased.rgb = unpackRGBE(biased);\n      \tfiltered.rgb = unpackRGBE(filtered);\n      #else\n      \tbiased.rgb = SRGBToLinear(biased.rgb);\n      \tfiltered.rgb = SRGBToLinear(filtered.rgb);\n      #endif\n      return mix(biased.rgb, filtered.rgb, denoiseIntensity);\n    #else\n      return vec3(0.0, 0.0, 0.0);\n    #endif\n  }\n#endif\nstruct StandardSurface {\n  vec4 albedo;\n  #if CC_PLATFORM_ANDROID_AND_WEBGL && CC_ENABLE_WEBGL_HIGHP_STRUCT_VALUES\n  vec3 position, position_fract_part;\n  #else\n  vec3 position;\n  #endif\n  vec3 normal;\n  vec3 emissive;\n  vec3 lightmap;\n  float lightmap_test;\n  float roughness;\n  float metallic;\n  float occlusion;\n};\nvec4 CCStandardShadingBase (StandardSurface s, vec4 shadowPos) {\n  vec3 diffuse = s.albedo.rgb * (1.0 - s.metallic);\n  vec3 specular = mix(vec3(0.04), s.albedo.rgb, s.metallic);\n  vec3 position;\n  #if CC_PLATFORM_ANDROID_AND_WEBGL && CC_ENABLE_WEBGL_HIGHP_STRUCT_VALUES\n  position = unpackHighpData(s.position, s.position_fract_part);\n  #else\n  position = s.position;\n  #endif\n  vec3 N = normalize(s.normal);\n  vec3 V = normalize(cc_cameraPos.xyz - position);\n  float NV = max(abs(dot(N, V)), 0.0);\n  specular = BRDFApprox(specular, s.roughness, NV);\n  vec3 L = normalize(-cc_mainLitDir.xyz);\n  vec3 H = normalize(L + V);\n  float NH = max(dot(N, H), 0.0);\n  float NL = max(dot(N, L), 0.0);\n  vec3 finalColor = NL * cc_mainLitColor.rgb * cc_mainLitColor.w;\n  vec3 diffuseContrib = diffuse;\n  #if USE_LIGHTMAP && !USE_BATCHING && !CC_FORWARD_ADD\n    if (s.lightmap_test > 0.0001) {\n      finalColor = s.lightmap.rgb;\n    }\n  #else\n    diffuseContrib /= 3.14159265359;\n  #endif\n  vec3 specularContrib = specular * CalcSpecular(s.roughness, NH, H, N);\n  vec3 dirlightContrib = (diffuseContrib + specularContrib);\n  float shadow = 1.0;\n  #if CC_RECEIVE_SHADOW\n    if (NL > 0.0 && cc_mainLitDir.w > 0.0) {\n      {\n        vec4 pos = ApplyShadowDepthBias_FaceNormal(shadowPos, N);\n        float pcf = cc_shadowWHPBInfo.z;\n        if (pcf > 1.9) shadow = CCGetShadowFactorSoft2X(pos);\n        else if (pcf > 0.9) shadow = CCGetShadowFactorSoft(pos);\n        else shadow = CCGetShadowFactorHard(pos);\n        shadow = mix(shadow, 1.0, cc_shadowNFLSInfo.w);\n      }\n    }\n  #endif\n  dirlightContrib *= shadow;\n  finalColor *= dirlightContrib;\n  float fAmb = 0.5 - N.y * 0.5;\n  vec3 ambDiff = mix(cc_ambientSky.rgb, cc_ambientGround.rgb, fAmb);\n  #if CC_USE_IBL\n    #if CC_USE_DIFFUSEMAP\n      vec4 diffuseMap = texture(cc_diffuseMap, N);\n      #if CC_USE_DIFFUSEMAP == 2\n        ambDiff = unpackRGBE(diffuseMap);\n      #else\n        ambDiff = SRGBToLinear(diffuseMap.rgb);\n      #endif\n    #endif\n    vec3 R = normalize(reflect(-V, N));\n    #if USE_REFLECTION_DENOISE\n      vec3 env = GetEnvReflectionWithMipFiltering(R, s.roughness, cc_ambientGround.w, 0.6);\n    #else\n      vec4 envmap = fragTextureLod(cc_environment, R, s.roughness * cc_ambientGround.w);\n      #if CC_USE_IBL == 2\n        vec3 env = unpackRGBE(envmap);\n      #else\n        vec3 env = SRGBToLinear(envmap.rgb);\n      #endif\n    #endif\n    finalColor += env * cc_ambientSky.w * specular * s.occlusion;\n  #endif\n  finalColor += ambDiff.rgb * cc_ambientSky.w * diffuse * s.occlusion;\n  finalColor += s.emissive;\n  return vec4(finalColor, s.albedo.a);\n}\nvec3 ACESToneMap (vec3 color) {\n  color = min(color, vec3(8.0));\n  const float A = 2.51;\n  const float B = 0.03;\n  const float C = 2.43;\n  const float D = 0.59;\n  const float E = 0.14;\n  return (color * (A * color + B)) / (color * (C * color + D) + E);\n}\nvec4 CCFragOutput (vec4 color) {\n  #if CC_USE_HDR\n    color.rgb = ACESToneMap(color.rgb);\n  #endif\n  color.rgb = sqrt(color.rgb);\n  return color;\n}\nlayout(location = 1) in highp vec4 v_shadowPos;\n#if USE_LIGHTMAP && !USE_BATCHING && !CC_FORWARD_ADD\n  layout(location = 9) in vec3 v_luv;\n  layout(set = 2, binding = 10) uniform sampler2D cc_lightingMap;\n  vec3 UnpackLightingmap(vec4 color) {\n    vec3 c;\n    float e = 1.0 + color.a * (8.0 - 1.0);\n    c.r = color.r * e;\n    c.g = color.g * e;\n    c.b = color.b * e;\n    return c;\n  }\n#endif\nlayout(location = 3) in vec3 v_position;\nlayout(location = 5) in vec2 v_uv;\nlayout(location = 6) in vec2 v_uv1;\nlayout(location = 4) in vec3 v_normal;\n#if USE_VERTEX_COLOR\n  layout(location = 2) in vec4 v_color;\n#endif\n#if USE_ALBEDO_MAP\n  layout(set = 1, binding = 1) uniform sampler2D albedoMap;\n#endif\n#if USE_NORMAL_MAP\n  layout(location = 7) in vec3 v_tangent;\n  layout(location = 8) in vec3 v_bitangent;\n  layout(set = 1, binding = 2) uniform sampler2D normalMap;\n#endif\n#if USE_PBR_MAP\n  layout(set = 1, binding = 3) uniform sampler2D pbrMap;\n#endif\n#if USE_METALLIC_ROUGHNESS_MAP\n  layout(set = 1, binding = 4) uniform sampler2D metallicRoughnessMap;\n#endif\n#if USE_OCCLUSION_MAP\n  layout(set = 1, binding = 5) uniform sampler2D occlusionMap;\n#endif\n#if USE_EMISSIVE_MAP\n  layout(set = 1, binding = 6) uniform sampler2D emissiveMap;\n#endif\n#if USE_ALPHA_TEST\n#endif\nvoid surf (out StandardSurface s) {\n  vec4 baseColor = albedo;\n  #if USE_VERTEX_COLOR\n    baseColor.rgb *= SRGBToLinear(v_color.rgb);\n    baseColor.a *= v_color.a;\n  #endif\n  #if USE_ALBEDO_MAP\n    vec4 texColor = texture(albedoMap, ALBEDO_UV);\n    texColor.rgb = SRGBToLinear(texColor.rgb);\n    baseColor *= texColor;\n  #endif\n  s.albedo = baseColor;\n  s.albedo.rgb *= albedoScaleAndCutoff.xyz;\n  #if USE_ALPHA_TEST\n    if (s.albedo.ALPHA_TEST_CHANNEL < albedoScaleAndCutoff.w) discard;\n  #endif\n  #if USE_LIGHTMAP && !USE_BATCHING && !CC_FORWARD_ADD\n    vec4 lightColor = texture(cc_lightingMap, v_luv.xy);\n    s.lightmap = UnpackLightingmap(lightColor);\n    s.lightmap_test = v_luv.z;\n  #endif\n  s.normal = v_normal;\n  #if USE_NORMAL_MAP\n    vec3 nmmp = texture(normalMap, NORMAL_UV).xyz - vec3(0.5);\n    s.normal =\n      (nmmp.x * emissiveScaleParam.w) * normalize(v_tangent) +\n      (nmmp.y * emissiveScaleParam.w) * normalize(v_bitangent) +\n      nmmp.z * normalize(s.normal);\n  #endif\n  #if CC_PLATFORM_ANDROID_AND_WEBGL && CC_ENABLE_WEBGL_HIGHP_STRUCT_VALUES\n  packHighpData(s.position, s.position_fract_part, v_position);\n  #else\n  s.position = v_position;\n  #endif\n  vec4 pbr = pbrParams;\n  #if USE_PBR_MAP\n    vec4 res = texture(pbrMap, PBR_UV);\n    pbr.x *= res.r;\n    pbr.y *= res.g;\n    pbr.z *= res.b;\n    pbr.w *= res.a;\n  #endif\n  #if USE_METALLIC_ROUGHNESS_MAP\n    vec4 metallicRoughness = texture(metallicRoughnessMap, PBR_UV);\n    pbr.z *= metallicRoughness.b;\n    pbr.y *= metallicRoughness.g;\n  #endif\n  #if USE_OCCLUSION_MAP\n    pbr.x *= texture(occlusionMap, PBR_UV).r;\n  #endif\n  s.occlusion = pbr.x;\n  s.roughness = pbr.y;\n  s.metallic = pbr.z;\n  s.emissive = emissive.rgb * emissiveScaleParam.xyz;\n  #if USE_EMISSIVE_MAP\n    s.emissive *= SRGBToLinear(texture(emissiveMap, EMISSIVE_UV).rgb);\n  #endif\n}\n#if CC_FORWARD_ADD\n  #if CC_PIPELINE_TYPE == 0\n  # define LIGHTS_PER_PASS 1\n  #else\n  # define LIGHTS_PER_PASS 10\n  #endif\n  #if CC_ENABLE_CLUSTERED_LIGHT_CULLING == 0\n  layout(set = 2, binding = 1) uniform CCForwardLight {\n    highp vec4 cc_lightPos[LIGHTS_PER_PASS];\n    vec4 cc_lightColor[LIGHTS_PER_PASS];\n    vec4 cc_lightSizeRangeAngle[LIGHTS_PER_PASS];\n    vec4 cc_lightDir[LIGHTS_PER_PASS];\n  };\n  #endif\n  float SmoothDistAtt (float distSqr, float invSqrAttRadius) {\n    float factor = distSqr * invSqrAttRadius;\n    float smoothFactor = clamp(1.0 - factor * factor, 0.0, 1.0);\n    return smoothFactor * smoothFactor;\n  }\n  float GetDistAtt (float distSqr, float invSqrAttRadius) {\n    float attenuation = 1.0 / max(distSqr, 0.01*0.01);\n    attenuation *= SmoothDistAtt(distSqr , invSqrAttRadius);\n    return attenuation;\n  }\n  float GetAngleAtt (vec3 L, vec3 litDir, float litAngleScale, float litAngleOffset) {\n    float cd = dot(litDir, L);\n    float attenuation = clamp(cd * litAngleScale + litAngleOffset, 0.0, 1.0);\n    return (attenuation * attenuation);\n  }\n  #if CC_ENABLE_CLUSTERED_LIGHT_CULLING == 0\n  vec4 CCStandardShadingAdditive (StandardSurface s, vec4 shadowPos) {\n    vec3 position;\n    #if CC_PLATFORM_ANDROID_AND_WEBGL && CC_ENABLE_WEBGL_HIGHP_STRUCT_VALUES\n    position = unpackHighpData(s.position, s.position_fract_part);\n    #else\n    position = s.position;\n    #endif\n    vec3 diffuse = s.albedo.rgb * (1.0 - s.metallic);\n    vec3 specular = mix(vec3(0.04), s.albedo.rgb, s.metallic);\n    vec3 diffuseContrib = diffuse / 3.14159265359;\n    vec3 N = normalize(s.normal);\n    vec3 V = normalize(cc_cameraPos.xyz - position);\n    float NV = max(abs(dot(N, V)), 0.0);\n    specular = BRDFApprox(specular, s.roughness, NV);\n    vec3 finalColor = vec3(0.0);\n    int numLights = CC_PIPELINE_TYPE == 0 ? LIGHTS_PER_PASS : int(cc_lightDir[0].w);\n    for (int i = 0; i < LIGHTS_PER_PASS; i++) {\n      if (i >= numLights) break;\n      vec3 SLU = cc_lightPos[i].xyz - position;\n      vec3 SL = normalize(SLU);\n      vec3 SH = normalize(SL + V);\n      float SNL = max(dot(N, SL), 0.0);\n      float SNH = max(dot(N, SH), 0.0);\n      float distSqr = dot(SLU, SLU);\n      float litRadius = cc_lightSizeRangeAngle[i].x;\n      float litRadiusSqr = litRadius * litRadius;\n      float illum = 3.14159265359 * (litRadiusSqr / max(litRadiusSqr , distSqr));\n      float attRadiusSqrInv = 1.0 / max(cc_lightSizeRangeAngle[i].y, 0.01);\n      attRadiusSqrInv *= attRadiusSqrInv;\n      float att = GetDistAtt(distSqr, attRadiusSqrInv);\n      vec3 lspec = specular * CalcSpecular(s.roughness, SNH, SH, N);\n      if (cc_lightPos[i].w > 0.0) {\n        float cosInner = max(dot(-cc_lightDir[i].xyz, SL), 0.01);\n        float cosOuter = cc_lightSizeRangeAngle[i].z;\n        float litAngleScale = 1.0 / max(0.001, cosInner - cosOuter);\n        float litAngleOffset = -cosOuter * litAngleScale;\n        att *= GetAngleAtt(SL, -cc_lightDir[i].xyz, litAngleScale, litAngleOffset);\n      }\n      vec3 lightColor = cc_lightColor[i].rgb;\n      float shadow = 1.0;\n      #if CC_RECEIVE_SHADOW\n        if (cc_lightPos[i].w > 0.0 && cc_lightSizeRangeAngle[i].w > 0.0) {\n          {\n            float pcf = cc_shadowWHPBInfo.z;\n            if (pcf > 1.9) shadow = CCGetSpotLightShadowFactorSoft2X(shadowPos, position);\n            else if (pcf > 0.9) shadow = CCGetSpotLightShadowFactorSoft(shadowPos, position);\n            else shadow = CCGetSpotLightShadowFactorHard(shadowPos, position);\n          }\n        }\n      #endif\n      lightColor *= shadow;\n      finalColor += SNL * lightColor * cc_lightColor[i].w * illum * att * (diffuseContrib + lspec);\n    }\n    return vec4(finalColor, 0.0);\n  }\n  #endif\n  #if CC_ENABLE_CLUSTERED_LIGHT_CULLING == 1\n  layout(set = 1, binding = 7) readonly buffer b_ccLightsBuffer { vec4 b_ccLights[]; };\n  layout(set = 1, binding = 8) readonly buffer b_clusterLightIndicesBuffer { uint b_clusterLightIndices[]; };\n  layout(set = 1, binding = 9) readonly buffer b_clusterLightGridBuffer { uvec4 b_clusterLightGrid[]; };\n  struct CCLight\n  {\n    vec4 cc_lightPos;\n    vec4 cc_lightColor;\n    vec4 cc_lightSizeRangeAngle;\n    vec4 cc_lightDir;\n  };\n  struct Cluster\n  {\n    vec3 minBounds;\n    vec3 maxBounds;\n  };\n  struct LightGrid\n  {\n    uint offset;\n    uint ccLights;\n  };\n  CCLight getCCLight(uint i)\n  {\n    CCLight light;\n    light.cc_lightPos = b_ccLights[4u * i + 0u];\n    light.cc_lightColor = b_ccLights[4u * i + 1u];\n    light.cc_lightSizeRangeAngle = b_ccLights[4u * i + 2u];\n    light.cc_lightDir = b_ccLights[4u * i + 3u];\n    return light;\n  }\n  LightGrid getLightGrid(uint cluster)\n  {\n    uvec4 gridvec = b_clusterLightGrid[cluster];\n    LightGrid grid;\n    grid.offset = gridvec.x;\n    grid.ccLights = gridvec.y;\n    return grid;\n  }\n  uint getGridLightIndex(uint start, uint offset)\n  {\n    return b_clusterLightIndices[start + offset];\n  }\n  uint getClusterZIndex(vec4 worldPos)\n  {\n    float scale = float(24) / log(cc_nearFar.y / cc_nearFar.x);\n    float bias = -(float(24) * log(cc_nearFar.x) / log(cc_nearFar.y / cc_nearFar.x));\n    float eyeDepth = -(cc_matView * worldPos).z;\n    uint zIndex = uint(max(log(eyeDepth) * scale + bias, 0.0));\n    return zIndex;\n  }\n  uint getClusterIndex(vec4 fragCoord, vec4 worldPos)\n  {\n    uint zIndex = getClusterZIndex(worldPos);\n    float clusterSizeX = ceil(cc_viewPort.z / float(16));\n    float clusterSizeY = ceil(cc_viewPort.w / float(8));\n    uvec3 indices = uvec3(uvec2(fragCoord.xy / vec2(clusterSizeX, clusterSizeY)), zIndex);\n    uint cluster = (16u * 8u) * indices.z + 16u * indices.y + indices.x;\n    return cluster;\n  }\n  vec4 CCClusterShadingAdditive (StandardSurface s, vec4 shadowPos) {\n    vec3 diffuse = s.albedo.rgb * (1.0 - s.metallic);\n    vec3 specular = mix(vec3(0.04), s.albedo.rgb, s.metallic);\n    vec3 diffuseContrib = diffuse / 3.14159265359;\n    vec3 position;\n    #if CC_PLATFORM_ANDROID_AND_WEBGL && CC_ENABLE_WEBGL_HIGHP_STRUCT_VALUES\n    position = unpackHighpData(s.position, s.position_fract_part);\n    #else\n    position = s.position;\n    #endif\n    vec3 N = normalize(s.normal);\n    vec3 V = normalize(cc_cameraPos.xyz - position);\n    float NV = max(abs(dot(N, V)), 0.001);\n    specular = BRDFApprox(specular, s.roughness, NV);\n    vec3 finalColor = vec3(0.0);\n    uint cluster = getClusterIndex(gl_FragCoord, vec4(position, 1.0));\n    LightGrid grid = getLightGrid(cluster);\n    uint numLights = grid.ccLights;\n    for (uint i = 0u; i < 100u; i++) {\n      if (i >= numLights) break;\n      uint lightIndex = getGridLightIndex(grid.offset, i);\n      CCLight light = getCCLight(lightIndex);\n      vec3 SLU = light.cc_lightPos.xyz - position;\n      vec3 SL = normalize(SLU);\n      vec3 SH = normalize(SL + V);\n      float SNL = max(dot(N, SL), 0.001);\n      float SNH = max(dot(N, SH), 0.0);\n      float distSqr = dot(SLU, SLU);\n      float litRadius = light.cc_lightSizeRangeAngle.x;\n      float litRadiusSqr = litRadius * litRadius;\n      float illum = 3.14159265359 * (litRadiusSqr / max(litRadiusSqr , distSqr));\n      float attRadiusSqrInv = 1.0 / max(light.cc_lightSizeRangeAngle.y, 0.01);\n      attRadiusSqrInv *= attRadiusSqrInv;\n      float att = GetDistAtt(distSqr, attRadiusSqrInv);\n      vec3 lspec = specular * CalcSpecular(s.roughness, SNH, SH, N);\n      if (light.cc_lightPos.w > 0.0) {\n        float cosInner = max(dot(-light.cc_lightDir.xyz, SL), 0.01);\n        float cosOuter = light.cc_lightSizeRangeAngle.z;\n        float litAngleScale = 1.0 / max(0.001, cosInner - cosOuter);\n        float litAngleOffset = -cosOuter * litAngleScale;\n        att *= GetAngleAtt(SL, -light.cc_lightDir.xyz, litAngleScale, litAngleOffset);\n      }\n      vec3 lightColor = light.cc_lightColor.rgb;\n      float shadow = 1.0;\n      #if CC_RECEIVE_SHADOW\n        if (light.cc_lightPos.w > 0.0) {\n          {\n            float pcf = cc_shadowWHPBInfo.z;\n            if (pcf > 1.9) shadow = CCGetSpotLightShadowFactorSoft2X(shadowPos, position);\n            else if (pcf > 0.9) shadow = CCGetSpotLightShadowFactorSoft(shadowPos, position);\n            else shadow = CCGetSpotLightShadowFactorHard(shadowPos, position);\n          }\n        }\n      #endif\n      lightColor *= shadow;\n      finalColor += SNL * lightColor * light.cc_lightColor.w * illum * att * (diffuseContrib + lspec);\n    }\n    return vec4(finalColor, 0.0);\n  }\n  #endif\n  layout(location = 0) out vec4 fragColorX;\n  void main () {\n    StandardSurface s; surf(s);\n    #if CC_ENABLE_CLUSTERED_LIGHT_CULLING == 1\n    vec4 color = CCClusterShadingAdditive(s, v_shadowPos);\n    #else\n    vec4 color = CCStandardShadingAdditive(s, v_shadowPos);\n    #endif\n    CC_APPLY_FOG(color, s.position.xyz);\n    fragColorX = CCFragOutput(color);\n  }\n#elif (CC_PIPELINE_TYPE == 0 || CC_FORCE_FORWARD_SHADING)\n  layout(location = 0) out vec4 fragColorX;\n  void main () {\n    StandardSurface s; surf(s);\n    vec4 color = CCStandardShadingBase(s, v_shadowPos);\n    CC_APPLY_FOG(color, s.position.xyz);\n    fragColorX = CCFragOutput(color);\n  }\n#elif CC_PIPELINE_TYPE == 1\n  vec2 signNotZero(vec2 v) {\n    return vec2((v.x >= 0.0) ? +1.0 : -1.0, (v.y >= 0.0) ? +1.0 : -1.0);\n  }\n  vec2 float32x3_to_oct(in vec3 v) {\n    vec2 p = v.xy * (1.0 / (abs(v.x) + abs(v.y) + abs(v.z)));\n    return (v.z <= 0.0) ? ((1.0 - abs(p.yx)) * signNotZero(p)) : p;\n  }\n  layout(location = 0) out vec4 fragColor0;\n  layout(location = 1) out vec4 fragColor1;\n  layout(location = 2) out vec4 fragColor2;\n  void main () {\n    StandardSurface s; surf(s);\n    fragColor0 = s.albedo;\n    fragColor1 = vec4(float32x3_to_oct(s.normal), s.roughness, s.metallic);\n    fragColor2 = vec4(s.emissive, s.occlusion);\n  }\n#endif"},"glsl3":{"vert":"\nprecision highp float;\nhighp float decode32 (highp vec4 rgba) {\n  rgba = rgba * 255.0;\n  highp float Sign = 1.0 - (step(128.0, (rgba[3]) + 0.5)) * 2.0;\n  highp float Exponent = 2.0 * (mod(float(int((rgba[3]) + 0.5)), 128.0)) + (step(128.0, (rgba[2]) + 0.5)) - 127.0;\n  highp float Mantissa = (mod(float(int((rgba[2]) + 0.5)), 128.0)) * 65536.0 + rgba[1] * 256.0 + rgba[0] + 8388608.0;\n  return Sign * exp2(Exponent - 23.0) * Mantissa;\n}\nstruct StandardVertInput {\n  highp vec4 position;\n  vec3 normal;\n  vec4 tangent;\n};\nin vec3 a_position;\nin vec3 a_normal;\nin vec2 a_texCoord;\nin vec4 a_tangent;\n#if CC_USE_MORPH\n    in float a_vertexId;\n    int getVertexId() {\n      return int(a_vertexId);\n    }\n  layout(std140) uniform CCMorph {\n    vec4 cc_displacementWeights[15];\n    vec4 cc_displacementTextureInfo;\n  };\n  vec2 getPixelLocation(vec2 textureResolution, int pixelIndex) {\n    float pixelIndexF = float(pixelIndex);\n    float x = mod(pixelIndexF, textureResolution.x);\n    float y = floor(pixelIndexF / textureResolution.x);\n    return vec2(x, y);\n  }\n  vec2 getPixelCoordFromLocation(vec2 location, vec2 textureResolution) {\n    return (vec2(location.x, location.y) + .5) / textureResolution;\n  }\n  #if CC_DEVICE_SUPPORT_FLOAT_TEXTURE\n      vec4 fetchVec3ArrayFromTexture(sampler2D tex, int pixelIndex) {\n        ivec2 texSize = textureSize(tex, 0);\n        return texelFetch(tex, ivec2(pixelIndex % texSize.x, pixelIndex / texSize.x), 0);\n      }\n  #else\n    vec4 fetchVec3ArrayFromTexture(sampler2D tex, int elementIndex) {\n      int pixelIndex = elementIndex * 4;\n      vec2 location = getPixelLocation(cc_displacementTextureInfo.xy, pixelIndex);\n      vec2 x = getPixelCoordFromLocation(location + vec2(0.0, 0.0), cc_displacementTextureInfo.xy);\n      vec2 y = getPixelCoordFromLocation(location + vec2(1.0, 0.0), cc_displacementTextureInfo.xy);\n      vec2 z = getPixelCoordFromLocation(location + vec2(2.0, 0.0), cc_displacementTextureInfo.xy);\n      return vec4(\n        decode32(texture(tex, x)),\n        decode32(texture(tex, y)),\n        decode32(texture(tex, z)),\n        1.0\n      );\n    }\n  #endif\n  float getDisplacementWeight(int index) {\n    int quot = index / 4;\n    int remainder = index - quot * 4;\n    if (remainder == 0) {\n      return cc_displacementWeights[quot].x;\n    } else if (remainder == 1) {\n      return cc_displacementWeights[quot].y;\n    } else if (remainder == 2) {\n      return cc_displacementWeights[quot].z;\n    } else {\n      return cc_displacementWeights[quot].w;\n    }\n  }\n  vec3 getVec3DisplacementFromTexture(sampler2D tex, int vertexIndex) {\n  #if CC_MORPH_PRECOMPUTED\n    return fetchVec3ArrayFromTexture(tex, vertexIndex).rgb;\n  #else\n    vec3 result = vec3(0, 0, 0);\n    int nVertices = int(cc_displacementTextureInfo.z);\n    for (int iTarget = 0; iTarget < CC_MORPH_TARGET_COUNT; ++iTarget) {\n      result += (fetchVec3ArrayFromTexture(tex, nVertices * iTarget + vertexIndex).rgb * getDisplacementWeight(iTarget));\n    }\n    return result;\n  #endif\n  }\n  #if CC_MORPH_TARGET_HAS_POSITION\n    uniform sampler2D cc_PositionDisplacements;\n    vec3 getPositionDisplacement(int vertexId) {\n      return getVec3DisplacementFromTexture(cc_PositionDisplacements, vertexId);\n    }\n  #endif\n  #if CC_MORPH_TARGET_HAS_NORMAL\n    uniform sampler2D cc_NormalDisplacements;\n    vec3 getNormalDisplacement(int vertexId) {\n      return getVec3DisplacementFromTexture(cc_NormalDisplacements, vertexId);\n    }\n  #endif\n  #if CC_MORPH_TARGET_HAS_TANGENT\n    uniform sampler2D cc_TangentDisplacements;\n    vec3 getTangentDisplacement(int vertexId) {\n      return getVec3DisplacementFromTexture(cc_TangentDisplacements, vertexId);\n    }\n  #endif\n  void applyMorph (inout StandardVertInput attr) {\n    int vertexId = getVertexId();\n  #if CC_MORPH_TARGET_HAS_POSITION\n    attr.position.xyz = attr.position.xyz + getPositionDisplacement(vertexId);\n  #endif\n  #if CC_MORPH_TARGET_HAS_NORMAL\n    attr.normal.xyz = attr.normal.xyz + getNormalDisplacement(vertexId);\n  #endif\n  #if CC_MORPH_TARGET_HAS_TANGENT\n    attr.tangent.xyz = attr.tangent.xyz + getTangentDisplacement(vertexId);\n  #endif\n  }\n  void applyMorph (inout vec4 position) {\n  #if CC_MORPH_TARGET_HAS_POSITION\n    position.xyz = position.xyz + getPositionDisplacement(getVertexId());\n  #endif\n  }\n#endif\n#if CC_USE_SKINNING\n    in vec4 a_joints;\n  in vec4 a_weights;\n  #if CC_USE_BAKED_ANIMATION\n    #if USE_INSTANCING\n      in highp vec4 a_jointAnimInfo;\n    #endif\n    layout(std140) uniform CCSkinningTexture {\n      highp vec4 cc_jointTextureInfo;\n    };\n    layout(std140) uniform CCSkinningAnimation {\n      highp vec4 cc_jointAnimInfo;\n    };\n    uniform highp sampler2D cc_jointTexture;\n      #else\n    layout(std140) uniform CCSkinning {\n      highp vec4 cc_joints[30 * 3];\n    };\n  #endif\n  #if CC_USE_BAKED_ANIMATION\n    #if CC_DEVICE_SUPPORT_FLOAT_TEXTURE\n      mat4 getJointMatrix (float i) {\n              #if USE_INSTANCING\n                highp float j = 3.0 * (a_jointAnimInfo.x * a_jointAnimInfo.y + i) + a_jointAnimInfo.z;\n              #else\n                highp float j = 3.0 * (cc_jointAnimInfo.x * cc_jointTextureInfo.y + i) + cc_jointTextureInfo.z;\n              #endif\n              highp float invSize = cc_jointTextureInfo.w;\n              highp float y = floor(j * invSize);\n              highp float x = floor(j - y * cc_jointTextureInfo.x);\n              y = (y + 0.5) * invSize;\n        vec4 v1 = texture(cc_jointTexture, vec2((x + 0.5) * invSize, y));\n        vec4 v2 = texture(cc_jointTexture, vec2((x + 1.5) * invSize, y));\n        vec4 v3 = texture(cc_jointTexture, vec2((x + 2.5) * invSize, y));\n        return mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n      }\n    #else\n      mat4 getJointMatrix (float i) {\n              #if USE_INSTANCING\n                highp float j = 12.0 * (a_jointAnimInfo.x * a_jointAnimInfo.y + i) + a_jointAnimInfo.z;\n              #else\n                highp float j = 12.0 * (cc_jointAnimInfo.x * cc_jointTextureInfo.y + i) + cc_jointTextureInfo.z;\n              #endif\n              highp float invSize = cc_jointTextureInfo.w;\n              highp float y = floor(j * invSize);\n              highp float x = floor(j - y * cc_jointTextureInfo.x);\n              y = (y + 0.5) * invSize;\n        vec4 v1 = vec4(\n          decode32(texture(cc_jointTexture, vec2((x + 0.5) * invSize, y))),\n          decode32(texture(cc_jointTexture, vec2((x + 1.5) * invSize, y))),\n          decode32(texture(cc_jointTexture, vec2((x + 2.5) * invSize, y))),\n          decode32(texture(cc_jointTexture, vec2((x + 3.5) * invSize, y)))\n        );\n        vec4 v2 = vec4(\n          decode32(texture(cc_jointTexture, vec2((x + 4.5) * invSize, y))),\n          decode32(texture(cc_jointTexture, vec2((x + 5.5) * invSize, y))),\n          decode32(texture(cc_jointTexture, vec2((x + 6.5) * invSize, y))),\n          decode32(texture(cc_jointTexture, vec2((x + 7.5) * invSize, y)))\n        );\n        vec4 v3 = vec4(\n          decode32(texture(cc_jointTexture, vec2((x + 8.5) * invSize, y))),\n          decode32(texture(cc_jointTexture, vec2((x + 9.5) * invSize, y))),\n          decode32(texture(cc_jointTexture, vec2((x + 10.5) * invSize, y))),\n          decode32(texture(cc_jointTexture, vec2((x + 11.5) * invSize, y)))\n        );\n        return mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n      }\n    #endif\n  #else\n    mat4 getJointMatrix (float i) {\n      int idx = int(i);\n      vec4 v1 = cc_joints[idx * 3];\n      vec4 v2 = cc_joints[idx * 3 + 1];\n      vec4 v3 = cc_joints[idx * 3 + 2];\n      return mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n    }\n  #endif\n  mat4 skinMatrix () {\n    vec4 joints = vec4(a_joints);\n    return getJointMatrix(joints.x) * a_weights.x\n         + getJointMatrix(joints.y) * a_weights.y\n         + getJointMatrix(joints.z) * a_weights.z\n         + getJointMatrix(joints.w) * a_weights.w;\n  }\n  void CCSkin (inout vec4 position) {\n    mat4 m = skinMatrix();\n    position = m * position;\n  }\n  void CCSkin (inout StandardVertInput attr) {\n    mat4 m = skinMatrix();\n    attr.position = m * attr.position;\n    attr.normal = (m * vec4(attr.normal, 0.0)).xyz;\n    attr.tangent.xyz = (m * vec4(attr.tangent.xyz, 0.0)).xyz;\n  }\n#endif\nlayout(std140) uniform CCGlobal {\n  highp   vec4 cc_time;\n  mediump vec4 cc_screenSize;\n  mediump vec4 cc_nativeSize;\n};\nlayout(std140) uniform CCCamera {\n  highp   mat4 cc_matView;\n  highp   mat4 cc_matViewInv;\n  highp   mat4 cc_matProj;\n  highp   mat4 cc_matProjInv;\n  highp   mat4 cc_matViewProj;\n  highp   mat4 cc_matViewProjInv;\n  highp   vec4 cc_cameraPos;\n  mediump vec4 cc_screenScale;\n  mediump vec4 cc_exposure;\n  mediump vec4 cc_mainLitDir;\n  mediump vec4 cc_mainLitColor;\n  mediump vec4 cc_ambientSky;\n  mediump vec4 cc_ambientGround;\n  mediump vec4 cc_fogColor;\n  mediump vec4 cc_fogBase;\n  mediump vec4 cc_fogAdd;\n  mediump vec4 cc_nearFar;\n  mediump vec4 cc_viewPort;\n};\n#if USE_INSTANCING\n  in vec4 a_matWorld0;\n  in vec4 a_matWorld1;\n  in vec4 a_matWorld2;\n  #if USE_LIGHTMAP\n    in vec4 a_lightingMapUVParam;\n  #endif\n#elif USE_BATCHING\n  in float a_dyn_batch_id;\n  layout(std140) uniform CCLocalBatched {\n    highp mat4 cc_matWorlds[10];\n  };\n#else\n  layout(std140) uniform CCLocal {\n    highp mat4 cc_matWorld;\n    highp mat4 cc_matWorldIT;\n    highp vec4 cc_lightingMapUVParam;\n  };\n#endif\nlayout(std140) uniform Constants {\n  vec4 tilingOffset;\n  vec4 albedo;\n  vec4 albedoScaleAndCutoff;\n  vec4 pbrParams;\n  vec4 emissive;\n  vec4 emissiveScaleParam;\n};\nfloat LinearFog(vec4 pos) {\n  vec4 wPos = pos;\n  float cam_dis = distance(cc_cameraPos, wPos);\n  float fogStart = cc_fogBase.x;\n  float fogEnd = cc_fogBase.y;\n  return clamp((fogEnd - cam_dis) / (fogEnd - fogStart), 0., 1.);\n}\nfloat ExpFog(vec4 pos) {\n  vec4 wPos = pos;\n  float fogAtten = cc_fogAdd.z;\n  float fogStart = cc_fogBase.x;\n  float fogDensity = cc_fogBase.z;\n  float cam_dis = max(distance(cc_cameraPos, wPos) - fogStart, 0.0) / fogAtten * 4.;\n  float f = exp(-cam_dis * fogDensity);\n  return f;\n}\nfloat ExpSquaredFog(vec4 pos) {\n  vec4 wPos = pos;\n  float fogAtten = cc_fogAdd.z;\n  float fogStart = cc_fogBase.x;\n  float fogDensity = cc_fogBase.z;\n  float cam_dis = max(distance(cc_cameraPos, wPos) - fogStart, 0.0) / fogAtten * 4.;\n  float f = exp(-cam_dis * cam_dis * fogDensity * fogDensity);\n  return f;\n}\nfloat LayeredFog(vec4 pos) {\n  vec4 wPos = pos;\n  float fogAtten = cc_fogAdd.z;\n  float _FogTop = cc_fogAdd.x;\n  float _FogRange = cc_fogAdd.y;\n  vec3 camWorldProj = cc_cameraPos.xyz;\n  camWorldProj.y = 0.;\n  vec3 worldPosProj = wPos.xyz;\n  worldPosProj.y = 0.;\n  float fDeltaD = distance(worldPosProj, camWorldProj) / fogAtten * 2.0;\n  float fDeltaY, fDensityIntegral;\n  if (cc_cameraPos.y > _FogTop) {\n    if (wPos.y < _FogTop) {\n      fDeltaY = (_FogTop - wPos.y) / _FogRange * 2.0;\n      fDensityIntegral = fDeltaY * fDeltaY * 0.5;\n    } else {\n      fDeltaY = 0.;\n      fDensityIntegral = 0.;\n    }\n  } else {\n    if (wPos.y < _FogTop) {\n      float fDeltaA = (_FogTop - cc_cameraPos.y) / _FogRange * 2.;\n      float fDeltaB = (_FogTop - wPos.y) / _FogRange * 2.;\n      fDeltaY = abs(fDeltaA - fDeltaB);\n      fDensityIntegral = abs((fDeltaA * fDeltaA * 0.5) - (fDeltaB * fDeltaB * 0.5));\n    } else {\n      fDeltaY = abs(_FogTop - cc_cameraPos.y) / _FogRange * 2.;\n      fDensityIntegral = abs(fDeltaY * fDeltaY * 0.5);\n    }\n  }\n  float fDensity;\n  if (fDeltaY != 0.) {\n    fDensity = (sqrt(1.0 + ((fDeltaD / fDeltaY) * (fDeltaD / fDeltaY)))) * fDensityIntegral;\n  } else {\n    fDensity = 0.;\n  }\n  float f = exp(-fDensity);\n  return f;\n}\nvoid CC_TRANSFER_FOG_BASE(vec4 pos, out float factor)\n{\n  #if CC_USE_FOG == 0\n\tfactor = LinearFog(pos);\n  #elif CC_USE_FOG == 1\n    factor = ExpFog(pos);\n  #elif CC_USE_FOG == 2\n    factor = ExpSquaredFog(pos);\n  #elif CC_USE_FOG == 3\n    factor = LayeredFog(pos);\n  #else\n    factor = 1.0;\n  #endif\n}\n#if !CC_USE_ACCURATE_FOG\nout float v_fog_factor;\n#endif\nvoid CC_TRANSFER_FOG(vec4 pos) {\n#if !CC_USE_ACCURATE_FOG\n    CC_TRANSFER_FOG_BASE(pos, v_fog_factor);\n#endif\n}\nout highp vec4 v_shadowPos;\nlayout(std140) uniform CCShadow {\n  highp mat4 cc_matLightPlaneProj;\n  highp mat4 cc_matLightView;\n  highp mat4 cc_matLightViewProj;\n  highp vec4 cc_shadowInvProjDepthInfo;\n  highp vec4 cc_shadowProjDepthInfo;\n  highp vec4 cc_shadowProjInfo;\n  mediump vec4 cc_shadowNFLSInfo;\n  mediump vec4 cc_shadowWHPBInfo;\n  mediump vec4 cc_shadowLPNNInfo;\n  lowp vec4 cc_shadowColor;\n  mediump vec4 cc_planarNDInfo;\n};\n#if CC_RECEIVE_SHADOW\n  uniform highp sampler2D cc_shadowMap;\n  uniform highp sampler2D cc_spotLightingMap;\n#endif\n#if USE_VERTEX_COLOR\n  in vec4 a_color;\n  out vec4 v_color;\n#endif\nout vec3 v_position;\nout vec3 v_normal;\nout vec2 v_uv;\nout vec2 v_uv1;\n#if USE_NORMAL_MAP\n  out vec3 v_tangent;\n  out vec3 v_bitangent;\n#endif\n#if HAS_SECOND_UV || USE_LIGHTMAP\n  in vec2 a_texCoord1;\n#endif\n#if USE_LIGHTMAP && !USE_BATCHING && !CC_FORWARD_ADD\n  out vec3 v_luv;\n  void CCLightingMapCaclUV()\n  {\n  #if !USE_INSTANCING\n    v_luv.xy = cc_lightingMapUVParam.xy + a_texCoord1 * cc_lightingMapUVParam.zw;\n    v_luv.z = cc_lightingMapUVParam.z;\n  #else\n    v_luv.xy = a_lightingMapUVParam.xy + a_texCoord1 * a_lightingMapUVParam.zw;\n    v_luv.z = a_lightingMapUVParam.z;\n  #endif\n  }\n#endif\nvoid main () {\n  StandardVertInput In;\n      In.position = vec4(a_position, 1.0);\n      In.normal = a_normal;\n      In.tangent = a_tangent;\n    #if CC_USE_MORPH\n      applyMorph(In);\n    #endif\n    #if CC_USE_SKINNING\n      CCSkin(In);\n    #endif\n  mat4 matWorld, matWorldIT;\n    #if USE_INSTANCING\n      matWorld = mat4(\n        vec4(a_matWorld0.xyz, 0.0),\n        vec4(a_matWorld1.xyz, 0.0),\n        vec4(a_matWorld2.xyz, 0.0),\n        vec4(a_matWorld0.w, a_matWorld1.w, a_matWorld2.w, 1.0)\n      );\n      matWorldIT = matWorld;\n    #elif USE_BATCHING\n      matWorld = cc_matWorlds[int(a_dyn_batch_id)];\n      matWorldIT = matWorld;\n    #else\n      matWorld = cc_matWorld;\n      matWorldIT = cc_matWorldIT;\n    #endif\n  vec4 pos = matWorld * In.position;\n  v_position = pos.xyz;\n  v_normal = normalize((matWorldIT * vec4(In.normal, 0.0)).xyz);\n  #if USE_TWOSIDE\n    vec3 viewDirect = normalize(cc_cameraPos.xyz - v_position);\n    v_normal *= dot(v_normal, viewDirect) < 0.0 ? -1.0 : 1.0;\n  #endif\n  #if USE_NORMAL_MAP\n    v_tangent = normalize((matWorld * vec4(In.tangent.xyz, 0.0)).xyz);\n    v_bitangent = cross(v_normal, v_tangent) * In.tangent.w;\n  #endif\n  v_uv = a_texCoord * tilingOffset.xy + tilingOffset.zw;\n  #if SAMPLE_FROM_RT\n    v_uv = cc_cameraPos.w > 1.0 ? vec2(v_uv.x, 1.0 - v_uv.y) : v_uv;\n  #endif\n  #if HAS_SECOND_UV\n    v_uv1 = a_texCoord1 * tilingOffset.xy + tilingOffset.zw;\n    #if SAMPLE_FROM_RT\n      v_uv1 = cc_cameraPos.w > 1.0 ? vec2(v_uv1.x, 1.0 - v_uv1.y) : v_uv1;\n    #endif\n  #endif\n  #if USE_VERTEX_COLOR\n    v_color = a_color;\n  #endif\n  CC_TRANSFER_FOG(pos);\n  v_shadowPos = cc_matLightViewProj * pos;\n  #if USE_LIGHTMAP && !USE_BATCHING && !CC_FORWARD_ADD\n    CCLightingMapCaclUV();\n  #endif\n  gl_Position = cc_matProj * (cc_matView * matWorld) * In.position;\n}","frag":"\nprecision highp float;\nlayout(std140) uniform CCGlobal {\n  highp   vec4 cc_time;\n  mediump vec4 cc_screenSize;\n  mediump vec4 cc_nativeSize;\n};\nlayout(std140) uniform CCCamera {\n  highp   mat4 cc_matView;\n  highp   mat4 cc_matViewInv;\n  highp   mat4 cc_matProj;\n  highp   mat4 cc_matProjInv;\n  highp   mat4 cc_matViewProj;\n  highp   mat4 cc_matViewProjInv;\n  highp   vec4 cc_cameraPos;\n  mediump vec4 cc_screenScale;\n  mediump vec4 cc_exposure;\n  mediump vec4 cc_mainLitDir;\n  mediump vec4 cc_mainLitColor;\n  mediump vec4 cc_ambientSky;\n  mediump vec4 cc_ambientGround;\n  mediump vec4 cc_fogColor;\n  mediump vec4 cc_fogBase;\n  mediump vec4 cc_fogAdd;\n  mediump vec4 cc_nearFar;\n  mediump vec4 cc_viewPort;\n};\nlayout(std140) uniform Constants {\n  vec4 tilingOffset;\n  vec4 albedo;\n  vec4 albedoScaleAndCutoff;\n  vec4 pbrParams;\n  vec4 emissive;\n  vec4 emissiveScaleParam;\n};\nfloat LinearFog(vec4 pos) {\n  vec4 wPos = pos;\n  float cam_dis = distance(cc_cameraPos, wPos);\n  float fogStart = cc_fogBase.x;\n  float fogEnd = cc_fogBase.y;\n  return clamp((fogEnd - cam_dis) / (fogEnd - fogStart), 0., 1.);\n}\nfloat ExpFog(vec4 pos) {\n  vec4 wPos = pos;\n  float fogAtten = cc_fogAdd.z;\n  float fogStart = cc_fogBase.x;\n  float fogDensity = cc_fogBase.z;\n  float cam_dis = max(distance(cc_cameraPos, wPos) - fogStart, 0.0) / fogAtten * 4.;\n  float f = exp(-cam_dis * fogDensity);\n  return f;\n}\nfloat ExpSquaredFog(vec4 pos) {\n  vec4 wPos = pos;\n  float fogAtten = cc_fogAdd.z;\n  float fogStart = cc_fogBase.x;\n  float fogDensity = cc_fogBase.z;\n  float cam_dis = max(distance(cc_cameraPos, wPos) - fogStart, 0.0) / fogAtten * 4.;\n  float f = exp(-cam_dis * cam_dis * fogDensity * fogDensity);\n  return f;\n}\nfloat LayeredFog(vec4 pos) {\n  vec4 wPos = pos;\n  float fogAtten = cc_fogAdd.z;\n  float _FogTop = cc_fogAdd.x;\n  float _FogRange = cc_fogAdd.y;\n  vec3 camWorldProj = cc_cameraPos.xyz;\n  camWorldProj.y = 0.;\n  vec3 worldPosProj = wPos.xyz;\n  worldPosProj.y = 0.;\n  float fDeltaD = distance(worldPosProj, camWorldProj) / fogAtten * 2.0;\n  float fDeltaY, fDensityIntegral;\n  if (cc_cameraPos.y > _FogTop) {\n    if (wPos.y < _FogTop) {\n      fDeltaY = (_FogTop - wPos.y) / _FogRange * 2.0;\n      fDensityIntegral = fDeltaY * fDeltaY * 0.5;\n    } else {\n      fDeltaY = 0.;\n      fDensityIntegral = 0.;\n    }\n  } else {\n    if (wPos.y < _FogTop) {\n      float fDeltaA = (_FogTop - cc_cameraPos.y) / _FogRange * 2.;\n      float fDeltaB = (_FogTop - wPos.y) / _FogRange * 2.;\n      fDeltaY = abs(fDeltaA - fDeltaB);\n      fDensityIntegral = abs((fDeltaA * fDeltaA * 0.5) - (fDeltaB * fDeltaB * 0.5));\n    } else {\n      fDeltaY = abs(_FogTop - cc_cameraPos.y) / _FogRange * 2.;\n      fDensityIntegral = abs(fDeltaY * fDeltaY * 0.5);\n    }\n  }\n  float fDensity;\n  if (fDeltaY != 0.) {\n    fDensity = (sqrt(1.0 + ((fDeltaD / fDeltaY) * (fDeltaD / fDeltaY)))) * fDensityIntegral;\n  } else {\n    fDensity = 0.;\n  }\n  float f = exp(-fDensity);\n  return f;\n}\nvoid CC_TRANSFER_FOG_BASE(vec4 pos, out float factor)\n{\n  #if CC_USE_FOG == 0\n\tfactor = LinearFog(pos);\n  #elif CC_USE_FOG == 1\n    factor = ExpFog(pos);\n  #elif CC_USE_FOG == 2\n    factor = ExpSquaredFog(pos);\n  #elif CC_USE_FOG == 3\n    factor = LayeredFog(pos);\n  #else\n    factor = 1.0;\n  #endif\n}\nvoid CC_APPLY_FOG_BASE(inout vec4 color, float factor) {\n  color = vec4(mix(cc_fogColor.rgb, color.rgb, factor), color.a);\n}\n#if !CC_USE_ACCURATE_FOG\nin float v_fog_factor;\n#endif\nvoid CC_APPLY_FOG(inout vec4 color) {\n#if !CC_USE_ACCURATE_FOG\n    CC_APPLY_FOG_BASE(color, v_fog_factor);\n#endif\n}\nvoid CC_APPLY_FOG(inout vec4 color, vec3 worldPos) {\n#if CC_USE_ACCURATE_FOG\n    float factor;\n    CC_TRANSFER_FOG_BASE(vec4(worldPos, 1.0), factor);\n#else\n    float factor = v_fog_factor;\n#endif\n    CC_APPLY_FOG_BASE(color, factor);\n}\nvec3 SRGBToLinear (vec3 gamma) {\n  return gamma * gamma;\n}\nlayout(std140) uniform CCShadow {\n  highp mat4 cc_matLightPlaneProj;\n  highp mat4 cc_matLightView;\n  highp mat4 cc_matLightViewProj;\n  highp vec4 cc_shadowInvProjDepthInfo;\n  highp vec4 cc_shadowProjDepthInfo;\n  highp vec4 cc_shadowProjInfo;\n  mediump vec4 cc_shadowNFLSInfo;\n  mediump vec4 cc_shadowWHPBInfo;\n  mediump vec4 cc_shadowLPNNInfo;\n  lowp vec4 cc_shadowColor;\n  mediump vec4 cc_planarNDInfo;\n};\nhighp float unpackHighpData (float mainPart, float modPart) {\n  highp float data = mainPart;\n  return data + modPart;\n}\nvoid packHighpData (out float mainPart, out float modPart, highp float data) {\n  mainPart = fract(data);\n  modPart = data - mainPart;\n}\nhighp float unpackHighpData (float mainPart, float modPart, const float modValue) {\n  highp float data = mainPart * modValue;\n  return data + modPart * modValue;\n}\nvoid packHighpData (out float mainPart, out float modPart, highp float data, const float modValue) {\n  highp float divide = data / modValue;\n  mainPart = floor(divide);\n  modPart = (data - mainPart * modValue) / modValue;\n}\nhighp vec2 unpackHighpData (vec2 mainPart, vec2 modPart) {\n  highp vec2 data = mainPart;\n  return data + modPart;\n}\nvoid packHighpData (out vec2 mainPart, out vec2 modPart, highp vec2 data) {\n  mainPart = fract(data);\n  modPart = data - mainPart;\n}\nhighp vec2 unpackHighpData (vec2 mainPart, vec2 modPart, const float modValue) {\n  highp vec2 data = mainPart * modValue;\n  return data + modPart * modValue;\n}\nvoid packHighpData (out vec2 mainPart, out vec2 modPart, highp vec2 data, const float modValue) {\n  highp vec2 divide = data / modValue;\n  mainPart = floor(divide);\n  modPart = (data - mainPart * modValue) / modValue;\n}\nhighp vec3 unpackHighpData (vec3 mainPart, vec3 modPart) {\n  highp vec3 data = mainPart;\n  return data + modPart;\n}\nvoid packHighpData (out vec3 mainPart, out vec3 modPart, highp vec3 data) {\n  mainPart = fract(data);\n  modPart = data - mainPart;\n}\nhighp vec3 unpackHighpData (vec3 mainPart, vec3 modPart, const float modValue) {\n  highp vec3 data = mainPart * modValue;\n  return data + modPart * modValue;\n}\nvoid packHighpData (out vec3 mainPart, out vec3 modPart, highp vec3 data, const float modValue) {\n  highp vec3 divide = data / modValue;\n  mainPart = floor(divide);\n  modPart = (data - mainPart * modValue) / modValue;\n}\nhighp vec4 unpackHighpData (vec4 mainPart, vec4 modPart) {\n  highp vec4 data = mainPart;\n  return data + modPart;\n}\nvoid packHighpData (out vec4 mainPart, out vec4 modPart, highp vec4 data) {\n  mainPart = fract(data);\n  modPart = data - mainPart;\n}\nhighp vec4 unpackHighpData (vec4 mainPart, vec4 modPart, const float modValue) {\n  highp vec4 data = mainPart * modValue;\n  return data + modPart * modValue;\n}\nvoid packHighpData (out vec4 mainPart, out vec4 modPart, highp vec4 data, const float modValue) {\n  highp vec4 divide = data / modValue;\n  mainPart = floor(divide);\n  modPart = (data - mainPart * modValue) / modValue;\n}\nfloat CCGetLinearDepthFromViewSpace(vec3 viewPos) {\n  float dist = length(viewPos);\n  return (dist - cc_shadowNFLSInfo.x) / (cc_shadowNFLSInfo.y - cc_shadowNFLSInfo.x);\n}\nfloat CCGetLinearDepth(vec3 worldPos) {\n  vec4 viewStartPos = cc_matLightView * vec4(worldPos.xyz, 1.0);\n  return CCGetLinearDepthFromViewSpace(viewStartPos.xyz);\n}\n#if CC_RECEIVE_SHADOW\n  uniform highp sampler2D cc_shadowMap;\n  uniform highp sampler2D cc_spotLightingMap;\n  vec4 ApplyShadowDepthBias_FaceNormal(vec4 shadowPos, vec3 worldNormal)\n  {\n    vec4 newShadowPos = shadowPos;\n    if(cc_shadowLPNNInfo.z > 0.0001)\n    {\n      vec4 viewNormal = cc_matLightView * vec4(worldNormal, 0.0);\n      if(viewNormal.z < 0.1)\n        newShadowPos.xy += viewNormal.xy * cc_shadowProjInfo.xy * cc_shadowLPNNInfo.z * clamp(viewNormal.z, 0.001, 0.1);\n    }\n    return newShadowPos;\n  }\n  vec4 ApplyShadowDepthBias_Perspective(vec4 shadowPos, float viewspaceDepthBias)\n  {\n    vec3 viewSpacePos;\n    viewSpacePos.xy = shadowPos.xy * cc_shadowProjInfo.zw;\n    viewSpacePos.z = shadowPos.z * cc_shadowInvProjDepthInfo.x + shadowPos.w * cc_shadowInvProjDepthInfo.y;\n    viewSpacePos.xyz += cc_shadowProjDepthInfo.z * normalize(viewSpacePos.xyz) * viewspaceDepthBias;\n    vec4 clipSpacePos;\n    clipSpacePos.xy = viewSpacePos.xy * cc_shadowProjInfo.xy;\n    clipSpacePos.zw = viewSpacePos.z * cc_shadowProjDepthInfo.xz + vec2(cc_shadowProjDepthInfo.y, 0.0);\n    if (cc_shadowNFLSInfo.z > 0.000001) {\n      clipSpacePos.z = CCGetLinearDepthFromViewSpace(viewSpacePos.xyz);\n      clipSpacePos.z = (clipSpacePos.z * 2.0 - 1.0) * clipSpacePos.w;\n    }\n    return clipSpacePos;\n  }\n  vec4 ApplyShadowDepthBias_Orthographic(vec4 shadowPos, float viewspaceDepthBias)\n  {\n    float coeffA = cc_shadowProjDepthInfo.x;\n    float coeffB = cc_shadowProjDepthInfo.y;\n    float viewSpacePos_z = (shadowPos.z - coeffB) / coeffA;\n    viewSpacePos_z += viewspaceDepthBias;\n    vec4 result = shadowPos;\n    result.z = viewSpacePos_z * coeffA + coeffB;\n    return result;\n  }\n  float CCGetShadowFactorHard (vec4 shadowPos) {\n    vec4 clipPosNew = ApplyShadowDepthBias_Orthographic(shadowPos, cc_shadowWHPBInfo.w);\n    vec3 clipPos = clipPosNew.xyz / clipPosNew.w * 0.5 + 0.5;\n    if (clipPos.x < 0.0 || clipPos.x > 1.0 ||\n        clipPos.y < 0.0 || clipPos.y > 1.0 ||\n        clipPos.z < 0.0 || clipPos.z > 1.0) { return 1.0; }\n    clipPos.xy = cc_cameraPos.w == 1.0 ? vec2(clipPos.xy.x, 1.0 - clipPos.xy.y) : clipPos.xy;\n    float shadow = 0.0;\n    float closestDepth = 0.0;\n    if (cc_shadowLPNNInfo.y > 0.000001) {\n      closestDepth = dot(texture(cc_shadowMap, clipPos.xy), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0));\n    } else {\n      closestDepth = texture(cc_shadowMap, clipPos.xy).x;\n    }\n    shadow = step(clipPos.z, closestDepth);\n    return shadow;\n  }\n  float CCGetShadowFactorSoft (vec4 shadowPos) {\n    vec4 clipPosNew = ApplyShadowDepthBias_Orthographic(shadowPos, cc_shadowWHPBInfo.w);\n    vec3 clipPos = clipPosNew.xyz / clipPosNew.w * 0.5 + 0.5;\n    if (clipPos.x < 0.0 || clipPos.x > 1.0 ||\n        clipPos.y < 0.0 || clipPos.y > 1.0 ||\n        clipPos.z < 0.0 || clipPos.z > 1.0) { return 1.0; }\n    clipPos.xy = cc_cameraPos.w == 1.0 ? vec2(clipPos.xy.x, 1.0 - clipPos.xy.y) : clipPos.xy;\n    float offsetDepth = clipPos.z;\n    vec2 mapSize = cc_shadowWHPBInfo.xy;\n    vec2 oneTap = 1.0 / mapSize;\n    vec2 clipPos_offset = clipPos.xy + oneTap;\n    float block0, block1, block2, block3;\n    if (cc_shadowLPNNInfo.y > 0.000001) {\n      block0 = step(offsetDepth, dot(texture(cc_shadowMap, vec2(clipPos.x, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n      block1 = step(offsetDepth, dot(texture(cc_shadowMap, vec2(clipPos_offset.x, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n      block2 = step(offsetDepth, dot(texture(cc_shadowMap, vec2(clipPos.x, clipPos_offset.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n      block3 = step(offsetDepth, dot(texture(cc_shadowMap, vec2(clipPos_offset.x, clipPos_offset.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n    } else {\n      block0 = step(offsetDepth, texture(cc_shadowMap, vec2(clipPos.x, clipPos.y)).x);\n      block1 = step(offsetDepth, texture(cc_shadowMap, vec2(clipPos_offset.x, clipPos.y)).x);\n      block2 = step(offsetDepth, texture(cc_shadowMap, vec2(clipPos.x, clipPos_offset.y)).x);\n      block3 = step(offsetDepth, texture(cc_shadowMap, vec2(clipPos_offset.x, clipPos_offset.y)).x);\n    }\n    float coefX   = mod(clipPos.x, oneTap.x) * mapSize.x;\n    float resultX = mix(block0, block1, coefX);\n    float resultY = mix(block2, block3, coefX);\n    float coefY   = mod(clipPos.y, oneTap.y) * mapSize.y;\n    return mix(resultX, resultY, coefY);\n  }\n  float CCGetShadowFactorSoft2X (vec4 shadowPos) {\n    vec4 clipPosNew = ApplyShadowDepthBias_Orthographic(shadowPos, cc_shadowWHPBInfo.w);\n    vec3 clipPos = clipPosNew.xyz / clipPosNew.w * 0.5 + 0.5;\n    if (clipPos.x < 0.0 || clipPos.x > 1.0 ||\n        clipPos.y < 0.0 || clipPos.y > 1.0 ||\n        clipPos.z < 0.0 || clipPos.z > 1.0) { return 1.0; }\n    clipPos.xy = cc_cameraPos.w == 1.0 ? vec2(clipPos.xy.x, 1.0 - clipPos.xy.y) : clipPos.xy;\n    float offsetDepth = clipPos.z;\n    vec2 mapSize = cc_shadowWHPBInfo.xy;\n    vec2 oneTap = 1.0 / mapSize;\n    float clipPos_offset_L = clipPos.x - oneTap.x;\n    float clipPos_offset_R = clipPos.x + oneTap.x;\n    float clipPos_offset_U = clipPos.y - oneTap.y;\n    float clipPos_offset_D = clipPos.y + oneTap.y;\n    float block0, block1, block2, block3, block4, block5, block6, block7, block8;\n    if (cc_shadowLPNNInfo.y > 0.000001) {\n      block0 = step(offsetDepth, dot(texture(cc_shadowMap, vec2(clipPos_offset_L, clipPos_offset_U)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n      block1 = step(offsetDepth, dot(texture(cc_shadowMap, vec2(clipPos.x, clipPos_offset_U)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n      block2 = step(offsetDepth, dot(texture(cc_shadowMap, vec2(clipPos_offset_R, clipPos_offset_U)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n      block3 = step(offsetDepth, dot(texture(cc_shadowMap, vec2(clipPos_offset_L, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n      block4 = step(offsetDepth, dot(texture(cc_shadowMap, vec2(clipPos.x, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n      block5 = step(offsetDepth, dot(texture(cc_shadowMap, vec2(clipPos_offset_R, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n      block6 = step(offsetDepth, dot(texture(cc_shadowMap, vec2(clipPos_offset_L, clipPos_offset_D)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n      block7 = step(offsetDepth, dot(texture(cc_shadowMap, vec2(clipPos.x, clipPos_offset_D)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n      block8 = step(offsetDepth, dot(texture(cc_shadowMap, vec2(clipPos_offset_R, clipPos_offset_D)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n    } else {\n      block0 = step(offsetDepth, texture(cc_shadowMap, vec2(clipPos_offset_L, clipPos_offset_U)).x);\n      block1 = step(offsetDepth, texture(cc_shadowMap, vec2(clipPos.x, clipPos_offset_U)).x);\n      block2 = step(offsetDepth, texture(cc_shadowMap, vec2(clipPos_offset_R, clipPos_offset_U)).x);\n      block3 = step(offsetDepth, texture(cc_shadowMap, vec2(clipPos_offset_L, clipPos.y)).x);\n      block4 = step(offsetDepth, texture(cc_shadowMap, vec2(clipPos.x, clipPos.y)).x);\n      block5 = step(offsetDepth, texture(cc_shadowMap, vec2(clipPos_offset_R, clipPos.y)).x);\n      block6 = step(offsetDepth, texture(cc_shadowMap, vec2(clipPos_offset_L, clipPos_offset_D)).x);\n      block7 = step(offsetDepth, texture(cc_shadowMap, vec2(clipPos.x, clipPos_offset_D)).x);\n      block8 = step(offsetDepth, texture(cc_shadowMap, vec2(clipPos_offset_R, clipPos_offset_D)).x);\n    }\n    float coefX = mod(clipPos.x, oneTap.x) * mapSize.x;\n    float coefY = mod(clipPos.y, oneTap.y) * mapSize.y;\n    float shadow = 0.0;\n    float resultX = mix(block0, block1, coefX);\n    float resultY = mix(block3, block4, coefX);\n    shadow += mix(resultX , resultY, coefY);\n    resultX = mix(block1, block2, coefX);\n    resultY = mix(block4, block5, coefX);\n    shadow += mix(resultX , resultY, coefY);\n    resultX = mix(block3, block4, coefX);\n    resultY = mix(block6, block7, coefX);\n    shadow += mix(resultX, resultY, coefY);\n    resultX = mix(block4, block5, coefX);\n    resultY = mix(block7, block8, coefX);\n    shadow += mix(resultX, resultY, coefY);\n    return shadow * 0.25;\n  }\n  float CCGetSpotLightShadowFactorHard (vec4 shadowPos, vec3 worldPos) {\n    vec4 clipPosNew = ApplyShadowDepthBias_Perspective(shadowPos, cc_shadowWHPBInfo.w);\n    vec3 clipPos = clipPosNew.xyz / clipPosNew.w * 0.5 + 0.5;\n    if (clipPos.x < 0.0 || clipPos.x > 1.0 ||\n        clipPos.y < 0.0 || clipPos.y > 1.0 ||\n        clipPos.z < 0.0 || clipPos.z > 1.0) { return 1.0; }\n    clipPos.xy = cc_cameraPos.w == 1.0 ? vec2(clipPos.xy.x, 1.0 - clipPos.xy.y) : clipPos.xy;\n    float shadow = 0.0;\n    float closestDepth = 0.0;\n    float depth = clipPos.z;\n    if (cc_shadowLPNNInfo.y > 0.000001) {\n      closestDepth = dot(texture(cc_spotLightingMap, clipPos.xy), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0));\n    } else {\n      closestDepth = texture(cc_spotLightingMap, clipPos.xy).x;\n    }\n    shadow = step(depth, closestDepth);\n    return shadow;\n  }\n  float CCGetSpotLightShadowFactorSoft (vec4 shadowPos, vec3 worldPos) {\n    vec4 clipPosNew = ApplyShadowDepthBias_Perspective(shadowPos, cc_shadowWHPBInfo.w);\n    vec3 clipPos = clipPosNew.xyz / clipPosNew.w * 0.5 + 0.5;\n    if (clipPos.x < 0.0 || clipPos.x > 1.0 ||\n        clipPos.y < 0.0 || clipPos.y > 1.0 ||\n        clipPos.z < 0.0 || clipPos.z > 1.0) { return 1.0; }\n    clipPos.xy = cc_cameraPos.w == 1.0 ? vec2(clipPos.xy.x, 1.0 - clipPos.xy.y) : clipPos.xy;\n    float depth = 0.0;\n    if (cc_shadowNFLSInfo.z > 0.000001) {\n      depth = CCGetLinearDepth(worldPos);\n    } else {\n      depth = clipPos.z;\n    }\n    float bias = cc_shadowWHPBInfo.w;\n    vec2 oneTap = 1.0 / cc_shadowWHPBInfo.xy;\n    vec2 clipPos_offset = clipPos.xy + oneTap;\n    float block0, block1, block2, block3;\n    if (cc_shadowLPNNInfo.y > 0.000001) {\n      block0 = step(depth, dot(texture(cc_spotLightingMap, vec2(clipPos.x, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n      block1 = step(depth, dot(texture(cc_spotLightingMap, vec2(clipPos_offset.x, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n      block2 = step(depth, dot(texture(cc_spotLightingMap, vec2(clipPos.x, clipPos_offset.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n      block3 = step(depth, dot(texture(cc_spotLightingMap, vec2(clipPos_offset.x, clipPos_offset.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n    } else {\n      block0 = step(depth, texture(cc_spotLightingMap, vec2(clipPos.x, clipPos.y)).x);\n      block1 = step(depth, texture(cc_spotLightingMap, vec2(clipPos_offset.x, clipPos.y)).x);\n      block2 = step(depth, texture(cc_spotLightingMap, vec2(clipPos.x, clipPos_offset.y)).x);\n      block3 = step(depth, texture(cc_spotLightingMap, vec2(clipPos_offset.x, clipPos_offset.y)).x);\n    }\n    float coefX   = mod(clipPos.x, oneTap.x) * cc_shadowWHPBInfo.x;\n    float resultX = mix(block0, block1, coefX);\n    float resultY = mix(block2, block3, coefX);\n    float coefY   = mod(clipPos.y, oneTap.y) * cc_shadowWHPBInfo.y;\n    return mix(resultX, resultY, coefY);\n  }\n  float CCGetSpotLightShadowFactorSoft2X (vec4 shadowPos, vec3 worldPos) {\n    vec4 clipPosNew = ApplyShadowDepthBias_Perspective(shadowPos, cc_shadowWHPBInfo.w);\n    vec3 clipPos = clipPosNew.xyz / clipPosNew.w * 0.5 + 0.5;\n    if (clipPos.x < 0.0 || clipPos.x > 1.0 ||\n        clipPos.y < 0.0 || clipPos.y > 1.0 ||\n        clipPos.z < 0.0 || clipPos.z > 1.0) { return 1.0; }\n    clipPos.xy = cc_cameraPos.w == 1.0 ? vec2(clipPos.xy.x, 1.0 - clipPos.xy.y) : clipPos.xy;\n    float depth = 0.0;\n    if (cc_shadowNFLSInfo.z > 0.000001) {\n      depth = CCGetLinearDepth(worldPos);\n    } else {\n      depth = clipPos.z;\n    }\n    float bias = cc_shadowWHPBInfo.w;\n    vec2 mapSize = cc_shadowWHPBInfo.xy;\n    vec2 oneTap = 1.0 / mapSize;\n    float clipPos_offset_L = clipPos.x - oneTap.x;\n    float clipPos_offset_R = clipPos.x + oneTap.x;\n    float clipPos_offset_U = clipPos.y - oneTap.y;\n    float clipPos_offset_D = clipPos.y + oneTap.y;\n    float block0, block1, block2, block3, block4, block5, block6, block7, block8;\n    if (cc_shadowLPNNInfo.y > 0.000001) {\n      block0 = step(depth, dot(texture(cc_spotLightingMap, vec2(clipPos_offset_L, clipPos_offset_U)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n      block1 = step(depth, dot(texture(cc_spotLightingMap, vec2(clipPos.x, clipPos_offset_U)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n      block2 = step(depth, dot(texture(cc_spotLightingMap, vec2(clipPos_offset_R, clipPos_offset_U)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n      block3 = step(depth, dot(texture(cc_spotLightingMap, vec2(clipPos_offset_L, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n      block4 = step(depth, dot(texture(cc_spotLightingMap, vec2(clipPos.x, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n      block5 = step(depth, dot(texture(cc_spotLightingMap, vec2(clipPos_offset_R, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n      block6 = step(depth, dot(texture(cc_spotLightingMap, vec2(clipPos_offset_L, clipPos_offset_D)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n      block7 = step(depth, dot(texture(cc_spotLightingMap, vec2(clipPos.x, clipPos_offset_D)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n      block8 = step(depth, dot(texture(cc_spotLightingMap, vec2(clipPos_offset_R, clipPos_offset_D)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n    } else {\n      block0 = step(depth, texture(cc_spotLightingMap, vec2(clipPos_offset_L, clipPos_offset_U)).x);\n      block1 = step(depth, texture(cc_spotLightingMap, vec2(clipPos.x, clipPos_offset_U)).x);\n      block2 = step(depth, texture(cc_spotLightingMap, vec2(clipPos_offset_R, clipPos_offset_U)).x);\n      block3 = step(depth, texture(cc_spotLightingMap, vec2(clipPos_offset_L, clipPos.y)).x);\n      block4 = step(depth, texture(cc_spotLightingMap, vec2(clipPos.x, clipPos.y)).x);\n      block5 = step(depth, texture(cc_spotLightingMap, vec2(clipPos_offset_R, clipPos.y)).x);\n      block6 = step(depth, texture(cc_spotLightingMap, vec2(clipPos_offset_L, clipPos_offset_D)).x);\n      block7 = step(depth, texture(cc_spotLightingMap, vec2(clipPos.x, clipPos_offset_D)).x);\n      block8 = step(depth, texture(cc_spotLightingMap, vec2(clipPos_offset_R, clipPos_offset_D)).x);\n    }\n    float coefX = mod(clipPos.x, oneTap.x) * mapSize.x;\n    float coefY = mod(clipPos.y, oneTap.y) * mapSize.y;\n    float shadow = 0.0;\n    float resultX = mix(block0, block1, coefX);\n    float resultY = mix(block3, block4, coefX);\n    shadow += mix(resultX , resultY, coefY);\n    resultX = mix(block1, block2, coefX);\n    resultY = mix(block4, block5, coefX);\n    shadow += mix(resultX , resultY, coefY);\n    resultX = mix(block3, block4, coefX);\n    resultY = mix(block6, block7, coefX);\n    shadow += mix(resultX, resultY, coefY);\n    resultX = mix(block4, block5, coefX);\n    resultY = mix(block7, block8, coefX);\n    shadow += mix(resultX, resultY, coefY);\n    return shadow * 0.25;\n  }\n#endif\n#if CC_USE_IBL\n  uniform samplerCube cc_environment;\n  vec4 fragTextureLod (sampler2D tex, vec2 coord, float lod) {\n      return textureLod(tex, coord, lod);\n  }\n  vec4 fragTextureLod (samplerCube tex, vec3 coord, float lod) {\n      return textureLod(tex, coord, lod);\n  }\n  vec3 unpackRGBE (vec4 rgbe) {\n    return rgbe.rgb * pow(1.1, rgbe.a * 255.0 - 128.0);\n  }\n  #if CC_USE_DIFFUSEMAP\n    uniform samplerCube cc_diffuseMap;\n  #endif\n#endif\nfloat GGXMobile (float roughness, float NoH, vec3 H, vec3 N) {\n  vec3 NxH = cross(N, H);\n  float OneMinusNoHSqr = dot(NxH, NxH);\n  float a = roughness * roughness;\n  float n = NoH * a;\n  float p = a / (OneMinusNoHSqr + n * n);\n  return p * p;\n}\nfloat CalcSpecular (float roughness, float NoH, vec3 H, vec3 N) {\n  return (roughness * 0.25 + 0.25) * GGXMobile(roughness, NoH, H, N);\n}\nvec3 BRDFApprox (vec3 specular, float roughness, float NoV) {\n  const vec4 c0 = vec4(-1.0, -0.0275, -0.572, 0.022);\n  const vec4 c1 = vec4(1.0, 0.0425, 1.04, -0.04);\n  vec4 r = roughness * c0 + c1;\n  float a004 = min(r.x * r.x, exp2(-9.28 * NoV)) * r.x + r.y;\n  vec2 AB = vec2(-1.04, 1.04) * a004 + r.zw;\n  AB.y *= clamp(50.0 * specular.g, 0.0, 1.0);\n  return specular * AB.x + AB.y;\n}\n#if USE_REFLECTION_DENOISE\n  vec3 GetEnvReflectionWithMipFiltering(vec3 R, float roughness, float mipCount, float denoiseIntensity) {\n    #if CC_USE_IBL\n    \tfloat mip = roughness * mipCount;\n    \tfloat delta = (dot(dFdx(R), dFdy(R))) * 1000.0;\n    \tfloat mipBias = mix(0.0, 5.0, clamp(delta, 0.0, 1.0));\n    \tvec4 biased = fragTextureLod(cc_environment, R, mip + mipBias);\n     \tvec4 filtered = texture(cc_environment, R);\n      #if CC_USE_IBL == 2\n      \tbiased.rgb = unpackRGBE(biased);\n      \tfiltered.rgb = unpackRGBE(filtered);\n      #else\n      \tbiased.rgb = SRGBToLinear(biased.rgb);\n      \tfiltered.rgb = SRGBToLinear(filtered.rgb);\n      #endif\n      return mix(biased.rgb, filtered.rgb, denoiseIntensity);\n    #else\n      return vec3(0.0, 0.0, 0.0);\n    #endif\n  }\n#endif\nstruct StandardSurface {\n  vec4 albedo;\n  #if CC_PLATFORM_ANDROID_AND_WEBGL && CC_ENABLE_WEBGL_HIGHP_STRUCT_VALUES\n  vec3 position, position_fract_part;\n  #else\n  vec3 position;\n  #endif\n  vec3 normal;\n  vec3 emissive;\n  vec3 lightmap;\n  float lightmap_test;\n  float roughness;\n  float metallic;\n  float occlusion;\n};\nvec4 CCStandardShadingBase (StandardSurface s, vec4 shadowPos) {\n  vec3 diffuse = s.albedo.rgb * (1.0 - s.metallic);\n  vec3 specular = mix(vec3(0.04), s.albedo.rgb, s.metallic);\n  vec3 position;\n  #if CC_PLATFORM_ANDROID_AND_WEBGL && CC_ENABLE_WEBGL_HIGHP_STRUCT_VALUES\n  position = unpackHighpData(s.position, s.position_fract_part);\n  #else\n  position = s.position;\n  #endif\n  vec3 N = normalize(s.normal);\n  vec3 V = normalize(cc_cameraPos.xyz - position);\n  float NV = max(abs(dot(N, V)), 0.0);\n  specular = BRDFApprox(specular, s.roughness, NV);\n  vec3 L = normalize(-cc_mainLitDir.xyz);\n  vec3 H = normalize(L + V);\n  float NH = max(dot(N, H), 0.0);\n  float NL = max(dot(N, L), 0.0);\n  vec3 finalColor = NL * cc_mainLitColor.rgb * cc_mainLitColor.w;\n  vec3 diffuseContrib = diffuse;\n  #if USE_LIGHTMAP && !USE_BATCHING && !CC_FORWARD_ADD\n    if (s.lightmap_test > 0.0001) {\n      finalColor = s.lightmap.rgb;\n    }\n  #else\n    diffuseContrib /= 3.14159265359;\n  #endif\n  vec3 specularContrib = specular * CalcSpecular(s.roughness, NH, H, N);\n  vec3 dirlightContrib = (diffuseContrib + specularContrib);\n  float shadow = 1.0;\n  #if CC_RECEIVE_SHADOW\n    if (NL > 0.0 && cc_mainLitDir.w > 0.0) {\n      {\n        vec4 pos = ApplyShadowDepthBias_FaceNormal(shadowPos, N);\n        float pcf = cc_shadowWHPBInfo.z;\n        if (pcf > 1.9) shadow = CCGetShadowFactorSoft2X(pos);\n        else if (pcf > 0.9) shadow = CCGetShadowFactorSoft(pos);\n        else shadow = CCGetShadowFactorHard(pos);\n        shadow = mix(shadow, 1.0, cc_shadowNFLSInfo.w);\n      }\n    }\n  #endif\n  dirlightContrib *= shadow;\n  finalColor *= dirlightContrib;\n  float fAmb = 0.5 - N.y * 0.5;\n  vec3 ambDiff = mix(cc_ambientSky.rgb, cc_ambientGround.rgb, fAmb);\n  #if CC_USE_IBL\n    #if CC_USE_DIFFUSEMAP\n      vec4 diffuseMap = texture(cc_diffuseMap, N);\n      #if CC_USE_DIFFUSEMAP == 2\n        ambDiff = unpackRGBE(diffuseMap);\n      #else\n        ambDiff = SRGBToLinear(diffuseMap.rgb);\n      #endif\n    #endif\n    vec3 R = normalize(reflect(-V, N));\n    #if USE_REFLECTION_DENOISE\n      vec3 env = GetEnvReflectionWithMipFiltering(R, s.roughness, cc_ambientGround.w, 0.6);\n    #else\n      vec4 envmap = fragTextureLod(cc_environment, R, s.roughness * cc_ambientGround.w);\n      #if CC_USE_IBL == 2\n        vec3 env = unpackRGBE(envmap);\n      #else\n        vec3 env = SRGBToLinear(envmap.rgb);\n      #endif\n    #endif\n    finalColor += env * cc_ambientSky.w * specular * s.occlusion;\n  #endif\n  finalColor += ambDiff.rgb * cc_ambientSky.w * diffuse * s.occlusion;\n  finalColor += s.emissive;\n  return vec4(finalColor, s.albedo.a);\n}\nvec3 ACESToneMap (vec3 color) {\n  color = min(color, vec3(8.0));\n  const float A = 2.51;\n  const float B = 0.03;\n  const float C = 2.43;\n  const float D = 0.59;\n  const float E = 0.14;\n  return (color * (A * color + B)) / (color * (C * color + D) + E);\n}\nvec4 CCFragOutput (vec4 color) {\n  #if CC_USE_HDR\n    color.rgb = ACESToneMap(color.rgb);\n  #endif\n  color.rgb = sqrt(color.rgb);\n  return color;\n}\nin highp vec4 v_shadowPos;\n#if USE_LIGHTMAP && !USE_BATCHING && !CC_FORWARD_ADD\n  in vec3 v_luv;\n  uniform sampler2D cc_lightingMap;\n  vec3 UnpackLightingmap(vec4 color) {\n    vec3 c;\n    float e = 1.0 + color.a * (8.0 - 1.0);\n    c.r = color.r * e;\n    c.g = color.g * e;\n    c.b = color.b * e;\n    return c;\n  }\n#endif\nin vec3 v_position;\nin vec2 v_uv;\nin vec2 v_uv1;\nin vec3 v_normal;\n#if USE_VERTEX_COLOR\n  in vec4 v_color;\n#endif\n#if USE_ALBEDO_MAP\n  uniform sampler2D albedoMap;\n#endif\n#if USE_NORMAL_MAP\n  in vec3 v_tangent;\n  in vec3 v_bitangent;\n  uniform sampler2D normalMap;\n#endif\n#if USE_PBR_MAP\n  uniform sampler2D pbrMap;\n#endif\n#if USE_METALLIC_ROUGHNESS_MAP\n  uniform sampler2D metallicRoughnessMap;\n#endif\n#if USE_OCCLUSION_MAP\n  uniform sampler2D occlusionMap;\n#endif\n#if USE_EMISSIVE_MAP\n  uniform sampler2D emissiveMap;\n#endif\n#if USE_ALPHA_TEST\n#endif\nvoid surf (out StandardSurface s) {\n  vec4 baseColor = albedo;\n  #if USE_VERTEX_COLOR\n    baseColor.rgb *= SRGBToLinear(v_color.rgb);\n    baseColor.a *= v_color.a;\n  #endif\n  #if USE_ALBEDO_MAP\n    vec4 texColor = texture(albedoMap, ALBEDO_UV);\n    texColor.rgb = SRGBToLinear(texColor.rgb);\n    baseColor *= texColor;\n  #endif\n  s.albedo = baseColor;\n  s.albedo.rgb *= albedoScaleAndCutoff.xyz;\n  #if USE_ALPHA_TEST\n    if (s.albedo.ALPHA_TEST_CHANNEL < albedoScaleAndCutoff.w) discard;\n  #endif\n  #if USE_LIGHTMAP && !USE_BATCHING && !CC_FORWARD_ADD\n    vec4 lightColor = texture(cc_lightingMap, v_luv.xy);\n    s.lightmap = UnpackLightingmap(lightColor);\n    s.lightmap_test = v_luv.z;\n  #endif\n  s.normal = v_normal;\n  #if USE_NORMAL_MAP\n    vec3 nmmp = texture(normalMap, NORMAL_UV).xyz - vec3(0.5);\n    s.normal =\n      (nmmp.x * emissiveScaleParam.w) * normalize(v_tangent) +\n      (nmmp.y * emissiveScaleParam.w) * normalize(v_bitangent) +\n      nmmp.z * normalize(s.normal);\n  #endif\n  #if CC_PLATFORM_ANDROID_AND_WEBGL && CC_ENABLE_WEBGL_HIGHP_STRUCT_VALUES\n  packHighpData(s.position, s.position_fract_part, v_position);\n  #else\n  s.position = v_position;\n  #endif\n  vec4 pbr = pbrParams;\n  #if USE_PBR_MAP\n    vec4 res = texture(pbrMap, PBR_UV);\n    pbr.x *= res.r;\n    pbr.y *= res.g;\n    pbr.z *= res.b;\n    pbr.w *= res.a;\n  #endif\n  #if USE_METALLIC_ROUGHNESS_MAP\n    vec4 metallicRoughness = texture(metallicRoughnessMap, PBR_UV);\n    pbr.z *= metallicRoughness.b;\n    pbr.y *= metallicRoughness.g;\n  #endif\n  #if USE_OCCLUSION_MAP\n    pbr.x *= texture(occlusionMap, PBR_UV).r;\n  #endif\n  s.occlusion = pbr.x;\n  s.roughness = pbr.y;\n  s.metallic = pbr.z;\n  s.emissive = emissive.rgb * emissiveScaleParam.xyz;\n  #if USE_EMISSIVE_MAP\n    s.emissive *= SRGBToLinear(texture(emissiveMap, EMISSIVE_UV).rgb);\n  #endif\n}\n#if CC_FORWARD_ADD\n  #if CC_PIPELINE_TYPE == 0\n  # define LIGHTS_PER_PASS 1\n  #else\n  # define LIGHTS_PER_PASS 10\n  #endif\n  #if CC_ENABLE_CLUSTERED_LIGHT_CULLING == 0\n  layout(std140) uniform CCForwardLight {\n    highp vec4 cc_lightPos[LIGHTS_PER_PASS];\n    vec4 cc_lightColor[LIGHTS_PER_PASS];\n    vec4 cc_lightSizeRangeAngle[LIGHTS_PER_PASS];\n    vec4 cc_lightDir[LIGHTS_PER_PASS];\n  };\n  #endif\n  float SmoothDistAtt (float distSqr, float invSqrAttRadius) {\n    float factor = distSqr * invSqrAttRadius;\n    float smoothFactor = clamp(1.0 - factor * factor, 0.0, 1.0);\n    return smoothFactor * smoothFactor;\n  }\n  float GetDistAtt (float distSqr, float invSqrAttRadius) {\n    float attenuation = 1.0 / max(distSqr, 0.01*0.01);\n    attenuation *= SmoothDistAtt(distSqr , invSqrAttRadius);\n    return attenuation;\n  }\n  float GetAngleAtt (vec3 L, vec3 litDir, float litAngleScale, float litAngleOffset) {\n    float cd = dot(litDir, L);\n    float attenuation = clamp(cd * litAngleScale + litAngleOffset, 0.0, 1.0);\n    return (attenuation * attenuation);\n  }\n  #if CC_ENABLE_CLUSTERED_LIGHT_CULLING == 0\n  vec4 CCStandardShadingAdditive (StandardSurface s, vec4 shadowPos) {\n    vec3 position;\n    #if CC_PLATFORM_ANDROID_AND_WEBGL && CC_ENABLE_WEBGL_HIGHP_STRUCT_VALUES\n    position = unpackHighpData(s.position, s.position_fract_part);\n    #else\n    position = s.position;\n    #endif\n    vec3 diffuse = s.albedo.rgb * (1.0 - s.metallic);\n    vec3 specular = mix(vec3(0.04), s.albedo.rgb, s.metallic);\n    vec3 diffuseContrib = diffuse / 3.14159265359;\n    vec3 N = normalize(s.normal);\n    vec3 V = normalize(cc_cameraPos.xyz - position);\n    float NV = max(abs(dot(N, V)), 0.0);\n    specular = BRDFApprox(specular, s.roughness, NV);\n    vec3 finalColor = vec3(0.0);\n    int numLights = CC_PIPELINE_TYPE == 0 ? LIGHTS_PER_PASS : int(cc_lightDir[0].w);\n    for (int i = 0; i < LIGHTS_PER_PASS; i++) {\n      if (i >= numLights) break;\n      vec3 SLU = cc_lightPos[i].xyz - position;\n      vec3 SL = normalize(SLU);\n      vec3 SH = normalize(SL + V);\n      float SNL = max(dot(N, SL), 0.0);\n      float SNH = max(dot(N, SH), 0.0);\n      float distSqr = dot(SLU, SLU);\n      float litRadius = cc_lightSizeRangeAngle[i].x;\n      float litRadiusSqr = litRadius * litRadius;\n      float illum = 3.14159265359 * (litRadiusSqr / max(litRadiusSqr , distSqr));\n      float attRadiusSqrInv = 1.0 / max(cc_lightSizeRangeAngle[i].y, 0.01);\n      attRadiusSqrInv *= attRadiusSqrInv;\n      float att = GetDistAtt(distSqr, attRadiusSqrInv);\n      vec3 lspec = specular * CalcSpecular(s.roughness, SNH, SH, N);\n      if (cc_lightPos[i].w > 0.0) {\n        float cosInner = max(dot(-cc_lightDir[i].xyz, SL), 0.01);\n        float cosOuter = cc_lightSizeRangeAngle[i].z;\n        float litAngleScale = 1.0 / max(0.001, cosInner - cosOuter);\n        float litAngleOffset = -cosOuter * litAngleScale;\n        att *= GetAngleAtt(SL, -cc_lightDir[i].xyz, litAngleScale, litAngleOffset);\n      }\n      vec3 lightColor = cc_lightColor[i].rgb;\n      float shadow = 1.0;\n      #if CC_RECEIVE_SHADOW\n        if (cc_lightPos[i].w > 0.0 && cc_lightSizeRangeAngle[i].w > 0.0) {\n          {\n            float pcf = cc_shadowWHPBInfo.z;\n            if (pcf > 1.9) shadow = CCGetSpotLightShadowFactorSoft2X(shadowPos, position);\n            else if (pcf > 0.9) shadow = CCGetSpotLightShadowFactorSoft(shadowPos, position);\n            else shadow = CCGetSpotLightShadowFactorHard(shadowPos, position);\n          }\n        }\n      #endif\n      lightColor *= shadow;\n      finalColor += SNL * lightColor * cc_lightColor[i].w * illum * att * (diffuseContrib + lspec);\n    }\n    return vec4(finalColor, 0.0);\n  }\n  #endif\n  #if CC_ENABLE_CLUSTERED_LIGHT_CULLING == 1\n  layout(std430, binding = 4) readonly buffer b_ccLightsBuffer { vec4 b_ccLights[]; };\n  layout(std430, binding = 5) readonly buffer b_clusterLightIndicesBuffer { uint b_clusterLightIndices[]; };\n  layout(std430, binding = 6) readonly buffer b_clusterLightGridBuffer { uvec4 b_clusterLightGrid[]; };\n  struct CCLight\n  {\n    vec4 cc_lightPos;\n    vec4 cc_lightColor;\n    vec4 cc_lightSizeRangeAngle;\n    vec4 cc_lightDir;\n  };\n  struct Cluster\n  {\n    vec3 minBounds;\n    vec3 maxBounds;\n  };\n  struct LightGrid\n  {\n    uint offset;\n    uint ccLights;\n  };\n  CCLight getCCLight(uint i)\n  {\n    CCLight light;\n    light.cc_lightPos = b_ccLights[4u * i + 0u];\n    light.cc_lightColor = b_ccLights[4u * i + 1u];\n    light.cc_lightSizeRangeAngle = b_ccLights[4u * i + 2u];\n    light.cc_lightDir = b_ccLights[4u * i + 3u];\n    return light;\n  }\n  LightGrid getLightGrid(uint cluster)\n  {\n    uvec4 gridvec = b_clusterLightGrid[cluster];\n    LightGrid grid;\n    grid.offset = gridvec.x;\n    grid.ccLights = gridvec.y;\n    return grid;\n  }\n  uint getGridLightIndex(uint start, uint offset)\n  {\n    return b_clusterLightIndices[start + offset];\n  }\n  uint getClusterZIndex(vec4 worldPos)\n  {\n    float scale = float(24) / log(cc_nearFar.y / cc_nearFar.x);\n    float bias = -(float(24) * log(cc_nearFar.x) / log(cc_nearFar.y / cc_nearFar.x));\n    float eyeDepth = -(cc_matView * worldPos).z;\n    uint zIndex = uint(max(log(eyeDepth) * scale + bias, 0.0));\n    return zIndex;\n  }\n  uint getClusterIndex(vec4 fragCoord, vec4 worldPos)\n  {\n    uint zIndex = getClusterZIndex(worldPos);\n    float clusterSizeX = ceil(cc_viewPort.z / float(16));\n    float clusterSizeY = ceil(cc_viewPort.w / float(8));\n    uvec3 indices = uvec3(uvec2(fragCoord.xy / vec2(clusterSizeX, clusterSizeY)), zIndex);\n    uint cluster = (16u * 8u) * indices.z + 16u * indices.y + indices.x;\n    return cluster;\n  }\n  vec4 CCClusterShadingAdditive (StandardSurface s, vec4 shadowPos) {\n    vec3 diffuse = s.albedo.rgb * (1.0 - s.metallic);\n    vec3 specular = mix(vec3(0.04), s.albedo.rgb, s.metallic);\n    vec3 diffuseContrib = diffuse / 3.14159265359;\n    vec3 position;\n    #if CC_PLATFORM_ANDROID_AND_WEBGL && CC_ENABLE_WEBGL_HIGHP_STRUCT_VALUES\n    position = unpackHighpData(s.position, s.position_fract_part);\n    #else\n    position = s.position;\n    #endif\n    vec3 N = normalize(s.normal);\n    vec3 V = normalize(cc_cameraPos.xyz - position);\n    float NV = max(abs(dot(N, V)), 0.001);\n    specular = BRDFApprox(specular, s.roughness, NV);\n    vec3 finalColor = vec3(0.0);\n    uint cluster = getClusterIndex(gl_FragCoord, vec4(position, 1.0));\n    LightGrid grid = getLightGrid(cluster);\n    uint numLights = grid.ccLights;\n    for (uint i = 0u; i < 100u; i++) {\n      if (i >= numLights) break;\n      uint lightIndex = getGridLightIndex(grid.offset, i);\n      CCLight light = getCCLight(lightIndex);\n      vec3 SLU = light.cc_lightPos.xyz - position;\n      vec3 SL = normalize(SLU);\n      vec3 SH = normalize(SL + V);\n      float SNL = max(dot(N, SL), 0.001);\n      float SNH = max(dot(N, SH), 0.0);\n      float distSqr = dot(SLU, SLU);\n      float litRadius = light.cc_lightSizeRangeAngle.x;\n      float litRadiusSqr = litRadius * litRadius;\n      float illum = 3.14159265359 * (litRadiusSqr / max(litRadiusSqr , distSqr));\n      float attRadiusSqrInv = 1.0 / max(light.cc_lightSizeRangeAngle.y, 0.01);\n      attRadiusSqrInv *= attRadiusSqrInv;\n      float att = GetDistAtt(distSqr, attRadiusSqrInv);\n      vec3 lspec = specular * CalcSpecular(s.roughness, SNH, SH, N);\n      if (light.cc_lightPos.w > 0.0) {\n        float cosInner = max(dot(-light.cc_lightDir.xyz, SL), 0.01);\n        float cosOuter = light.cc_lightSizeRangeAngle.z;\n        float litAngleScale = 1.0 / max(0.001, cosInner - cosOuter);\n        float litAngleOffset = -cosOuter * litAngleScale;\n        att *= GetAngleAtt(SL, -light.cc_lightDir.xyz, litAngleScale, litAngleOffset);\n      }\n      vec3 lightColor = light.cc_lightColor.rgb;\n      float shadow = 1.0;\n      #if CC_RECEIVE_SHADOW\n        if (light.cc_lightPos.w > 0.0) {\n          {\n            float pcf = cc_shadowWHPBInfo.z;\n            if (pcf > 1.9) shadow = CCGetSpotLightShadowFactorSoft2X(shadowPos, position);\n            else if (pcf > 0.9) shadow = CCGetSpotLightShadowFactorSoft(shadowPos, position);\n            else shadow = CCGetSpotLightShadowFactorHard(shadowPos, position);\n          }\n        }\n      #endif\n      lightColor *= shadow;\n      finalColor += SNL * lightColor * light.cc_lightColor.w * illum * att * (diffuseContrib + lspec);\n    }\n    return vec4(finalColor, 0.0);\n  }\n  #endif\n  layout(location = 0) out vec4 fragColorX;\n  void main () {\n    StandardSurface s; surf(s);\n    #if CC_ENABLE_CLUSTERED_LIGHT_CULLING == 1\n    vec4 color = CCClusterShadingAdditive(s, v_shadowPos);\n    #else\n    vec4 color = CCStandardShadingAdditive(s, v_shadowPos);\n    #endif\n    CC_APPLY_FOG(color, s.position.xyz);\n    fragColorX = CCFragOutput(color);\n  }\n#elif (CC_PIPELINE_TYPE == 0 || CC_FORCE_FORWARD_SHADING)\n  layout(location = 0) out vec4 fragColorX;\n  void main () {\n    StandardSurface s; surf(s);\n    vec4 color = CCStandardShadingBase(s, v_shadowPos);\n    CC_APPLY_FOG(color, s.position.xyz);\n    fragColorX = CCFragOutput(color);\n  }\n#elif CC_PIPELINE_TYPE == 1\n  vec2 signNotZero(vec2 v) {\n    return vec2((v.x >= 0.0) ? +1.0 : -1.0, (v.y >= 0.0) ? +1.0 : -1.0);\n  }\n  vec2 float32x3_to_oct(in vec3 v) {\n    vec2 p = v.xy * (1.0 / (abs(v.x) + abs(v.y) + abs(v.z)));\n    return (v.z <= 0.0) ? ((1.0 - abs(p.yx)) * signNotZero(p)) : p;\n  }\n  layout(location = 0) out vec4 fragColor0;\n  layout(location = 1) out vec4 fragColor1;\n  layout(location = 2) out vec4 fragColor2;\n  void main () {\n    StandardSurface s; surf(s);\n    fragColor0 = s.albedo;\n    fragColor1 = vec4(float32x3_to_oct(s.normal), s.roughness, s.metallic);\n    fragColor2 = vec4(s.emissive, s.occlusion);\n  }\n#endif"},"glsl1":{"vert":"\nprecision highp float;\nhighp float decode32 (highp vec4 rgba) {\n  rgba = rgba * 255.0;\n  highp float Sign = 1.0 - (step(128.0, (rgba[3]) + 0.5)) * 2.0;\n  highp float Exponent = 2.0 * (mod(float(int((rgba[3]) + 0.5)), 128.0)) + (step(128.0, (rgba[2]) + 0.5)) - 127.0;\n  highp float Mantissa = (mod(float(int((rgba[2]) + 0.5)), 128.0)) * 65536.0 + rgba[1] * 256.0 + rgba[0] + 8388608.0;\n  return Sign * exp2(Exponent - 23.0) * Mantissa;\n}\nstruct StandardVertInput {\n  highp vec4 position;\n  vec3 normal;\n  vec4 tangent;\n};\nattribute vec3 a_position;\nattribute vec3 a_normal;\nattribute vec2 a_texCoord;\nattribute vec4 a_tangent;\n#if CC_USE_MORPH\n    attribute float a_vertexId;\n    int getVertexId() {\n      return int(a_vertexId);\n    }\n  uniform vec4 cc_displacementWeights[15];\n  uniform vec4 cc_displacementTextureInfo;\n  vec2 getPixelLocation(vec2 textureResolution, int pixelIndex) {\n    float pixelIndexF = float(pixelIndex);\n    float x = mod(pixelIndexF, textureResolution.x);\n    float y = floor(pixelIndexF / textureResolution.x);\n    return vec2(x, y);\n  }\n  vec2 getPixelCoordFromLocation(vec2 location, vec2 textureResolution) {\n    return (vec2(location.x, location.y) + .5) / textureResolution;\n  }\n  #if CC_DEVICE_SUPPORT_FLOAT_TEXTURE\n      vec4 fetchVec3ArrayFromTexture(sampler2D tex, int elementIndex) {\n        int pixelIndex = elementIndex;\n        vec2 location = getPixelLocation(cc_displacementTextureInfo.xy, pixelIndex);\n        vec2 uv = getPixelCoordFromLocation(location, cc_displacementTextureInfo.xy);\n        return texture2D(tex, uv);\n      }\n  #else\n    vec4 fetchVec3ArrayFromTexture(sampler2D tex, int elementIndex) {\n      int pixelIndex = elementIndex * 4;\n      vec2 location = getPixelLocation(cc_displacementTextureInfo.xy, pixelIndex);\n      vec2 x = getPixelCoordFromLocation(location + vec2(0.0, 0.0), cc_displacementTextureInfo.xy);\n      vec2 y = getPixelCoordFromLocation(location + vec2(1.0, 0.0), cc_displacementTextureInfo.xy);\n      vec2 z = getPixelCoordFromLocation(location + vec2(2.0, 0.0), cc_displacementTextureInfo.xy);\n      return vec4(\n        decode32(texture2D(tex, x)),\n        decode32(texture2D(tex, y)),\n        decode32(texture2D(tex, z)),\n        1.0\n      );\n    }\n  #endif\n  float getDisplacementWeight(int index) {\n    int quot = index / 4;\n    int remainder = index - quot * 4;\n    if (remainder == 0) {\n      return cc_displacementWeights[quot].x;\n    } else if (remainder == 1) {\n      return cc_displacementWeights[quot].y;\n    } else if (remainder == 2) {\n      return cc_displacementWeights[quot].z;\n    } else {\n      return cc_displacementWeights[quot].w;\n    }\n  }\n  vec3 getVec3DisplacementFromTexture(sampler2D tex, int vertexIndex) {\n  #if CC_MORPH_PRECOMPUTED\n    return fetchVec3ArrayFromTexture(tex, vertexIndex).rgb;\n  #else\n    vec3 result = vec3(0, 0, 0);\n    int nVertices = int(cc_displacementTextureInfo.z);\n    for (int iTarget = 0; iTarget < CC_MORPH_TARGET_COUNT; ++iTarget) {\n      result += (fetchVec3ArrayFromTexture(tex, nVertices * iTarget + vertexIndex).rgb * getDisplacementWeight(iTarget));\n    }\n    return result;\n  #endif\n  }\n  #if CC_MORPH_TARGET_HAS_POSITION\n    uniform sampler2D cc_PositionDisplacements;\n    vec3 getPositionDisplacement(int vertexId) {\n      return getVec3DisplacementFromTexture(cc_PositionDisplacements, vertexId);\n    }\n  #endif\n  #if CC_MORPH_TARGET_HAS_NORMAL\n    uniform sampler2D cc_NormalDisplacements;\n    vec3 getNormalDisplacement(int vertexId) {\n      return getVec3DisplacementFromTexture(cc_NormalDisplacements, vertexId);\n    }\n  #endif\n  #if CC_MORPH_TARGET_HAS_TANGENT\n    uniform sampler2D cc_TangentDisplacements;\n    vec3 getTangentDisplacement(int vertexId) {\n      return getVec3DisplacementFromTexture(cc_TangentDisplacements, vertexId);\n    }\n  #endif\n  void applyMorph (inout StandardVertInput attr) {\n    int vertexId = getVertexId();\n  #if CC_MORPH_TARGET_HAS_POSITION\n    attr.position.xyz = attr.position.xyz + getPositionDisplacement(vertexId);\n  #endif\n  #if CC_MORPH_TARGET_HAS_NORMAL\n    attr.normal.xyz = attr.normal.xyz + getNormalDisplacement(vertexId);\n  #endif\n  #if CC_MORPH_TARGET_HAS_TANGENT\n    attr.tangent.xyz = attr.tangent.xyz + getTangentDisplacement(vertexId);\n  #endif\n  }\n  void applyMorph (inout vec4 position) {\n  #if CC_MORPH_TARGET_HAS_POSITION\n    position.xyz = position.xyz + getPositionDisplacement(getVertexId());\n  #endif\n  }\n#endif\n#if CC_USE_SKINNING\n    attribute vec4 a_joints;\n  attribute vec4 a_weights;\n  #if CC_USE_BAKED_ANIMATION\n    #if USE_INSTANCING\n      attribute highp vec4 a_jointAnimInfo;\n    #endif\n    uniform highp vec4 cc_jointTextureInfo;\n    uniform highp vec4 cc_jointAnimInfo;\n    uniform highp sampler2D cc_jointTexture;\n      #else\n    uniform highp vec4 cc_joints[90];\n  #endif\n  #if CC_USE_BAKED_ANIMATION\n    #if CC_DEVICE_SUPPORT_FLOAT_TEXTURE\n      mat4 getJointMatrix (float i) {\n              #if USE_INSTANCING\n                highp float j = 3.0 * (a_jointAnimInfo.x * a_jointAnimInfo.y + i) + a_jointAnimInfo.z;\n              #else\n                highp float j = 3.0 * (cc_jointAnimInfo.x * cc_jointTextureInfo.y + i) + cc_jointTextureInfo.z;\n              #endif\n              highp float invSize = cc_jointTextureInfo.w;\n              highp float y = floor(j * invSize);\n              highp float x = floor(j - y * cc_jointTextureInfo.x);\n              y = (y + 0.5) * invSize;\n        vec4 v1 = texture2D(cc_jointTexture, vec2((x + 0.5) * invSize, y));\n        vec4 v2 = texture2D(cc_jointTexture, vec2((x + 1.5) * invSize, y));\n        vec4 v3 = texture2D(cc_jointTexture, vec2((x + 2.5) * invSize, y));\n        return mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n      }\n    #else\n      mat4 getJointMatrix (float i) {\n              #if USE_INSTANCING\n                highp float j = 12.0 * (a_jointAnimInfo.x * a_jointAnimInfo.y + i) + a_jointAnimInfo.z;\n              #else\n                highp float j = 12.0 * (cc_jointAnimInfo.x * cc_jointTextureInfo.y + i) + cc_jointTextureInfo.z;\n              #endif\n              highp float invSize = cc_jointTextureInfo.w;\n              highp float y = floor(j * invSize);\n              highp float x = floor(j - y * cc_jointTextureInfo.x);\n              y = (y + 0.5) * invSize;\n        vec4 v1 = vec4(\n          decode32(texture2D(cc_jointTexture, vec2((x + 0.5) * invSize, y))),\n          decode32(texture2D(cc_jointTexture, vec2((x + 1.5) * invSize, y))),\n          decode32(texture2D(cc_jointTexture, vec2((x + 2.5) * invSize, y))),\n          decode32(texture2D(cc_jointTexture, vec2((x + 3.5) * invSize, y)))\n        );\n        vec4 v2 = vec4(\n          decode32(texture2D(cc_jointTexture, vec2((x + 4.5) * invSize, y))),\n          decode32(texture2D(cc_jointTexture, vec2((x + 5.5) * invSize, y))),\n          decode32(texture2D(cc_jointTexture, vec2((x + 6.5) * invSize, y))),\n          decode32(texture2D(cc_jointTexture, vec2((x + 7.5) * invSize, y)))\n        );\n        vec4 v3 = vec4(\n          decode32(texture2D(cc_jointTexture, vec2((x + 8.5) * invSize, y))),\n          decode32(texture2D(cc_jointTexture, vec2((x + 9.5) * invSize, y))),\n          decode32(texture2D(cc_jointTexture, vec2((x + 10.5) * invSize, y))),\n          decode32(texture2D(cc_jointTexture, vec2((x + 11.5) * invSize, y)))\n        );\n        return mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n      }\n    #endif\n  #else\n    mat4 getJointMatrix (float i) {\n      int idx = int(i);\n      vec4 v1 = cc_joints[idx * 3];\n      vec4 v2 = cc_joints[idx * 3 + 1];\n      vec4 v3 = cc_joints[idx * 3 + 2];\n      return mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n    }\n  #endif\n  mat4 skinMatrix () {\n    vec4 joints = vec4(a_joints);\n    return getJointMatrix(joints.x) * a_weights.x\n         + getJointMatrix(joints.y) * a_weights.y\n         + getJointMatrix(joints.z) * a_weights.z\n         + getJointMatrix(joints.w) * a_weights.w;\n  }\n  void CCSkin (inout vec4 position) {\n    mat4 m = skinMatrix();\n    position = m * position;\n  }\n  void CCSkin (inout StandardVertInput attr) {\n    mat4 m = skinMatrix();\n    attr.position = m * attr.position;\n    attr.normal = (m * vec4(attr.normal, 0.0)).xyz;\n    attr.tangent.xyz = (m * vec4(attr.tangent.xyz, 0.0)).xyz;\n  }\n#endif\nuniform highp mat4 cc_matView;\n  uniform highp mat4 cc_matProj;\n  uniform highp vec4 cc_cameraPos;\n  uniform mediump vec4 cc_fogBase;\n  uniform mediump vec4 cc_fogAdd;\n#if USE_INSTANCING\n  attribute vec4 a_matWorld0;\n  attribute vec4 a_matWorld1;\n  attribute vec4 a_matWorld2;\n  #if USE_LIGHTMAP\n    attribute vec4 a_lightingMapUVParam;\n  #endif\n#elif USE_BATCHING\n  attribute float a_dyn_batch_id;\n  uniform highp mat4 cc_matWorlds[10];\n#else\n  uniform highp mat4 cc_matWorld;\n  uniform highp mat4 cc_matWorldIT;\n  uniform highp vec4 cc_lightingMapUVParam;\n#endif\n      uniform vec4 tilingOffset;\nfloat LinearFog(vec4 pos) {\n  vec4 wPos = pos;\n  float cam_dis = distance(cc_cameraPos, wPos);\n  float fogStart = cc_fogBase.x;\n  float fogEnd = cc_fogBase.y;\n  return clamp((fogEnd - cam_dis) / (fogEnd - fogStart), 0., 1.);\n}\nfloat ExpFog(vec4 pos) {\n  vec4 wPos = pos;\n  float fogAtten = cc_fogAdd.z;\n  float fogStart = cc_fogBase.x;\n  float fogDensity = cc_fogBase.z;\n  float cam_dis = max(distance(cc_cameraPos, wPos) - fogStart, 0.0) / fogAtten * 4.;\n  float f = exp(-cam_dis * fogDensity);\n  return f;\n}\nfloat ExpSquaredFog(vec4 pos) {\n  vec4 wPos = pos;\n  float fogAtten = cc_fogAdd.z;\n  float fogStart = cc_fogBase.x;\n  float fogDensity = cc_fogBase.z;\n  float cam_dis = max(distance(cc_cameraPos, wPos) - fogStart, 0.0) / fogAtten * 4.;\n  float f = exp(-cam_dis * cam_dis * fogDensity * fogDensity);\n  return f;\n}\nfloat LayeredFog(vec4 pos) {\n  vec4 wPos = pos;\n  float fogAtten = cc_fogAdd.z;\n  float _FogTop = cc_fogAdd.x;\n  float _FogRange = cc_fogAdd.y;\n  vec3 camWorldProj = cc_cameraPos.xyz;\n  camWorldProj.y = 0.;\n  vec3 worldPosProj = wPos.xyz;\n  worldPosProj.y = 0.;\n  float fDeltaD = distance(worldPosProj, camWorldProj) / fogAtten * 2.0;\n  float fDeltaY, fDensityIntegral;\n  if (cc_cameraPos.y > _FogTop) {\n    if (wPos.y < _FogTop) {\n      fDeltaY = (_FogTop - wPos.y) / _FogRange * 2.0;\n      fDensityIntegral = fDeltaY * fDeltaY * 0.5;\n    } else {\n      fDeltaY = 0.;\n      fDensityIntegral = 0.;\n    }\n  } else {\n    if (wPos.y < _FogTop) {\n      float fDeltaA = (_FogTop - cc_cameraPos.y) / _FogRange * 2.;\n      float fDeltaB = (_FogTop - wPos.y) / _FogRange * 2.;\n      fDeltaY = abs(fDeltaA - fDeltaB);\n      fDensityIntegral = abs((fDeltaA * fDeltaA * 0.5) - (fDeltaB * fDeltaB * 0.5));\n    } else {\n      fDeltaY = abs(_FogTop - cc_cameraPos.y) / _FogRange * 2.;\n      fDensityIntegral = abs(fDeltaY * fDeltaY * 0.5);\n    }\n  }\n  float fDensity;\n  if (fDeltaY != 0.) {\n    fDensity = (sqrt(1.0 + ((fDeltaD / fDeltaY) * (fDeltaD / fDeltaY)))) * fDensityIntegral;\n  } else {\n    fDensity = 0.;\n  }\n  float f = exp(-fDensity);\n  return f;\n}\nvoid CC_TRANSFER_FOG_BASE(vec4 pos, out float factor)\n{\n  #if CC_USE_FOG == 0\n\tfactor = LinearFog(pos);\n  #elif CC_USE_FOG == 1\n    factor = ExpFog(pos);\n  #elif CC_USE_FOG == 2\n    factor = ExpSquaredFog(pos);\n  #elif CC_USE_FOG == 3\n    factor = LayeredFog(pos);\n  #else\n    factor = 1.0;\n  #endif\n}\n#if !CC_USE_ACCURATE_FOG\nvarying float v_fog_factor;\n#endif\nvoid CC_TRANSFER_FOG(vec4 pos) {\n#if !CC_USE_ACCURATE_FOG\n    CC_TRANSFER_FOG_BASE(pos, v_fog_factor);\n#endif\n}\nvarying highp vec4 v_shadowPos;\nuniform highp mat4 cc_matLightViewProj;\n#if CC_RECEIVE_SHADOW\n  uniform highp sampler2D cc_shadowMap;\n  uniform highp sampler2D cc_spotLightingMap;\n#endif\n#if USE_VERTEX_COLOR\n  attribute vec4 a_color;\n  varying vec4 v_color;\n#endif\nvarying vec3 v_position;\nvarying vec3 v_normal;\nvarying vec2 v_uv;\nvarying vec2 v_uv1;\n#if USE_NORMAL_MAP\n  varying vec3 v_tangent;\n  varying vec3 v_bitangent;\n#endif\n#if HAS_SECOND_UV || USE_LIGHTMAP\n  attribute vec2 a_texCoord1;\n#endif\n#if USE_LIGHTMAP && !USE_BATCHING && !CC_FORWARD_ADD\n  varying vec3 v_luv;\n  void CCLightingMapCaclUV()\n  {\n  #if !USE_INSTANCING\n    v_luv.xy = cc_lightingMapUVParam.xy + a_texCoord1 * cc_lightingMapUVParam.zw;\n    v_luv.z = cc_lightingMapUVParam.z;\n  #else\n    v_luv.xy = a_lightingMapUVParam.xy + a_texCoord1 * a_lightingMapUVParam.zw;\n    v_luv.z = a_lightingMapUVParam.z;\n  #endif\n  }\n#endif\nvoid main () {\n  StandardVertInput In;\n      In.position = vec4(a_position, 1.0);\n      In.normal = a_normal;\n      In.tangent = a_tangent;\n    #if CC_USE_MORPH\n      applyMorph(In);\n    #endif\n    #if CC_USE_SKINNING\n      CCSkin(In);\n    #endif\n  mat4 matWorld, matWorldIT;\n    #if USE_INSTANCING\n      matWorld = mat4(\n        vec4(a_matWorld0.xyz, 0.0),\n        vec4(a_matWorld1.xyz, 0.0),\n        vec4(a_matWorld2.xyz, 0.0),\n        vec4(a_matWorld0.w, a_matWorld1.w, a_matWorld2.w, 1.0)\n      );\n      matWorldIT = matWorld;\n    #elif USE_BATCHING\n      matWorld = cc_matWorlds[int(a_dyn_batch_id)];\n      matWorldIT = matWorld;\n    #else\n      matWorld = cc_matWorld;\n      matWorldIT = cc_matWorldIT;\n    #endif\n  vec4 pos = matWorld * In.position;\n  v_position = pos.xyz;\n  v_normal = normalize((matWorldIT * vec4(In.normal, 0.0)).xyz);\n  #if USE_TWOSIDE\n    vec3 viewDirect = normalize(cc_cameraPos.xyz - v_position);\n    v_normal *= dot(v_normal, viewDirect) < 0.0 ? -1.0 : 1.0;\n  #endif\n  #if USE_NORMAL_MAP\n    v_tangent = normalize((matWorld * vec4(In.tangent.xyz, 0.0)).xyz);\n    v_bitangent = cross(v_normal, v_tangent) * In.tangent.w;\n  #endif\n  v_uv = a_texCoord * tilingOffset.xy + tilingOffset.zw;\n  #if SAMPLE_FROM_RT\n    v_uv = cc_cameraPos.w > 1.0 ? vec2(v_uv.x, 1.0 - v_uv.y) : v_uv;\n  #endif\n  #if HAS_SECOND_UV\n    v_uv1 = a_texCoord1 * tilingOffset.xy + tilingOffset.zw;\n    #if SAMPLE_FROM_RT\n      v_uv1 = cc_cameraPos.w > 1.0 ? vec2(v_uv1.x, 1.0 - v_uv1.y) : v_uv1;\n    #endif\n  #endif\n  #if USE_VERTEX_COLOR\n    v_color = a_color;\n  #endif\n  CC_TRANSFER_FOG(pos);\n  v_shadowPos = cc_matLightViewProj * pos;\n  #if USE_LIGHTMAP && !USE_BATCHING && !CC_FORWARD_ADD\n    CCLightingMapCaclUV();\n  #endif\n  gl_Position = cc_matProj * (cc_matView * matWorld) * In.position;\n}","frag":"\n#ifdef GL_EXT_draw_buffers\n#extension GL_EXT_draw_buffers: enable\n#endif\n#ifdef GL_OES_standard_derivatives\n#extension GL_OES_standard_derivatives: enable\n#endif\n#ifdef GL_EXT_shader_texture_lod\n#extension GL_EXT_shader_texture_lod: enable\n#endif\nprecision highp float;\nuniform highp mat4 cc_matView;\n  uniform highp vec4 cc_cameraPos;\n  uniform mediump vec4 cc_mainLitDir;\n  uniform mediump vec4 cc_mainLitColor;\n  uniform mediump vec4 cc_ambientSky;\n  uniform mediump vec4 cc_ambientGround;\n  uniform mediump vec4 cc_fogColor;\n  uniform mediump vec4 cc_fogBase;\n  uniform mediump vec4 cc_fogAdd;\n  uniform mediump vec4 cc_nearFar;\n  uniform mediump vec4 cc_viewPort;\n     uniform vec4 albedo;\n     uniform vec4 albedoScaleAndCutoff;\n     uniform vec4 pbrParams;\n     uniform vec4 emissive;\n     uniform vec4 emissiveScaleParam;\nfloat LinearFog(vec4 pos) {\n  vec4 wPos = pos;\n  float cam_dis = distance(cc_cameraPos, wPos);\n  float fogStart = cc_fogBase.x;\n  float fogEnd = cc_fogBase.y;\n  return clamp((fogEnd - cam_dis) / (fogEnd - fogStart), 0., 1.);\n}\nfloat ExpFog(vec4 pos) {\n  vec4 wPos = pos;\n  float fogAtten = cc_fogAdd.z;\n  float fogStart = cc_fogBase.x;\n  float fogDensity = cc_fogBase.z;\n  float cam_dis = max(distance(cc_cameraPos, wPos) - fogStart, 0.0) / fogAtten * 4.;\n  float f = exp(-cam_dis * fogDensity);\n  return f;\n}\nfloat ExpSquaredFog(vec4 pos) {\n  vec4 wPos = pos;\n  float fogAtten = cc_fogAdd.z;\n  float fogStart = cc_fogBase.x;\n  float fogDensity = cc_fogBase.z;\n  float cam_dis = max(distance(cc_cameraPos, wPos) - fogStart, 0.0) / fogAtten * 4.;\n  float f = exp(-cam_dis * cam_dis * fogDensity * fogDensity);\n  return f;\n}\nfloat LayeredFog(vec4 pos) {\n  vec4 wPos = pos;\n  float fogAtten = cc_fogAdd.z;\n  float _FogTop = cc_fogAdd.x;\n  float _FogRange = cc_fogAdd.y;\n  vec3 camWorldProj = cc_cameraPos.xyz;\n  camWorldProj.y = 0.;\n  vec3 worldPosProj = wPos.xyz;\n  worldPosProj.y = 0.;\n  float fDeltaD = distance(worldPosProj, camWorldProj) / fogAtten * 2.0;\n  float fDeltaY, fDensityIntegral;\n  if (cc_cameraPos.y > _FogTop) {\n    if (wPos.y < _FogTop) {\n      fDeltaY = (_FogTop - wPos.y) / _FogRange * 2.0;\n      fDensityIntegral = fDeltaY * fDeltaY * 0.5;\n    } else {\n      fDeltaY = 0.;\n      fDensityIntegral = 0.;\n    }\n  } else {\n    if (wPos.y < _FogTop) {\n      float fDeltaA = (_FogTop - cc_cameraPos.y) / _FogRange * 2.;\n      float fDeltaB = (_FogTop - wPos.y) / _FogRange * 2.;\n      fDeltaY = abs(fDeltaA - fDeltaB);\n      fDensityIntegral = abs((fDeltaA * fDeltaA * 0.5) - (fDeltaB * fDeltaB * 0.5));\n    } else {\n      fDeltaY = abs(_FogTop - cc_cameraPos.y) / _FogRange * 2.;\n      fDensityIntegral = abs(fDeltaY * fDeltaY * 0.5);\n    }\n  }\n  float fDensity;\n  if (fDeltaY != 0.) {\n    fDensity = (sqrt(1.0 + ((fDeltaD / fDeltaY) * (fDeltaD / fDeltaY)))) * fDensityIntegral;\n  } else {\n    fDensity = 0.;\n  }\n  float f = exp(-fDensity);\n  return f;\n}\nvoid CC_TRANSFER_FOG_BASE(vec4 pos, out float factor)\n{\n  #if CC_USE_FOG == 0\n\tfactor = LinearFog(pos);\n  #elif CC_USE_FOG == 1\n    factor = ExpFog(pos);\n  #elif CC_USE_FOG == 2\n    factor = ExpSquaredFog(pos);\n  #elif CC_USE_FOG == 3\n    factor = LayeredFog(pos);\n  #else\n    factor = 1.0;\n  #endif\n}\nvoid CC_APPLY_FOG_BASE(inout vec4 color, float factor) {\n  color = vec4(mix(cc_fogColor.rgb, color.rgb, factor), color.a);\n}\n#if !CC_USE_ACCURATE_FOG\nvarying float v_fog_factor;\n#endif\nvoid CC_APPLY_FOG(inout vec4 color) {\n#if !CC_USE_ACCURATE_FOG\n    CC_APPLY_FOG_BASE(color, v_fog_factor);\n#endif\n}\nvoid CC_APPLY_FOG(inout vec4 color, vec3 worldPos) {\n#if CC_USE_ACCURATE_FOG\n    float factor;\n    CC_TRANSFER_FOG_BASE(vec4(worldPos, 1.0), factor);\n#else\n    float factor = v_fog_factor;\n#endif\n    CC_APPLY_FOG_BASE(color, factor);\n}\nvec3 SRGBToLinear (vec3 gamma) {\n  return gamma * gamma;\n}\nuniform highp mat4 cc_matLightView;\n  uniform highp vec4 cc_shadowInvProjDepthInfo;\n  uniform highp vec4 cc_shadowProjDepthInfo;\n  uniform highp vec4 cc_shadowProjInfo;\n  uniform mediump vec4 cc_shadowNFLSInfo;\n  uniform mediump vec4 cc_shadowWHPBInfo;\n  uniform mediump vec4 cc_shadowLPNNInfo;\nhighp float unpackHighpData (float mainPart, float modPart) {\n  highp float data = mainPart;\n  return data + modPart;\n}\nvoid packHighpData (out float mainPart, out float modPart, highp float data) {\n  mainPart = fract(data);\n  modPart = data - mainPart;\n}\nhighp float unpackHighpData (float mainPart, float modPart, const float modValue) {\n  highp float data = mainPart * modValue;\n  return data + modPart * modValue;\n}\nvoid packHighpData (out float mainPart, out float modPart, highp float data, const float modValue) {\n  highp float divide = data / modValue;\n  mainPart = floor(divide);\n  modPart = (data - mainPart * modValue) / modValue;\n}\nhighp vec2 unpackHighpData (vec2 mainPart, vec2 modPart) {\n  highp vec2 data = mainPart;\n  return data + modPart;\n}\nvoid packHighpData (out vec2 mainPart, out vec2 modPart, highp vec2 data) {\n  mainPart = fract(data);\n  modPart = data - mainPart;\n}\nhighp vec2 unpackHighpData (vec2 mainPart, vec2 modPart, const float modValue) {\n  highp vec2 data = mainPart * modValue;\n  return data + modPart * modValue;\n}\nvoid packHighpData (out vec2 mainPart, out vec2 modPart, highp vec2 data, const float modValue) {\n  highp vec2 divide = data / modValue;\n  mainPart = floor(divide);\n  modPart = (data - mainPart * modValue) / modValue;\n}\nhighp vec3 unpackHighpData (vec3 mainPart, vec3 modPart) {\n  highp vec3 data = mainPart;\n  return data + modPart;\n}\nvoid packHighpData (out vec3 mainPart, out vec3 modPart, highp vec3 data) {\n  mainPart = fract(data);\n  modPart = data - mainPart;\n}\nhighp vec3 unpackHighpData (vec3 mainPart, vec3 modPart, const float modValue) {\n  highp vec3 data = mainPart * modValue;\n  return data + modPart * modValue;\n}\nvoid packHighpData (out vec3 mainPart, out vec3 modPart, highp vec3 data, const float modValue) {\n  highp vec3 divide = data / modValue;\n  mainPart = floor(divide);\n  modPart = (data - mainPart * modValue) / modValue;\n}\nhighp vec4 unpackHighpData (vec4 mainPart, vec4 modPart) {\n  highp vec4 data = mainPart;\n  return data + modPart;\n}\nvoid packHighpData (out vec4 mainPart, out vec4 modPart, highp vec4 data) {\n  mainPart = fract(data);\n  modPart = data - mainPart;\n}\nhighp vec4 unpackHighpData (vec4 mainPart, vec4 modPart, const float modValue) {\n  highp vec4 data = mainPart * modValue;\n  return data + modPart * modValue;\n}\nvoid packHighpData (out vec4 mainPart, out vec4 modPart, highp vec4 data, const float modValue) {\n  highp vec4 divide = data / modValue;\n  mainPart = floor(divide);\n  modPart = (data - mainPart * modValue) / modValue;\n}\nfloat CCGetLinearDepthFromViewSpace(vec3 viewPos) {\n  float dist = length(viewPos);\n  return (dist - cc_shadowNFLSInfo.x) / (cc_shadowNFLSInfo.y - cc_shadowNFLSInfo.x);\n}\nfloat CCGetLinearDepth(vec3 worldPos) {\n  vec4 viewStartPos = cc_matLightView * vec4(worldPos.xyz, 1.0);\n  return CCGetLinearDepthFromViewSpace(viewStartPos.xyz);\n}\n#if CC_RECEIVE_SHADOW\n  uniform highp sampler2D cc_shadowMap;\n  uniform highp sampler2D cc_spotLightingMap;\n  vec4 ApplyShadowDepthBias_FaceNormal(vec4 shadowPos, vec3 worldNormal)\n  {\n    vec4 newShadowPos = shadowPos;\n    if(cc_shadowLPNNInfo.z > 0.0001)\n    {\n      vec4 viewNormal = cc_matLightView * vec4(worldNormal, 0.0);\n      if(viewNormal.z < 0.1)\n        newShadowPos.xy += viewNormal.xy * cc_shadowProjInfo.xy * cc_shadowLPNNInfo.z * clamp(viewNormal.z, 0.001, 0.1);\n    }\n    return newShadowPos;\n  }\n  vec4 ApplyShadowDepthBias_Perspective(vec4 shadowPos, float viewspaceDepthBias)\n  {\n    vec3 viewSpacePos;\n    viewSpacePos.xy = shadowPos.xy * cc_shadowProjInfo.zw;\n    viewSpacePos.z = shadowPos.z * cc_shadowInvProjDepthInfo.x + shadowPos.w * cc_shadowInvProjDepthInfo.y;\n    viewSpacePos.xyz += cc_shadowProjDepthInfo.z * normalize(viewSpacePos.xyz) * viewspaceDepthBias;\n    vec4 clipSpacePos;\n    clipSpacePos.xy = viewSpacePos.xy * cc_shadowProjInfo.xy;\n    clipSpacePos.zw = viewSpacePos.z * cc_shadowProjDepthInfo.xz + vec2(cc_shadowProjDepthInfo.y, 0.0);\n    if (cc_shadowNFLSInfo.z > 0.000001) {\n      clipSpacePos.z = CCGetLinearDepthFromViewSpace(viewSpacePos.xyz);\n      clipSpacePos.z = (clipSpacePos.z * 2.0 - 1.0) * clipSpacePos.w;\n    }\n    return clipSpacePos;\n  }\n  vec4 ApplyShadowDepthBias_Orthographic(vec4 shadowPos, float viewspaceDepthBias)\n  {\n    float coeffA = cc_shadowProjDepthInfo.x;\n    float coeffB = cc_shadowProjDepthInfo.y;\n    float viewSpacePos_z = (shadowPos.z - coeffB) / coeffA;\n    viewSpacePos_z += viewspaceDepthBias;\n    vec4 result = shadowPos;\n    result.z = viewSpacePos_z * coeffA + coeffB;\n    return result;\n  }\n  float CCGetShadowFactorHard (vec4 shadowPos) {\n    vec4 clipPosNew = ApplyShadowDepthBias_Orthographic(shadowPos, cc_shadowWHPBInfo.w);\n    vec3 clipPos = clipPosNew.xyz / clipPosNew.w * 0.5 + 0.5;\n    if (clipPos.x < 0.0 || clipPos.x > 1.0 ||\n        clipPos.y < 0.0 || clipPos.y > 1.0 ||\n        clipPos.z < 0.0 || clipPos.z > 1.0) { return 1.0; }\n    clipPos.xy = cc_cameraPos.w == 1.0 ? vec2(clipPos.xy.x, 1.0 - clipPos.xy.y) : clipPos.xy;\n    float shadow = 0.0;\n    float closestDepth = 0.0;\n    if (cc_shadowLPNNInfo.y > 0.000001) {\n      closestDepth = dot(texture2D(cc_shadowMap, clipPos.xy), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0));\n    } else {\n      closestDepth = texture2D(cc_shadowMap, clipPos.xy).x;\n    }\n    shadow = step(clipPos.z, closestDepth);\n    return shadow;\n  }\n  float CCGetShadowFactorSoft (vec4 shadowPos) {\n    vec4 clipPosNew = ApplyShadowDepthBias_Orthographic(shadowPos, cc_shadowWHPBInfo.w);\n    vec3 clipPos = clipPosNew.xyz / clipPosNew.w * 0.5 + 0.5;\n    if (clipPos.x < 0.0 || clipPos.x > 1.0 ||\n        clipPos.y < 0.0 || clipPos.y > 1.0 ||\n        clipPos.z < 0.0 || clipPos.z > 1.0) { return 1.0; }\n    clipPos.xy = cc_cameraPos.w == 1.0 ? vec2(clipPos.xy.x, 1.0 - clipPos.xy.y) : clipPos.xy;\n    float offsetDepth = clipPos.z;\n    vec2 mapSize = cc_shadowWHPBInfo.xy;\n    vec2 oneTap = 1.0 / mapSize;\n    vec2 clipPos_offset = clipPos.xy + oneTap;\n    float block0, block1, block2, block3;\n    if (cc_shadowLPNNInfo.y > 0.000001) {\n      block0 = step(offsetDepth, dot(texture2D(cc_shadowMap, vec2(clipPos.x, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n      block1 = step(offsetDepth, dot(texture2D(cc_shadowMap, vec2(clipPos_offset.x, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n      block2 = step(offsetDepth, dot(texture2D(cc_shadowMap, vec2(clipPos.x, clipPos_offset.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n      block3 = step(offsetDepth, dot(texture2D(cc_shadowMap, vec2(clipPos_offset.x, clipPos_offset.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n    } else {\n      block0 = step(offsetDepth, texture2D(cc_shadowMap, vec2(clipPos.x, clipPos.y)).x);\n      block1 = step(offsetDepth, texture2D(cc_shadowMap, vec2(clipPos_offset.x, clipPos.y)).x);\n      block2 = step(offsetDepth, texture2D(cc_shadowMap, vec2(clipPos.x, clipPos_offset.y)).x);\n      block3 = step(offsetDepth, texture2D(cc_shadowMap, vec2(clipPos_offset.x, clipPos_offset.y)).x);\n    }\n    float coefX   = mod(clipPos.x, oneTap.x) * mapSize.x;\n    float resultX = mix(block0, block1, coefX);\n    float resultY = mix(block2, block3, coefX);\n    float coefY   = mod(clipPos.y, oneTap.y) * mapSize.y;\n    return mix(resultX, resultY, coefY);\n  }\n  float CCGetShadowFactorSoft2X (vec4 shadowPos) {\n    vec4 clipPosNew = ApplyShadowDepthBias_Orthographic(shadowPos, cc_shadowWHPBInfo.w);\n    vec3 clipPos = clipPosNew.xyz / clipPosNew.w * 0.5 + 0.5;\n    if (clipPos.x < 0.0 || clipPos.x > 1.0 ||\n        clipPos.y < 0.0 || clipPos.y > 1.0 ||\n        clipPos.z < 0.0 || clipPos.z > 1.0) { return 1.0; }\n    clipPos.xy = cc_cameraPos.w == 1.0 ? vec2(clipPos.xy.x, 1.0 - clipPos.xy.y) : clipPos.xy;\n    float offsetDepth = clipPos.z;\n    vec2 mapSize = cc_shadowWHPBInfo.xy;\n    vec2 oneTap = 1.0 / mapSize;\n    float clipPos_offset_L = clipPos.x - oneTap.x;\n    float clipPos_offset_R = clipPos.x + oneTap.x;\n    float clipPos_offset_U = clipPos.y - oneTap.y;\n    float clipPos_offset_D = clipPos.y + oneTap.y;\n    float block0, block1, block2, block3, block4, block5, block6, block7, block8;\n    if (cc_shadowLPNNInfo.y > 0.000001) {\n      block0 = step(offsetDepth, dot(texture2D(cc_shadowMap, vec2(clipPos_offset_L, clipPos_offset_U)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n      block1 = step(offsetDepth, dot(texture2D(cc_shadowMap, vec2(clipPos.x, clipPos_offset_U)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n      block2 = step(offsetDepth, dot(texture2D(cc_shadowMap, vec2(clipPos_offset_R, clipPos_offset_U)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n      block3 = step(offsetDepth, dot(texture2D(cc_shadowMap, vec2(clipPos_offset_L, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n      block4 = step(offsetDepth, dot(texture2D(cc_shadowMap, vec2(clipPos.x, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n      block5 = step(offsetDepth, dot(texture2D(cc_shadowMap, vec2(clipPos_offset_R, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n      block6 = step(offsetDepth, dot(texture2D(cc_shadowMap, vec2(clipPos_offset_L, clipPos_offset_D)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n      block7 = step(offsetDepth, dot(texture2D(cc_shadowMap, vec2(clipPos.x, clipPos_offset_D)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n      block8 = step(offsetDepth, dot(texture2D(cc_shadowMap, vec2(clipPos_offset_R, clipPos_offset_D)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n    } else {\n      block0 = step(offsetDepth, texture2D(cc_shadowMap, vec2(clipPos_offset_L, clipPos_offset_U)).x);\n      block1 = step(offsetDepth, texture2D(cc_shadowMap, vec2(clipPos.x, clipPos_offset_U)).x);\n      block2 = step(offsetDepth, texture2D(cc_shadowMap, vec2(clipPos_offset_R, clipPos_offset_U)).x);\n      block3 = step(offsetDepth, texture2D(cc_shadowMap, vec2(clipPos_offset_L, clipPos.y)).x);\n      block4 = step(offsetDepth, texture2D(cc_shadowMap, vec2(clipPos.x, clipPos.y)).x);\n      block5 = step(offsetDepth, texture2D(cc_shadowMap, vec2(clipPos_offset_R, clipPos.y)).x);\n      block6 = step(offsetDepth, texture2D(cc_shadowMap, vec2(clipPos_offset_L, clipPos_offset_D)).x);\n      block7 = step(offsetDepth, texture2D(cc_shadowMap, vec2(clipPos.x, clipPos_offset_D)).x);\n      block8 = step(offsetDepth, texture2D(cc_shadowMap, vec2(clipPos_offset_R, clipPos_offset_D)).x);\n    }\n    float coefX = mod(clipPos.x, oneTap.x) * mapSize.x;\n    float coefY = mod(clipPos.y, oneTap.y) * mapSize.y;\n    float shadow = 0.0;\n    float resultX = mix(block0, block1, coefX);\n    float resultY = mix(block3, block4, coefX);\n    shadow += mix(resultX , resultY, coefY);\n    resultX = mix(block1, block2, coefX);\n    resultY = mix(block4, block5, coefX);\n    shadow += mix(resultX , resultY, coefY);\n    resultX = mix(block3, block4, coefX);\n    resultY = mix(block6, block7, coefX);\n    shadow += mix(resultX, resultY, coefY);\n    resultX = mix(block4, block5, coefX);\n    resultY = mix(block7, block8, coefX);\n    shadow += mix(resultX, resultY, coefY);\n    return shadow * 0.25;\n  }\n  float CCGetSpotLightShadowFactorHard (vec4 shadowPos, vec3 worldPos) {\n    vec4 clipPosNew = ApplyShadowDepthBias_Perspective(shadowPos, cc_shadowWHPBInfo.w);\n    vec3 clipPos = clipPosNew.xyz / clipPosNew.w * 0.5 + 0.5;\n    if (clipPos.x < 0.0 || clipPos.x > 1.0 ||\n        clipPos.y < 0.0 || clipPos.y > 1.0 ||\n        clipPos.z < 0.0 || clipPos.z > 1.0) { return 1.0; }\n    clipPos.xy = cc_cameraPos.w == 1.0 ? vec2(clipPos.xy.x, 1.0 - clipPos.xy.y) : clipPos.xy;\n    float shadow = 0.0;\n    float closestDepth = 0.0;\n    float depth = clipPos.z;\n    if (cc_shadowLPNNInfo.y > 0.000001) {\n      closestDepth = dot(texture2D(cc_spotLightingMap, clipPos.xy), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0));\n    } else {\n      closestDepth = texture2D(cc_spotLightingMap, clipPos.xy).x;\n    }\n    shadow = step(depth, closestDepth);\n    return shadow;\n  }\n  float CCGetSpotLightShadowFactorSoft (vec4 shadowPos, vec3 worldPos) {\n    vec4 clipPosNew = ApplyShadowDepthBias_Perspective(shadowPos, cc_shadowWHPBInfo.w);\n    vec3 clipPos = clipPosNew.xyz / clipPosNew.w * 0.5 + 0.5;\n    if (clipPos.x < 0.0 || clipPos.x > 1.0 ||\n        clipPos.y < 0.0 || clipPos.y > 1.0 ||\n        clipPos.z < 0.0 || clipPos.z > 1.0) { return 1.0; }\n    clipPos.xy = cc_cameraPos.w == 1.0 ? vec2(clipPos.xy.x, 1.0 - clipPos.xy.y) : clipPos.xy;\n    float depth = 0.0;\n    if (cc_shadowNFLSInfo.z > 0.000001) {\n      depth = CCGetLinearDepth(worldPos);\n    } else {\n      depth = clipPos.z;\n    }\n    float bias = cc_shadowWHPBInfo.w;\n    vec2 oneTap = 1.0 / cc_shadowWHPBInfo.xy;\n    vec2 clipPos_offset = clipPos.xy + oneTap;\n    float block0, block1, block2, block3;\n    if (cc_shadowLPNNInfo.y > 0.000001) {\n      block0 = step(depth, dot(texture2D(cc_spotLightingMap, vec2(clipPos.x, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n      block1 = step(depth, dot(texture2D(cc_spotLightingMap, vec2(clipPos_offset.x, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n      block2 = step(depth, dot(texture2D(cc_spotLightingMap, vec2(clipPos.x, clipPos_offset.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n      block3 = step(depth, dot(texture2D(cc_spotLightingMap, vec2(clipPos_offset.x, clipPos_offset.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n    } else {\n      block0 = step(depth, texture2D(cc_spotLightingMap, vec2(clipPos.x, clipPos.y)).x);\n      block1 = step(depth, texture2D(cc_spotLightingMap, vec2(clipPos_offset.x, clipPos.y)).x);\n      block2 = step(depth, texture2D(cc_spotLightingMap, vec2(clipPos.x, clipPos_offset.y)).x);\n      block3 = step(depth, texture2D(cc_spotLightingMap, vec2(clipPos_offset.x, clipPos_offset.y)).x);\n    }\n    float coefX   = mod(clipPos.x, oneTap.x) * cc_shadowWHPBInfo.x;\n    float resultX = mix(block0, block1, coefX);\n    float resultY = mix(block2, block3, coefX);\n    float coefY   = mod(clipPos.y, oneTap.y) * cc_shadowWHPBInfo.y;\n    return mix(resultX, resultY, coefY);\n  }\n  float CCGetSpotLightShadowFactorSoft2X (vec4 shadowPos, vec3 worldPos) {\n    vec4 clipPosNew = ApplyShadowDepthBias_Perspective(shadowPos, cc_shadowWHPBInfo.w);\n    vec3 clipPos = clipPosNew.xyz / clipPosNew.w * 0.5 + 0.5;\n    if (clipPos.x < 0.0 || clipPos.x > 1.0 ||\n        clipPos.y < 0.0 || clipPos.y > 1.0 ||\n        clipPos.z < 0.0 || clipPos.z > 1.0) { return 1.0; }\n    clipPos.xy = cc_cameraPos.w == 1.0 ? vec2(clipPos.xy.x, 1.0 - clipPos.xy.y) : clipPos.xy;\n    float depth = 0.0;\n    if (cc_shadowNFLSInfo.z > 0.000001) {\n      depth = CCGetLinearDepth(worldPos);\n    } else {\n      depth = clipPos.z;\n    }\n    float bias = cc_shadowWHPBInfo.w;\n    vec2 mapSize = cc_shadowWHPBInfo.xy;\n    vec2 oneTap = 1.0 / mapSize;\n    float clipPos_offset_L = clipPos.x - oneTap.x;\n    float clipPos_offset_R = clipPos.x + oneTap.x;\n    float clipPos_offset_U = clipPos.y - oneTap.y;\n    float clipPos_offset_D = clipPos.y + oneTap.y;\n    float block0, block1, block2, block3, block4, block5, block6, block7, block8;\n    if (cc_shadowLPNNInfo.y > 0.000001) {\n      block0 = step(depth, dot(texture2D(cc_spotLightingMap, vec2(clipPos_offset_L, clipPos_offset_U)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n      block1 = step(depth, dot(texture2D(cc_spotLightingMap, vec2(clipPos.x, clipPos_offset_U)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n      block2 = step(depth, dot(texture2D(cc_spotLightingMap, vec2(clipPos_offset_R, clipPos_offset_U)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n      block3 = step(depth, dot(texture2D(cc_spotLightingMap, vec2(clipPos_offset_L, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n      block4 = step(depth, dot(texture2D(cc_spotLightingMap, vec2(clipPos.x, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n      block5 = step(depth, dot(texture2D(cc_spotLightingMap, vec2(clipPos_offset_R, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n      block6 = step(depth, dot(texture2D(cc_spotLightingMap, vec2(clipPos_offset_L, clipPos_offset_D)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n      block7 = step(depth, dot(texture2D(cc_spotLightingMap, vec2(clipPos.x, clipPos_offset_D)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n      block8 = step(depth, dot(texture2D(cc_spotLightingMap, vec2(clipPos_offset_R, clipPos_offset_D)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n    } else {\n      block0 = step(depth, texture2D(cc_spotLightingMap, vec2(clipPos_offset_L, clipPos_offset_U)).x);\n      block1 = step(depth, texture2D(cc_spotLightingMap, vec2(clipPos.x, clipPos_offset_U)).x);\n      block2 = step(depth, texture2D(cc_spotLightingMap, vec2(clipPos_offset_R, clipPos_offset_U)).x);\n      block3 = step(depth, texture2D(cc_spotLightingMap, vec2(clipPos_offset_L, clipPos.y)).x);\n      block4 = step(depth, texture2D(cc_spotLightingMap, vec2(clipPos.x, clipPos.y)).x);\n      block5 = step(depth, texture2D(cc_spotLightingMap, vec2(clipPos_offset_R, clipPos.y)).x);\n      block6 = step(depth, texture2D(cc_spotLightingMap, vec2(clipPos_offset_L, clipPos_offset_D)).x);\n      block7 = step(depth, texture2D(cc_spotLightingMap, vec2(clipPos.x, clipPos_offset_D)).x);\n      block8 = step(depth, texture2D(cc_spotLightingMap, vec2(clipPos_offset_R, clipPos_offset_D)).x);\n    }\n    float coefX = mod(clipPos.x, oneTap.x) * mapSize.x;\n    float coefY = mod(clipPos.y, oneTap.y) * mapSize.y;\n    float shadow = 0.0;\n    float resultX = mix(block0, block1, coefX);\n    float resultY = mix(block3, block4, coefX);\n    shadow += mix(resultX , resultY, coefY);\n    resultX = mix(block1, block2, coefX);\n    resultY = mix(block4, block5, coefX);\n    shadow += mix(resultX , resultY, coefY);\n    resultX = mix(block3, block4, coefX);\n    resultY = mix(block6, block7, coefX);\n    shadow += mix(resultX, resultY, coefY);\n    resultX = mix(block4, block5, coefX);\n    resultY = mix(block7, block8, coefX);\n    shadow += mix(resultX, resultY, coefY);\n    return shadow * 0.25;\n  }\n#endif\n#if CC_USE_IBL\n  uniform samplerCube cc_environment;\n  vec4 fragTextureLod (sampler2D tex, vec2 coord, float lod) {\n      #ifdef GL_EXT_shader_texture_lod\n        return texture2DLodEXT(tex, coord, lod);\n      #else\n        return texture2D(tex, coord, lod);\n      #endif\n  }\n  vec4 fragTextureLod (samplerCube tex, vec3 coord, float lod) {\n      #ifdef GL_EXT_shader_texture_lod\n        return textureCubeLodEXT(tex, coord, lod);\n      #else\n        return textureCube(tex, coord, lod);\n      #endif\n  }\n  vec3 unpackRGBE (vec4 rgbe) {\n    return rgbe.rgb * pow(1.1, rgbe.a * 255.0 - 128.0);\n  }\n  #if CC_USE_DIFFUSEMAP\n    uniform samplerCube cc_diffuseMap;\n  #endif\n#endif\nfloat GGXMobile (float roughness, float NoH, vec3 H, vec3 N) {\n  vec3 NxH = cross(N, H);\n  float OneMinusNoHSqr = dot(NxH, NxH);\n  float a = roughness * roughness;\n  float n = NoH * a;\n  float p = a / (OneMinusNoHSqr + n * n);\n  return p * p;\n}\nfloat CalcSpecular (float roughness, float NoH, vec3 H, vec3 N) {\n  return (roughness * 0.25 + 0.25) * GGXMobile(roughness, NoH, H, N);\n}\nvec3 BRDFApprox (vec3 specular, float roughness, float NoV) {\n  const vec4 c0 = vec4(-1.0, -0.0275, -0.572, 0.022);\n  const vec4 c1 = vec4(1.0, 0.0425, 1.04, -0.04);\n  vec4 r = roughness * c0 + c1;\n  float a004 = min(r.x * r.x, exp2(-9.28 * NoV)) * r.x + r.y;\n  vec2 AB = vec2(-1.04, 1.04) * a004 + r.zw;\n  AB.y *= clamp(50.0 * specular.g, 0.0, 1.0);\n  return specular * AB.x + AB.y;\n}\n#if USE_REFLECTION_DENOISE\n  vec3 GetEnvReflectionWithMipFiltering(vec3 R, float roughness, float mipCount, float denoiseIntensity) {\n    #if CC_USE_IBL\n    \tfloat mip = roughness * mipCount;\n    \tfloat delta = (dot(dFdx(R), dFdy(R))) * 1000.0;\n    \tfloat mipBias = mix(0.0, 5.0, clamp(delta, 0.0, 1.0));\n    \tvec4 biased = fragTextureLod(cc_environment, R, mip + mipBias);\n     \tvec4 filtered = textureCube(cc_environment, R);\n      #if CC_USE_IBL == 2\n      \tbiased.rgb = unpackRGBE(biased);\n      \tfiltered.rgb = unpackRGBE(filtered);\n      #else\n      \tbiased.rgb = SRGBToLinear(biased.rgb);\n      \tfiltered.rgb = SRGBToLinear(filtered.rgb);\n      #endif\n      return mix(biased.rgb, filtered.rgb, denoiseIntensity);\n    #else\n      return vec3(0.0, 0.0, 0.0);\n    #endif\n  }\n#endif\nstruct StandardSurface {\n  vec4 albedo;\n  #if CC_PLATFORM_ANDROID_AND_WEBGL && CC_ENABLE_WEBGL_HIGHP_STRUCT_VALUES\n  vec3 position, position_fract_part;\n  #else\n  vec3 position;\n  #endif\n  vec3 normal;\n  vec3 emissive;\n  vec3 lightmap;\n  float lightmap_test;\n  float roughness;\n  float metallic;\n  float occlusion;\n};\nvec4 CCStandardShadingBase (StandardSurface s, vec4 shadowPos) {\n  vec3 diffuse = s.albedo.rgb * (1.0 - s.metallic);\n  vec3 specular = mix(vec3(0.04), s.albedo.rgb, s.metallic);\n  vec3 position;\n  #if CC_PLATFORM_ANDROID_AND_WEBGL && CC_ENABLE_WEBGL_HIGHP_STRUCT_VALUES\n  position = unpackHighpData(s.position, s.position_fract_part);\n  #else\n  position = s.position;\n  #endif\n  vec3 N = normalize(s.normal);\n  vec3 V = normalize(cc_cameraPos.xyz - position);\n  float NV = max(abs(dot(N, V)), 0.0);\n  specular = BRDFApprox(specular, s.roughness, NV);\n  vec3 L = normalize(-cc_mainLitDir.xyz);\n  vec3 H = normalize(L + V);\n  float NH = max(dot(N, H), 0.0);\n  float NL = max(dot(N, L), 0.0);\n  vec3 finalColor = NL * cc_mainLitColor.rgb * cc_mainLitColor.w;\n  vec3 diffuseContrib = diffuse;\n  #if USE_LIGHTMAP && !USE_BATCHING && !CC_FORWARD_ADD\n    if (s.lightmap_test > 0.0001) {\n      finalColor = s.lightmap.rgb;\n    }\n  #else\n    diffuseContrib /= 3.14159265359;\n  #endif\n  vec3 specularContrib = specular * CalcSpecular(s.roughness, NH, H, N);\n  vec3 dirlightContrib = (diffuseContrib + specularContrib);\n  float shadow = 1.0;\n  #if CC_RECEIVE_SHADOW\n    if (NL > 0.0 && cc_mainLitDir.w > 0.0) {\n      {\n        vec4 pos = ApplyShadowDepthBias_FaceNormal(shadowPos, N);\n        float pcf = cc_shadowWHPBInfo.z;\n        if (pcf > 1.9) shadow = CCGetShadowFactorSoft2X(pos);\n        else if (pcf > 0.9) shadow = CCGetShadowFactorSoft(pos);\n        else shadow = CCGetShadowFactorHard(pos);\n        shadow = mix(shadow, 1.0, cc_shadowNFLSInfo.w);\n      }\n    }\n  #endif\n  dirlightContrib *= shadow;\n  finalColor *= dirlightContrib;\n  float fAmb = 0.5 - N.y * 0.5;\n  vec3 ambDiff = mix(cc_ambientSky.rgb, cc_ambientGround.rgb, fAmb);\n  #if CC_USE_IBL\n    #if CC_USE_DIFFUSEMAP\n      vec4 diffuseMap = textureCube(cc_diffuseMap, N);\n      #if CC_USE_DIFFUSEMAP == 2\n        ambDiff = unpackRGBE(diffuseMap);\n      #else\n        ambDiff = SRGBToLinear(diffuseMap.rgb);\n      #endif\n    #endif\n    vec3 R = normalize(reflect(-V, N));\n    #if USE_REFLECTION_DENOISE\n      vec3 env = GetEnvReflectionWithMipFiltering(R, s.roughness, cc_ambientGround.w, 0.6);\n    #else\n      vec4 envmap = fragTextureLod(cc_environment, R, s.roughness * cc_ambientGround.w);\n      #if CC_USE_IBL == 2\n        vec3 env = unpackRGBE(envmap);\n      #else\n        vec3 env = SRGBToLinear(envmap.rgb);\n      #endif\n    #endif\n    finalColor += env * cc_ambientSky.w * specular * s.occlusion;\n  #endif\n  finalColor += ambDiff.rgb * cc_ambientSky.w * diffuse * s.occlusion;\n  finalColor += s.emissive;\n  return vec4(finalColor, s.albedo.a);\n}\nvec3 ACESToneMap (vec3 color) {\n  color = min(color, vec3(8.0));\n  const float A = 2.51;\n  const float B = 0.03;\n  const float C = 2.43;\n  const float D = 0.59;\n  const float E = 0.14;\n  return (color * (A * color + B)) / (color * (C * color + D) + E);\n}\nvec4 CCFragOutput (vec4 color) {\n  #if CC_USE_HDR\n    color.rgb = ACESToneMap(color.rgb);\n  #endif\n  color.rgb = sqrt(color.rgb);\n  return color;\n}\nvarying highp vec4 v_shadowPos;\n#if USE_LIGHTMAP && !USE_BATCHING && !CC_FORWARD_ADD\n  varying vec3 v_luv;\n  uniform sampler2D cc_lightingMap;\n  vec3 UnpackLightingmap(vec4 color) {\n    vec3 c;\n    float e = 1.0 + color.a * (8.0 - 1.0);\n    c.r = color.r * e;\n    c.g = color.g * e;\n    c.b = color.b * e;\n    return c;\n  }\n#endif\nvarying vec3 v_position;\nvarying vec2 v_uv;\nvarying vec2 v_uv1;\nvarying vec3 v_normal;\n#if USE_VERTEX_COLOR\n  varying vec4 v_color;\n#endif\n#if USE_ALBEDO_MAP\n  uniform sampler2D albedoMap;\n#endif\n#if USE_NORMAL_MAP\n  varying vec3 v_tangent;\n  varying vec3 v_bitangent;\n  uniform sampler2D normalMap;\n#endif\n#if USE_PBR_MAP\n  uniform sampler2D pbrMap;\n#endif\n#if USE_METALLIC_ROUGHNESS_MAP\n  uniform sampler2D metallicRoughnessMap;\n#endif\n#if USE_OCCLUSION_MAP\n  uniform sampler2D occlusionMap;\n#endif\n#if USE_EMISSIVE_MAP\n  uniform sampler2D emissiveMap;\n#endif\n#if USE_ALPHA_TEST\n#endif\nvoid surf (out StandardSurface s) {\n  vec4 baseColor = albedo;\n  #if USE_VERTEX_COLOR\n    baseColor.rgb *= SRGBToLinear(v_color.rgb);\n    baseColor.a *= v_color.a;\n  #endif\n  #if USE_ALBEDO_MAP\n    vec4 texColor = texture2D(albedoMap, ALBEDO_UV);\n    texColor.rgb = SRGBToLinear(texColor.rgb);\n    baseColor *= texColor;\n  #endif\n  s.albedo = baseColor;\n  s.albedo.rgb *= albedoScaleAndCutoff.xyz;\n  #if USE_ALPHA_TEST\n    if (s.albedo.ALPHA_TEST_CHANNEL < albedoScaleAndCutoff.w) discard;\n  #endif\n  #if USE_LIGHTMAP && !USE_BATCHING && !CC_FORWARD_ADD\n    vec4 lightColor = texture2D(cc_lightingMap, v_luv.xy);\n    s.lightmap = UnpackLightingmap(lightColor);\n    s.lightmap_test = v_luv.z;\n  #endif\n  s.normal = v_normal;\n  #if USE_NORMAL_MAP\n    vec3 nmmp = texture2D(normalMap, NORMAL_UV).xyz - vec3(0.5);\n    s.normal =\n      (nmmp.x * emissiveScaleParam.w) * normalize(v_tangent) +\n      (nmmp.y * emissiveScaleParam.w) * normalize(v_bitangent) +\n      nmmp.z * normalize(s.normal);\n  #endif\n  #if CC_PLATFORM_ANDROID_AND_WEBGL && CC_ENABLE_WEBGL_HIGHP_STRUCT_VALUES\n  packHighpData(s.position, s.position_fract_part, v_position);\n  #else\n  s.position = v_position;\n  #endif\n  vec4 pbr = pbrParams;\n  #if USE_PBR_MAP\n    vec4 res = texture2D(pbrMap, PBR_UV);\n    pbr.x *= res.r;\n    pbr.y *= res.g;\n    pbr.z *= res.b;\n    pbr.w *= res.a;\n  #endif\n  #if USE_METALLIC_ROUGHNESS_MAP\n    vec4 metallicRoughness = texture2D(metallicRoughnessMap, PBR_UV);\n    pbr.z *= metallicRoughness.b;\n    pbr.y *= metallicRoughness.g;\n  #endif\n  #if USE_OCCLUSION_MAP\n    pbr.x *= texture2D(occlusionMap, PBR_UV).r;\n  #endif\n  s.occlusion = pbr.x;\n  s.roughness = pbr.y;\n  s.metallic = pbr.z;\n  s.emissive = emissive.rgb * emissiveScaleParam.xyz;\n  #if USE_EMISSIVE_MAP\n    s.emissive *= SRGBToLinear(texture2D(emissiveMap, EMISSIVE_UV).rgb);\n  #endif\n}\n#if CC_FORWARD_ADD\n  #if CC_PIPELINE_TYPE == 0\n  # define LIGHTS_PER_PASS 1\n  #else\n  # define LIGHTS_PER_PASS 10\n  #endif\n  #if CC_ENABLE_CLUSTERED_LIGHT_CULLING == 0\n  uniform highp vec4 cc_lightPos[LIGHTS_PER_PASS];\n  uniform vec4 cc_lightColor[LIGHTS_PER_PASS];\n  uniform vec4 cc_lightSizeRangeAngle[LIGHTS_PER_PASS];\n  uniform vec4 cc_lightDir[LIGHTS_PER_PASS];\n  #endif\n  float SmoothDistAtt (float distSqr, float invSqrAttRadius) {\n    float factor = distSqr * invSqrAttRadius;\n    float smoothFactor = clamp(1.0 - factor * factor, 0.0, 1.0);\n    return smoothFactor * smoothFactor;\n  }\n  float GetDistAtt (float distSqr, float invSqrAttRadius) {\n    float attenuation = 1.0 / max(distSqr, 0.01*0.01);\n    attenuation *= SmoothDistAtt(distSqr , invSqrAttRadius);\n    return attenuation;\n  }\n  float GetAngleAtt (vec3 L, vec3 litDir, float litAngleScale, float litAngleOffset) {\n    float cd = dot(litDir, L);\n    float attenuation = clamp(cd * litAngleScale + litAngleOffset, 0.0, 1.0);\n    return (attenuation * attenuation);\n  }\n  #if CC_ENABLE_CLUSTERED_LIGHT_CULLING == 0\n  vec4 CCStandardShadingAdditive (StandardSurface s, vec4 shadowPos) {\n    vec3 position;\n    #if CC_PLATFORM_ANDROID_AND_WEBGL && CC_ENABLE_WEBGL_HIGHP_STRUCT_VALUES\n    position = unpackHighpData(s.position, s.position_fract_part);\n    #else\n    position = s.position;\n    #endif\n    vec3 diffuse = s.albedo.rgb * (1.0 - s.metallic);\n    vec3 specular = mix(vec3(0.04), s.albedo.rgb, s.metallic);\n    vec3 diffuseContrib = diffuse / 3.14159265359;\n    vec3 N = normalize(s.normal);\n    vec3 V = normalize(cc_cameraPos.xyz - position);\n    float NV = max(abs(dot(N, V)), 0.0);\n    specular = BRDFApprox(specular, s.roughness, NV);\n    vec3 finalColor = vec3(0.0);\n    int numLights = CC_PIPELINE_TYPE == 0 ? LIGHTS_PER_PASS : int(cc_lightDir[0].w);\n    for (int i = 0; i < LIGHTS_PER_PASS; i++) {\n      if (i >= numLights) break;\n      vec3 SLU = cc_lightPos[i].xyz - position;\n      vec3 SL = normalize(SLU);\n      vec3 SH = normalize(SL + V);\n      float SNL = max(dot(N, SL), 0.0);\n      float SNH = max(dot(N, SH), 0.0);\n      float distSqr = dot(SLU, SLU);\n      float litRadius = cc_lightSizeRangeAngle[i].x;\n      float litRadiusSqr = litRadius * litRadius;\n      float illum = 3.14159265359 * (litRadiusSqr / max(litRadiusSqr , distSqr));\n      float attRadiusSqrInv = 1.0 / max(cc_lightSizeRangeAngle[i].y, 0.01);\n      attRadiusSqrInv *= attRadiusSqrInv;\n      float att = GetDistAtt(distSqr, attRadiusSqrInv);\n      vec3 lspec = specular * CalcSpecular(s.roughness, SNH, SH, N);\n      if (cc_lightPos[i].w > 0.0) {\n        float cosInner = max(dot(-cc_lightDir[i].xyz, SL), 0.01);\n        float cosOuter = cc_lightSizeRangeAngle[i].z;\n        float litAngleScale = 1.0 / max(0.001, cosInner - cosOuter);\n        float litAngleOffset = -cosOuter * litAngleScale;\n        att *= GetAngleAtt(SL, -cc_lightDir[i].xyz, litAngleScale, litAngleOffset);\n      }\n      vec3 lightColor = cc_lightColor[i].rgb;\n      float shadow = 1.0;\n      #if CC_RECEIVE_SHADOW\n        if (cc_lightPos[i].w > 0.0 && cc_lightSizeRangeAngle[i].w > 0.0) {\n          {\n            float pcf = cc_shadowWHPBInfo.z;\n            if (pcf > 1.9) shadow = CCGetSpotLightShadowFactorSoft2X(shadowPos, position);\n            else if (pcf > 0.9) shadow = CCGetSpotLightShadowFactorSoft(shadowPos, position);\n            else shadow = CCGetSpotLightShadowFactorHard(shadowPos, position);\n          }\n        }\n      #endif\n      lightColor *= shadow;\n      finalColor += SNL * lightColor * cc_lightColor[i].w * illum * att * (diffuseContrib + lspec);\n    }\n    return vec4(finalColor, 0.0);\n  }\n  #endif\n  #if CC_ENABLE_CLUSTERED_LIGHT_CULLING == 1\n  readonly buffer b_ccLightsBuffer { vec4 b_ccLights[]; };\n  readonly buffer b_clusterLightIndicesBuffer { uint b_clusterLightIndices[]; };\n  readonly buffer b_clusterLightGridBuffer { uvec4 b_clusterLightGrid[]; };\n  struct CCLight\n  {\n    vec4 cc_lightPos;\n    vec4 cc_lightColor;\n    vec4 cc_lightSizeRangeAngle;\n    vec4 cc_lightDir;\n  };\n  struct Cluster\n  {\n    vec3 minBounds;\n    vec3 maxBounds;\n  };\n  struct LightGrid\n  {\n    uint offset;\n    uint ccLights;\n  };\n  CCLight getCCLight(uint i)\n  {\n    CCLight light;\n    light.cc_lightPos = b_ccLights[4u * i + 0u];\n    light.cc_lightColor = b_ccLights[4u * i + 1u];\n    light.cc_lightSizeRangeAngle = b_ccLights[4u * i + 2u];\n    light.cc_lightDir = b_ccLights[4u * i + 3u];\n    return light;\n  }\n  LightGrid getLightGrid(uint cluster)\n  {\n    uvec4 gridvec = b_clusterLightGrid[cluster];\n    LightGrid grid;\n    grid.offset = gridvec.x;\n    grid.ccLights = gridvec.y;\n    return grid;\n  }\n  uint getGridLightIndex(uint start, uint offset)\n  {\n    return b_clusterLightIndices[start + offset];\n  }\n  uint getClusterZIndex(vec4 worldPos)\n  {\n    float scale = float(24) / log(cc_nearFar.y / cc_nearFar.x);\n    float bias = -(float(24) * log(cc_nearFar.x) / log(cc_nearFar.y / cc_nearFar.x));\n    float eyeDepth = -(cc_matView * worldPos).z;\n    uint zIndex = uint(max(log(eyeDepth) * scale + bias, 0.0));\n    return zIndex;\n  }\n  uint getClusterIndex(vec4 fragCoord, vec4 worldPos)\n  {\n    uint zIndex = getClusterZIndex(worldPos);\n    float clusterSizeX = ceil(cc_viewPort.z / float(16));\n    float clusterSizeY = ceil(cc_viewPort.w / float(8));\n    uvec3 indices = uvec3(uvec2(fragCoord.xy / vec2(clusterSizeX, clusterSizeY)), zIndex);\n    uint cluster = (16u * 8u) * indices.z + 16u * indices.y + indices.x;\n    return cluster;\n  }\n  vec4 CCClusterShadingAdditive (StandardSurface s, vec4 shadowPos) {\n    vec3 diffuse = s.albedo.rgb * (1.0 - s.metallic);\n    vec3 specular = mix(vec3(0.04), s.albedo.rgb, s.metallic);\n    vec3 diffuseContrib = diffuse / 3.14159265359;\n    vec3 position;\n    #if CC_PLATFORM_ANDROID_AND_WEBGL && CC_ENABLE_WEBGL_HIGHP_STRUCT_VALUES\n    position = unpackHighpData(s.position, s.position_fract_part);\n    #else\n    position = s.position;\n    #endif\n    vec3 N = normalize(s.normal);\n    vec3 V = normalize(cc_cameraPos.xyz - position);\n    float NV = max(abs(dot(N, V)), 0.001);\n    specular = BRDFApprox(specular, s.roughness, NV);\n    vec3 finalColor = vec3(0.0);\n    uint cluster = getClusterIndex(gl_FragCoord, vec4(position, 1.0));\n    LightGrid grid = getLightGrid(cluster);\n    uint numLights = grid.ccLights;\n    for (uint i = 0u; i < 100u; i++) {\n      if (i >= numLights) break;\n      uint lightIndex = getGridLightIndex(grid.offset, i);\n      CCLight light = getCCLight(lightIndex);\n      vec3 SLU = light.cc_lightPos.xyz - position;\n      vec3 SL = normalize(SLU);\n      vec3 SH = normalize(SL + V);\n      float SNL = max(dot(N, SL), 0.001);\n      float SNH = max(dot(N, SH), 0.0);\n      float distSqr = dot(SLU, SLU);\n      float litRadius = light.cc_lightSizeRangeAngle.x;\n      float litRadiusSqr = litRadius * litRadius;\n      float illum = 3.14159265359 * (litRadiusSqr / max(litRadiusSqr , distSqr));\n      float attRadiusSqrInv = 1.0 / max(light.cc_lightSizeRangeAngle.y, 0.01);\n      attRadiusSqrInv *= attRadiusSqrInv;\n      float att = GetDistAtt(distSqr, attRadiusSqrInv);\n      vec3 lspec = specular * CalcSpecular(s.roughness, SNH, SH, N);\n      if (light.cc_lightPos.w > 0.0) {\n        float cosInner = max(dot(-light.cc_lightDir.xyz, SL), 0.01);\n        float cosOuter = light.cc_lightSizeRangeAngle.z;\n        float litAngleScale = 1.0 / max(0.001, cosInner - cosOuter);\n        float litAngleOffset = -cosOuter * litAngleScale;\n        att *= GetAngleAtt(SL, -light.cc_lightDir.xyz, litAngleScale, litAngleOffset);\n      }\n      vec3 lightColor = light.cc_lightColor.rgb;\n      float shadow = 1.0;\n      #if CC_RECEIVE_SHADOW\n        if (light.cc_lightPos.w > 0.0) {\n          {\n            float pcf = cc_shadowWHPBInfo.z;\n            if (pcf > 1.9) shadow = CCGetSpotLightShadowFactorSoft2X(shadowPos, position);\n            else if (pcf > 0.9) shadow = CCGetSpotLightShadowFactorSoft(shadowPos, position);\n            else shadow = CCGetSpotLightShadowFactorHard(shadowPos, position);\n          }\n        }\n      #endif\n      lightColor *= shadow;\n      finalColor += SNL * lightColor * light.cc_lightColor.w * illum * att * (diffuseContrib + lspec);\n    }\n    return vec4(finalColor, 0.0);\n  }\n  #endif\n  void main () {\n    StandardSurface s; surf(s);\n    #if CC_ENABLE_CLUSTERED_LIGHT_CULLING == 1\n    vec4 color = CCClusterShadingAdditive(s, v_shadowPos);\n    #else\n    vec4 color = CCStandardShadingAdditive(s, v_shadowPos);\n    #endif\n    CC_APPLY_FOG(color, s.position.xyz);\n    gl_FragData[0] = CCFragOutput(color);\n  }\n#elif (CC_PIPELINE_TYPE == 0 || CC_FORCE_FORWARD_SHADING)\n  void main () {\n    StandardSurface s; surf(s);\n    vec4 color = CCStandardShadingBase(s, v_shadowPos);\n    CC_APPLY_FOG(color, s.position.xyz);\n    gl_FragData[0] = CCFragOutput(color);\n  }\n#elif CC_PIPELINE_TYPE == 1\n  vec2 signNotZero(vec2 v) {\n    return vec2((v.x >= 0.0) ? +1.0 : -1.0, (v.y >= 0.0) ? +1.0 : -1.0);\n  }\n  vec2 float32x3_to_oct(in vec3 v) {\n    vec2 p = v.xy * (1.0 / (abs(v.x) + abs(v.y) + abs(v.z)));\n    return (v.z <= 0.0) ? ((1.0 - abs(p.yx)) * signNotZero(p)) : p;\n  }\n  void main () {\n    StandardSurface s; surf(s);\n    gl_FragData[0] = s.albedo;\n    gl_FragData[1] = vec4(float32x3_to_oct(s.normal), s.roughness, s.metallic);\n    gl_FragData[2] = vec4(s.emissive, s.occlusion);\n  }\n#endif"},"builtins":{"globals":{"blocks":[{"name":"CCGlobal","defines":[]},{"name":"CCCamera","defines":[]},{"name":"CCShadow","defines":[]}],"samplerTextures":[{"name":"cc_shadowMap","defines":["CC_RECEIVE_SHADOW"]},{"name":"cc_spotLightingMap","defines":["CC_RECEIVE_SHADOW"]},{"name":"cc_environment","defines":["CC_USE_IBL"]},{"name":"cc_diffuseMap","defines":["CC_USE_IBL","CC_USE_DIFFUSEMAP"]}],"buffers":[],"images":[]},"locals":{"blocks":[{"name":"CCMorph","defines":["CC_USE_MORPH"]},{"name":"CCSkinningTexture","defines":["CC_USE_SKINNING","CC_USE_BAKED_ANIMATION"]},{"name":"CCSkinningAnimation","defines":["CC_USE_SKINNING","CC_USE_BAKED_ANIMATION"]},{"name":"CCSkinning","defines":["CC_USE_SKINNING","!CC_USE_BAKED_ANIMATION"]},{"name":"CCLocalBatched","defines":["!USE_INSTANCING","USE_BATCHING"]},{"name":"CCLocal","defines":["!USE_INSTANCING","!USE_BATCHING"]},{"name":"CCForwardLight","defines":["CC_FORWARD_ADD","CC_ENABLE_CLUSTERED_LIGHT_CULLING"]}],"samplerTextures":[{"name":"cc_PositionDisplacements","defines":["CC_USE_MORPH","CC_MORPH_TARGET_HAS_POSITION"]},{"name":"cc_NormalDisplacements","defines":["CC_USE_MORPH","CC_MORPH_TARGET_HAS_NORMAL"]},{"name":"cc_TangentDisplacements","defines":["CC_USE_MORPH","CC_MORPH_TARGET_HAS_TANGENT"]},{"name":"cc_jointTexture","defines":["CC_USE_SKINNING","CC_USE_BAKED_ANIMATION"]},{"name":"cc_lightingMap","defines":["USE_LIGHTMAP","!USE_BATCHING","!CC_FORWARD_ADD"]}],"buffers":[],"images":[]},"statistics":{"CC_EFFECT_USED_VERTEX_UNIFORM_VECTORS":222,"CC_EFFECT_USED_FRAGMENT_UNIFORM_VECTORS":65}},"defines":[{"name":"CC_USE_MORPH","type":"boolean","defines":[]},{"name":"CC_MORPH_TARGET_COUNT","type":"number","defines":["CC_USE_MORPH"],"range":[2,8]},{"name":"CC_MORPH_PRECOMPUTED","type":"boolean","defines":["CC_USE_MORPH"]},{"name":"CC_MORPH_TARGET_HAS_POSITION","type":"boolean","defines":["CC_USE_MORPH"]},{"name":"CC_MORPH_TARGET_HAS_NORMAL","type":"boolean","defines":["CC_USE_MORPH"]},{"name":"CC_MORPH_TARGET_HAS_TANGENT","type":"boolean","defines":["CC_USE_MORPH"]},{"name":"CC_USE_SKINNING","type":"boolean","defines":[]},{"name":"CC_USE_BAKED_ANIMATION","type":"boolean","defines":["CC_USE_SKINNING"]},{"name":"USE_INSTANCING","type":"boolean","defines":[],"editor":{"elevated":true}},{"name":"USE_BATCHING","type":"boolean","defines":["!USE_INSTANCING"],"editor":{"elevated":true}},{"name":"USE_LIGHTMAP","type":"boolean","defines":[]},{"name":"CC_USE_FOG","type":"number","defines":[],"range":[0,4]},{"name":"CC_USE_ACCURATE_FOG","type":"boolean","defines":[]},{"name":"CC_RECEIVE_SHADOW","type":"boolean","defines":[]},{"name":"USE_VERTEX_COLOR","type":"boolean","defines":[]},{"name":"USE_NORMAL_MAP","type":"boolean","defines":[]},{"name":"HAS_SECOND_UV","type":"boolean","defines":[]},{"name":"CC_FORWARD_ADD","type":"boolean","defines":[]},{"name":"USE_TWOSIDE","type":"boolean","defines":[]},{"name":"SAMPLE_FROM_RT","type":"boolean","defines":[]},{"name":"CC_USE_IBL","type":"number","defines":[],"range":[0,2]},{"name":"CC_USE_DIFFUSEMAP","type":"number","defines":["CC_USE_IBL"],"range":[0,2]},{"name":"USE_REFLECTION_DENOISE","type":"boolean","defines":[]},{"name":"CC_USE_HDR","type":"boolean","defines":[]},{"name":"USE_ALBEDO_MAP","type":"boolean","defines":[]},{"name":"ALBEDO_UV","type":"string","defines":["USE_ALBEDO_MAP"],"options":["v_uv","v_uv1"]},{"name":"NORMAL_UV","type":"string","defines":["USE_NORMAL_MAP"],"options":["v_uv","v_uv1"]},{"name":"PBR_UV","type":"string","defines":[],"options":["v_uv","v_uv1"]},{"name":"USE_PBR_MAP","type":"boolean","defines":[]},{"name":"USE_METALLIC_ROUGHNESS_MAP","type":"boolean","defines":[]},{"name":"USE_OCCLUSION_MAP","type":"boolean","defines":[]},{"name":"USE_EMISSIVE_MAP","type":"boolean","defines":[]},{"name":"EMISSIVE_UV","type":"string","defines":["USE_EMISSIVE_MAP"],"options":["v_uv","v_uv1"]},{"name":"USE_ALPHA_TEST","type":"boolean","defines":[]},{"name":"ALPHA_TEST_CHANNEL","type":"string","defines":["USE_ALPHA_TEST"],"options":["a","r"]},{"name":"CC_PIPELINE_TYPE","type":"number","defines":["CC_FORWARD_ADD"],"range":[0,1]},{"name":"CC_FORCE_FORWARD_SHADING","type":"boolean","defines":["CC_FORWARD_ADD"]}]},{"hash":210600745,"name":"builtin-standard|shadow-caster-vs:vert|shadow-caster-fs:frag","blocks":[{"name":"Constants","stageFlags":17,"binding":0,"members":[{"name":"tilingOffset","type":16,"count":1},{"name":"albedo","type":16,"count":1},{"name":"albedoScaleAndCutoff","type":16,"count":1},{"name":"pbrParams","type":16,"count":1},{"name":"emissive","type":16,"count":1},{"name":"emissiveScaleParam","type":16,"count":1}],"defines":[]}],"samplerTextures":[{"name":"albedoMap","type":28,"count":1,"stageFlags":16,"binding":1,"defines":["USE_ALBEDO_MAP"]}],"samplers":[],"textures":[],"buffers":[],"images":[],"subpassInputs":[],"attributes":[{"name":"a_position","format":32,"location":0,"defines":[]},{"name":"a_normal","format":32,"location":1,"defines":[]},{"name":"a_texCoord","format":21,"location":2,"defines":[]},{"name":"a_tangent","format":44,"location":3,"defines":[]},{"name":"a_vertexId","format":11,"location":6,"defines":["CC_USE_MORPH"]},{"name":"a_joints","location":4,"defines":["CC_USE_SKINNING"]},{"name":"a_weights","format":44,"location":5,"defines":["CC_USE_SKINNING"]},{"name":"a_jointAnimInfo","format":44,"isInstanced":true,"location":7,"defines":["CC_USE_SKINNING","CC_USE_BAKED_ANIMATION","USE_INSTANCING"]},{"name":"a_matWorld0","format":44,"isInstanced":true,"location":8,"defines":["USE_INSTANCING"]},{"name":"a_matWorld1","format":44,"isInstanced":true,"location":9,"defines":["USE_INSTANCING"]},{"name":"a_matWorld2","format":44,"isInstanced":true,"location":10,"defines":["USE_INSTANCING"]},{"name":"a_lightingMapUVParam","format":44,"isInstanced":true,"location":11,"defines":["USE_INSTANCING","USE_LIGHTMAP"]},{"name":"a_dyn_batch_id","format":11,"location":12,"defines":["!USE_INSTANCING","USE_BATCHING"]},{"name":"a_texCoord1","format":21,"location":13,"defines":[]}],"varyings":[{"name":"v_uv","type":14,"count":1,"stageFlags":17,"location":0,"defines":[]},{"name":"v_uv1","type":14,"count":1,"stageFlags":17,"location":1,"defines":[]},{"name":"v_worldPos","type":16,"count":1,"stageFlags":17,"location":2,"defines":[]},{"name":"v_clip_depth","type":13,"count":1,"stageFlags":17,"location":3,"defines":[]}],"fragColors":[{"name":"cc_FragColor","typename":"vec4","type":16,"count":1,"stageFlags":16,"location":0,"defines":[]}],"glsl4":{"vert":"#extension GL_EXT_shader_explicit_arithmetic_types_int32: require\nprecision highp float;\nhighp float decode32 (highp vec4 rgba) {\n  rgba = rgba * 255.0;\n  highp float Sign = 1.0 - (step(128.0, (rgba[3]) + 0.5)) * 2.0;\n  highp float Exponent = 2.0 * (mod(float(int((rgba[3]) + 0.5)), 128.0)) + (step(128.0, (rgba[2]) + 0.5)) - 127.0;\n  highp float Mantissa = (mod(float(int((rgba[2]) + 0.5)), 128.0)) * 65536.0 + rgba[1] * 256.0 + rgba[0] + 8388608.0;\n  return Sign * exp2(Exponent - 23.0) * Mantissa;\n}\nstruct StandardVertInput {\n  highp vec4 position;\n  vec3 normal;\n  vec4 tangent;\n};\nlayout(location = 0) in vec3 a_position;\nlayout(location = 1) in vec3 a_normal;\nlayout(location = 2) in vec2 a_texCoord;\nlayout(location = 3) in vec4 a_tangent;\n#if CC_USE_MORPH\n    int getVertexId() {\n      return gl_VertexIndex;\n    }\n  layout(set = 2, binding = 4) uniform CCMorph {\n    vec4 cc_displacementWeights[15];\n    vec4 cc_displacementTextureInfo;\n  };\n  vec2 getPixelLocation(vec2 textureResolution, int pixelIndex) {\n    float pixelIndexF = float(pixelIndex);\n    float x = mod(pixelIndexF, textureResolution.x);\n    float y = floor(pixelIndexF / textureResolution.x);\n    return vec2(x, y);\n  }\n  vec2 getPixelCoordFromLocation(vec2 location, vec2 textureResolution) {\n    return (vec2(location.x, location.y) + .5) / textureResolution;\n  }\n  #if CC_DEVICE_SUPPORT_FLOAT_TEXTURE\n      vec4 fetchVec3ArrayFromTexture(sampler2D tex, int pixelIndex) {\n        ivec2 texSize = textureSize(tex, 0);\n        return texelFetch(tex, ivec2(pixelIndex % texSize.x, pixelIndex / texSize.x), 0);\n      }\n  #else\n    vec4 fetchVec3ArrayFromTexture(sampler2D tex, int elementIndex) {\n      int pixelIndex = elementIndex * 4;\n      vec2 location = getPixelLocation(cc_displacementTextureInfo.xy, pixelIndex);\n      vec2 x = getPixelCoordFromLocation(location + vec2(0.0, 0.0), cc_displacementTextureInfo.xy);\n      vec2 y = getPixelCoordFromLocation(location + vec2(1.0, 0.0), cc_displacementTextureInfo.xy);\n      vec2 z = getPixelCoordFromLocation(location + vec2(2.0, 0.0), cc_displacementTextureInfo.xy);\n      return vec4(\n        decode32(texture(tex, x)),\n        decode32(texture(tex, y)),\n        decode32(texture(tex, z)),\n        1.0\n      );\n    }\n  #endif\n  float getDisplacementWeight(int index) {\n    int quot = index / 4;\n    int remainder = index - quot * 4;\n    if (remainder == 0) {\n      return cc_displacementWeights[quot].x;\n    } else if (remainder == 1) {\n      return cc_displacementWeights[quot].y;\n    } else if (remainder == 2) {\n      return cc_displacementWeights[quot].z;\n    } else {\n      return cc_displacementWeights[quot].w;\n    }\n  }\n  vec3 getVec3DisplacementFromTexture(sampler2D tex, int vertexIndex) {\n  #if CC_MORPH_PRECOMPUTED\n    return fetchVec3ArrayFromTexture(tex, vertexIndex).rgb;\n  #else\n    vec3 result = vec3(0, 0, 0);\n    int nVertices = int(cc_displacementTextureInfo.z);\n    for (int iTarget = 0; iTarget < CC_MORPH_TARGET_COUNT; ++iTarget) {\n      result += (fetchVec3ArrayFromTexture(tex, nVertices * iTarget + vertexIndex).rgb * getDisplacementWeight(iTarget));\n    }\n    return result;\n  #endif\n  }\n  #if CC_MORPH_TARGET_HAS_POSITION\n    layout(set = 2, binding = 7) uniform sampler2D cc_PositionDisplacements;\n    vec3 getPositionDisplacement(int vertexId) {\n      return getVec3DisplacementFromTexture(cc_PositionDisplacements, vertexId);\n    }\n  #endif\n  #if CC_MORPH_TARGET_HAS_NORMAL\n    layout(set = 2, binding = 8) uniform sampler2D cc_NormalDisplacements;\n    vec3 getNormalDisplacement(int vertexId) {\n      return getVec3DisplacementFromTexture(cc_NormalDisplacements, vertexId);\n    }\n  #endif\n  #if CC_MORPH_TARGET_HAS_TANGENT\n    layout(set = 2, binding = 9) uniform sampler2D cc_TangentDisplacements;\n    vec3 getTangentDisplacement(int vertexId) {\n      return getVec3DisplacementFromTexture(cc_TangentDisplacements, vertexId);\n    }\n  #endif\n  void applyMorph (inout StandardVertInput attr) {\n    int vertexId = getVertexId();\n  #if CC_MORPH_TARGET_HAS_POSITION\n    attr.position.xyz = attr.position.xyz + getPositionDisplacement(vertexId);\n  #endif\n  #if CC_MORPH_TARGET_HAS_NORMAL\n    attr.normal.xyz = attr.normal.xyz + getNormalDisplacement(vertexId);\n  #endif\n  #if CC_MORPH_TARGET_HAS_TANGENT\n    attr.tangent.xyz = attr.tangent.xyz + getTangentDisplacement(vertexId);\n  #endif\n  }\n  void applyMorph (inout vec4 position) {\n  #if CC_MORPH_TARGET_HAS_POSITION\n    position.xyz = position.xyz + getPositionDisplacement(getVertexId());\n  #endif\n  }\n#endif\n#if CC_USE_SKINNING\n    layout(location = 4) in u32vec4 a_joints;\n  layout(location = 5) in vec4 a_weights;\n  #if CC_USE_BAKED_ANIMATION\n    #if USE_INSTANCING\n      layout(location = 7) in highp vec4 a_jointAnimInfo;\n    #endif\n    layout(set = 2, binding = 3) uniform CCSkinningTexture {\n      highp vec4 cc_jointTextureInfo;\n    };\n    layout(set = 2, binding = 2) uniform CCSkinningAnimation {\n      highp vec4 cc_jointAnimInfo;\n    };\n    layout(set = 2, binding = 6) uniform highp sampler2D cc_jointTexture;\n      #else\n    layout(set = 2, binding = 3) uniform CCSkinning {\n      highp vec4 cc_joints[30 * 3];\n    };\n  #endif\n  #if CC_USE_BAKED_ANIMATION\n    #if CC_DEVICE_SUPPORT_FLOAT_TEXTURE\n      mat4 getJointMatrix (float i) {\n              #if USE_INSTANCING\n                highp float j = 3.0 * (a_jointAnimInfo.x * a_jointAnimInfo.y + i) + a_jointAnimInfo.z;\n              #else\n                highp float j = 3.0 * (cc_jointAnimInfo.x * cc_jointTextureInfo.y + i) + cc_jointTextureInfo.z;\n              #endif\n              highp float invSize = cc_jointTextureInfo.w;\n              highp float y = floor(j * invSize);\n              highp float x = floor(j - y * cc_jointTextureInfo.x);\n              y = (y + 0.5) * invSize;\n        vec4 v1 = texture(cc_jointTexture, vec2((x + 0.5) * invSize, y));\n        vec4 v2 = texture(cc_jointTexture, vec2((x + 1.5) * invSize, y));\n        vec4 v3 = texture(cc_jointTexture, vec2((x + 2.5) * invSize, y));\n        return mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n      }\n    #else\n      mat4 getJointMatrix (float i) {\n              #if USE_INSTANCING\n                highp float j = 12.0 * (a_jointAnimInfo.x * a_jointAnimInfo.y + i) + a_jointAnimInfo.z;\n              #else\n                highp float j = 12.0 * (cc_jointAnimInfo.x * cc_jointTextureInfo.y + i) + cc_jointTextureInfo.z;\n              #endif\n              highp float invSize = cc_jointTextureInfo.w;\n              highp float y = floor(j * invSize);\n              highp float x = floor(j - y * cc_jointTextureInfo.x);\n              y = (y + 0.5) * invSize;\n        vec4 v1 = vec4(\n          decode32(texture(cc_jointTexture, vec2((x + 0.5) * invSize, y))),\n          decode32(texture(cc_jointTexture, vec2((x + 1.5) * invSize, y))),\n          decode32(texture(cc_jointTexture, vec2((x + 2.5) * invSize, y))),\n          decode32(texture(cc_jointTexture, vec2((x + 3.5) * invSize, y)))\n        );\n        vec4 v2 = vec4(\n          decode32(texture(cc_jointTexture, vec2((x + 4.5) * invSize, y))),\n          decode32(texture(cc_jointTexture, vec2((x + 5.5) * invSize, y))),\n          decode32(texture(cc_jointTexture, vec2((x + 6.5) * invSize, y))),\n          decode32(texture(cc_jointTexture, vec2((x + 7.5) * invSize, y)))\n        );\n        vec4 v3 = vec4(\n          decode32(texture(cc_jointTexture, vec2((x + 8.5) * invSize, y))),\n          decode32(texture(cc_jointTexture, vec2((x + 9.5) * invSize, y))),\n          decode32(texture(cc_jointTexture, vec2((x + 10.5) * invSize, y))),\n          decode32(texture(cc_jointTexture, vec2((x + 11.5) * invSize, y)))\n        );\n        return mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n      }\n    #endif\n  #else\n    mat4 getJointMatrix (float i) {\n      int idx = int(i);\n      vec4 v1 = cc_joints[idx * 3];\n      vec4 v2 = cc_joints[idx * 3 + 1];\n      vec4 v3 = cc_joints[idx * 3 + 2];\n      return mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n    }\n  #endif\n  mat4 skinMatrix () {\n    vec4 joints = vec4(a_joints);\n    return getJointMatrix(joints.x) * a_weights.x\n         + getJointMatrix(joints.y) * a_weights.y\n         + getJointMatrix(joints.z) * a_weights.z\n         + getJointMatrix(joints.w) * a_weights.w;\n  }\n  void CCSkin (inout vec4 position) {\n    mat4 m = skinMatrix();\n    position = m * position;\n  }\n  void CCSkin (inout StandardVertInput attr) {\n    mat4 m = skinMatrix();\n    attr.position = m * attr.position;\n    attr.normal = (m * vec4(attr.normal, 0.0)).xyz;\n    attr.tangent.xyz = (m * vec4(attr.tangent.xyz, 0.0)).xyz;\n  }\n#endif\n#if USE_INSTANCING\n  layout(location = 8) in vec4 a_matWorld0;\n  layout(location = 9) in vec4 a_matWorld1;\n  layout(location = 10) in vec4 a_matWorld2;\n  #if USE_LIGHTMAP\n    layout(location = 11) in vec4 a_lightingMapUVParam;\n  #endif\n#elif USE_BATCHING\n  layout(location = 12) in float a_dyn_batch_id;\n  layout(set = 2, binding = 0) uniform CCLocalBatched {\n    highp mat4 cc_matWorlds[10];\n  };\n#else\n  layout(set = 2, binding = 0) uniform CCLocal {\n    highp mat4 cc_matWorld;\n    highp mat4 cc_matWorldIT;\n    highp vec4 cc_lightingMapUVParam;\n  };\n#endif\nlayout(set = 1, binding = 0) uniform Constants {\n  vec4 tilingOffset;\n  vec4 albedo;\n  vec4 albedoScaleAndCutoff;\n  vec4 pbrParams;\n  vec4 emissive;\n  vec4 emissiveScaleParam;\n};\nlayout(set = 0, binding = 2) uniform CCShadow {\n  highp mat4 cc_matLightPlaneProj;\n  highp mat4 cc_matLightView;\n  highp mat4 cc_matLightViewProj;\n  highp vec4 cc_shadowInvProjDepthInfo;\n  highp vec4 cc_shadowProjDepthInfo;\n  highp vec4 cc_shadowProjInfo;\n  mediump vec4 cc_shadowNFLSInfo;\n  mediump vec4 cc_shadowWHPBInfo;\n  mediump vec4 cc_shadowLPNNInfo;\n  lowp vec4 cc_shadowColor;\n  mediump vec4 cc_planarNDInfo;\n};\n#if HAS_SECOND_UV || USE_LIGHTMAP\n  layout(location = 13) in vec2 a_texCoord1;\n#endif\nlayout(location = 0) out vec2 v_uv;\nlayout(location = 1) out vec2 v_uv1;\nlayout(location = 2) out vec4 v_worldPos;\nlayout(location = 3) out float v_clip_depth;\nvec4 vert () {\n  StandardVertInput In;\n      In.position = vec4(a_position, 1.0);\n      In.normal = a_normal;\n      In.tangent = a_tangent;\n    #if CC_USE_MORPH\n      applyMorph(In);\n    #endif\n    #if CC_USE_SKINNING\n      CCSkin(In);\n    #endif\n  mat4 matWorld, matWorldIT;\n    #if USE_INSTANCING\n      matWorld = mat4(\n        vec4(a_matWorld0.xyz, 0.0),\n        vec4(a_matWorld1.xyz, 0.0),\n        vec4(a_matWorld2.xyz, 0.0),\n        vec4(a_matWorld0.w, a_matWorld1.w, a_matWorld2.w, 1.0)\n      );\n      matWorldIT = matWorld;\n    #elif USE_BATCHING\n      matWorld = cc_matWorlds[int(a_dyn_batch_id)];\n      matWorldIT = matWorld;\n    #else\n      matWorld = cc_matWorld;\n      matWorldIT = cc_matWorldIT;\n    #endif\n  v_worldPos = matWorld * In.position;\n  vec4 clipPos = cc_matLightViewProj * v_worldPos;\n  v_uv = a_texCoord * tilingOffset.xy + tilingOffset.zw;\n  #if HAS_SECOND_UV\n    v_uv1 = a_texCoord1 * tilingOffset.xy + tilingOffset.zw;\n  #endif\n  v_clip_depth = clipPos.z / clipPos.w * 0.5 + 0.5;\n  return clipPos;\n}\nvoid main() { gl_Position = vert(); }","frag":"\nprecision highp float;\nlayout(set = 1, binding = 0) uniform Constants {\n  vec4 tilingOffset;\n  vec4 albedo;\n  vec4 albedoScaleAndCutoff;\n  vec4 pbrParams;\n  vec4 emissive;\n  vec4 emissiveScaleParam;\n};\nvec4 packDepthToRGBA (float depth) {\n  vec4 ret = vec4(1.0, 255.0, 65025.0, 16581375.0) * depth;\n  ret = fract(ret);\n  ret -= vec4(ret.yzw, 0.0) / 255.0;\n  return ret;\n}\nlayout(set = 0, binding = 0) uniform CCGlobal {\n  highp   vec4 cc_time;\n  mediump vec4 cc_screenSize;\n  mediump vec4 cc_nativeSize;\n};\nlayout(set = 0, binding = 1) uniform CCCamera {\n  highp   mat4 cc_matView;\n  highp   mat4 cc_matViewInv;\n  highp   mat4 cc_matProj;\n  highp   mat4 cc_matProjInv;\n  highp   mat4 cc_matViewProj;\n  highp   mat4 cc_matViewProjInv;\n  highp   vec4 cc_cameraPos;\n  mediump vec4 cc_screenScale;\n  mediump vec4 cc_exposure;\n  mediump vec4 cc_mainLitDir;\n  mediump vec4 cc_mainLitColor;\n  mediump vec4 cc_ambientSky;\n  mediump vec4 cc_ambientGround;\n  mediump vec4 cc_fogColor;\n  mediump vec4 cc_fogBase;\n  mediump vec4 cc_fogAdd;\n  mediump vec4 cc_nearFar;\n  mediump vec4 cc_viewPort;\n};\nlayout(set = 0, binding = 2) uniform CCShadow {\n  highp mat4 cc_matLightPlaneProj;\n  highp mat4 cc_matLightView;\n  highp mat4 cc_matLightViewProj;\n  highp vec4 cc_shadowInvProjDepthInfo;\n  highp vec4 cc_shadowProjDepthInfo;\n  highp vec4 cc_shadowProjInfo;\n  mediump vec4 cc_shadowNFLSInfo;\n  mediump vec4 cc_shadowWHPBInfo;\n  mediump vec4 cc_shadowLPNNInfo;\n  lowp vec4 cc_shadowColor;\n  mediump vec4 cc_planarNDInfo;\n};\nfloat CCGetLinearDepthFromViewSpace(vec3 viewPos) {\n  float dist = length(viewPos);\n  return (dist - cc_shadowNFLSInfo.x) / (cc_shadowNFLSInfo.y - cc_shadowNFLSInfo.x);\n}\nfloat CCGetLinearDepth(vec3 worldPos) {\n  vec4 viewStartPos = cc_matLightView * vec4(worldPos.xyz, 1.0);\n  return CCGetLinearDepthFromViewSpace(viewStartPos.xyz);\n}\n#if CC_RECEIVE_SHADOW\n  layout(set = 0, binding = 3) uniform highp sampler2D cc_shadowMap;\n  layout(set = 0, binding = 5) uniform highp sampler2D cc_spotLightingMap;\n#endif\nlayout(location = 0) in vec2 v_uv;\nlayout(location = 1) in vec2 v_uv1;\nlayout(location = 2) in vec4 v_worldPos;\nlayout(location = 3) in float v_clip_depth;\n#if USE_ALBEDO_MAP\n  layout(set = 1, binding = 1) uniform sampler2D albedoMap;\n#endif\n#if USE_ALPHA_TEST\n#endif\nvec4 frag () {\n  vec4 baseColor = albedo;\n  #if USE_ALBEDO_MAP\n    baseColor *= texture(albedoMap, ALBEDO_UV);\n  #endif\n  #if USE_ALPHA_TEST\n    if (baseColor.ALPHA_TEST_CHANNEL < albedoScaleAndCutoff.w) discard;\n  #endif\n  if(cc_shadowLPNNInfo.x > 0.000001 && cc_shadowLPNNInfo.x < 1.999999) {\n    if (cc_shadowNFLSInfo.z > 0.000001) {\n      return vec4(CCGetLinearDepth(v_worldPos.xyz), 1.0, 1.0, 1.0);\n    }\n  }\n  if (cc_shadowLPNNInfo.y > 0.000001) {\n    return packDepthToRGBA(v_clip_depth);\n  }\n  return vec4(v_clip_depth, 1.0, 1.0, 1.0);\n}\nlayout(location = 0) out vec4 cc_FragColor;\nvoid main() { cc_FragColor = frag(); }"},"glsl3":{"vert":"\nprecision highp float;\nhighp float decode32 (highp vec4 rgba) {\n  rgba = rgba * 255.0;\n  highp float Sign = 1.0 - (step(128.0, (rgba[3]) + 0.5)) * 2.0;\n  highp float Exponent = 2.0 * (mod(float(int((rgba[3]) + 0.5)), 128.0)) + (step(128.0, (rgba[2]) + 0.5)) - 127.0;\n  highp float Mantissa = (mod(float(int((rgba[2]) + 0.5)), 128.0)) * 65536.0 + rgba[1] * 256.0 + rgba[0] + 8388608.0;\n  return Sign * exp2(Exponent - 23.0) * Mantissa;\n}\nstruct StandardVertInput {\n  highp vec4 position;\n  vec3 normal;\n  vec4 tangent;\n};\nin vec3 a_position;\nin vec3 a_normal;\nin vec2 a_texCoord;\nin vec4 a_tangent;\n#if CC_USE_MORPH\n    in float a_vertexId;\n    int getVertexId() {\n      return int(a_vertexId);\n    }\n  layout(std140) uniform CCMorph {\n    vec4 cc_displacementWeights[15];\n    vec4 cc_displacementTextureInfo;\n  };\n  vec2 getPixelLocation(vec2 textureResolution, int pixelIndex) {\n    float pixelIndexF = float(pixelIndex);\n    float x = mod(pixelIndexF, textureResolution.x);\n    float y = floor(pixelIndexF / textureResolution.x);\n    return vec2(x, y);\n  }\n  vec2 getPixelCoordFromLocation(vec2 location, vec2 textureResolution) {\n    return (vec2(location.x, location.y) + .5) / textureResolution;\n  }\n  #if CC_DEVICE_SUPPORT_FLOAT_TEXTURE\n      vec4 fetchVec3ArrayFromTexture(sampler2D tex, int pixelIndex) {\n        ivec2 texSize = textureSize(tex, 0);\n        return texelFetch(tex, ivec2(pixelIndex % texSize.x, pixelIndex / texSize.x), 0);\n      }\n  #else\n    vec4 fetchVec3ArrayFromTexture(sampler2D tex, int elementIndex) {\n      int pixelIndex = elementIndex * 4;\n      vec2 location = getPixelLocation(cc_displacementTextureInfo.xy, pixelIndex);\n      vec2 x = getPixelCoordFromLocation(location + vec2(0.0, 0.0), cc_displacementTextureInfo.xy);\n      vec2 y = getPixelCoordFromLocation(location + vec2(1.0, 0.0), cc_displacementTextureInfo.xy);\n      vec2 z = getPixelCoordFromLocation(location + vec2(2.0, 0.0), cc_displacementTextureInfo.xy);\n      return vec4(\n        decode32(texture(tex, x)),\n        decode32(texture(tex, y)),\n        decode32(texture(tex, z)),\n        1.0\n      );\n    }\n  #endif\n  float getDisplacementWeight(int index) {\n    int quot = index / 4;\n    int remainder = index - quot * 4;\n    if (remainder == 0) {\n      return cc_displacementWeights[quot].x;\n    } else if (remainder == 1) {\n      return cc_displacementWeights[quot].y;\n    } else if (remainder == 2) {\n      return cc_displacementWeights[quot].z;\n    } else {\n      return cc_displacementWeights[quot].w;\n    }\n  }\n  vec3 getVec3DisplacementFromTexture(sampler2D tex, int vertexIndex) {\n  #if CC_MORPH_PRECOMPUTED\n    return fetchVec3ArrayFromTexture(tex, vertexIndex).rgb;\n  #else\n    vec3 result = vec3(0, 0, 0);\n    int nVertices = int(cc_displacementTextureInfo.z);\n    for (int iTarget = 0; iTarget < CC_MORPH_TARGET_COUNT; ++iTarget) {\n      result += (fetchVec3ArrayFromTexture(tex, nVertices * iTarget + vertexIndex).rgb * getDisplacementWeight(iTarget));\n    }\n    return result;\n  #endif\n  }\n  #if CC_MORPH_TARGET_HAS_POSITION\n    uniform sampler2D cc_PositionDisplacements;\n    vec3 getPositionDisplacement(int vertexId) {\n      return getVec3DisplacementFromTexture(cc_PositionDisplacements, vertexId);\n    }\n  #endif\n  #if CC_MORPH_TARGET_HAS_NORMAL\n    uniform sampler2D cc_NormalDisplacements;\n    vec3 getNormalDisplacement(int vertexId) {\n      return getVec3DisplacementFromTexture(cc_NormalDisplacements, vertexId);\n    }\n  #endif\n  #if CC_MORPH_TARGET_HAS_TANGENT\n    uniform sampler2D cc_TangentDisplacements;\n    vec3 getTangentDisplacement(int vertexId) {\n      return getVec3DisplacementFromTexture(cc_TangentDisplacements, vertexId);\n    }\n  #endif\n  void applyMorph (inout StandardVertInput attr) {\n    int vertexId = getVertexId();\n  #if CC_MORPH_TARGET_HAS_POSITION\n    attr.position.xyz = attr.position.xyz + getPositionDisplacement(vertexId);\n  #endif\n  #if CC_MORPH_TARGET_HAS_NORMAL\n    attr.normal.xyz = attr.normal.xyz + getNormalDisplacement(vertexId);\n  #endif\n  #if CC_MORPH_TARGET_HAS_TANGENT\n    attr.tangent.xyz = attr.tangent.xyz + getTangentDisplacement(vertexId);\n  #endif\n  }\n  void applyMorph (inout vec4 position) {\n  #if CC_MORPH_TARGET_HAS_POSITION\n    position.xyz = position.xyz + getPositionDisplacement(getVertexId());\n  #endif\n  }\n#endif\n#if CC_USE_SKINNING\n    in vec4 a_joints;\n  in vec4 a_weights;\n  #if CC_USE_BAKED_ANIMATION\n    #if USE_INSTANCING\n      in highp vec4 a_jointAnimInfo;\n    #endif\n    layout(std140) uniform CCSkinningTexture {\n      highp vec4 cc_jointTextureInfo;\n    };\n    layout(std140) uniform CCSkinningAnimation {\n      highp vec4 cc_jointAnimInfo;\n    };\n    uniform highp sampler2D cc_jointTexture;\n      #else\n    layout(std140) uniform CCSkinning {\n      highp vec4 cc_joints[30 * 3];\n    };\n  #endif\n  #if CC_USE_BAKED_ANIMATION\n    #if CC_DEVICE_SUPPORT_FLOAT_TEXTURE\n      mat4 getJointMatrix (float i) {\n              #if USE_INSTANCING\n                highp float j = 3.0 * (a_jointAnimInfo.x * a_jointAnimInfo.y + i) + a_jointAnimInfo.z;\n              #else\n                highp float j = 3.0 * (cc_jointAnimInfo.x * cc_jointTextureInfo.y + i) + cc_jointTextureInfo.z;\n              #endif\n              highp float invSize = cc_jointTextureInfo.w;\n              highp float y = floor(j * invSize);\n              highp float x = floor(j - y * cc_jointTextureInfo.x);\n              y = (y + 0.5) * invSize;\n        vec4 v1 = texture(cc_jointTexture, vec2((x + 0.5) * invSize, y));\n        vec4 v2 = texture(cc_jointTexture, vec2((x + 1.5) * invSize, y));\n        vec4 v3 = texture(cc_jointTexture, vec2((x + 2.5) * invSize, y));\n        return mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n      }\n    #else\n      mat4 getJointMatrix (float i) {\n              #if USE_INSTANCING\n                highp float j = 12.0 * (a_jointAnimInfo.x * a_jointAnimInfo.y + i) + a_jointAnimInfo.z;\n              #else\n                highp float j = 12.0 * (cc_jointAnimInfo.x * cc_jointTextureInfo.y + i) + cc_jointTextureInfo.z;\n              #endif\n              highp float invSize = cc_jointTextureInfo.w;\n              highp float y = floor(j * invSize);\n              highp float x = floor(j - y * cc_jointTextureInfo.x);\n              y = (y + 0.5) * invSize;\n        vec4 v1 = vec4(\n          decode32(texture(cc_jointTexture, vec2((x + 0.5) * invSize, y))),\n          decode32(texture(cc_jointTexture, vec2((x + 1.5) * invSize, y))),\n          decode32(texture(cc_jointTexture, vec2((x + 2.5) * invSize, y))),\n          decode32(texture(cc_jointTexture, vec2((x + 3.5) * invSize, y)))\n        );\n        vec4 v2 = vec4(\n          decode32(texture(cc_jointTexture, vec2((x + 4.5) * invSize, y))),\n          decode32(texture(cc_jointTexture, vec2((x + 5.5) * invSize, y))),\n          decode32(texture(cc_jointTexture, vec2((x + 6.5) * invSize, y))),\n          decode32(texture(cc_jointTexture, vec2((x + 7.5) * invSize, y)))\n        );\n        vec4 v3 = vec4(\n          decode32(texture(cc_jointTexture, vec2((x + 8.5) * invSize, y))),\n          decode32(texture(cc_jointTexture, vec2((x + 9.5) * invSize, y))),\n          decode32(texture(cc_jointTexture, vec2((x + 10.5) * invSize, y))),\n          decode32(texture(cc_jointTexture, vec2((x + 11.5) * invSize, y)))\n        );\n        return mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n      }\n    #endif\n  #else\n    mat4 getJointMatrix (float i) {\n      int idx = int(i);\n      vec4 v1 = cc_joints[idx * 3];\n      vec4 v2 = cc_joints[idx * 3 + 1];\n      vec4 v3 = cc_joints[idx * 3 + 2];\n      return mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n    }\n  #endif\n  mat4 skinMatrix () {\n    vec4 joints = vec4(a_joints);\n    return getJointMatrix(joints.x) * a_weights.x\n         + getJointMatrix(joints.y) * a_weights.y\n         + getJointMatrix(joints.z) * a_weights.z\n         + getJointMatrix(joints.w) * a_weights.w;\n  }\n  void CCSkin (inout vec4 position) {\n    mat4 m = skinMatrix();\n    position = m * position;\n  }\n  void CCSkin (inout StandardVertInput attr) {\n    mat4 m = skinMatrix();\n    attr.position = m * attr.position;\n    attr.normal = (m * vec4(attr.normal, 0.0)).xyz;\n    attr.tangent.xyz = (m * vec4(attr.tangent.xyz, 0.0)).xyz;\n  }\n#endif\n#if USE_INSTANCING\n  in vec4 a_matWorld0;\n  in vec4 a_matWorld1;\n  in vec4 a_matWorld2;\n  #if USE_LIGHTMAP\n    in vec4 a_lightingMapUVParam;\n  #endif\n#elif USE_BATCHING\n  in float a_dyn_batch_id;\n  layout(std140) uniform CCLocalBatched {\n    highp mat4 cc_matWorlds[10];\n  };\n#else\n  layout(std140) uniform CCLocal {\n    highp mat4 cc_matWorld;\n    highp mat4 cc_matWorldIT;\n    highp vec4 cc_lightingMapUVParam;\n  };\n#endif\nlayout(std140) uniform Constants {\n  vec4 tilingOffset;\n  vec4 albedo;\n  vec4 albedoScaleAndCutoff;\n  vec4 pbrParams;\n  vec4 emissive;\n  vec4 emissiveScaleParam;\n};\nlayout(std140) uniform CCShadow {\n  highp mat4 cc_matLightPlaneProj;\n  highp mat4 cc_matLightView;\n  highp mat4 cc_matLightViewProj;\n  highp vec4 cc_shadowInvProjDepthInfo;\n  highp vec4 cc_shadowProjDepthInfo;\n  highp vec4 cc_shadowProjInfo;\n  mediump vec4 cc_shadowNFLSInfo;\n  mediump vec4 cc_shadowWHPBInfo;\n  mediump vec4 cc_shadowLPNNInfo;\n  lowp vec4 cc_shadowColor;\n  mediump vec4 cc_planarNDInfo;\n};\n#if HAS_SECOND_UV || USE_LIGHTMAP\n  in vec2 a_texCoord1;\n#endif\nout vec2 v_uv;\nout vec2 v_uv1;\nout vec4 v_worldPos;\nout float v_clip_depth;\nvec4 vert () {\n  StandardVertInput In;\n      In.position = vec4(a_position, 1.0);\n      In.normal = a_normal;\n      In.tangent = a_tangent;\n    #if CC_USE_MORPH\n      applyMorph(In);\n    #endif\n    #if CC_USE_SKINNING\n      CCSkin(In);\n    #endif\n  mat4 matWorld, matWorldIT;\n    #if USE_INSTANCING\n      matWorld = mat4(\n        vec4(a_matWorld0.xyz, 0.0),\n        vec4(a_matWorld1.xyz, 0.0),\n        vec4(a_matWorld2.xyz, 0.0),\n        vec4(a_matWorld0.w, a_matWorld1.w, a_matWorld2.w, 1.0)\n      );\n      matWorldIT = matWorld;\n    #elif USE_BATCHING\n      matWorld = cc_matWorlds[int(a_dyn_batch_id)];\n      matWorldIT = matWorld;\n    #else\n      matWorld = cc_matWorld;\n      matWorldIT = cc_matWorldIT;\n    #endif\n  v_worldPos = matWorld * In.position;\n  vec4 clipPos = cc_matLightViewProj * v_worldPos;\n  v_uv = a_texCoord * tilingOffset.xy + tilingOffset.zw;\n  #if HAS_SECOND_UV\n    v_uv1 = a_texCoord1 * tilingOffset.xy + tilingOffset.zw;\n  #endif\n  v_clip_depth = clipPos.z / clipPos.w * 0.5 + 0.5;\n  return clipPos;\n}\nvoid main() { gl_Position = vert(); }","frag":"\nprecision highp float;\nlayout(std140) uniform Constants {\n  vec4 tilingOffset;\n  vec4 albedo;\n  vec4 albedoScaleAndCutoff;\n  vec4 pbrParams;\n  vec4 emissive;\n  vec4 emissiveScaleParam;\n};\nvec4 packDepthToRGBA (float depth) {\n  vec4 ret = vec4(1.0, 255.0, 65025.0, 16581375.0) * depth;\n  ret = fract(ret);\n  ret -= vec4(ret.yzw, 0.0) / 255.0;\n  return ret;\n}\nlayout(std140) uniform CCGlobal {\n  highp   vec4 cc_time;\n  mediump vec4 cc_screenSize;\n  mediump vec4 cc_nativeSize;\n};\nlayout(std140) uniform CCCamera {\n  highp   mat4 cc_matView;\n  highp   mat4 cc_matViewInv;\n  highp   mat4 cc_matProj;\n  highp   mat4 cc_matProjInv;\n  highp   mat4 cc_matViewProj;\n  highp   mat4 cc_matViewProjInv;\n  highp   vec4 cc_cameraPos;\n  mediump vec4 cc_screenScale;\n  mediump vec4 cc_exposure;\n  mediump vec4 cc_mainLitDir;\n  mediump vec4 cc_mainLitColor;\n  mediump vec4 cc_ambientSky;\n  mediump vec4 cc_ambientGround;\n  mediump vec4 cc_fogColor;\n  mediump vec4 cc_fogBase;\n  mediump vec4 cc_fogAdd;\n  mediump vec4 cc_nearFar;\n  mediump vec4 cc_viewPort;\n};\nlayout(std140) uniform CCShadow {\n  highp mat4 cc_matLightPlaneProj;\n  highp mat4 cc_matLightView;\n  highp mat4 cc_matLightViewProj;\n  highp vec4 cc_shadowInvProjDepthInfo;\n  highp vec4 cc_shadowProjDepthInfo;\n  highp vec4 cc_shadowProjInfo;\n  mediump vec4 cc_shadowNFLSInfo;\n  mediump vec4 cc_shadowWHPBInfo;\n  mediump vec4 cc_shadowLPNNInfo;\n  lowp vec4 cc_shadowColor;\n  mediump vec4 cc_planarNDInfo;\n};\nfloat CCGetLinearDepthFromViewSpace(vec3 viewPos) {\n  float dist = length(viewPos);\n  return (dist - cc_shadowNFLSInfo.x) / (cc_shadowNFLSInfo.y - cc_shadowNFLSInfo.x);\n}\nfloat CCGetLinearDepth(vec3 worldPos) {\n  vec4 viewStartPos = cc_matLightView * vec4(worldPos.xyz, 1.0);\n  return CCGetLinearDepthFromViewSpace(viewStartPos.xyz);\n}\n#if CC_RECEIVE_SHADOW\n  uniform highp sampler2D cc_shadowMap;\n  uniform highp sampler2D cc_spotLightingMap;\n#endif\nin vec2 v_uv;\nin vec2 v_uv1;\nin vec4 v_worldPos;\nin float v_clip_depth;\n#if USE_ALBEDO_MAP\n  uniform sampler2D albedoMap;\n#endif\n#if USE_ALPHA_TEST\n#endif\nvec4 frag () {\n  vec4 baseColor = albedo;\n  #if USE_ALBEDO_MAP\n    baseColor *= texture(albedoMap, ALBEDO_UV);\n  #endif\n  #if USE_ALPHA_TEST\n    if (baseColor.ALPHA_TEST_CHANNEL < albedoScaleAndCutoff.w) discard;\n  #endif\n  if(cc_shadowLPNNInfo.x > 0.000001 && cc_shadowLPNNInfo.x < 1.999999) {\n    if (cc_shadowNFLSInfo.z > 0.000001) {\n      return vec4(CCGetLinearDepth(v_worldPos.xyz), 1.0, 1.0, 1.0);\n    }\n  }\n  if (cc_shadowLPNNInfo.y > 0.000001) {\n    return packDepthToRGBA(v_clip_depth);\n  }\n  return vec4(v_clip_depth, 1.0, 1.0, 1.0);\n}\nlayout(location = 0) out vec4 cc_FragColor;\nvoid main() { cc_FragColor = frag(); }"},"glsl1":{"vert":"\nprecision highp float;\nhighp float decode32 (highp vec4 rgba) {\n  rgba = rgba * 255.0;\n  highp float Sign = 1.0 - (step(128.0, (rgba[3]) + 0.5)) * 2.0;\n  highp float Exponent = 2.0 * (mod(float(int((rgba[3]) + 0.5)), 128.0)) + (step(128.0, (rgba[2]) + 0.5)) - 127.0;\n  highp float Mantissa = (mod(float(int((rgba[2]) + 0.5)), 128.0)) * 65536.0 + rgba[1] * 256.0 + rgba[0] + 8388608.0;\n  return Sign * exp2(Exponent - 23.0) * Mantissa;\n}\nstruct StandardVertInput {\n  highp vec4 position;\n  vec3 normal;\n  vec4 tangent;\n};\nattribute vec3 a_position;\nattribute vec3 a_normal;\nattribute vec2 a_texCoord;\nattribute vec4 a_tangent;\n#if CC_USE_MORPH\n    attribute float a_vertexId;\n    int getVertexId() {\n      return int(a_vertexId);\n    }\n  uniform vec4 cc_displacementWeights[15];\n  uniform vec4 cc_displacementTextureInfo;\n  vec2 getPixelLocation(vec2 textureResolution, int pixelIndex) {\n    float pixelIndexF = float(pixelIndex);\n    float x = mod(pixelIndexF, textureResolution.x);\n    float y = floor(pixelIndexF / textureResolution.x);\n    return vec2(x, y);\n  }\n  vec2 getPixelCoordFromLocation(vec2 location, vec2 textureResolution) {\n    return (vec2(location.x, location.y) + .5) / textureResolution;\n  }\n  #if CC_DEVICE_SUPPORT_FLOAT_TEXTURE\n      vec4 fetchVec3ArrayFromTexture(sampler2D tex, int elementIndex) {\n        int pixelIndex = elementIndex;\n        vec2 location = getPixelLocation(cc_displacementTextureInfo.xy, pixelIndex);\n        vec2 uv = getPixelCoordFromLocation(location, cc_displacementTextureInfo.xy);\n        return texture2D(tex, uv);\n      }\n  #else\n    vec4 fetchVec3ArrayFromTexture(sampler2D tex, int elementIndex) {\n      int pixelIndex = elementIndex * 4;\n      vec2 location = getPixelLocation(cc_displacementTextureInfo.xy, pixelIndex);\n      vec2 x = getPixelCoordFromLocation(location + vec2(0.0, 0.0), cc_displacementTextureInfo.xy);\n      vec2 y = getPixelCoordFromLocation(location + vec2(1.0, 0.0), cc_displacementTextureInfo.xy);\n      vec2 z = getPixelCoordFromLocation(location + vec2(2.0, 0.0), cc_displacementTextureInfo.xy);\n      return vec4(\n        decode32(texture2D(tex, x)),\n        decode32(texture2D(tex, y)),\n        decode32(texture2D(tex, z)),\n        1.0\n      );\n    }\n  #endif\n  float getDisplacementWeight(int index) {\n    int quot = index / 4;\n    int remainder = index - quot * 4;\n    if (remainder == 0) {\n      return cc_displacementWeights[quot].x;\n    } else if (remainder == 1) {\n      return cc_displacementWeights[quot].y;\n    } else if (remainder == 2) {\n      return cc_displacementWeights[quot].z;\n    } else {\n      return cc_displacementWeights[quot].w;\n    }\n  }\n  vec3 getVec3DisplacementFromTexture(sampler2D tex, int vertexIndex) {\n  #if CC_MORPH_PRECOMPUTED\n    return fetchVec3ArrayFromTexture(tex, vertexIndex).rgb;\n  #else\n    vec3 result = vec3(0, 0, 0);\n    int nVertices = int(cc_displacementTextureInfo.z);\n    for (int iTarget = 0; iTarget < CC_MORPH_TARGET_COUNT; ++iTarget) {\n      result += (fetchVec3ArrayFromTexture(tex, nVertices * iTarget + vertexIndex).rgb * getDisplacementWeight(iTarget));\n    }\n    return result;\n  #endif\n  }\n  #if CC_MORPH_TARGET_HAS_POSITION\n    uniform sampler2D cc_PositionDisplacements;\n    vec3 getPositionDisplacement(int vertexId) {\n      return getVec3DisplacementFromTexture(cc_PositionDisplacements, vertexId);\n    }\n  #endif\n  #if CC_MORPH_TARGET_HAS_NORMAL\n    uniform sampler2D cc_NormalDisplacements;\n    vec3 getNormalDisplacement(int vertexId) {\n      return getVec3DisplacementFromTexture(cc_NormalDisplacements, vertexId);\n    }\n  #endif\n  #if CC_MORPH_TARGET_HAS_TANGENT\n    uniform sampler2D cc_TangentDisplacements;\n    vec3 getTangentDisplacement(int vertexId) {\n      return getVec3DisplacementFromTexture(cc_TangentDisplacements, vertexId);\n    }\n  #endif\n  void applyMorph (inout StandardVertInput attr) {\n    int vertexId = getVertexId();\n  #if CC_MORPH_TARGET_HAS_POSITION\n    attr.position.xyz = attr.position.xyz + getPositionDisplacement(vertexId);\n  #endif\n  #if CC_MORPH_TARGET_HAS_NORMAL\n    attr.normal.xyz = attr.normal.xyz + getNormalDisplacement(vertexId);\n  #endif\n  #if CC_MORPH_TARGET_HAS_TANGENT\n    attr.tangent.xyz = attr.tangent.xyz + getTangentDisplacement(vertexId);\n  #endif\n  }\n  void applyMorph (inout vec4 position) {\n  #if CC_MORPH_TARGET_HAS_POSITION\n    position.xyz = position.xyz + getPositionDisplacement(getVertexId());\n  #endif\n  }\n#endif\n#if CC_USE_SKINNING\n    attribute vec4 a_joints;\n  attribute vec4 a_weights;\n  #if CC_USE_BAKED_ANIMATION\n    #if USE_INSTANCING\n      attribute highp vec4 a_jointAnimInfo;\n    #endif\n    uniform highp vec4 cc_jointTextureInfo;\n    uniform highp vec4 cc_jointAnimInfo;\n    uniform highp sampler2D cc_jointTexture;\n      #else\n    uniform highp vec4 cc_joints[90];\n  #endif\n  #if CC_USE_BAKED_ANIMATION\n    #if CC_DEVICE_SUPPORT_FLOAT_TEXTURE\n      mat4 getJointMatrix (float i) {\n              #if USE_INSTANCING\n                highp float j = 3.0 * (a_jointAnimInfo.x * a_jointAnimInfo.y + i) + a_jointAnimInfo.z;\n              #else\n                highp float j = 3.0 * (cc_jointAnimInfo.x * cc_jointTextureInfo.y + i) + cc_jointTextureInfo.z;\n              #endif\n              highp float invSize = cc_jointTextureInfo.w;\n              highp float y = floor(j * invSize);\n              highp float x = floor(j - y * cc_jointTextureInfo.x);\n              y = (y + 0.5) * invSize;\n        vec4 v1 = texture2D(cc_jointTexture, vec2((x + 0.5) * invSize, y));\n        vec4 v2 = texture2D(cc_jointTexture, vec2((x + 1.5) * invSize, y));\n        vec4 v3 = texture2D(cc_jointTexture, vec2((x + 2.5) * invSize, y));\n        return mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n      }\n    #else\n      mat4 getJointMatrix (float i) {\n              #if USE_INSTANCING\n                highp float j = 12.0 * (a_jointAnimInfo.x * a_jointAnimInfo.y + i) + a_jointAnimInfo.z;\n              #else\n                highp float j = 12.0 * (cc_jointAnimInfo.x * cc_jointTextureInfo.y + i) + cc_jointTextureInfo.z;\n              #endif\n              highp float invSize = cc_jointTextureInfo.w;\n              highp float y = floor(j * invSize);\n              highp float x = floor(j - y * cc_jointTextureInfo.x);\n              y = (y + 0.5) * invSize;\n        vec4 v1 = vec4(\n          decode32(texture2D(cc_jointTexture, vec2((x + 0.5) * invSize, y))),\n          decode32(texture2D(cc_jointTexture, vec2((x + 1.5) * invSize, y))),\n          decode32(texture2D(cc_jointTexture, vec2((x + 2.5) * invSize, y))),\n          decode32(texture2D(cc_jointTexture, vec2((x + 3.5) * invSize, y)))\n        );\n        vec4 v2 = vec4(\n          decode32(texture2D(cc_jointTexture, vec2((x + 4.5) * invSize, y))),\n          decode32(texture2D(cc_jointTexture, vec2((x + 5.5) * invSize, y))),\n          decode32(texture2D(cc_jointTexture, vec2((x + 6.5) * invSize, y))),\n          decode32(texture2D(cc_jointTexture, vec2((x + 7.5) * invSize, y)))\n        );\n        vec4 v3 = vec4(\n          decode32(texture2D(cc_jointTexture, vec2((x + 8.5) * invSize, y))),\n          decode32(texture2D(cc_jointTexture, vec2((x + 9.5) * invSize, y))),\n          decode32(texture2D(cc_jointTexture, vec2((x + 10.5) * invSize, y))),\n          decode32(texture2D(cc_jointTexture, vec2((x + 11.5) * invSize, y)))\n        );\n        return mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n      }\n    #endif\n  #else\n    mat4 getJointMatrix (float i) {\n      int idx = int(i);\n      vec4 v1 = cc_joints[idx * 3];\n      vec4 v2 = cc_joints[idx * 3 + 1];\n      vec4 v3 = cc_joints[idx * 3 + 2];\n      return mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n    }\n  #endif\n  mat4 skinMatrix () {\n    vec4 joints = vec4(a_joints);\n    return getJointMatrix(joints.x) * a_weights.x\n         + getJointMatrix(joints.y) * a_weights.y\n         + getJointMatrix(joints.z) * a_weights.z\n         + getJointMatrix(joints.w) * a_weights.w;\n  }\n  void CCSkin (inout vec4 position) {\n    mat4 m = skinMatrix();\n    position = m * position;\n  }\n  void CCSkin (inout StandardVertInput attr) {\n    mat4 m = skinMatrix();\n    attr.position = m * attr.position;\n    attr.normal = (m * vec4(attr.normal, 0.0)).xyz;\n    attr.tangent.xyz = (m * vec4(attr.tangent.xyz, 0.0)).xyz;\n  }\n#endif\n#if USE_INSTANCING\n  attribute vec4 a_matWorld0;\n  attribute vec4 a_matWorld1;\n  attribute vec4 a_matWorld2;\n  #if USE_LIGHTMAP\n    attribute vec4 a_lightingMapUVParam;\n  #endif\n#elif USE_BATCHING\n  attribute float a_dyn_batch_id;\n  uniform highp mat4 cc_matWorlds[10];\n#else\n  uniform highp mat4 cc_matWorld;\n  uniform highp mat4 cc_matWorldIT;\n#endif\n      uniform vec4 tilingOffset;\nuniform highp mat4 cc_matLightViewProj;\n#if HAS_SECOND_UV || USE_LIGHTMAP\n  attribute vec2 a_texCoord1;\n#endif\nvarying vec2 v_uv;\nvarying vec2 v_uv1;\nvarying vec4 v_worldPos;\nvarying float v_clip_depth;\nvec4 vert () {\n  StandardVertInput In;\n      In.position = vec4(a_position, 1.0);\n      In.normal = a_normal;\n      In.tangent = a_tangent;\n    #if CC_USE_MORPH\n      applyMorph(In);\n    #endif\n    #if CC_USE_SKINNING\n      CCSkin(In);\n    #endif\n  mat4 matWorld, matWorldIT;\n    #if USE_INSTANCING\n      matWorld = mat4(\n        vec4(a_matWorld0.xyz, 0.0),\n        vec4(a_matWorld1.xyz, 0.0),\n        vec4(a_matWorld2.xyz, 0.0),\n        vec4(a_matWorld0.w, a_matWorld1.w, a_matWorld2.w, 1.0)\n      );\n      matWorldIT = matWorld;\n    #elif USE_BATCHING\n      matWorld = cc_matWorlds[int(a_dyn_batch_id)];\n      matWorldIT = matWorld;\n    #else\n      matWorld = cc_matWorld;\n      matWorldIT = cc_matWorldIT;\n    #endif\n  v_worldPos = matWorld * In.position;\n  vec4 clipPos = cc_matLightViewProj * v_worldPos;\n  v_uv = a_texCoord * tilingOffset.xy + tilingOffset.zw;\n  #if HAS_SECOND_UV\n    v_uv1 = a_texCoord1 * tilingOffset.xy + tilingOffset.zw;\n  #endif\n  v_clip_depth = clipPos.z / clipPos.w * 0.5 + 0.5;\n  return clipPos;\n}\nvoid main() { gl_Position = vert(); }","frag":"\nprecision highp float;\n   uniform vec4 albedo;\n   uniform vec4 albedoScaleAndCutoff;\nvec4 packDepthToRGBA (float depth) {\n  vec4 ret = vec4(1.0, 255.0, 65025.0, 16581375.0) * depth;\n  ret = fract(ret);\n  ret -= vec4(ret.yzw, 0.0) / 255.0;\n  return ret;\n}\nuniform highp mat4 cc_matLightView;\n  uniform mediump vec4 cc_shadowNFLSInfo;\n  uniform mediump vec4 cc_shadowLPNNInfo;\nfloat CCGetLinearDepthFromViewSpace(vec3 viewPos) {\n  float dist = length(viewPos);\n  return (dist - cc_shadowNFLSInfo.x) / (cc_shadowNFLSInfo.y - cc_shadowNFLSInfo.x);\n}\nfloat CCGetLinearDepth(vec3 worldPos) {\n  vec4 viewStartPos = cc_matLightView * vec4(worldPos.xyz, 1.0);\n  return CCGetLinearDepthFromViewSpace(viewStartPos.xyz);\n}\n#if CC_RECEIVE_SHADOW\n  uniform highp sampler2D cc_shadowMap;\n  uniform highp sampler2D cc_spotLightingMap;\n#endif\nvarying vec2 v_uv;\nvarying vec2 v_uv1;\nvarying vec4 v_worldPos;\nvarying float v_clip_depth;\n#if USE_ALBEDO_MAP\n  uniform sampler2D albedoMap;\n#endif\n#if USE_ALPHA_TEST\n#endif\nvec4 frag () {\n  vec4 baseColor = albedo;\n  #if USE_ALBEDO_MAP\n    baseColor *= texture2D(albedoMap, ALBEDO_UV);\n  #endif\n  #if USE_ALPHA_TEST\n    if (baseColor.ALPHA_TEST_CHANNEL < albedoScaleAndCutoff.w) discard;\n  #endif\n  if(cc_shadowLPNNInfo.x > 0.000001 && cc_shadowLPNNInfo.x < 1.999999) {\n    if (cc_shadowNFLSInfo.z > 0.000001) {\n      return vec4(CCGetLinearDepth(v_worldPos.xyz), 1.0, 1.0, 1.0);\n    }\n  }\n  if (cc_shadowLPNNInfo.y > 0.000001) {\n    return packDepthToRGBA(v_clip_depth);\n  }\n  return vec4(v_clip_depth, 1.0, 1.0, 1.0);\n}\nvoid main() { gl_FragColor = frag(); }"},"builtins":{"globals":{"blocks":[{"name":"CCShadow","defines":[]},{"name":"CCGlobal","defines":[]},{"name":"CCCamera","defines":[]}],"samplerTextures":[{"name":"cc_shadowMap","defines":["CC_RECEIVE_SHADOW"]},{"name":"cc_spotLightingMap","defines":["CC_RECEIVE_SHADOW"]}],"buffers":[],"images":[]},"locals":{"blocks":[{"name":"CCMorph","defines":["CC_USE_MORPH"]},{"name":"CCSkinningTexture","defines":["CC_USE_SKINNING","CC_USE_BAKED_ANIMATION"]},{"name":"CCSkinningAnimation","defines":["CC_USE_SKINNING","CC_USE_BAKED_ANIMATION"]},{"name":"CCSkinning","defines":["CC_USE_SKINNING","!CC_USE_BAKED_ANIMATION"]},{"name":"CCLocalBatched","defines":["!USE_INSTANCING","USE_BATCHING"]},{"name":"CCLocal","defines":["!USE_INSTANCING","!USE_BATCHING"]}],"samplerTextures":[{"name":"cc_PositionDisplacements","defines":["CC_USE_MORPH","CC_MORPH_TARGET_HAS_POSITION"]},{"name":"cc_NormalDisplacements","defines":["CC_USE_MORPH","CC_MORPH_TARGET_HAS_NORMAL"]},{"name":"cc_TangentDisplacements","defines":["CC_USE_MORPH","CC_MORPH_TARGET_HAS_TANGENT"]},{"name":"cc_jointTexture","defines":["CC_USE_SKINNING","CC_USE_BAKED_ANIMATION"]}],"buffers":[],"images":[]},"statistics":{"CC_EFFECT_USED_VERTEX_UNIFORM_VECTORS":183,"CC_EFFECT_USED_FRAGMENT_UNIFORM_VECTORS":65}},"defines":[{"name":"CC_USE_MORPH","type":"boolean","defines":[]},{"name":"CC_MORPH_TARGET_COUNT","type":"number","defines":["CC_USE_MORPH"],"range":[2,8]},{"name":"CC_MORPH_PRECOMPUTED","type":"boolean","defines":["CC_USE_MORPH"]},{"name":"CC_MORPH_TARGET_HAS_POSITION","type":"boolean","defines":["CC_USE_MORPH"]},{"name":"CC_MORPH_TARGET_HAS_NORMAL","type":"boolean","defines":["CC_USE_MORPH"]},{"name":"CC_MORPH_TARGET_HAS_TANGENT","type":"boolean","defines":["CC_USE_MORPH"]},{"name":"CC_USE_SKINNING","type":"boolean","defines":[]},{"name":"CC_USE_BAKED_ANIMATION","type":"boolean","defines":["CC_USE_SKINNING"]},{"name":"USE_INSTANCING","type":"boolean","defines":[],"editor":{"elevated":true}},{"name":"USE_BATCHING","type":"boolean","defines":["!USE_INSTANCING"],"editor":{"elevated":true}},{"name":"USE_LIGHTMAP","type":"boolean","defines":["USE_INSTANCING"]},{"name":"HAS_SECOND_UV","type":"boolean","defines":[]},{"name":"CC_RECEIVE_SHADOW","type":"boolean","defines":[]},{"name":"USE_ALBEDO_MAP","type":"boolean","defines":[]},{"name":"ALBEDO_UV","type":"string","defines":["USE_ALBEDO_MAP"],"options":["v_uv","v_uv1"]},{"name":"USE_ALPHA_TEST","type":"boolean","defines":[]},{"name":"ALPHA_TEST_CHANNEL","type":"string","defines":["USE_ALPHA_TEST"],"options":["a","r"]}]}],[{"name":"opaque","passes":[{"program":"builtin-standard|standard-vs|standard-fs","properties":{"tilingOffset":{"type":16,"value":[1,1,0,0]},"mainColor":{"linear":true,"type":16,"value":[1,1,1,1],"editor":{"displayName":"Albedo","type":"color"},"handleInfo":["albedo",0,16]},"albedoScale":{"type":15,"value":[1,1,1],"handleInfo":["albedoScaleAndCutoff",0,15]},"alphaThreshold":{"type":13,"value":[0.5],"editor":{"parent":"USE_ALPHA_TEST","slide":true,"step":0.001,"range":[0,1]},"handleInfo":["albedoScaleAndCutoff",3,13]},"occlusion":{"type":13,"value":[1],"editor":{"slide":true,"step":0.001,"range":[0,1]},"handleInfo":["pbrParams",0,13]},"roughness":{"type":13,"value":[0.8],"editor":{"slide":true,"step":0.001,"range":[0,1]},"handleInfo":["pbrParams",1,13]},"metallic":{"type":13,"value":[0.6],"editor":{"slide":true,"step":0.001,"range":[0,1]},"handleInfo":["pbrParams",2,13]},"SpecularIntensity":{"type":13,"value":[0.5],"editor":{"slide":true,"step":0.001,"range":[0,1]},"handleInfo":["pbrParams",3,13]},"emissive":{"linear":true,"type":16,"value":[0,0,0,1],"editor":{"type":"color"}},"emissiveScale":{"type":15,"value":[1,1,1],"handleInfo":["emissiveScaleParam",0,15]},"normalStrenth":{"type":13,"value":[1],"editor":{"parent":"USE_NORMAL_MAP","slide":true,"step":0.001,"range":[0,1]},"handleInfo":["emissiveScaleParam",3,13]},"mainTexture":{"value":"grey","type":28,"editor":{"displayName":"AlbedoMap"},"handleInfo":["albedoMap",0,28]},"normalMap":{"value":"normal","type":28},"pbrMap":{"value":"grey","type":28},"metallicRoughnessMap":{"value":"grey","type":28},"occlusionMap":{"value":"white","type":28},"emissiveMap":{"value":"grey","type":28},"albedo":{"type":16,"editor":{"visible":false,"deprecated":true},"value":[1,1,1,1]},"albedoScaleAndCutoff":{"type":16,"editor":{"visible":false,"deprecated":true},"value":[1,1,1,0.5]},"pbrParams":{"type":16,"editor":{"visible":false,"deprecated":true},"value":[1,0.8,0.6,0.5]},"emissiveScaleParam":{"type":16,"editor":{"visible":false,"deprecated":true},"value":[1,1,1,1]},"albedoMap":{"type":28,"value":"grey","editor":{"visible":false,"deprecated":true}}}},{"phase":"forward-add","propertyIndex":0,"program":"builtin-standard|standard-vs|standard-fs","embeddedMacros":{"CC_FORWARD_ADD":true},"blendState":{"targets":[{"blend":true,"blendSrc":1,"blendDst":1,"blendSrcAlpha":0,"blendDstAlpha":1}]},"depthStencilState":{"depthFunc":2,"depthTest":true,"depthWrite":false}},{"phase":"shadow-caster","propertyIndex":0,"program":"builtin-standard|shadow-caster-vs:vert|shadow-caster-fs:frag","rasterizerState":{"cullMode":1},"properties":{"tilingOffset":{"type":16,"value":[1,1,0,0]},"mainColor":{"type":16,"value":[1,1,1,1],"editor":{"displayName":"Albedo","type":"color"},"handleInfo":["albedo",0,16]},"albedoScale":{"type":15,"value":[1,1,1],"handleInfo":["albedoScaleAndCutoff",0,15]},"alphaThreshold":{"type":13,"value":[0.5],"editor":{"parent":"USE_ALPHA_TEST"},"handleInfo":["albedoScaleAndCutoff",3,13]},"mainTexture":{"value":"grey","type":28,"editor":{"displayName":"AlbedoMap"},"handleInfo":["albedoMap",0,28]},"albedo":{"type":16,"editor":{"visible":false,"deprecated":true},"value":[1,1,1,1]},"albedoScaleAndCutoff":{"type":16,"editor":{"visible":false,"deprecated":true},"value":[1,1,1,0.5]},"albedoMap":{"type":28,"value":"grey","editor":{"visible":false,"deprecated":true}}}}]},{"name":"transparent","passes":[{"program":"builtin-standard|standard-vs|standard-fs","embeddedMacros":{"CC_FORCE_FORWARD_SHADING":true},"blendState":{"targets":[{"blend":true,"blendSrc":2,"blendDst":4,"blendDstAlpha":4}]},"depthStencilState":{"depthTest":true,"depthWrite":false},"properties":{"tilingOffset":{"type":16,"value":[1,1,0,0]},"mainColor":{"linear":true,"type":16,"value":[1,1,1,1],"editor":{"displayName":"Albedo","type":"color"},"handleInfo":["albedo",0,16]},"albedoScale":{"type":15,"value":[1,1,1],"handleInfo":["albedoScaleAndCutoff",0,15]},"alphaThreshold":{"type":13,"value":[0.5],"editor":{"parent":"USE_ALPHA_TEST","slide":true,"step":0.001,"range":[0,1]},"handleInfo":["albedoScaleAndCutoff",3,13]},"occlusion":{"type":13,"value":[1],"editor":{"slide":true,"step":0.001,"range":[0,1]},"handleInfo":["pbrParams",0,13]},"roughness":{"type":13,"value":[0.8],"editor":{"slide":true,"step":0.001,"range":[0,1]},"handleInfo":["pbrParams",1,13]},"metallic":{"type":13,"value":[0.6],"editor":{"slide":true,"step":0.001,"range":[0,1]},"handleInfo":["pbrParams",2,13]},"SpecularIntensity":{"type":13,"value":[0.5],"editor":{"slide":true,"step":0.001,"range":[0,1]},"handleInfo":["pbrParams",3,13]},"emissive":{"linear":true,"type":16,"value":[0,0,0,1],"editor":{"type":"color"}},"emissiveScale":{"type":15,"value":[1,1,1],"handleInfo":["emissiveScaleParam",0,15]},"normalStrenth":{"type":13,"value":[1],"editor":{"parent":"USE_NORMAL_MAP","slide":true,"step":0.001,"range":[0,1]},"handleInfo":["emissiveScaleParam",3,13]},"mainTexture":{"value":"grey","type":28,"editor":{"displayName":"AlbedoMap"},"handleInfo":["albedoMap",0,28]},"normalMap":{"value":"normal","type":28},"pbrMap":{"value":"grey","type":28},"metallicRoughnessMap":{"value":"grey","type":28},"occlusionMap":{"value":"white","type":28},"emissiveMap":{"value":"grey","type":28},"albedo":{"type":16,"editor":{"visible":false,"deprecated":true},"value":[1,1,1,1]},"albedoScaleAndCutoff":{"type":16,"editor":{"visible":false,"deprecated":true},"value":[1,1,1,0.5]},"pbrParams":{"type":16,"editor":{"visible":false,"deprecated":true},"value":[1,0.8,0.6,0.5]},"emissiveScaleParam":{"type":16,"editor":{"visible":false,"deprecated":true},"value":[1,1,1,1]},"albedoMap":{"type":28,"value":"grey","editor":{"visible":false,"deprecated":true}}}},{"phase":"forward-add","propertyIndex":0,"program":"builtin-standard|standard-vs|standard-fs","embeddedMacros":{"CC_FORWARD_ADD":true},"blendState":{"targets":[{"blend":true,"blendSrc":1,"blendDst":1,"blendSrcAlpha":0,"blendDstAlpha":1}]},"depthStencilState":{"depthFunc":2,"depthTest":true,"depthWrite":false}},{"phase":"shadow-caster","propertyIndex":0,"program":"builtin-standard|shadow-caster-vs:vert|shadow-caster-fs:frag","rasterizerState":{"cullMode":1},"properties":{"tilingOffset":{"type":16,"value":[1,1,0,0]},"mainColor":{"type":16,"value":[1,1,1,1],"editor":{"displayName":"Albedo","type":"color"},"handleInfo":["albedo",0,16]},"albedoScale":{"type":15,"value":[1,1,1],"handleInfo":["albedoScaleAndCutoff",0,15]},"alphaThreshold":{"type":13,"value":[0.5],"editor":{"parent":"USE_ALPHA_TEST"},"handleInfo":["albedoScaleAndCutoff",3,13]},"mainTexture":{"value":"grey","type":28,"editor":{"displayName":"AlbedoMap"},"handleInfo":["albedoMap",0,28]},"albedo":{"type":16,"editor":{"visible":false,"deprecated":true},"value":[1,1,1,1]},"albedoScaleAndCutoff":{"type":16,"editor":{"visible":false,"deprecated":true},"value":[1,1,1,0.5]},"albedoMap":{"type":28,"value":"grey","editor":{"visible":false,"deprecated":true}}}}]}]]],0,0,[],[],[]],[[[32,"bg_Main",".mp3",8.88],-1],0,0,[],[],[]],[[[50,"Skin-0",4199602079,["Comp/root","Comp/root/spine0","Comp/root/spine0/spine1","Comp/root/spine0/spine1/spine2","Comp/root/spine0/spine1/spine2/spine3","Comp/root/spine0/spine1/spine2/spine3/spine4","Comp/root/spine0/spine1/spine2/spine3/spine4/spine5","Comp/root/spine0/spine1/spine2/spine3/spine4/spine5/left arm0","Comp/root/spine0/spine1/spine2/spine3/spine4/spine5/left arm0/left arm1","Comp/root/spine0/spine1/spine2/spine3/spine4/spine5/left arm0/left arm1/left hand","Comp/root/spine0/spine1/spine2/spine3/spine4/spine5/left arm0/left arm1/left hand/left finger3","Comp/root/spine0/spine1/spine2/spine3/spine4/spine5/left arm0/left arm1/left hand/left finger3/left finger4","Comp/root/spine0/spine1/spine2/spine3/spine4/spine5/left arm0/left arm1/left hand/left finger3/left finger4/left finger5","Comp/root/spine0/spine1/spine2/spine3/spine4/spine5/left arm0/left arm1/left hand/left finger3/left finger4/left finger5/left finger5_end","Comp/root/spine0/spine1/spine2/spine3/spine4/spine5/left arm0/left arm1/left hand/left finger3/left finger4/left finger5/left finger5_end/left finger5_end_end","Comp/root/spine0/spine1/spine2/spine3/spine4/spine5/left arm0/left arm1/left hand/left finger3/left finger4/left finger5/left finger5_end/left finger5_end_end/left finger5_end_end_end","Comp/root/spine0/spine1/spine2/spine3/spine4/spine5/right arm0","Comp/root/spine0/spine1/spine2/spine3/spine4/spine5/right arm0/right arm1","Comp/root/spine0/spine1/spine2/spine3/spine4/spine5/right arm0/right arm1/right hand","Comp/root/spine0/spine1/spine2/spine3/spine4/spine5/right arm0/right arm1/right hand/right finger3","Comp/root/spine0/spine1/spine2/spine3/spine4/spine5/right arm0/right arm1/right hand/right finger3/right finger4","Comp/root/spine0/spine1/spine2/spine3/spine4/spine5/right arm0/right arm1/right hand/right finger3/right finger4/right finger5","Comp/root/spine0/spine1/spine2/spine3/spine4/spine5/right arm0/right arm1/right hand/right finger3/right finger4/right finger5/right finger5_end","Comp/root/spine0/spine1/spine2/spine3/spine4/spine5/right arm0/right arm1/right hand/right finger3/right finger4/right finger5/right finger5_end/right finger5_end_end","Comp/root/spine0/spine1/spine2/spine3/spine4/spine5/right arm0/right arm1/right hand/right finger3/right finger4/right finger5/right finger5_end/right finger5_end_end/right finger5_end_end_end","Comp/root/spine0/spine1/spine2/spine3/spine4/spine5/neck0","Comp/root/spine0/spine1/spine2/spine3/spine4/spine5/neck0/neck1","Comp/root/spine0/spine1/spine2/spine3/spine4/spine5/neck0/neck1/neck2","Comp/root/spine0/spine1/spine2/spine3/spine4/spine5/neck0/neck1/neck2/neck3","Comp/root/spine0/spine1/spine2/spine3/spine4/spine5/neck0/neck1/neck2/neck3/head","Comp/root/spine0/spine1/spine2/spine3/spine4/spine5/neck0/neck1/neck2/neck3/head/eye0","Comp/root/spine0/spine1/spine2/spine3/spine4/spine5/neck0/neck1/neck2/neck3/head/eye0/right eye","Comp/root/spine0/spine1/spine2/spine3/spine4/spine5/neck0/neck1/neck2/neck3/head/eye0/right eye/right eye_end","Comp/root/spine0/spine1/spine2/spine3/spine4/spine5/neck0/neck1/neck2/neck3/head/eye0/right eye/right eye_end/right eye_end_end","Comp/root/spine0/spine1/spine2/spine3/spine4/spine5/neck0/neck1/neck2/neck3/head/eye0/right eye/right eye_end/right eye_end_end/right eye_end_end_end","Comp/root/spine0/spine1/spine2/spine3/spine4/spine5/neck0/neck1/neck2/neck3/head/eye0/left eye","Comp/root/spine0/spine1/spine2/spine3/spine4/spine5/neck0/neck1/neck2/neck3/head/eye0/left eye/left eye_end","Comp/root/spine0/spine1/spine2/spine3/spine4/spine5/neck0/neck1/neck2/neck3/head/eye0/left eye/left eye_end/left eye_end_end","Comp/root/spine0/spine1/spine2/spine3/spine4/spine5/neck0/neck1/neck2/neck3/head/eye0/left eye/left eye_end/left eye_end_end/left eye_end_end_end","Comp/root/spine0/spine1/spine2/spine3/spine4/spine5/neck0/neck1/neck2/neck3/head/jaw0","Comp/root/spine0/spine1/spine2/spine3/spine4/spine5/neck0/neck1/neck2/neck3/head/jaw0/jaw1","Comp/root/spine0/spine1/spine2/spine3/spine4/spine5/neck0/neck1/neck2/neck3/head/jaw0/jaw1/jaw1_end","Comp/root/spine0/spine1/spine2/spine3/spine4/spine5/neck0/neck1/neck2/neck3/head/jaw0/jaw1/jaw1_end/jaw1_end_end","Comp/root/spine0/spine1/spine2/spine3/spine4/spine5/neck0/neck1/neck2/neck3/head/jaw0/jaw1/jaw1_end/jaw1_end_end/jaw1_end_end_end","Comp/root/spine0/spine1/spine2/spine3/spine4/spine5/neck0/neck1/neck2/neck3/head/jaw0/tongue0","Comp/root/spine0/spine1/spine2/spine3/spine4/spine5/neck0/neck1/neck2/neck3/head/jaw0/tongue0/tongue1","Comp/root/spine0/spine1/spine2/spine3/spine4/spine5/neck0/neck1/neck2/neck3/head/jaw0/tongue0/tongue1/tongue2","Comp/root/spine0/spine1/spine2/spine3/spine4/spine5/neck0/neck1/neck2/neck3/head/jaw0/tongue0/tongue1/tongue2/tongue2_end","Comp/root/spine0/spine1/spine2/spine3/spine4/spine5/neck0/neck1/neck2/neck3/head/jaw0/tongue0/tongue1/tongue2/tongue2_end/tongue2_end_end","Comp/root/spine0/spine1/spine2/spine3/spine4/spine5/neck0/neck1/neck2/neck3/head/jaw0/tongue0/tongue1/tongue2/tongue2_end/tongue2_end_end/tongue2_end_end_end","Comp/root/spine0/spine1/spine2/Right Torso","Comp/root/spine0/spine1/spine2/Right Torso/Right Torso_end","Comp/root/spine0/spine1/spine2/Right Torso/Right Torso_end/Right Torso_end_end","Comp/root/spine0/spine1/spine2/Right Torso/Right Torso_end/Right Torso_end_end/Right Torso_end_end_end","Comp/root/spine0/spine1/spine2/Left Torso","Comp/root/spine0/spine1/spine2/Left Torso/Left Torso_end","Comp/root/spine0/spine1/spine2/Left Torso/Left Torso_end/Left Torso_end_end","Comp/root/spine0/spine1/spine2/Left Torso/Left Torso_end/Left Torso_end_end/Left Torso_end_end_end","Comp/root/pelvis","Comp/root/pelvis/tail0","Comp/root/pelvis/tail0/tail1","Comp/root/pelvis/tail0/tail1/tail2","Comp/root/pelvis/tail0/tail1/tail2/tail3","Comp/root/pelvis/tail0/tail1/tail2/tail3/tail4","Comp/root/pelvis/tail0/tail1/tail2/tail3/tail4/tail5","Comp/root/pelvis/tail0/tail1/tail2/tail3/tail4/tail5/tail6","Comp/root/pelvis/tail0/tail1/tail2/tail3/tail4/tail5/tail6/tail7","Comp/root/pelvis/tail0/tail1/tail2/tail3/tail4/tail5/tail6/tail7/tail8","Comp/root/pelvis/tail0/tail1/tail2/tail3/tail4/tail5/tail6/tail7/tail8/tail8_end","Comp/root/pelvis/tail0/tail1/tail2/tail3/tail4/tail5/tail6/tail7/tail8/tail8_end/tail8_end_end","Comp/root/pelvis/tail0/tail1/tail2/tail3/tail4/tail5/tail6/tail7/tail8/tail8_end/tail8_end_end/tail8_end_end_end","Comp/root/pelvis/right leg0","Comp/root/pelvis/right leg0/right leg1","Comp/root/pelvis/right leg0/right leg1/right foot0","Comp/root/pelvis/right leg0/right leg1/right foot0/right foot1","Comp/root/pelvis/right leg0/right leg1/right foot0/right foot1/right foot2","Comp/root/pelvis/right leg0/right leg1/right foot0/right foot1/right foot2/right toe0","Comp/root/pelvis/right leg0/right leg1/right foot0/right foot1/right foot2/right toe0/right toe1","Comp/root/pelvis/right leg0/right leg1/right foot0/right foot1/right foot2/right toe0/right toe1/right toe2","Comp/root/pelvis/right leg0/right leg1/right foot0/right foot1/right foot2/right toe0/right toe1/right toe2/right toe2_end","Comp/root/pelvis/right leg0/right leg1/right foot0/right foot1/right foot2/right toe0/right toe1/right toe2/right toe2_end/right toe2_end_end","Comp/root/pelvis/right leg0/right leg1/right foot0/right foot1/right foot2/right toe0/right toe1/right toe2/right toe2_end/right toe2_end_end/right toe2_end_end_end","Comp/root/pelvis/left leg0","Comp/root/pelvis/left leg0/left leg1","Comp/root/pelvis/left leg0/left leg1/left foot0","Comp/root/pelvis/left leg0/left leg1/left foot0/left foot1","Comp/root/pelvis/left leg0/left leg1/left foot0/left foot1/left foot2","Comp/root/pelvis/left leg0/left leg1/left foot0/left foot1/left foot2/left toe0","Comp/root/pelvis/left leg0/left leg1/left foot0/left foot1/left foot2/left toe0/left toe1","Comp/root/pelvis/left leg0/left leg1/left foot0/left foot1/left foot2/left toe0/left toe1/left toe2","Comp/root/pelvis/left leg0/left leg1/left foot0/left foot1/left foot2/left toe0/left toe1/left toe2/left toe2_end","Comp/root/pelvis/left leg0/left leg1/left foot0/left foot1/left foot2/left toe0/left toe1/left toe2/left toe2_end/left toe2_end_end","Comp/root/pelvis/left leg0/left leg1/left foot0/left foot1/left foot2/left toe0/left toe1/left toe2/left toe2_end/left toe2_end_end/left toe2_end_end_end"],[[[7,10,0.0000012909898714497103,-5.6430968025603795e-14,0,-5.6430968025603795e-14,-3.465204333327407e-14,-9.999999046325684,0,-0.0000012909895303891972,10.00000286102295,-3.4652023004483334e-14,0,-0.000011803059351223055,-0.006815664935857058,0.12852759659290314,1],[7,10,0.0000012909025599583401,-5.642714960107757e-14,0,-5.642714960107757e-14,-3.465092524978369e-14,-9.999999046325684,0,-0.0000012909021052109892,10.00000286102295,-3.465090492099296e-14,0,-0.000011803809684352018,-0.010724741034209728,0.12945276498794556,1],[7,10,0.0000012908643611808657,-5.6425482640237376e-14,0,-5.6425482640237376e-14,-3.4650437358806074e-14,-9.999999046325684,0,-0.0000012908640201203525,10.00000286102295,-3.465041703001534e-14,0,-0.000011804465430031996,-0.018872950226068497,0.13191109895706177,1],[7,10,0.0000012904991990581038,-5.640951437511574e-14,0,-5.640951437511574e-14,-3.420169963214148e-14,-9.999999046325684,0,-0.000001290498744310753,10.00000286102295,-3.4201679303350746e-14,0,-0.000011805024769273587,-0.025435438379645348,0.1339183747768402,1],[7,10,0.0000012904000641356106,-5.6405184342689374e-14,0,-5.6405184342689374e-14,-3.4200439247115966e-14,-9.999999046325684,0,-0.0000012903997230750974,10.00000286102295,-3.420041891832523e-14,0,-0.000011805733265646268,-0.033023953437805176,0.1358249932527542,1],[7,10,0.0000012892056702185073,-5.635296984368883e-14,0,-5.635297323182062e-14,-3.418522653538328e-14,-9.999999046325684,0,-0.0000012892052154711564,10.00000286102295,-3.4185206206592544e-14,0,-0.000011806461770902388,-0.04120945930480957,0.13689500093460083,1],[7,10,0.000001290350041927013,-5.640299222142188e-14,0,-5.640299222142188e-14,-3.419979889020784e-14,-9.999999046325684,0,-0.0000012903495871796622,10.00000286102295,-3.419977856141711e-14,0,-0.000011806704605987761,-0.04531390592455864,0.13715922832489014,1],[7,10,0.0000012903499282401754,-5.640299222142188e-14,0,-5.640299222142188e-14,-3.419979889020784e-14,-9.999999046325684,0,-0.0000012903495871796622,10.00000286102295,-3.419977856141711e-14,0,-0.013963191770017147,-0.06210416182875633,0.12106608599424362,1],[7,10,0.0000014605494698116672,-6.38426350630869e-14,0,-6.384264183935048e-14,-7.752015887118203e-15,-9.999999046325684,0,-0.0000014605489013774786,10.000003814697266,-7.752003181623994e-15,0,-0.015018383972346783,-0.054361749440431595,0.09924375265836716,1],[7,10,-0.0000022543877093994524,0.0000021058569927845383,0,1.6541741663499837e-13,-6.826233863830566,-7.307705402374268,0,0.0000030849464565108065,7.307704448699951,-6.826234340667725,0,-0.01511258352547884,0.009443355724215508,0.11266597360372543,1],[7,10,-0.0000034854972454922972,0.000003255853926020791,0,2.4480021959191745e-13,-6.826233863830566,-7.307706356048584,0,0.000004769620318256784,7.307705879211426,-6.826234340667725,0,-0.015112591907382011,0.00021619422477670014,0.1083710789680481,1],[7,7.836563753471637e-8,-10.000000953674316,-0.0000028396016205078922,0,-6.826417446136475,0.000002021552063524723,-7.307534694671631,0,7.307533264160156,0.000001995695811274345,-6.826418399810791,0,-0.00198533246293664,0.015163128264248371,0.10521519929170609,1],[7,10,-2.765009128324891e-7,2.5828398975136224e-7,0,1.6814012272878438e-14,-6.826240539550781,-7.307701110839844,0,3.783692932302074e-7,7.3077006340026855,-6.8262410163879395,0,-0.01529723685234785,-0.00240886933170259,0.09958764165639877,1],[7,10,0.000002173492475776584,-0.000039942398871062323,0,-0.000027606796720647253,-6.851036548614502,-7.284459590911865,0,-0.00002894794124586042,7.284459590911865,-6.85103702545166,0,-0.015296838246285915,-0.007715178653597832,0.09961447864770889,1],[7,10,-0.000012475985386117827,0.000011653979527181946,0,1.27512984979955e-12,-6.82622766494751,-7.307713985443115,0,0.00001707235787762329,7.307713508605957,-6.826228618621826,0,-0.01529737189412117,-0.013698640279471874,0.09958755970001221,1],[7,10,-0.000002525192485336447,0.000002358820438530529,0,2.5809907054467895e-13,-6.826235771179199,-7.307705879211426,0,0.000003455520982242888,7.307705402374268,-6.826236724853516,0,-0.01529726479202509,-0.019343368709087372,0.0995875895023346,1],[7,0.0000020663208033511182,-10.000000953674316,-0.0000016621313534415094,0,-0.0000015099585652933456,0.0000016621310123809963,-9.999999046325684,0,10.00000286102295,0.0000020663203486037673,-0.0000015099576557986438,0,-0.062104154378175735,-0.013963179662823677,0.1210661381483078,1],[7,0.0000020663210307247937,-10.000000953674316,-0.0000016621313534415094,0,-0.0000015099594747880474,0.0000016621310123809963,-9.999999046325684,0,10.00000286102295,0.0000020663203486037673,-0.0000015099585652933456,0,-0.0543617345392704,-0.015018359757959843,0.09924376755952835,1],[7,3.7533254726440646e-7,-10.000000953674316,-0.0000026251645977026783,0,-6.826413154602051,0.0000016621315808151849,-7.307539463043213,0,7.307539939880371,0.0000020663210307247937,-6.826412677764893,0,0.00944604817777872,-0.015112524852156639,0.11266584694385529,1],[7,3.7534704233621596e-7,-10.000001907348633,-0.0000026251627787132747,0,-6.826371669769287,0.0000016621316945020226,-7.307577133178711,0,7.307577133178711,0.0000020663210307247937,-6.826371669769287,0,0.0002181456220569089,-0.015112513676285744,0.10837115347385406,1],[7,3.753383737148397e-7,-10.000001907348633,-0.000002625163915581652,0,-6.826395511627197,0.0000016621318081888603,-7.307554721832275,0,7.307555675506592,0.0000020663208033511182,-6.826395511627197,0,-0.001985735259950161,-0.015163118951022625,0.10521523654460907,1],[7,3.753384021365491e-7,-10.000000953674316,-0.000002625163915581652,0,-6.826396465301514,0.0000016621315808151849,-7.307555198669434,0,7.307555198669434,0.0000020663208033511182,-6.826396465301514,0,-0.0024068509228527546,-0.015297201462090015,0.09958774596452713,1],[7,8.481374607072212e-7,-10.000000953674316,-0.000014581481991626788,0,-6.826396465301514,0.000010076522812596522,-7.307555198669434,0,7.307555198669434,0.00001057367535395315,-6.826396465301514,0,-0.0024068565107882023,-0.020942145958542824,0.09958772361278534,1],[7,0.000005801707629871089,-10.000000953674316,0.000015470250218641013,0,-6.826396465301514,-0.000015265441106748767,-7.307555198669434,0,7.307555198669434,-0.000006320974080153974,-6.826396465301514,0,-0.002406846499070525,-0.026586687192320824,0.0995878130197525,1],[7,4.4168547219669563e-7,-10.000000953674316,-0.0000026420898393553216,0,-6.826396465301514,0.0000016292092368530575,-7.307555198669434,0,7.307555198669434,0.0000021263588223519037,-6.826396465301514,0,-0.0024068609345704317,-0.03223169967532158,0.09958775341510773,1],[7,10,0.0000012903988135803957,-5.640512674444896e-14,0,-5.640512674444896e-14,-3.420042230645702e-14,-9.999999046325684,0,-0.0000012903984725198825,10.00000286102295,-3.4200401977666287e-14,0,-0.000011804258974734694,-0.06056998670101166,0.14311140775680542,1],[7,10,0.000001290509771934012,-5.6409978549170833e-14,0,-5.6409978549170833e-14,-3.420183515741304e-14,-9.999999046325684,0,-0.0000012905094308734988,10.00000286102295,-3.4201814828622307e-14,0,-0.000011807338523794897,-0.0781131312251091,0.1592836230993271,1],[7,10,0.0000012906543815915938,-5.641629741495735e-14,0,-5.641630080308914e-14,-3.4203678301106266e-14,-9.999999046325684,0,-0.0000012906540405310807,10.00000286102295,-3.420365797231553e-14,0,-0.000011810538126155734,-0.09514087438583374,0.1761401742696762,1],[7,10,0.0000012905599078294472,-5.641216728230654e-14,0,-5.641216728230654e-14,-3.4202475514321165e-14,-9.999999046325684,0,-0.000001290559566768934,10.00000286102295,-3.420245518553043e-14,0,-0.000011812492630269844,-0.10280857235193253,0.18766041100025177,1],[7,10,0.0000012904855566375772,-5.640891806392087e-14,0,-5.640891806392087e-14,-3.420152683742024e-14,-9.999999046325684,0,-0.0000012904851018902264,10.00000286102295,-3.4201506508629506e-14,0,-0.000011814722711278591,-0.1162201389670372,0.20055772364139557,1],[7,10,0.000001290601630898891,-5.641399348534082e-14,0,-5.641399348534082e-14,-3.420300745101204e-14,-9.999999046325684,0,-0.0000012906012898383779,10.00000286102295,-3.4202987122221307e-14,0,-0.000011815094694611616,-0.1252829134464264,0.19889234006404877,1],[7,0.000002066590013782843,-10.000000953674316,-0.0000016377121028199326,0,-0.0000015099585652933456,0.0000016377117617594195,-9.999999046325684,0,10.00000286102295,0.0000020665893316618167,-0.0000015099576557986438,0,-0.13337096571922302,-0.00782849546521902,0.19808202981948853,1],[7,0.000010570007361820899,-10.000000953674316,0.00003217308403691277,0,-0.0000015099324173206696,-0.00003217308403691277,-9.999999046325684,0,10.00000286102295,0.000010569998266873881,-0.0000015099658412509598,0,-0.13337093591690063,-0.01911325566470623,0.1980821043252945,1],[7,0.000010570007361820899,-10.000000953674316,-0.000018530359739088453,0,-0.0000015099755046321661,0.00001853035792009905,-9.999999046325684,0,10.00000286102295,0.000010570005542831495,-0.0000015099552683750517,0,-0.13337093591690063,-0.03039957955479622,0.19808195531368256,1],[7,0.0000021194225610088324,-10.000000953674316,-0.0000016292024156427942,0,-0.0000015099599295353983,0.000001629202074582281,-9.999999046325684,0,10.00000286102295,0.000002119421878887806,-0.0000015099590200406965,0,-0.1333709955215454,-0.04168445244431496,0.19808202981948853,1],[7,0.0000013736305390921189,-10.000000953674316,0.0000023306708953896305,0,9.999999046325684,0.0000013736305390921189,-4.286095531824685e-7,0,4.286090700134082e-7,0.0000023306699858949287,10.00000286102295,0,-0.19808202981948853,0.00782847311347723,-0.13337098062038422,1],[7,-0.00003243717583245598,-10.000000953674316,0.0000023835057163523743,0,9.999999046325684,-0.00003243717583245598,-4.371086390619894e-7,0,4.3711619923669787e-7,0.00000238350344261562,10.00000286102295,0,-0.19808204472064972,-0.00345617881976068,-0.13337098062038422,1],[7,0.0000013651261951963534,-10.000000953674316,-0.000006067080903449096,0,9.999999046325684,0.0000013651265362568665,-4.371119359802833e-7,0,4.371125896796002e-7,-0.000006067078629712341,10.00000286102295,0,-0.19808198511600494,-0.014742054976522923,-0.1333709955215454,1],[7,0.0000013651261951963534,-10.000000953674316,0.0000023835023057472426,0,9.999999046325684,0.0000013651260815095156,-4.371137265479774e-7,0,4.371132433789171e-7,0.0000023835016236262163,10.00000286102295,0,-0.19808201491832733,-0.026027483865618706,-0.13337098062038422,1],[7,10,8.33973317071468e-8,-1.733500631928564e-8,0,-3.954125980636103e-15,-2.0351057052612305,-9.790728569030762,0,-8.51798986900576e-8,9.790731430053711,-2.0351052284240723,0,-0.000011828137758129742,-0.08696012943983078,0.21155788004398346,1],[7,10,-5.638756874759565e-7,1.1720728565478566e-7,0,2.9001093518853105e-14,-2.0351028442382812,-9.790728569030762,0,5.759281407335948e-7,9.790731430053711,-2.035102367401123,0,-0.000011844265827676281,-0.13197419047355652,0.1958482414484024,1],[7,10,-0.000016405374481109902,0.0000034099939512088895,0,8.437318226896251e-13,-2.035086154937744,-9.790731430053711,0,0.000016756021068431437,9.790735244750977,-2.035085439682007,0,-0.00001216773125634063,-0.15941882133483887,0.1958479881286621,1],[7,10,0.0000017900865714182146,-0.00002213999323430471,0,-0.00002151125590899028,-1.7038416862487793,-9.853777885437012,0,-0.000005536214302992448,9.853780746459961,-1.7038410902023315,0,-0.000011390276085876394,-0.19335980713367462,0.18943670392036438,1],[7,10,8.338925283624121e-8,-1.7333325885715567e-8,0,-4.288862813479162e-15,-2.0351057052612305,-9.790727615356445,0,-8.517164218346807e-8,9.790731430053711,-2.035104990005493,0,-0.000011847067980852444,-0.2143070548772812,0.1958482712507248,1],[7,10,-0.000003152004865114577,6.551748015226622e-7,0,9.962992616237981e-14,-2.0350987911224365,-9.790728569030762,0,0.000003219376367269433,9.790731430053711,-2.0350983142852783,0,-0.00001187178168038372,-0.09138043969869614,0.20585882663726807,1],[7,10,7.868003422117908e-7,-5.6294588546279556e-8,0,-3.6222737184949186e-14,-0.7136632800102234,-9.974501609802246,0,-7.888114623710862e-7,9.974505424499512,-0.7136630415916443,0,-0.000011820306099252775,-0.12932632863521576,0.19158107042312622,1],[7,10,-1.9577015564209432e-7,-4.0589810623714584e-8,0,7.853840258806484e-15,2.030165195465088,-9.791752815246582,0,1.9993366606740892e-7,9.791756629943848,2.0301644802093506,0,-0.000011837435522465967,-0.19010993838310242,0.14469584822654724,1],[7,10,0.0000022578883545065764,-0.000026847081244341098,0,-0.00002664817111508455,2.296257495880127,-9.73279094696045,0,0.00000396722452933318,9.732792854309082,2.2962567806243896,0,-0.000011417139830882661,-0.20817241072654724,0.1390743851661682,1],[7,10,0.000002270258846692741,0.000042060248233610764,0,0.00004090677248314023,1.8573182821273804,-9.826003074645996,0,-0.000010042685971711762,9.826006889343262,1.8573180437088013,0,-0.000012416406207194086,-0.21591660380363464,0.14852330088615417,1],[7,10,9.014045190269826e-7,1.8689182468278887e-7,0,-1.8338818961669e-14,2.030164957046509,-9.791753768920898,0,-9.20575018881209e-7,9.791756629943848,2.0301644802093506,0,-0.000011825675755972043,-0.23269511759281158,0.14469587802886963,1],[7,0.0000020664799649239285,-10.000000953674316,-0.0000018943452460007393,0,-0.0000015099585652933456,0.0000018943450186270638,-9.999999046325684,0,10.00000286102295,0.0000020664795101765776,-0.000001509957542111806,0,-0.035008642822504044,-0.01745273917913437,0.10346534848213196,1],[7,0.0000072650209403946064,-10.000000953674316,0.0000054711749726266135,0,-0.000001509956746303942,-0.000005471176336868666,-9.999999046325684,0,10.00000286102295,0.000007265017302415799,-0.0000015099601569090737,0,-0.03500862047076225,-0.044315289705991745,0.10346537828445435,1],[7,1.646303928737325e-7,-10.000000953674316,0.0000054711745178792626,0,-0.0000015099608390301,-0.0000054711749726266135,-9.999999046325684,0,10.00000286102295,1.6462949758988543e-7,-0.0000015099603842827491,0,-0.03500867262482643,-0.0711778774857521,0.10346537828445435,1],[7,0.000001939727553690318,-10.000000953674316,-0.000001629207417863654,0,-0.0000015099594747880474,0.0000016292071904899785,-9.999999046325684,0,10.00000286102295,0.000001939727098942967,-0.0000015099585652933456,0,-0.03500865772366524,-0.09804057329893112,0.10346532613039017,1],[7,0.0000021728017145505873,-10.000000953674316,-5.961643410046236e-7,0,9.999999046325684,0.0000021728017145505873,-1.7197568524807139e-7,0,1.7197574209149025e-7,-5.961640567875293e-7,10.00000286102295,0,-0.10346534848213196,0.01745273359119892,-0.035008661448955536,1],[7,0.000005457856332213851,-10.000000953674316,6.084043207010836e-7,0,9.999999046325684,0.000005457856332213851,-4.3711366970455856e-7,0,4.371131581137888e-7,6.084043207010836e-7,10.00000286102295,0,-0.10346535593271255,-0.009409925900399685,-0.035008661448955536,1],[7,0.000001907663545352989,-10.000000953674316,-0.0000011666928685372113,0,9.999999046325684,0.0000019076637727266643,-4.371131296920794e-7,0,4.3711318653549824e-7,-0.0000011666923001030227,10.00000286102295,0,-0.10346535593271255,-0.03627248853445053,-0.03500865772366524,1],[7,0.0000019076637727266643,-10.000000953674316,-2.791438475924224e-7,0,9.999999046325684,0.0000019076637727266643,-4.371132149572077e-7,0,4.3711310127036995e-7,-2.791436486404564e-7,10.00000286102295,0,-0.10346535593271255,-0.06313510984182358,-0.03500865772366524,1],[7,10,0.0000012901954278277117,-5.639623967476637e-14,0,-5.639623967476637e-14,-3.4641916207356696e-14,-9.999999046325684,0,-0.0000012901950867671985,10.00000286102295,-3.464189587856596e-14,0,-0.000011801585969806183,0.005695546045899391,0.12563294172286987,1],[7,10,0.0000012903462902613683,-5.6402832979227796e-14,0,-5.6402832979227796e-14,-3.4199754844494584e-14,-9.999999046325684,0,-0.000001290345949200855,10.00000286102295,-3.419973451570385e-14,0,-0.0000117999534268165,0.02527664229273796,0.1210150420665741,1],[7,10,0.0000012902979733553366,-5.640071878499145e-14,0,-5.640071878499145e-14,-3.419913820450898e-14,-9.999999046325684,0,-0.0000012902976322948234,10.00000286102295,-3.419911787571825e-14,0,-0.000011798304512922186,0.05150018259882927,0.12173646688461304,1],[7,10,0.000001290242266804853,-5.6398282718235146e-14,0,-5.6398282718235146e-14,-3.419842669683329e-14,-9.999999046325684,0,-0.000001290241812057502,10.00000286102295,-3.4198406368042555e-14,0,-0.000011796205399150494,0.08293063193559647,0.12163315713405609,1],[7,10,0.0000012905378525829292,-5.641120505287846e-14,0,-5.6411208441010247e-14,-3.4202194299382677e-14,-9.999999046325684,0,-0.000001290537511522416,10.00000286102295,-3.420217397059194e-14,0,-0.000011794288184319157,0.11220701038837433,0.12143301218748093,1],[7,10,0.0000012902070238851593,-5.639674450640293e-14,0,-5.639674789453472e-14,-3.419797946343714e-14,-9.999999046325684,0,-0.0000012902066828246461,10.00000286102295,-3.4197959134646405e-14,0,-0.00001179243281512754,0.13959883153438568,0.12123666703701019,1],[7,10,0.000001290556724597991,-5.641203175703498e-14,0,-5.641203175703498e-14,-3.42024348567397e-14,-9.999999046325684,0,-0.0000012905563835374778,10.00000286102295,-3.420241452794896e-14,0,-0.000011790641110565048,0.1667986661195755,0.12093474715948105,1],[7,10,0.0000012905014727948583,-5.640961601906941e-14,0,-5.640961601906941e-14,-3.420173012532758e-14,-9.999999046325684,0,-0.0000012905011317343451,10.00000286102295,-3.420170979653685e-14,0,-0.000011788915799115784,0.19192783534526825,0.11979008466005325,1],[7,10,0.000001290377440454904,-5.640419162007519e-14,0,-5.640419500820698e-14,-3.420014786778211e-14,-9.999999046325684,0,-0.0000012903770993943908,10.00000286102295,-3.4200127538991376e-14,0,-0.000011787279618147295,0.21646641194820404,0.11917385458946228,1],[7,10,0.000001290377440454904,-5.640419500820698e-14,0,-5.640419500820698e-14,-3.42001512559139e-14,-9.999999046325684,0,-0.0000012903770993943908,10.00000286102295,-3.4200130927123165e-14,0,-0.000011786478353315033,0.22967258095741272,0.1189044937491417,1],[7,10,-0.000005716669420507969,4.377232517421836e-12,0,2.4988352858267004e-13,-0.00000721985406926251,-9.999999046325684,0,0.000005716667601518566,10.00000286102295,-0.000007219851340778405,0,-0.00001163582692242926,0.21646374464035034,0.11890432983636856,1],[7,10,-0.000005478547336679185,-3.715970673529023e-12,0,2.394752148318635e-13,0.000007219885446829721,-9.999999046325684,0,0.000005478545517689781,10.00000286102295,0.000007219882718345616,0,-0.000011650949090835638,0.20325449109077454,0.11890462040901184,1],[7,10,0.0000012903757351523382,-5.640392734579565e-14,0,-5.64041272455712e-14,1.5014601974921993e-12,-9.999999046325684,0,-0.000001290375394091825,10.00000286102295,1.501459655391113e-12,0,-0.00001178955517389113,0.19004561007022858,0.1189044937491417,1],[7,0.0000032582495350652607,-10.000000953674316,-0.0000017790694073482882,0,-0.0000015099583379196702,0.0000017790689526009373,-9.999999046325684,0,10.00000286102295,0.000003258248625570559,-0.0000015099570873644552,0,0.0029483891557902098,-0.018731215968728065,0.11051031202077866,1],[7,0.0000029864220323361224,-10.000000953674316,-0.0000017790696347219637,0,-0.000001509960043222236,0.0000017790691799746128,-9.999999046325684,0,10.00000286102295,0.0000029864211228414206,-0.0000015099589063538588,0,-0.008355725556612015,-0.017161212861537933,0.06895669549703598,1],[7,0.000002986421804962447,-10.000000953674316,-0.0000017790696347219637,0,-0.000001509960043222236,0.0000017790691799746128,-9.999999046325684,0,10.00000286102295,0.000002986420895467745,-0.0000015099589063538588,0,0.021530717611312866,-0.01873120106756687,0.03690082207322121,1],[7,0.0000024963276246126043,-10.000000953674316,-7.988817287696293e-7,0,-0.0000015099599295353983,7.988813308656972e-7,-9.999999046325684,0,10.00000286102295,0.0000024963267151179025,-0.0000015099591337275342,0,0.01762363314628601,-0.018583519384264946,0.018118107691407204,1],[7,-0.0000024963278519862797,-10.000000953674316,-0.000004177457412879448,0,0.0000030199187222024193,-0.000004177457867626799,9.999999046325684,0,-10.00000286102295,0.0000024963255782495253,0.0000030199187222024193,0,-0.012205800972878933,-0.018743006512522697,-0.007230831775814295,1],[7,0.0000032568791539233644,-10.000000953674316,-8.61184503264667e-7,0,-0.000001509959247414372,8.611839916738973e-7,-9.999999046325684,0,10.00000286102295,0.000003256878017054987,-0.0000015099584516065079,0,0.007439755834639072,-0.019223231822252274,0.007321810815483332,1],[7,0.0000013206894209361053,-10.000000953674316,-0.000001587255610502325,0,-0.0000015099593611012097,0.0000015872553831286496,-9.999999046325684,0,10.00000286102295,0.0000013206890798755921,-0.0000015099585652933456,0,-0.00036480638664215803,-0.018804611638188362,0.006744801998138428,1],[7,0.000002288783889525803,-10.000000953674316,-0.000001629206963116303,0,-0.0000015099594747880474,0.00000162920662205579,-9.999999046325684,0,10.00000286102295,0.0000022887832074047765,-0.0000015099585652933456,0,-0.00651364354416728,-0.01911969855427742,0.006744795478880405,1],[7,0.0000034371448691672413,-10.000000953674316,0.000001275077465834329,0,-0.0000015099591337275342,-0.0000012750780342685175,-9.999999046325684,0,10.00000286102295,0.0000034371435049251886,-0.0000015099590200406965,0,-0.006513639353215694,-0.025276601314544678,0.00674480339512229,1],[7,0.000001500952407695877,-10.000000953674316,-0.000003565397491911426,0,-0.0000015099593611012097,0.0000035653972645377507,-9.999999046325684,0,10.00000286102295,0.0000015009522940090392,-0.0000015099582242328324,0,-0.006513645406812429,-0.03143351525068283,0.006744787096977234,1],[7,0.0000024690484679013025,-10.000000953674316,-0.0000016292073041768163,0,-0.0000015099594747880474,0.000001629206963116303,-9.999999046325684,0,10.00000286102295,0.000002469047785780276,-0.0000015099585652933456,0,-0.006513641215860844,-0.03759040683507919,0.0067447940818965435,1],[7,10,0.0000012901954278277117,-5.639623967476637e-14,0,-5.639623967476637e-14,-3.419783377377021e-14,-9.999999046325684,0,-0.0000012901950867671985,10.00000286102295,-3.419781344497948e-14,0,-0.01873122528195381,0.0029483684338629246,0.11051027476787567,1],[7,10,0.000001382991399623279,-6.045247717125987e-14,0,-6.045247717125987e-14,-3.541340059197949e-14,-9.999999046325684,0,-0.0000013829909448759281,10.00000286102295,-3.541337687505697e-14,0,-0.017161210998892784,-0.008355739526450634,0.06895667314529419,1],[7,10,0.0000014470175528913387,-6.325114856788744e-14,0,-6.325114856788744e-14,-3.633959723848418e-14,-9.999999046325684,0,-0.0000014470172118308255,10.00000286102295,-3.6339576909693444e-14,0,-0.018731221556663513,0.021530702710151672,0.03690082207322121,1],[7,10,8.694317443769251e-7,-3.80040711899475e-14,0,-3.80040711899475e-14,-2.903420234269538e-14,-9.999999046325684,0,-8.694315170032496e-7,10.00000286102295,-2.9034185402036436e-14,0,-0.018583541736006737,0.01762363314628601,0.018118100240826607,1],[7,-0.0000019473995962471236,-10.000000953674316,-0.000009115474313148297,0,-7.24138069152832,0.000007696718057559337,-6.896552085876465,0,6.896552085876465,0.000005257826614979422,-7.241381645202637,0,0.01365390419960022,0.018743036314845085,-0.0038519061636179686,1],[7,-0.0000020714523998321965,-10,0.000004821714355784934,0,8.00000286102295,0.0000012358653975752532,5.999998569488525,0,-5.999998092651367,0.000005100243015476735,8.000001907348633,0,-0.010321298614144325,0.019223257899284363,0.0015587180387228727,1],[7,0.0000020112679521844257,-10.000000953674316,0.000004518693458521739,0,9.999999046325684,0.0000020112668153160485,-0.0000025431195354030933,0,0.0000025431177164136898,0.000004518692549027037,10.00000286102295,0,-0.006744799204170704,0.019206557422876358,-0.0003647021949291229,1],[7,0.000001742159952300426,-10.000000953674316,0.00000451869436801644,0,9.999999046325684,0.000001742159611239913,-7.351378030762135e-7,0,7.351367230512551e-7,0.000004518693003774388,10.00000286102295,0,-0.006744799204170704,0.01911972276866436,-0.006513644475489855,1],[7,-0.0000011655965863610618,-10.000000953674316,-6.31831767350377e-7,0,9.999999046325684,-0.0000011655965863610618,-7.351375188591192e-7,0,7.35137177798606e-7,-6.318315968201205e-7,10.00000286102295,0,-0.00674479641020298,0.012970183044672012,-0.006513636559247971,1],[7,0.0000027114126623928314,-10.000000953674316,0.000007122198439901695,0,9.999999046325684,0.0000027114122076454805,-7.35139622065617e-7,0,7.351374051722814e-7,0.000007122195711417589,10.00000286102295,0,-0.006744799204170704,0.006820622831583023,-0.006513640750199556,1],[7,0.000001742159952300426,-10.000000953674316,0.000004214435648464132,0,9.999999046325684,0.000001742159611239913,-7.351382009801455e-7,0,7.351372346420249e-7,0.0000042144342842220794,10.00000286102295,0,-0.006744798738509417,0.0006710799061693251,-0.006513640750199556,1]],8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8]]],0,0,[],[],[]],[[[14,".bin",396937407,[{"primitives":[{"primitiveMode":7,"jointMapIndex":0,"vertexBundelIndices":[0],"indexView":{"offset":6552,"length":318,"count":159,"stride":2}},{"primitiveMode":7,"jointMapIndex":1,"vertexBundelIndices":[1],"indexView":{"offset":21774,"length":660,"count":330,"stride":2}},{"primitiveMode":7,"jointMapIndex":2,"vertexBundelIndices":[2],"indexView":{"offset":29922,"length":378,"count":189,"stride":2}},{"primitiveMode":7,"jointMapIndex":3,"vertexBundelIndices":[3],"indexView":{"offset":44772,"length":678,"count":339,"stride":2}},{"primitiveMode":7,"jointMapIndex":4,"vertexBundelIndices":[4],"indexView":{"offset":46818,"length":144,"count":72,"stride":2}},{"primitiveMode":7,"jointMapIndex":3,"vertexBundelIndices":[5],"indexView":{"offset":48548,"length":336,"count":84,"stride":4}}],"vertexBundles":[{"view":{"offset":0,"length":6552,"count":91,"stride":72},"attributes":[{"name":"a_position","format":32,"isNormalized":false},{"name":"a_normal","format":32,"isNormalized":false},{"name":"a_texCoord","format":21,"isNormalized":false},{"name":"a_tangent","format":44,"isNormalized":false},{"name":"a_joints","format":42,"isNormalized":false},{"name":"a_weights","format":44,"isNormalized":false}]},{"view":{"offset":6870,"length":14904,"count":207,"stride":72},"attributes":[{"name":"a_position","format":32,"isNormalized":false},{"name":"a_normal","format":32,"isNormalized":false},{"name":"a_texCoord","format":21,"isNormalized":false},{"name":"a_tangent","format":44,"isNormalized":false},{"name":"a_joints","format":42,"isNormalized":false},{"name":"a_weights","format":44,"isNormalized":false}]},{"view":{"offset":22434,"length":7488,"count":104,"stride":72},"attributes":[{"name":"a_position","format":32,"isNormalized":false},{"name":"a_normal","format":32,"isNormalized":false},{"name":"a_texCoord","format":21,"isNormalized":false},{"name":"a_tangent","format":44,"isNormalized":false},{"name":"a_joints","format":42,"isNormalized":false},{"name":"a_weights","format":44,"isNormalized":false}]},{"view":{"offset":30300,"length":14472,"count":201,"stride":72},"attributes":[{"name":"a_position","format":32,"isNormalized":false},{"name":"a_normal","format":32,"isNormalized":false},{"name":"a_texCoord","format":21,"isNormalized":false},{"name":"a_tangent","format":44,"isNormalized":false},{"name":"a_joints","format":42,"isNormalized":false},{"name":"a_weights","format":44,"isNormalized":false}]},{"view":{"offset":45450,"length":1368,"count":19,"stride":72},"attributes":[{"name":"a_position","format":32,"isNormalized":false},{"name":"a_normal","format":32,"isNormalized":false},{"name":"a_texCoord","format":21,"isNormalized":false},{"name":"a_tangent","format":44,"isNormalized":false},{"name":"a_joints","format":42,"isNormalized":false},{"name":"a_weights","format":44,"isNormalized":false}]},{"view":{"offset":46962,"length":1584,"count":22,"stride":72},"attributes":[{"name":"a_position","format":32,"isNormalized":false},{"name":"a_normal","format":32,"isNormalized":false},{"name":"a_texCoord","format":21,"isNormalized":false},{"name":"a_tangent","format":44,"isNormalized":false},{"name":"a_joints","format":42,"isNormalized":false},{"name":"a_weights","format":44,"isNormalized":false}]}],"jointMaps":[[0,3,4,5,6,7,8,25,26,27,28,29,39,54,58,59,60,61,62,63,64,65,66,67,82,85,86,87,88],[0,1,2,3,4,5,6,7,8,9,10,11,25,26,27,28,29,39,54,58,59,60,61,82,83,84,85,86,87,88],[0,1,2,3,4,5,6,16,17,25,26,27,28,29,39,50,58,59,60,61,62,63,64,65,66,71,74,75,76,77],[0,1,2,3,5,6,16,17,18,19,20,27,28,29,31,35,39,50,58,59,60,61,71,72,73,74,75,76,77],[0,29,31,39,44,45,46]]},"minPosition",8,[1,-0.002649865113198757,0.0005072757485322654,-0.023691222071647644],"maxPosition",8,[1,0.002649865113198757,0.020600700750947,0.01760418526828289]]],-1],0,0,[],[],[]],[[[34,"0",[{"rasterizerState":{},"depthStencilState":{},"blendState":{"targets":[{}]}},{},{}],[{"USE_LIGHTMAP":true,"USE_ALBEDO_MAP":true},{},{}],[[[{},"mainTexture",6,0],{},{}],11,0,0]]],0,0,[0,0],[6,4],[50,3]],[[[27,[{"rasterizerState":{},"depthStencilState":{},"blendState":{"targets":[{}]}},{},{}],[{"USE_LIGHTMAP":true},{},{}],[[[{},"mainColor",8,[4,4282861567]],{},{}],11,0,0]]],0,0,[0],[4],[3]],[[[34,"1",[{"rasterizerState":{},"depthStencilState":{},"blendState":{"targets":[{}]}},{},{}],[{"USE_LIGHTMAP":true,"USE_ALBEDO_MAP":true},{},{}],[[[{},"mainTexture",6,0],{},{}],11,0,0]]],0,0,[0,0],[6,4],[51,3]],[[{"name":"chest_1","rect":{"x":5,"y":5,"width":368,"height":331},"offset":{"x":0,"y":-1},"originalSize":{"width":378,"height":339},"rotated":false,"capInsets":[0,0,0,0],"packable":true}],[2],0,[0],[7],[52]],[[[32,"PurchaseDino",".mp3",0.36],-1],0,0,[],[],[]],[[[27,[{"rasterizerState":{},"depthStencilState":{},"blendState":{"targets":[{}]}}],[{}],[[[{},"mainTexture",6,0]],11]]],0,0,[0,0],[6,4],[19,22]],[[[27,[{"rasterizerState":{},"depthStencilState":{},"blendState":{"targets":[{}]}},{},{}],[{"USE_LIGHTMAP":true,"USE_ALBEDO_MAP":true},{},{}],[[[{},"mainTexture",6,0],{},{}],11,0,0]]],0,0,[0,0],[6,4],[53,3]],[[[32,"Merge",".mp3",3.346875],-1],0,0,[],[],[]],[[[14,".bin",1247067917,[{"primitives":[{"primitiveMode":7,"vertexBundelIndices":[0],"indexView":{"offset":3168,"length":768,"count":192,"stride":4}}],"vertexBundles":[{"view":{"offset":0,"length":3168,"count":66,"stride":48},"attributes":[{"name":"a_position","format":32,"isNormalized":false},{"name":"a_normal","format":32,"isNormalized":false},{"name":"a_texCoord","format":21,"isNormalized":false},{"name":"a_tangent","format":44,"isNormalized":false}]}]},"minPosition",8,[1,-0.3200426995754242,-0.32004261016845703,0],"maxPosition",8,[1,0.32004252076148987,0.3200426399707794,0.29342496395111084]]],-1],0,0,[],[],[]],[[[34,"1",[{"rasterizerState":{},"depthStencilState":{},"blendState":{"targets":[{}]}},{},{}],[{"USE_LIGHTMAP":true,"USE_ALBEDO_MAP":true},{},{}],[[[{},"mainTexture",6,0],{},{}],11,0,0]]],0,0,[0,0],[6,4],[54,3]],[[[14,".bin",1705366988,[{"primitives":[{"primitiveMode":7,"vertexBundelIndices":[0],"indexView":{"offset":5376,"length":1152,"count":288,"stride":4}},{"primitiveMode":7,"vertexBundelIndices":[1],"indexView":{"offset":7296,"length":168,"count":42,"stride":4}}],"vertexBundles":[{"view":{"offset":0,"length":5376,"count":112,"stride":48},"attributes":[{"name":"a_position","format":32,"isNormalized":false},{"name":"a_normal","format":32,"isNormalized":false},{"name":"a_texCoord","format":21,"isNormalized":false},{"name":"a_tangent","format":44,"isNormalized":false}]},{"view":{"offset":6528,"length":768,"count":16,"stride":48},"attributes":[{"name":"a_position","format":32,"isNormalized":false},{"name":"a_normal","format":32,"isNormalized":false},{"name":"a_texCoord","format":21,"isNormalized":false},{"name":"a_tangent","format":44,"isNormalized":false}]}]},"minPosition",8,[1,-0.029799003154039383,0.004135788418352604,-0.12368997931480408],"maxPosition",8,[1,0.031195351853966713,0.03980028256773949,-0.026682322844862938]]],-1],0,0,[],[],[]],[[[14,".bin",2742744175,[{"primitives":[{"primitiveMode":7,"vertexBundelIndices":[0],"indexView":{"offset":2592,"length":336,"count":84,"stride":4}},{"primitiveMode":7,"vertexBundelIndices":[1],"indexView":{"offset":5520,"length":336,"count":84,"stride":4}}],"vertexBundles":[{"view":{"offset":0,"length":2592,"count":54,"stride":48},"attributes":[{"name":"a_position","format":32,"isNormalized":false},{"name":"a_normal","format":32,"isNormalized":false},{"name":"a_texCoord","format":21,"isNormalized":false},{"name":"a_tangent","format":44,"isNormalized":false}]},{"view":{"offset":2928,"length":2592,"count":54,"stride":48},"attributes":[{"name":"a_position","format":32,"isNormalized":false},{"name":"a_normal","format":32,"isNormalized":false},{"name":"a_texCoord","format":21,"isNormalized":false},{"name":"a_tangent","format":44,"isNormalized":false}]}]},"minPosition",8,[1,0.012506936676800251,0.003834962844848633,-0.1267068237066269],"maxPosition",8,[1,0.03365525230765343,0.033204585313797,-0.10729096084833145]]],-1],0,0,[],[],[]],[[[14,".bin",383159198,[{"primitives":[{"primitiveMode":7,"vertexBundelIndices":[0],"indexView":{"offset":2592,"length":336,"count":84,"stride":4}},{"primitiveMode":7,"vertexBundelIndices":[1],"indexView":{"offset":5520,"length":336,"count":84,"stride":4}}],"vertexBundles":[{"view":{"offset":0,"length":2592,"count":54,"stride":48},"attributes":[{"name":"a_position","format":32,"isNormalized":false},{"name":"a_normal","format":32,"isNormalized":false},{"name":"a_texCoord","format":21,"isNormalized":false},{"name":"a_tangent","format":44,"isNormalized":false}]},{"view":{"offset":2928,"length":2592,"count":54,"stride":48},"attributes":[{"name":"a_position","format":32,"isNormalized":false},{"name":"a_normal","format":32,"isNormalized":false},{"name":"a_texCoord","format":21,"isNormalized":false},{"name":"a_tangent","format":44,"isNormalized":false}]}]},"minPosition",8,[1,-0.03055179864168167,0.00759302731603384,-0.12602826952934265],"maxPosition",8,[1,-0.009403485804796219,0.01578248105943203,-0.10661241412162781]]],-1],0,0,[],[],[]],[[[50,"Skin-0",368206154,["Rap/root","Rap/root/spine0","Rap/root/spine0/spine1","Rap/root/spine0/spine1/spine2","Rap/root/spine0/spine1/spine2/spine3","Rap/root/spine0/spine1/spine2/spine3/spine4","Rap/root/spine0/spine1/spine2/spine3/spine4/spine5","Rap/root/spine0/spine1/spine2/spine3/spine4/spine5/left arm0","Rap/root/spine0/spine1/spine2/spine3/spine4/spine5/left arm0/left arm1","Rap/root/spine0/spine1/spine2/spine3/spine4/spine5/left arm0/left arm1/left hand","Rap/root/spine0/spine1/spine2/spine3/spine4/spine5/left arm0/left arm1/left hand/left finger6","Rap/root/spine0/spine1/spine2/spine3/spine4/spine5/left arm0/left arm1/left hand/left finger6/left finger7","Rap/root/spine0/spine1/spine2/spine3/spine4/spine5/left arm0/left arm1/left hand/left finger6/left finger7/left finger8","Rap/root/spine0/spine1/spine2/spine3/spine4/spine5/left arm0/left arm1/left hand/left finger6/left finger7/left finger8/left finger8_end","Rap/root/spine0/spine1/spine2/spine3/spine4/spine5/left arm0/left arm1/left hand/left finger3","Rap/root/spine0/spine1/spine2/spine3/spine4/spine5/left arm0/left arm1/left hand/left finger3/left finger4","Rap/root/spine0/spine1/spine2/spine3/spine4/spine5/left arm0/left arm1/left hand/left finger3/left finger4/left finger5","Rap/root/spine0/spine1/spine2/spine3/spine4/spine5/left arm0/left arm1/left hand/left finger3/left finger4/left finger5/left finger5_end","Rap/root/spine0/spine1/spine2/spine3/spine4/spine5/left arm0/left arm1/left hand/left finger0","Rap/root/spine0/spine1/spine2/spine3/spine4/spine5/left arm0/left arm1/left hand/left finger0/left finger1","Rap/root/spine0/spine1/spine2/spine3/spine4/spine5/left arm0/left arm1/left hand/left finger0/left finger1/left finger2","Rap/root/spine0/spine1/spine2/spine3/spine4/spine5/left arm0/left arm1/left hand/left finger0/left finger1/left finger2/left finger2_end","Rap/root/spine0/spine1/spine2/spine3/spine4/spine5/right arm0","Rap/root/spine0/spine1/spine2/spine3/spine4/spine5/right arm0/right arm1","Rap/root/spine0/spine1/spine2/spine3/spine4/spine5/right arm0/right arm1/right hand","Rap/root/spine0/spine1/spine2/spine3/spine4/spine5/right arm0/right arm1/right hand/right finger6","Rap/root/spine0/spine1/spine2/spine3/spine4/spine5/right arm0/right arm1/right hand/right finger6/right finger7","Rap/root/spine0/spine1/spine2/spine3/spine4/spine5/right arm0/right arm1/right hand/right finger6/right finger7/right finger8","Rap/root/spine0/spine1/spine2/spine3/spine4/spine5/right arm0/right arm1/right hand/right finger6/right finger7/right finger8/right finger8_end","Rap/root/spine0/spine1/spine2/spine3/spine4/spine5/right arm0/right arm1/right hand/right finger3","Rap/root/spine0/spine1/spine2/spine3/spine4/spine5/right arm0/right arm1/right hand/right finger3/right finger4","Rap/root/spine0/spine1/spine2/spine3/spine4/spine5/right arm0/right arm1/right hand/right finger3/right finger4/right finger5","Rap/root/spine0/spine1/spine2/spine3/spine4/spine5/right arm0/right arm1/right hand/right finger3/right finger4/right finger5/right finger5_end","Rap/root/spine0/spine1/spine2/spine3/spine4/spine5/right arm0/right arm1/right hand/right finger0","Rap/root/spine0/spine1/spine2/spine3/spine4/spine5/right arm0/right arm1/right hand/right finger0/right finger1","Rap/root/spine0/spine1/spine2/spine3/spine4/spine5/right arm0/right arm1/right hand/right finger0/right finger1/right finger2","Rap/root/spine0/spine1/spine2/spine3/spine4/spine5/right arm0/right arm1/right hand/right finger0/right finger1/right finger2/right finger2_end","Rap/root/spine0/spine1/spine2/spine3/spine4/spine5/neck0","Rap/root/spine0/spine1/spine2/spine3/spine4/spine5/neck0/neck1","Rap/root/spine0/spine1/spine2/spine3/spine4/spine5/neck0/neck1/neck2","Rap/root/spine0/spine1/spine2/spine3/spine4/spine5/neck0/neck1/neck2/neck3","Rap/root/spine0/spine1/spine2/spine3/spine4/spine5/neck0/neck1/neck2/neck3/head","Rap/root/spine0/spine1/spine2/spine3/spine4/spine5/neck0/neck1/neck2/neck3/head/eye0","Rap/root/spine0/spine1/spine2/spine3/spine4/spine5/neck0/neck1/neck2/neck3/head/eye0/facial right","Rap/root/spine0/spine1/spine2/spine3/spine4/spine5/neck0/neck1/neck2/neck3/head/eye0/facial right/facial right_end","Rap/root/spine0/spine1/spine2/spine3/spine4/spine5/neck0/neck1/neck2/neck3/head/eye0/facial left","Rap/root/spine0/spine1/spine2/spine3/spine4/spine5/neck0/neck1/neck2/neck3/head/eye0/facial left/facial left_end","Rap/root/spine0/spine1/spine2/spine3/spine4/spine5/neck0/neck1/neck2/neck3/head/eye0/left eye","Rap/root/spine0/spine1/spine2/spine3/spine4/spine5/neck0/neck1/neck2/neck3/head/eye0/left eye/left eye_end","Rap/root/spine0/spine1/spine2/spine3/spine4/spine5/neck0/neck1/neck2/neck3/head/eye0/facial down","Rap/root/spine0/spine1/spine2/spine3/spine4/spine5/neck0/neck1/neck2/neck3/head/eye0/facial down/facial down_end","Rap/root/spine0/spine1/spine2/spine3/spine4/spine5/neck0/neck1/neck2/neck3/head/eye0/right eye","Rap/root/spine0/spine1/spine2/spine3/spine4/spine5/neck0/neck1/neck2/neck3/head/eye0/right eye/right eye_end","Rap/root/spine0/spine1/spine2/spine3/spine4/spine5/neck0/neck1/neck2/neck3/head/jaw0","Rap/root/spine0/spine1/spine2/spine3/spine4/spine5/neck0/neck1/neck2/neck3/head/jaw0/tongue0","Rap/root/spine0/spine1/spine2/spine3/spine4/spine5/neck0/neck1/neck2/neck3/head/jaw0/tongue0/tongue1","Rap/root/spine0/spine1/spine2/spine3/spine4/spine5/neck0/neck1/neck2/neck3/head/jaw0/tongue0/tongue1/tongue2","Rap/root/spine0/spine1/spine2/spine3/spine4/spine5/neck0/neck1/neck2/neck3/head/jaw0/tongue0/tongue1/tongue2/tongue2_end","Rap/root/spine0/spine1/spine2/spine3/spine4/spine5/neck0/neck1/neck2/neck3/head/jaw0/jaw1","Rap/root/spine0/spine1/spine2/spine3/spine4/spine5/neck0/neck1/neck2/neck3/head/jaw0/jaw1/jaw1_end","Rap/root/pelvis","Rap/root/pelvis/right leg0","Rap/root/pelvis/right leg0/right leg1","Rap/root/pelvis/right leg0/right leg1/right foot0","Rap/root/pelvis/right leg0/right leg1/right foot0/right foot1","Rap/root/pelvis/right leg0/right leg1/right foot0/right foot1/right foot2","Rap/root/pelvis/right leg0/right leg1/right foot0/right foot1/right foot2/right toe3","Rap/root/pelvis/right leg0/right leg1/right foot0/right foot1/right foot2/right toe3/right toe4","Rap/root/pelvis/right leg0/right leg1/right foot0/right foot1/right foot2/right toe3/right toe4/right toe5","Rap/root/pelvis/right leg0/right leg1/right foot0/right foot1/right foot2/right toe3/right toe4/right toe5/right toe5_end","Rap/root/pelvis/right leg0/right leg1/right foot0/right foot1/right foot2/right toe0","Rap/root/pelvis/right leg0/right leg1/right foot0/right foot1/right foot2/right toe0/right toe1","Rap/root/pelvis/right leg0/right leg1/right foot0/right foot1/right foot2/right toe0/right toe1/right toe2","Rap/root/pelvis/right leg0/right leg1/right foot0/right foot1/right foot2/right toe0/right toe1/right toe2/right toe2_end","Rap/root/pelvis/right leg0/right leg1/right foot0/right foot1/right claw0","Rap/root/pelvis/right leg0/right leg1/right foot0/right foot1/right claw0/right claw1","Rap/root/pelvis/right leg0/right leg1/right foot0/right foot1/right claw0/right claw1/right claw1_end","Rap/root/pelvis/tail0","Rap/root/pelvis/tail0/tail1","Rap/root/pelvis/tail0/tail1/tail2","Rap/root/pelvis/tail0/tail1/tail2/tail3","Rap/root/pelvis/tail0/tail1/tail2/tail3/tail4","Rap/root/pelvis/tail0/tail1/tail2/tail3/tail4/tail5","Rap/root/pelvis/tail0/tail1/tail2/tail3/tail4/tail5/tail6","Rap/root/pelvis/tail0/tail1/tail2/tail3/tail4/tail5/tail6/tail7","Rap/root/pelvis/tail0/tail1/tail2/tail3/tail4/tail5/tail6/tail7/tail8","Rap/root/pelvis/tail0/tail1/tail2/tail3/tail4/tail5/tail6/tail7/tail8/tail9","Rap/root/pelvis/tail0/tail1/tail2/tail3/tail4/tail5/tail6/tail7/tail8/tail9/tail10","Rap/root/pelvis/tail0/tail1/tail2/tail3/tail4/tail5/tail6/tail7/tail8/tail9/tail10/tail11","Rap/root/pelvis/tail0/tail1/tail2/tail3/tail4/tail5/tail6/tail7/tail8/tail9/tail10/tail11/tail11_end","Rap/root/pelvis/left leg0","Rap/root/pelvis/left leg0/left leg1","Rap/root/pelvis/left leg0/left leg1/left foot0","Rap/root/pelvis/left leg0/left leg1/left foot0/left foot1","Rap/root/pelvis/left leg0/left leg1/left foot0/left foot1/left foot2","Rap/root/pelvis/left leg0/left leg1/left foot0/left foot1/left foot2/left toe0","Rap/root/pelvis/left leg0/left leg1/left foot0/left foot1/left foot2/left toe0/left toe1","Rap/root/pelvis/left leg0/left leg1/left foot0/left foot1/left foot2/left toe0/left toe1/left toe2","Rap/root/pelvis/left leg0/left leg1/left foot0/left foot1/left foot2/left toe0/left toe1/left toe2/left toe2_end","Rap/root/pelvis/left leg0/left leg1/left foot0/left foot1/left foot2/left toe3","Rap/root/pelvis/left leg0/left leg1/left foot0/left foot1/left foot2/left toe3/left toe4","Rap/root/pelvis/left leg0/left leg1/left foot0/left foot1/left foot2/left toe3/left toe4/left toe5","Rap/root/pelvis/left leg0/left leg1/left foot0/left foot1/left foot2/left toe3/left toe4/left toe5/left toe5_end","Rap/root/pelvis/left leg0/left leg1/left foot0/left foot1/left claw0","Rap/root/pelvis/left leg0/left leg1/left foot0/left foot1/left claw0/left claw1","Rap/root/pelvis/left leg0/left leg1/left foot0/left foot1/left claw0/left claw1/left claw1_end"],[[[7,0.028571419417858124,2.130702503322368e-9,-9.313598417137942e-17,0,-2.130702503322368e-9,0.028571419417858124,-2.410769058542434e-16,0,9.313596431904472e-17,2.41076932324023e-16,0.028571419417858124,0,-0.00001180260005639866,0.0039984178729355335,0.12694741785526276,1],[7,0.028571419417858124,2.1324217946983026e-9,-9.321113187566864e-17,0,-2.1324217946983026e-9,0.028571419417858124,-2.410769058542434e-16,0,9.321111202333394e-17,2.41076932324023e-16,0.028571419417858124,0,-0.00001180337949335808,-0.0021379240788519382,0.12837447226047516,1],[7,0.028571419417858124,2.1310797571061357e-9,-9.315246822662638e-17,0,-2.1310797571061357e-9,0.028571419417858124,-2.410769058542434e-16,0,9.315245499173658e-17,2.41076932324023e-16,0.028571419417858124,0,-0.000011803783309005667,-0.011450748890638351,0.1307666152715683,1],[7,0.028571419417858124,2.132655163578079e-9,-9.32213359757051e-17,0,-2.132655163578079e-9,0.028571419417858124,-2.410769058542434e-16,0,9.32213161233704e-17,2.41076932324023e-16,0.028571419417858124,0,-0.000011804060704889707,-0.01883998140692711,0.1314743310213089,1],[7,0.028571419417858124,2.131218312939609e-9,-9.315852980615517e-17,0,-2.131218312939609e-9,0.028571419417858124,-2.410769058542434e-16,0,9.315851657126537e-17,2.41076932324023e-16,0.028571419417858124,0,-0.000011804387213487644,-0.027272887527942657,0.13318489491939545,1],[7,0.028571419417858124,2.1317549947497128e-9,-9.318198203088227e-17,0,-2.131754772705108e-9,0.028571421280503273,-2.410769058542434e-16,0,9.318196217854757e-17,2.410769587938026e-16,0.028571419417858124,0,-0.000011804656423919369,-0.036033451557159424,0.13227641582489014,1],[7,0.028571419417858124,2.1318127263469933e-9,-9.318450327738933e-17,0,-2.1318125043023883e-9,0.028571421280503273,-2.410769058542434e-16,0,9.318448342505463e-17,2.410769587938026e-16,0.028571419417858124,0,-0.000011803921552200336,-0.052532486617565155,0.12958188354969025,1],[7,0.028571419417858124,2.1318127263469933e-9,-9.318450327738933e-17,0,-2.1318125043023883e-9,0.028571421280503273,-2.410769058542434e-16,0,9.318448342505463e-17,2.410769587938026e-16,0.028571419417858124,0,-0.016793468967080116,-0.05637620761990547,0.11253698915243149,1],[7,0.028571419417858124,1.96419769338263e-9,-8.585781386742745e-17,0,-1.964197471338025e-9,0.028571421280503273,-2.410769058542434e-16,0,8.585779401509274e-17,2.410769587938026e-16,0.028571419417858124,0,-0.018833601847290993,-0.059229638427495956,0.0847618505358696,1],[7,0.028571419417858124,1.8210941643559408e-9,-7.960255496129324e-17,0,-1.8210938312890335e-9,0.028571421280503273,-2.410769058542434e-16,0,7.960254172640344e-17,2.410769587938026e-16,0.028571419417858124,0,-0.018438737839460373,-0.08132186532020569,0.07268201559782028,1],[7,-4.000376030433017e-9,-0.028571419417858124,-8.507116788791791e-9,0,0.028571421280503273,-4.000373809986968e-9,-4.314164137042553e-9,0,4.314163692953343e-9,-8.50711767697021e-9,0.028571419417858124,0,-0.07852213829755783,0.014092969708144665,0.051559265702962875,1],[7,0.028571421280503273,3.1568390124192547e-9,-1.398516379225772e-16,0,-3.156838568330045e-9,0.02857142500579357,-1.685085057601121e-11,0,1.3798981979984285e-16,1.685085578018164e-11,0.028571419417858124,0,-0.011422717012465,-0.07517792284488678,0.04439925774931908,1],[7,0.028571421280503273,3.0257814032097485e-9,-1.340456373507328e-16,0,-3.0257811811651436e-9,0.02857142500579357,-1.685086445379902e-11,0,1.322611109844354e-16,1.685086792324597e-11,0.028571419417858124,0,-0.010926246643066406,-0.06727490574121475,0.044737715274095535,1],[7,0.028571421280503273,3.097746503755161e-9,-1.3540677959230106e-16,0,-3.097746281710556e-9,0.02857142500579357,7.315684620297064e-24,0,1.3540679282719086e-16,7.315682253714349e-24,0.028571419417858124,0,-0.01092624757438898,-0.07520074397325516,0.044737715274095535,1],[7,0.028571419417858124,3.3587572723092762e-9,-1.4681595604979186e-16,0,-3.3587568282200664e-9,0.028571421280503273,-2.157003810896558e-16,0,1.4681592958001226e-16,2.15700434029215e-16,0.028571419417858124,0,-0.018438730388879776,-0.0776570737361908,0.04906284436583519,1],[7,1.2488944323152396e-9,-0.028571419417858124,-5.256981516765791e-9,0,0.028571421280503273,1.2488949874267519e-9,-4.314164137042553e-9,0,4.314165025220973e-9,-5.256981072676581e-9,0.028571419417858124,0,-0.07623638212680817,0.01850046031177044,0.0422440804541111,1],[7,0.028571419417858124,1.6179442230424002e-9,-3.6626482189051747e-17,0,-1.6179438899754928e-9,0.028571421280503273,6.021060316996341e-10,0,7.072257917963438e-17,-6.021061427219365e-10,0.028571419417858124,0,-0.018664056435227394,-0.06744726002216339,0.0367017425596714,1],[7,0.028571419417858124,1.4902575840025634e-9,-6.514122762726958e-17,0,-1.4902573619579584e-9,0.028571421280503273,-1.078501971622728e-16,0,6.514122100982468e-17,1.078502170146075e-16,0.028571419417858124,0,-0.018664062023162842,-0.07783921808004379,0.0367017425596714,1],[7,6.2175633530614505e-9,-0.028571419417858124,-5.291492133352449e-9,0,0.028571421280503273,6.2175633530614505e-9,-4.3141632488641335e-9,0,4.314165025220973e-9,-5.291491245174029e-9,0.028571419417858124,0,-0.07643871754407883,0.02294609136879444,0.05299324542284012,1],[7,3.5065284009760944e-9,-0.028571419417858124,-5.291492133352449e-9,0,0.028571421280503273,3.5065288450653043e-9,-4.314165469310183e-9,0,4.314166801577812e-9,-5.291491689263239e-9,0.028571419417858124,0,-0.07203830778598785,0.02485138177871704,0.04806007072329521,1],[7,0.028571419417858124,4.299169908961176e-9,-1.7418930804797227e-16,0,-4.299169464871966e-9,0.028571421280503273,9.12691033860824e-11,0,1.8792266350339007e-16,-9.126911726387021e-11,0.028571419417858124,0,-0.026706641539931297,-0.06614065915346146,0.046948570758104324,1],[7,0.028571419417858124,3.358754607774017e-9,-1.4681582370089385e-16,0,-3.3587539416402024e-9,0.028571421280503273,-1.078501905448279e-16,0,1.4681581046600405e-16,1.078502236320524e-16,0.028571419417858124,0,-0.026706641539931297,-0.07242234796285629,0.046948570758104324,1],[7,7.607279250976262e-9,-0.028571421280503273,-5.207131170692492e-9,0,0.028571421280503273,7.607280139154682e-9,-4.314161916596504e-9,0,4.314164137042553e-9,-5.207130726603282e-9,0.028571419417858124,0,-0.05637619271874428,-0.016793465241789818,0.11253701150417328,1],[7,7.607280139154682e-9,-0.028571421280503273,-5.207131170692492e-9,0,0.028571421280503273,7.607281027333102e-9,-4.3141632488641335e-9,0,4.314165469310183e-9,-5.207130726603282e-9,0.028571419417858124,0,-0.059229619801044464,-0.01883358508348465,0.08476188033819199,1],[7,7.607280139154682e-9,-0.028571421280503273,-5.207131170692492e-9,0,0.028571421280503273,7.607281027333102e-9,-4.3141632488641335e-9,0,4.314165469310183e-9,-5.207130726603282e-9,0.028571419417858124,0,-0.0813218504190445,-0.018438728526234627,0.07268205285072327,1],[7,7.607280139154682e-9,-0.028571421280503273,-5.207131170692492e-9,0,0.028571421280503273,7.607281027333102e-9,-4.314161916596504e-9,0,4.314164137042553e-9,-5.207130726603282e-9,0.028571419417858124,0,-0.07852211594581604,-0.014092952013015747,0.05155926197767258,1],[7,7.607280139154682e-9,-0.028571421280503273,-3.0584685895007624e-9,0,0.028571421280503273,7.607281027333102e-9,-4.314163692953343e-9,0,4.314165025220973e-9,-3.0584679233669476e-9,0.028571419417858124,0,-0.0751778706908226,-0.011422698386013508,0.04439925029873848,1],[7,7.607280139154682e-9,-0.028571421280503273,-4.669961306547066e-9,0,0.028571421280503273,7.607281027333102e-9,-4.314162360685714e-9,0,4.314164581131763e-9,-4.669960862457856e-9,0.028571419417858124,0,-0.06727486848831177,-0.010926229879260063,0.04473773390054703,1],[7,7.540537971806316e-9,-0.02857142500579357,-4.6548747079100394e-9,0,0.028571421280503273,7.540539748163155e-9,-4.3141632488641335e-9,0,4.314165469310183e-9,-4.6548742638208296e-9,0.028571419417858124,0,-0.06727486103773117,-0.01885206252336502,0.04473772644996643,1],[7,7.607280139154682e-9,-0.028571421280503273,-5.207131170692492e-9,0,0.028571421280503273,7.607281027333102e-9,-4.314161916596504e-9,0,4.314164137042553e-9,-5.207130726603282e-9,0.028571419417858124,0,-0.077657051384449,-0.01843872107565403,0.04906286299228668,1],[7,7.607280139154682e-9,-0.028571421280503273,-5.207131170692492e-9,0,0.028571421280503273,7.607281027333102e-9,-4.3141632488641335e-9,0,4.314165469310183e-9,-5.207130726603282e-9,0.028571419417858124,0,-0.07623633742332458,-0.018500449135899544,0.0422440804541111,1],[7,7.607280139154682e-9,-0.028571421280503273,-5.207131170692492e-9,0,0.028571421280503273,7.607281027333102e-9,-4.314161916596504e-9,0,4.314164137042553e-9,-5.207130726603282e-9,0.028571419417858124,0,-0.0674472525715828,-0.018664037808775902,0.03670177608728409,1],[7,7.540537971806316e-9,-0.02857142500579357,-4.6548747079100394e-9,0,0.028571421280503273,7.540539748163155e-9,-4.314162360685714e-9,0,4.314164581131763e-9,-4.6548742638208296e-9,0.028571419417858124,0,-0.0674472451210022,-0.02905598096549511,0.03670177608728409,1],[7,7.607280139154682e-9,-0.028571421280503273,-5.207131170692492e-9,0,0.028571421280503273,7.607281027333102e-9,-4.3141632488641335e-9,0,4.314165469310183e-9,-5.207130726603282e-9,0.028571419417858124,0,-0.07643873244524002,-0.022946130484342575,0.05299312621355057,1],[7,7.607280139154682e-9,-0.028571421280503273,-5.207131170692492e-9,0,0.028571421280503273,7.607281027333102e-9,-4.314161916596504e-9,0,4.314164137042553e-9,-5.207130726603282e-9,0.028571419417858124,0,-0.07203830033540726,-0.024851415306329727,0.04805992916226387,1],[7,7.607280139154682e-9,-0.028571421280503273,-4.868252023726427e-9,0,0.028571421280503273,7.607281027333102e-9,-4.314162360685714e-9,0,4.314164581131763e-9,-4.868251579637217e-9,0.028571419417858124,0,-0.06614063680171967,-0.026706669479608536,0.04694847762584686,1],[7,7.540537971806316e-9,-0.028571421280503273,-4.6548747079100394e-9,0,0.028571421280503273,7.540538859984736e-9,-4.314162360685714e-9,0,4.314164581131763e-9,-4.6548742638208296e-9,0.028571419417858124,0,-0.06614062935113907,-0.03298836573958397,0.04694847762584686,1],[7,0.028571419417858124,2.1307400288606004e-9,-9.313761206282493e-17,0,-2.1307398068159955e-9,0.028571421280503273,-2.410769058542434e-16,0,9.313759221049023e-17,2.410769587938026e-16,0.028571419417858124,0,-0.000011801282198575791,-0.06364385783672333,0.12601836025714874,1],[7,0.028571419417858124,2.1319594978308487e-9,-9.319090896405295e-17,0,-2.131959053741639e-9,0.028571421280503273,-2.410769058542434e-16,0,9.319088911171824e-17,2.410769587938026e-16,0.028571419417858124,0,-0.00001180186154670082,-0.06992127001285553,0.13012398779392242,1],[7,0.028571419417858124,2.133326848507977e-9,-9.325069096128338e-17,0,-2.133326626463372e-9,0.028571421280503273,-2.410769058542434e-16,0,9.325067110894868e-17,2.410769587938026e-16,0.028571419417858124,0,-0.00001180279468826484,-0.07520601898431778,0.136601984500885,1],[7,0.028571419417858124,2.1333581567972715e-9,-9.325205415493287e-17,0,-2.1333579347526666e-9,0.028571421280503273,-2.410769058542434e-16,0,9.325203430259816e-17,2.410769587938026e-16,0.028571419417858124,0,-0.00001180423623736715,-0.08038163185119629,0.14655853807926178,1],[7,0.028571419417858124,2.1326291843593026e-9,-9.322019115773732e-17,0,-2.1326289623146977e-9,0.028571421280503273,-2.410769058542434e-16,0,9.322017130540262e-17,2.410769587938026e-16,0.028571419417858124,0,-0.000011805565918621141,-0.08558955788612366,0.15697766840457916,1],[7,0.028571419417858124,2.1321788779005146e-9,-9.320049764171366e-17,0,-2.1321784338113048e-9,0.028571421280503273,-2.410769058542434e-16,0,9.320048440682386e-17,2.410769587938026e-16,0.028571419417858124,0,-0.000011807751434389502,-0.1032102033495903,0.17128728330135345,1],[7,0.028571419417858124,2.1321788779005146e-9,-9.320049764171366e-17,0,-2.1321784338113048e-9,0.028571421280503273,-2.410769058542434e-16,0,9.320048440682386e-17,2.410769587938026e-16,0.028571419417858124,0,0.00595908984541893,-0.12641704082489014,0.1719350814819336,1],[7,0.028571419417858124,1.7528615225970157e-9,-7.662001298766794e-17,0,-1.7528611895301083e-9,0.028571421280503273,-2.410769058542434e-16,0,7.661999975277814e-17,2.410769587938026e-16,0.028571419417858124,0,0.005959085654467344,-0.14729461073875427,0.1719350814819336,1],[7,2.4979425194970872e-9,-0.028571419417858124,-4.6231560801857086e-9,0,0.028571421280503273,2.497942963586297e-9,-4.314164137042553e-9,0,4.314165469310183e-9,-4.623155636096499e-9,0.028571419417858124,0,-0.12641701102256775,0.005959106609225273,0.17193512618541718,1],[7,2.4454704927734383e-9,-0.028571419417858124,-4.654875151999249e-9,0,0.028571421280503273,2.4454707148180432e-9,-4.314164581131763e-9,0,4.314165913399393e-9,-4.654875151999249e-9,0.028571419417858124,0,-0.12641704082489014,-0.014918439090251923,0.17193512618541718,1],[7,4.530973374272662e-9,-0.028571419417858124,2.641106444656316e-9,0,1.2296329510164128e-9,2.641106222611711e-9,0.028571421280503273,0,-0.028571419417858124,-4.530973374272662e-9,1.229633506127925e-9,0,-0.17179779708385468,0.00782847125083208,-0.10806530714035034,1],[7,4.511711004795416e-9,-0.028571419417858124,3.4043392549421014e-9,0,1.2488952094713568e-9,3.4043390328974965e-9,0.028571421280503273,0,-0.028571419417858124,-4.511711004795416e-9,1.248895986627474e-9,0,-0.17179781198501587,-0.01304907537996769,-0.10806530714035034,1],[7,-0.028571419417858124,-7.177573646544033e-9,-3.137417183470421e-16,0,7.177572314276404e-9,-0.028571421280503273,-2.382317221844162e-16,0,-3.137416654074829e-16,-2.382318545333142e-16,0.028571419417858124,0,0.00001178946240543155,0.14119994640350342,0.170453742146492,1],[7,-0.028571419417858124,-7.177573646544033e-9,-3.137417183470421e-16,0,7.177572314276404e-9,-0.028571421280503273,-2.382317221844162e-16,0,-3.137416654074829e-16,-2.382318545333142e-16,0.028571419417858124,0,0.000011790392818511464,0.12032239139080048,0.170453742146492,1],[7,2.497942741541692e-9,-0.028571419417858124,-4.623156524274918e-9,0,0.028571421280503273,2.497942963586297e-9,-4.3141632488641335e-9,0,4.314164581131763e-9,-4.6231560801857086e-9,0.028571419417858124,0,-0.10806529223918915,-0.00782848335802555,0.17179781198501587,1],[7,1.6297665439424236e-9,-0.028571419417858124,-4.654875596088459e-9,0,0.028571421280503273,1.6297669880316334e-9,-4.314164581131763e-9,0,4.314165469310183e-9,-4.654875596088459e-9,0.028571419417858124,0,-0.10806529223918915,-0.0287060234695673,0.17179781198501587,1],[7,0.028571419417858124,-5.397777336213494e-9,-2.450203095971659e-10,0,5.403335556763977e-9,0.02854202874004841,0.0012956045102328062,0,-2.6543900278537557e-16,-0.0012956045102328062,0.02854202874004841,0,-0.000011834129509225022,-0.11099456250667572,0.15842615067958832,1],[7,0.028571419417858124,-3.8699980997591865e-9,-1.7567033938625798e-10,0,3.873982468149961e-9,0.028542030602693558,0.0012956062564626336,0,-1.9130460136398047e-16,-0.0012956064892932773,0.02854202874004841,0,-0.000011829494724224787,-0.11847066134214401,0.14998027682304382,1],[7,0.028571419417858124,-6.188254797478976e-9,-2.8090677006709086e-10,0,6.194625257194275e-9,0.028542030602693558,0.0012956249993294477,0,-2.8798699337150545e-16,-0.0012956252321600914,0.02854202874004841,0,-0.000011841605555673596,-0.12775667011737823,0.15018250048160553,1],[7,0.028571419417858124,-3.736957854272305e-9,-1.696333629119806e-10,0,3.740804555008026e-9,0.028542034327983856,0.0012956224381923676,0,-1.7895606536798465e-16,-0.0012956229038536549,0.02854202501475811,0,-0.000011833370081149042,-0.13729362189769745,0.14860910177230835,1],[7,0.028571419417858124,-3.736957854272305e-9,-1.696333490341928e-10,0,3.740804999097236e-9,0.028542030602693558,0.001295622205361724,0,-1.8334901646046187e-16,-0.0012956225546076894,0.02854202501475811,0,-0.000011836680641863495,-0.14695954322814941,0.14860910177230835,1],[7,0.028571419417858124,8.331834111530156e-10,3.782090612913791e-11,0,-8.340414470175972e-10,0.02854202874004841,0.0012956169666722417,0,4.0980754316085984e-17,-0.0012956169666722417,0.02854202874004841,0,-0.000011812518096121494,-0.14546464383602142,0.14278361201286316,1],[7,0.028571419417858124,1.1269905009214654e-9,5.115775511543852e-11,0,-1.1281511280714085e-9,0.02854202874004841,0.0012956166174262762,0,5.317150395587609e-17,-0.0012956166174262762,0.02854202874004841,0,-0.000011815323887276463,-0.17003090679645538,0.14278364181518555,1],[7,0.028571419417858124,2.131709919694913e-9,-9.318002326719175e-17,0,-2.131709919694913e-9,0.028571419417858124,-2.410769058542434e-16,0,9.318000341485705e-17,2.41076932324023e-16,0.028571419417858124,0,-0.000011802006156358402,0.00908607430756092,0.12529350817203522,1],[7,5.904393418632026e-9,-0.028571419417858124,-4.634425732064074e-9,0,0.028571419417858124,5.9043943068104454e-9,-4.314164137042553e-9,0,4.314165025220973e-9,-4.634424843885654e-9,0.028571419417858124,0,0.009193467907607555,-0.018731210380792618,0.11110250651836395,1],[7,2.2948896116758988e-9,-0.028571421280503273,-4.634425732064074e-9,0,0.028571419417858124,2.2948904998543185e-9,-4.314163692953343e-9,0,4.314164137042553e-9,-4.6344261761532834e-9,0.028571419417858124,0,-0.0026366938836872578,-0.02434702217578888,0.06534464657306671,1],[7,2.294889389631294e-9,-0.028571421280503273,-4.634425732064074e-9,0,0.028571419417858124,2.2948904998543185e-9,-4.314163692953343e-9,0,4.314164137042553e-9,-4.6344261761532834e-9,0.028571419417858124,0,0.021530676633119583,-0.018731193616986275,0.03690079599618912,1],[7,1.585340747567443e-9,-0.028571421280503273,-4.634425732064074e-9,0,0.028571419417858124,1.5853417467681652e-9,-4.314163692953343e-9,0,4.314164137042553e-9,-4.6344261761532834e-9,0.028571419417858124,0,0.017623594030737877,-0.02177310176193714,0.01811808906495571,1],[7,1.5853404145005356e-9,-0.028571421280503273,-4.634425732064074e-9,0,0.028571419417858124,1.5853413026789553e-9,-4.314163692953343e-9,0,4.314164137042553e-9,-4.6344261761532834e-9,0.028571419417858124,0,0.01220578234642744,-0.021959969773888588,0.007230795454233885,1],[7,2.2115245190690302e-9,-0.028571423143148422,4.008242626696301e-9,0,-3.4071145904590594e-10,4.008243514874721e-9,0.028571421280503273,0,-0.028571421280503273,-2.211524741113635e-9,-3.4071115373457417e-10,0,-0.006744782440364361,-0.01692545786499977,0.007035079412162304,1],[7,8.649481131328685e-10,-0.02857142500579357,2.5319695229342187e-9,0,-0.01685670018196106,1.5340427816923352e-9,0.023068977519869804,0,-0.023068977519869804,-2.1921950921210964e-9,-0.01685670018196106,0,-0.0055203004740178585,-0.015962978824973106,-0.003943715710192919,1],[7,2.1151187468149146e-9,-0.028571423143148422,7.71906627505814e-9,0,3.6167877581760877e-9,7.719068051414979e-9,0.028571421280503273,0,-0.028571421280503273,-2.1151183027257048e-9,3.6167884243099024e-9,0,-0.006744781043380499,-0.016037018969655037,-0.006809792947024107,1],[7,2.180674751883771e-9,-0.028571423143148422,6.921505590895549e-9,0,4.6548747079100394e-9,6.921506923163179e-9,0.028571421280503273,0,-0.028571421280503273,-2.1806740857499562e-9,4.654875151999249e-9,0,-0.006744781043380499,-0.022920001298189163,-0.006809793412685394,1],[7,3.6888969656700965e-9,-0.028571421280503273,-2.563737666605448e-9,0,0.028571419417858124,3.688897853848516e-9,-4.314164137042553e-9,0,4.314164581131763e-9,-2.563737444560843e-9,0.028571419417858124,0,0.007439738605171442,-0.026698308065533638,0.007321791257709265,1],[7,3.6888971877147014e-9,-0.028571421280503273,-4.637425998765821e-9,0,0.028571419417858124,3.688898519982331e-9,-4.314163692953343e-9,0,4.314164581131763e-9,-4.637425998765821e-9,0.028571419417858124,0,-0.000364810781320557,-0.028771335259079933,0.00674477918073535,1],[7,3.6888971877147014e-9,-0.028571421280503273,-4.654876040177669e-9,0,0.028571419417858124,3.688898297937726e-9,-4.314163692953343e-9,0,4.314164581131763e-9,-4.654876040177669e-9,0.028571419417858124,0,-0.006513642612844706,-0.0313626304268837,0.006744778249412775,1],[7,1.9730999056832843e-9,-0.028571421280503273,-4.654875596088459e-9,0,0.028571419417858124,1.973100793861704e-9,-4.314164137042553e-9,0,4.314164581131763e-9,-4.654876040177669e-9,0.028571419417858124,0,-0.006513644941151142,-0.03803516924381256,0.006744777783751488,1],[7,3.7959999588110804e-9,-0.028571421280503273,-2.8658981854334797e-9,0,0.028571419417858124,3.7960008469895e-9,-4.314164137042553e-9,0,4.314164581131763e-9,-2.8658981854334797e-9,0.028571419417858124,0,0.01685141958296299,-0.013050878420472145,0.010150493122637272,1],[7,3.7959999588110804e-9,-0.028571421280503273,-4.6344261761532834e-9,0,0.028571419417858124,3.79600129107871e-9,-4.314163692953343e-9,0,4.314164581131763e-9,-4.634426620242493e-9,0.028571419417858124,0,0.004906213842332363,-0.009497113525867462,0.02483331970870495,1],[7,3.741627896403088e-9,-0.028571421280503273,-4.654876040177669e-9,0,0.028571419417858124,3.7416292286707176e-9,-4.314163692953343e-9,0,4.314164581131763e-9,-4.654876040177669e-9,0.028571419417858124,0,0.004906211979687214,-0.028755946084856987,0.02483331970870495,1],[7,0.028571419417858124,1.128795501514901e-9,1.7338632266050702e-11,0,-1.128928728277856e-9,0.028568051755428314,0.000438814953668043,0,4.919231191452035e-17,-0.000438814953668043,0.028568051755428314,0,-0.000011799456842709333,0.028672050684690475,0.1137750893831253,1],[7,0.028571419417858124,-1.3892493821998642e-9,2.1525840138147956e-11,0,1.3894162487204653e-9,0.02856798656284809,-0.0004426477535162121,0,-6.253743511252006e-17,0.0004426477535162121,0.02856798656284809,0,-0.000011795404134318233,0.04403909668326378,0.11325246095657349,1],[7,0.028571419417858124,-1.0058118782296788e-8,8.160043474259027e-11,0,1.0058450961025756e-8,0.028570478782057762,-0.00023178798437584192,0,-4.3709348532935054e-16,0.0002317879698239267,0.02857048250734806,0,-0.000011779388842114713,0.0527619831264019,0.11412122845649719,1],[7,0.028571419417858124,1.9834726916467815e-10,1.4815692075953457e-12,0,-1.9835279252422566e-10,0.028570622205734253,0.0002134115929948166,0,8.812408360503083e-18,-0.0002134115929948166,0.028570622205734253,0,-0.000011798062587331515,0.05983899533748627,0.11539608985185623,1],[7,0.028571419417858124,-3.760055378165816e-9,-3.83201692599755e-10,0,3.7795317986422106e-9,0.028424188494682312,0.002896819729357958,0,-1.893022684162305e-16,-0.002896819729357958,0.02842419408261776,0,-0.000011788064512074925,0.05801872909069061,0.12053299695253372,1],[7,0.028571419417858124,-1.0932485139392156e-8,1.2609342736613627e-10,0,1.093321344569631e-8,0.02856951579451561,-0.00032951467437669635,0,-4.795138747096912e-16,0.00032951461616903543,0.02856951765716076,0,-0.000011766576790250838,0.08115707337856293,0.11306680738925934,1],[7,0.028571419417858124,-1.4722739472006197e-8,-1.2454304254561066e-9,0,1.4775326739879802e-8,0.028469732031226158,0.0024083212483674288,0,-5.905747171713069e-16,-0.0024083207827061415,0.028469737619161606,0,-0.000011750411431421526,0.08011782914400101,0.12018071860074997,1],[7,0.028571419417858124,4.882899085068004e-10,2.914532504227907e-11,0,-4.891591021127795e-10,0.028520654886960983,0.0017023583641275764,0,2.331214334472881e-17,-0.0017023580148816109,0.02852066047489643,0,-0.000011798129889939446,0.09435778111219406,0.1179935485124588,1],[7,0.028571419417858124,-2.0055137550656355e-9,-2.0140457010486834e-11,0,2.0056150074054813e-9,0.02856997773051262,0.0002869165036827326,0,-8.899577315198411e-17,-0.0002869164745789021,0.028569981455802917,0,-0.00001178766706289025,0.11147993057966232,0.11283393949270248,1],[7,0.028571419417858124,-8.220273350900698e-9,-3.122843650338325e-10,0,8.226205494565875e-9,0.02855081856250763,0.0010846336372196674,0,-3.761288448160939e-16,-0.0010846334043890238,0.028550824150443077,0,-0.000011760153938666917,0.11728852242231369,0.11584558337926865,1],[7,0.028571419417858124,-1.9709291976255372e-8,-1.6084480414235713e-9,0,1.977481467463349e-8,0.02847674861550331,0.0023239492438733578,0,-8.3075863854090745e-16,-0.002323949011042714,0.02847675234079361,0,-0.000011703106792992912,0.1223321482539177,0.12107104063034058,1],[7,0.028571419417858124,-1.5978733891586216e-9,8.682318752839535e-11,0,1.6002306146845058e-9,0.028529327362775803,-0.0015501886373385787,0,-7.081947842531129e-17,0.0015501885209232569,0.0285293310880661,0,-0.000011784456546592992,0.15251514315605164,0.10282210260629654,1],[7,0.028571419417858124,7.27050974980159e-10,5.933377400513251e-11,0,-7.294680415270705e-10,0.02847674861550331,0.002323955064639449,0,3.018612011416288e-17,-0.0023239548318088055,0.02847675234079361,0,-0.000011799313142546453,0.12236957997083664,0.12048602104187012,1],[7,0.028571419417858124,2.131709919694913e-9,-9.318002326719175e-17,0,-2.131709919694913e-9,0.028571419417858124,-2.410769058542434e-16,0,9.318000341485705e-17,2.41076932324023e-16,0.028571419417858124,0,-0.018731214106082916,0.009193445555865765,0.11110249161720276,1],[7,0.028571419417858124,1.6840294714270954e-9,-7.361127916712676e-17,0,-1.6840294714270954e-9,0.028571419417858124,-2.474210502802801e-16,0,7.361126593223696e-17,2.474210502802801e-16,0.028571419417858124,0,-0.02434704825282097,-0.002636699704453349,0.06534463167190552,1],[7,0.028571419417858124,1.6840294714270954e-9,-7.361127916712676e-17,0,-1.6840294714270954e-9,0.028571419417858124,-2.474210502802801e-16,0,7.361126593223696e-17,2.474210502802801e-16,0.028571419417858124,0,-0.01873122714459896,0.021530665457248688,0.036900799721479416,1],[7,0.028571419417858124,3.085303568184372e-9,-1.348629315006046e-16,0,-3.085303568184372e-9,0.028571419417858124,-2.283886434719496e-16,0,1.34862905030825e-16,2.283886699417292e-16,0.028571419417858124,0,-0.02177312970161438,0.01762358844280243,0.018118079751729965,1],[7,6.187476309094109e-9,-0.028571419417858124,7.377273014697039e-9,0,6.8148414689162e-10,7.377273014697039e-9,0.028571419417858124,0,-0.028571419417858124,-6.187476309094109e-9,6.814857567150057e-10,0,-0.007230792194604874,0.021960003301501274,0.012205780483782291,1],[7,3.58267571165527e-9,-0.028571421280503273,8.4063298544379e-9,0,1.2488958756051716e-9,8.406331630794739e-9,0.028571419417858124,0,-0.028571419417858124,-3.582675933699875e-9,1.2488968748058937e-9,0,-0.007321786601096392,0.026698356494307518,0.007439733017235994,1],[7,5.72501157591887e-9,-0.028571421280503273,8.4063298544379e-9,0,1.2488955425382642e-9,8.406331630794739e-9,0.028571419417858124,0,-0.028571419417858124,-5.72501202000808e-9,1.2488972078728011e-9,0,-0.006744783371686935,0.029386324808001518,-0.00036471846397034824,1],[7,5.620065302025523e-9,-0.028571421280503273,1.1043050918146946e-8,0,1.2488955425382642e-9,1.1043052694503785e-8,0.028571419417858124,0,-0.028571419417858124,-5.620065746114733e-9,1.248897651962011e-9,0,-0.006744781043380499,0.03136266767978668,-0.006513651926070452,1],[7,5.620065302025523e-9,-0.028571421280503273,8.677784713029268e-9,0,1.2488950984490543e-9,8.677786489386108e-9,0.028571419417858124,0,-0.028571419417858124,-5.620065746114733e-9,1.2488967637835913e-9,0,-0.006744781509041786,0.024903928861021996,-0.0065136500634253025,1],[7,3.288257000022554e-9,-0.028571419417858124,9.818720947407655e-9,0,1.248895986627474e-9,9.818720947407655e-9,0.028571419417858124,0,-0.028571419417858124,-3.2882565559333443e-9,1.2488970968504987e-9,0,-0.0067447773180902,0.016925504431128502,0.007035076152533293,1],[7,3.133963533130668e-9,-0.028571421280503273,9.818720947407655e-9,0,1.248896208672079e-9,9.818721835586075e-9,0.028571419417858124,0,-0.028571419417858124,-3.133963533130668e-9,1.2488973188951036e-9,0,-0.006783900782465935,0.016502905637025833,0.00007267342152772471,1],[7,-7.350023700780639e-9,-0.028571421280503273,3.1532503275144563e-9,0,-0.028571419417858124,7.350025033048269e-9,-5.0976639757470735e-17,0,-7.60199947001677e-16,-3.153250771603666e-9,-0.028571419417858124,0,0.0068097966723144054,0.01603706367313862,-0.006744778249412775,1],[7,-5.873038055881352e-9,-0.02857142500579357,3.1513667231308773e-9,0,-0.028571419417858124,5.873039388148982e-9,-6.869439849210336e-16,0,3.916039779437524e-17,-3.151367389264692e-9,-0.028571419417858124,0,0.006809796206653118,0.009138733148574829,-0.006744778249412775,1],[7,4.93648455446305e-9,-0.028571419417858124,-2.9935036671702164e-9,0,0.028571419417858124,4.93648499855226e-9,-4.314164137042553e-9,0,4.314164581131763e-9,-2.9935030010364017e-9,0.028571419417858124,0,0.01685141958296299,0.013050918467342854,0.010150487534701824,1],[7,4.93648455446305e-9,-0.028571419417858124,-4.76203165789002e-9,0,0.028571419417858124,4.93648499855226e-9,-4.3141632488641335e-9,0,4.314164137042553e-9,-4.7620307697116004e-9,0.028571419417858124,0,0.0049062143079936504,0.009497147053480148,0.024833310395479202,1],[7,4.730733582647417e-9,-0.028571419417858124,-4.654876040177669e-9,0,0.028571419417858124,4.730734026736627e-9,-4.314163692953343e-9,0,4.314164581131763e-9,-4.654875151999249e-9,0.028571419417858124,0,0.004906211514025927,-0.009761689230799675,0.024833306670188904,1]],8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8]]],0,0,[],[],[]],[[[14,".bin",329300938,[{"primitives":[{"primitiveMode":7,"jointMapIndex":0,"vertexBundelIndices":[0],"indexView":{"offset":17784,"length":822,"count":411,"stride":2}},{"primitiveMode":7,"jointMapIndex":1,"vertexBundelIndices":[1],"indexView":{"offset":30702,"length":474,"count":237,"stride":2}},{"primitiveMode":7,"jointMapIndex":2,"vertexBundelIndices":[2],"indexView":{"offset":35712,"length":198,"count":99,"stride":2}},{"primitiveMode":7,"jointMapIndex":3,"vertexBundelIndices":[3],"indexView":{"offset":46278,"length":384,"count":192,"stride":2}},{"primitiveMode":7,"jointMapIndex":4,"vertexBundelIndices":[4],"indexView":{"offset":59910,"length":456,"count":228,"stride":2}},{"primitiveMode":7,"jointMapIndex":5,"vertexBundelIndices":[5],"indexView":{"offset":66990,"length":216,"count":108,"stride":2}},{"primitiveMode":7,"jointMapIndex":6,"vertexBundelIndices":[6],"indexView":{"offset":72894,"length":198,"count":99,"stride":2}},{"primitiveMode":7,"jointMapIndex":7,"vertexBundelIndices":[7],"indexView":{"offset":77700,"length":186,"count":93,"stride":2}},{"primitiveMode":7,"jointMapIndex":8,"vertexBundelIndices":[8],"indexView":{"offset":97038,"length":864,"count":432,"stride":2}},{"primitiveMode":7,"jointMapIndex":9,"vertexBundelIndices":[9],"indexView":{"offset":106974,"length":318,"count":159,"stride":2}},{"primitiveMode":7,"jointMapIndex":2,"vertexBundelIndices":[10],"indexView":{"offset":111828,"length":198,"count":99,"stride":2}},{"primitiveMode":7,"jointMapIndex":11,"vertexBundelIndices":[11],"indexView":{"offset":122394,"length":384,"count":192,"stride":2}},{"primitiveMode":7,"jointMapIndex":12,"vertexBundelIndices":[12],"indexView":{"offset":136026,"length":456,"count":228,"stride":2}},{"primitiveMode":7,"jointMapIndex":13,"vertexBundelIndices":[13],"indexView":{"offset":143106,"length":216,"count":108,"stride":2}},{"primitiveMode":7,"jointMapIndex":14,"vertexBundelIndices":[14],"indexView":{"offset":149010,"length":198,"count":99,"stride":2}},{"primitiveMode":7,"jointMapIndex":15,"vertexBundelIndices":[15],"indexView":{"offset":153096,"length":120,"count":60,"stride":2}},{"primitiveMode":7,"jointMapIndex":10,"vertexBundelIndices":[16],"indexView":{"offset":172872,"length":1380,"count":690,"stride":2}},{"primitiveMode":7,"jointMapIndex":10,"vertexBundelIndices":[17],"indexView":{"offset":177132,"length":480,"count":120,"stride":4}}],"vertexBundles":[{"view":{"offset":0,"length":17784,"count":247,"stride":72},"attributes":[{"name":"a_position","format":32,"isNormalized":false},{"name":"a_normal","format":32,"isNormalized":false},{"name":"a_texCoord","format":21,"isNormalized":false},{"name":"a_tangent","format":44,"isNormalized":false},{"name":"a_joints","format":42,"isNormalized":false},{"name":"a_weights","format":44,"isNormalized":false}]},{"view":{"offset":18606,"length":12096,"count":168,"stride":72},"attributes":[{"name":"a_position","format":32,"isNormalized":false},{"name":"a_normal","format":32,"isNormalized":false},{"name":"a_texCoord","format":21,"isNormalized":false},{"name":"a_tangent","format":44,"isNormalized":false},{"name":"a_joints","format":42,"isNormalized":false},{"name":"a_weights","format":44,"isNormalized":false}]},{"view":{"offset":31176,"length":4536,"count":63,"stride":72},"attributes":[{"name":"a_position","format":32,"isNormalized":false},{"name":"a_normal","format":32,"isNormalized":false},{"name":"a_texCoord","format":21,"isNormalized":false},{"name":"a_tangent","format":44,"isNormalized":false},{"name":"a_joints","format":42,"isNormalized":false},{"name":"a_weights","format":44,"isNormalized":false}]},{"view":{"offset":35910,"length":10368,"count":144,"stride":72},"attributes":[{"name":"a_position","format":32,"isNormalized":false},{"name":"a_normal","format":32,"isNormalized":false},{"name":"a_texCoord","format":21,"isNormalized":false},{"name":"a_tangent","format":44,"isNormalized":false},{"name":"a_joints","format":42,"isNormalized":false},{"name":"a_weights","format":44,"isNormalized":false}]},{"view":{"offset":46662,"length":13248,"count":184,"stride":72},"attributes":[{"name":"a_position","format":32,"isNormalized":false},{"name":"a_normal","format":32,"isNormalized":false},{"name":"a_texCoord","format":21,"isNormalized":false},{"name":"a_tangent","format":44,"isNormalized":false},{"name":"a_joints","format":42,"isNormalized":false},{"name":"a_weights","format":44,"isNormalized":false}]},{"view":{"offset":60366,"length":6624,"count":92,"stride":72},"attributes":[{"name":"a_position","format":32,"isNormalized":false},{"name":"a_normal","format":32,"isNormalized":false},{"name":"a_texCoord","format":21,"isNormalized":false},{"name":"a_tangent","format":44,"isNormalized":false},{"name":"a_joints","format":42,"isNormalized":false},{"name":"a_weights","format":44,"isNormalized":false}]},{"view":{"offset":67206,"length":5688,"count":79,"stride":72},"attributes":[{"name":"a_position","format":32,"isNormalized":false},{"name":"a_normal","format":32,"isNormalized":false},{"name":"a_texCoord","format":21,"isNormalized":false},{"name":"a_tangent","format":44,"isNormalized":false},{"name":"a_joints","format":42,"isNormalized":false},{"name":"a_weights","format":44,"isNormalized":false}]},{"view":{"offset":73092,"length":4608,"count":64,"stride":72},"attributes":[{"name":"a_position","format":32,"isNormalized":false},{"name":"a_normal","format":32,"isNormalized":false},{"name":"a_texCoord","format":21,"isNormalized":false},{"name":"a_tangent","format":44,"isNormalized":false},{"name":"a_joints","format":42,"isNormalized":false},{"name":"a_weights","format":44,"isNormalized":false}]},{"view":{"offset":77886,"length":19152,"count":266,"stride":72},"attributes":[{"name":"a_position","format":32,"isNormalized":false},{"name":"a_normal","format":32,"isNormalized":false},{"name":"a_texCoord","format":21,"isNormalized":false},{"name":"a_tangent","format":44,"isNormalized":false},{"name":"a_joints","format":42,"isNormalized":false},{"name":"a_weights","format":44,"isNormalized":false}]},{"view":{"offset":97902,"length":9072,"count":126,"stride":72},"attributes":[{"name":"a_position","format":32,"isNormalized":false},{"name":"a_normal","format":32,"isNormalized":false},{"name":"a_texCoord","format":21,"isNormalized":false},{"name":"a_tangent","format":44,"isNormalized":false},{"name":"a_joints","format":42,"isNormalized":false},{"name":"a_weights","format":44,"isNormalized":false}]},{"view":{"offset":107292,"length":4536,"count":63,"stride":72},"attributes":[{"name":"a_position","format":32,"isNormalized":false},{"name":"a_normal","format":32,"isNormalized":false},{"name":"a_texCoord","format":21,"isNormalized":false},{"name":"a_tangent","format":44,"isNormalized":false},{"name":"a_joints","format":42,"isNormalized":false},{"name":"a_weights","format":44,"isNormalized":false}]},{"view":{"offset":112026,"length":10368,"count":144,"stride":72},"attributes":[{"name":"a_position","format":32,"isNormalized":false},{"name":"a_normal","format":32,"isNormalized":false},{"name":"a_texCoord","format":21,"isNormalized":false},{"name":"a_tangent","format":44,"isNormalized":false},{"name":"a_joints","format":42,"isNormalized":false},{"name":"a_weights","format":44,"isNormalized":false}]},{"view":{"offset":122778,"length":13248,"count":184,"stride":72},"attributes":[{"name":"a_position","format":32,"isNormalized":false},{"name":"a_normal","format":32,"isNormalized":false},{"name":"a_texCoord","format":21,"isNormalized":false},{"name":"a_tangent","format":44,"isNormalized":false},{"name":"a_joints","format":42,"isNormalized":false},{"name":"a_weights","format":44,"isNormalized":false}]},{"view":{"offset":136482,"length":6624,"count":92,"stride":72},"attributes":[{"name":"a_position","format":32,"isNormalized":false},{"name":"a_normal","format":32,"isNormalized":false},{"name":"a_texCoord","format":21,"isNormalized":false},{"name":"a_tangent","format":44,"isNormalized":false},{"name":"a_joints","format":42,"isNormalized":false},{"name":"a_weights","format":44,"isNormalized":false}]},{"view":{"offset":143322,"length":5688,"count":79,"stride":72},"attributes":[{"name":"a_position","format":32,"isNormalized":false},{"name":"a_normal","format":32,"isNormalized":false},{"name":"a_texCoord","format":21,"isNormalized":false},{"name":"a_tangent","format":44,"isNormalized":false},{"name":"a_joints","format":42,"isNormalized":false},{"name":"a_weights","format":44,"isNormalized":false}]},{"view":{"offset":149208,"length":3888,"count":54,"stride":72},"attributes":[{"name":"a_position","format":32,"isNormalized":false},{"name":"a_normal","format":32,"isNormalized":false},{"name":"a_texCoord","format":21,"isNormalized":false},{"name":"a_tangent","format":44,"isNormalized":false},{"name":"a_joints","format":42,"isNormalized":false},{"name":"a_weights","format":44,"isNormalized":false}]},{"view":{"offset":153216,"length":19656,"count":273,"stride":72},"attributes":[{"name":"a_position","format":32,"isNormalized":false},{"name":"a_normal","format":32,"isNormalized":false},{"name":"a_texCoord","format":21,"isNormalized":false},{"name":"a_tangent","format":44,"isNormalized":false},{"name":"a_joints","format":42,"isNormalized":false},{"name":"a_weights","format":44,"isNormalized":false}]},{"view":{"offset":174252,"length":2880,"count":40,"stride":72},"attributes":[{"name":"a_position","format":32,"isNormalized":false},{"name":"a_normal","format":32,"isNormalized":false},{"name":"a_texCoord","format":21,"isNormalized":false},{"name":"a_tangent","format":44,"isNormalized":false},{"name":"a_joints","format":42,"isNormalized":false},{"name":"a_weights","format":44,"isNormalized":false}]}],"jointMaps":[[0,1,5,6,7,8,60,77,78,79,80,81,82,83,84,85,86,87,88,90,91,92,93,94,95,96,99,100,103],[0,1,2,3,4,5,6,7,8,9,10,11,14,15,18,19,37,38,39,40,41,60,90,92,93,94,95,99,100],[0,1,2,3,4,5,6,7,22,37,38,39,40,41,60,61,77,78,79,80,81,82,83,84,85,86,87,88,90],[0,5,6,7,9,10,11,14,15,18,19,38,39,40,41,45,49,53,60,77,81,82,83,84,85,86,87,88,90],[0,1,2,3,4,5,6,7,8,37,60,77,78,79,80,81,82,83,90,91,92,93,94,95,96,99,100,103],[0,6,7,8,9,10,11,14,15,18,19,37,38,39,40,41,53,80,81,82,83,84,85,86,87,88],[0,1,2,3,4,5,6,7,9,10,11,14,15,37,38,39,40,41,45,49,53,60,77,78,79,80,81,90],[0,5,6,7,10,11,37,38,40,41,53,60,61,77,78,79,80,81,82,83,84,85,86,87,88],[0,1,2,3,4,5,6,22,23,25,26,37,38,39,60,61,62,63,64,65,66,67,70,71,74,77,78],[0,3,4,5,6,22,23,24,25,26,29,30,33,34,37,38,39,40,41,63,64,65,66,67,70],[0,24,29,33,41,47,51,53,54,55,56,60,61],[0,5,6,22,24,25,26,29,30,33,34,38,39,40,41,43,49,53,60,61,77,81,82,83,84,85,86,87,88],[0,1,2,3,4,5,6,22,23,37,60,61,62,63,64,65,66,67,70,71,74,77,78,79,80,81,82,83],[0,6,22,23,24,25,26,29,30,33,34,37,38,39,40,41,53,80,81,82,83,84,85,86,87,88],[0,1,2,3,4,5,6,22,24,25,26,29,30,37,38,39,40,41,43,49,53,60,61,77,78,79,80,81],[0,5,6,7,8,9,14,18,22,23,25,26,37,38,40,41,53,60,62,63,85,86,87,88,90,91,92]]},"minPosition",8,[1,-1.1559942960739136,-5.215214729309082,-6.341081142425537],"maxPosition",8,[1,1.1559942960739136,4.961333274841309,-0.08147289603948593]]],-1],0,0,[],[],[]],[[{"base":"2,2,0,0,2,0","rgbe":false,"mipmaps":[{"front":"6f01cf7f-81bf-4a7e-bd5d-0afc19696480@b47c0@e9a6d","back":"6f01cf7f-81bf-4a7e-bd5d-0afc19696480@b47c0@40c10","left":"6f01cf7f-81bf-4a7e-bd5d-0afc19696480@b47c0@8fd34","right":"6f01cf7f-81bf-4a7e-bd5d-0afc19696480@b47c0@74afd","top":"6f01cf7f-81bf-4a7e-bd5d-0afc19696480@b47c0@bb97f","bottom":"6f01cf7f-81bf-4a7e-bd5d-0afc19696480@b47c0@7d38f"}]}],[12],0,[],[],[]],[[{"fmt":"0","w":0,"h":0},-1],[1],0,[],[],[]],[[{"fmt":"0","w":0,"h":0},-1],[1],0,[],[],[]],[[{"fmt":"0","w":0,"h":0},-1],[1],0,[],[],[]],[[{"fmt":"0","w":0,"h":0},-1],[1],0,[],[],[]],[[{"fmt":"0","w":0,"h":0},-1],[1],0,[],[],[]],[[{"fmt":"0","w":0,"h":0},-1],[1],0,[],[],[]],[[{"name":"fail","rect":{"x":0,"y":0,"width":466,"height":309},"offset":{"x":0,"y":0},"originalSize":{"width":466,"height":309},"rotated":false,"capInsets":[0,0,0,0],"packable":true}],[2],0,[0],[7],[55]],[[{"name":"default_sprite_splash","rect":{"x":0,"y":0,"width":2,"height":2},"offset":{"x":0,"y":0},"originalSize":{"width":2,"height":2},"rotated":false,"capInsets":[0,0,0,0],"packable":true}],[2],0,[0],[7],[56]],[[[32,"Boom Long",".mp3",4.493061],-1],0,0,[],[],[]],[[[27,[{"rasterizerState":{},"depthStencilState":{},"blendState":{"targets":[{}]}},{},{}],[{"USE_LIGHTMAP":true},{},{}],[[[{},"mainColor",8,[4,4289054126]],{},{}],11,0,0]]],0,0,[0],[4],[3]],[[[34,"1",[{"rasterizerState":{},"depthStencilState":{},"blendState":{"targets":[{}]}},{},{}],[{"USE_LIGHTMAP":true,"USE_ALBEDO_MAP":true},{},{}],[[[{},"mainTexture",6,0],{},{}],11,0,0]]],0,0,[0,0],[6,4],[57,3]],[[[27,[{"rasterizerState":{},"depthStencilState":{},"blendState":{"targets":[{}]}},{},{}],[{"USE_LIGHTMAP":true},{},{}],[[[{},"mainColor",8,[4,4286290352]],{},{}],11,0,0]]],0,0,[0],[4],[3]],[[[50,"Skin-0",2977473662,["Rex/root","Rex/root/spine0","Rex/root/spine0/spine1","Rex/root/spine0/spine1/spine2","Rex/root/spine0/spine1/spine2/spine3","Rex/root/spine0/spine1/spine2/spine3/neck0","Rex/root/spine0/spine1/spine2/spine3/neck0/neck1","Rex/root/spine0/spine1/spine2/spine3/neck0/neck1/neck2","Rex/root/spine0/spine1/spine2/spine3/neck0/neck1/neck2/head","Rex/root/spine0/spine1/spine2/spine3/neck0/neck1/neck2/head/jaw0","Rex/root/spine0/spine1/spine2/spine3/neck0/neck1/neck2/head/jaw0/jaw1","Rex/root/spine0/spine1/spine2/spine3/neck0/neck1/neck2/head/jaw0/jaw1/jaw1_end","Rex/root/spine0/spine1/spine2/spine3/neck0/neck1/neck2/head/jaw0/tongue0","Rex/root/spine0/spine1/spine2/spine3/neck0/neck1/neck2/head/jaw0/tongue0/tongue1","Rex/root/spine0/spine1/spine2/spine3/neck0/neck1/neck2/head/jaw0/tongue0/tongue1/tongue2","Rex/root/spine0/spine1/spine2/spine3/neck0/neck1/neck2/head/jaw0/tongue0/tongue1/tongue2/tongue3","Rex/root/spine0/spine1/spine2/spine3/neck0/neck1/neck2/head/jaw0/tongue0/tongue1/tongue2/tongue3/tongue3_end","Rex/root/spine0/spine1/spine2/spine3/neck0/neck1/neck2/head/eyes","Rex/root/spine0/spine1/spine2/spine3/neck0/neck1/neck2/head/eyes/left eye","Rex/root/spine0/spine1/spine2/spine3/neck0/neck1/neck2/head/eyes/left eye/left eye_end","Rex/root/spine0/spine1/spine2/spine3/neck0/neck1/neck2/head/eyes/right eye","Rex/root/spine0/spine1/spine2/spine3/neck0/neck1/neck2/head/eyes/right eye/right eye_end","Rex/root/spine0/spine1/spine2/spine3/neck0/neck1/neck2/head/gums0","Rex/root/spine0/spine1/spine2/spine3/neck0/neck1/neck2/head/gums0/gums1","Rex/root/spine0/spine1/spine2/spine3/neck0/neck1/neck2/head/gums0/gums1/gums1_end","Rex/root/spine0/spine1/spine2/spine3/left arm0","Rex/root/spine0/spine1/spine2/spine3/left arm0/left arm1","Rex/root/spine0/spine1/spine2/spine3/left arm0/left arm1/left arm2","Rex/root/spine0/spine1/spine2/spine3/left arm0/left arm1/left arm2/left hand","Rex/root/spine0/spine1/spine2/spine3/left arm0/left arm1/left arm2/left hand/left hand_end","Rex/root/spine0/spine1/spine2/spine3/right arm0","Rex/root/spine0/spine1/spine2/spine3/right arm0/right arm1","Rex/root/spine0/spine1/spine2/spine3/right arm0/right arm1/right arm2","Rex/root/spine0/spine1/spine2/spine3/right arm0/right arm1/right arm2/right hand","Rex/root/spine0/spine1/spine2/spine3/right arm0/right arm1/right arm2/right hand/right hand_end","Rex/root/tail0","Rex/root/tail0/tail1","Rex/root/tail0/tail1/tail2","Rex/root/tail0/tail1/tail2/tail3","Rex/root/tail0/tail1/tail2/tail3/tail4","Rex/root/tail0/tail1/tail2/tail3/tail4/tail5","Rex/root/tail0/tail1/tail2/tail3/tail4/tail5/tail6","Rex/root/tail0/tail1/tail2/tail3/tail4/tail5/tail6/tail7","Rex/root/tail0/tail1/tail2/tail3/tail4/tail5/tail6/tail7/tail8","Rex/root/tail0/tail1/tail2/tail3/tail4/tail5/tail6/tail7/tail8/tail8_end","Rex/root/tail0/tail1/right hips","Rex/root/tail0/tail1/right hips/right leg","Rex/root/tail0/tail1/right hips/right leg/right foot0","Rex/root/tail0/tail1/right hips/right leg/right foot0/right foot1","Rex/root/tail0/tail1/right hips/right leg/right foot0/right foot1/right toe4","Rex/root/tail0/tail1/right hips/right leg/right foot0/right foot1/right toe4/right toe5","Rex/root/tail0/tail1/right hips/right leg/right foot0/right foot1/right toe4/right toe5/right toe5_end","Rex/root/tail0/tail1/right hips/right leg/right foot0/right foot1/right toe0","Rex/root/tail0/tail1/right hips/right leg/right foot0/right foot1/right toe0/right toe1","Rex/root/tail0/tail1/right hips/right leg/right foot0/right foot1/right toe0/right toe1/right toe1_end","Rex/root/tail0/tail1/right hips/right leg/right foot0/right foot1/right toe2","Rex/root/tail0/tail1/right hips/right leg/right foot0/right foot1/right toe2/right toe3","Rex/root/tail0/tail1/right hips/right leg/right foot0/right foot1/right toe2/right toe3/right toe3_end","Rex/root/tail0/tail1/left hips","Rex/root/tail0/tail1/left hips/left leg","Rex/root/tail0/tail1/left hips/left leg/left foot0","Rex/root/tail0/tail1/left hips/left leg/left foot0/left foot1","Rex/root/tail0/tail1/left hips/left leg/left foot0/left foot1/left toe2","Rex/root/tail0/tail1/left hips/left leg/left foot0/left foot1/left toe2/left toe3","Rex/root/tail0/tail1/left hips/left leg/left foot0/left foot1/left toe2/left toe3/left toe3_end","Rex/root/tail0/tail1/left hips/left leg/left foot0/left foot1/left toe4","Rex/root/tail0/tail1/left hips/left leg/left foot0/left foot1/left toe4/left toe5","Rex/root/tail0/tail1/left hips/left leg/left foot0/left foot1/left toe4/left toe5/left toe5_end","Rex/root/tail0/tail1/left hips/left leg/left foot0/left foot1/left toe0","Rex/root/tail0/tail1/left hips/left leg/left foot0/left foot1/left toe0/left toe1","Rex/root/tail0/tail1/left hips/left leg/left foot0/left foot1/left toe0/left toe1/left toe1_end"],[[[7,0.033333323895931244,2.480302629948028e-9,-1.0841751071358617e-16,0,-2.480302629948028e-9,0.033333323895931244,-2.3684751152992507e-16,0,1.0841749747869637e-16,2.3684751152992507e-16,0.033333323895931244,0,-0.00016164299449883401,0.04317420348525047,0.4284820854663849,1],[7,0.033333323895931244,2.485017525089006e-9,-1.0862359780012008e-16,0,-2.485017525089006e-9,0.033333323895931244,-2.3684751152992507e-16,0,1.0862358456523028e-16,2.3684751152992507e-16,0.033333323895931244,0,-0.00016164658882189542,-0.03559775650501251,0.44222700595855713,1],[7,0.033333323895931244,2.489964456842131e-9,-1.0883984928202104e-16,0,-2.489964456842131e-9,0.033333323895931244,-2.3684751152992507e-16,0,1.0883982942968634e-16,2.3684751152992507e-16,0.033333323895931244,0,-0.00016164829139597714,-0.09693480283021927,0.44039615988731384,1],[7,0.033333323895931244,2.484057626261915e-9,-1.0858164981689629e-16,0,-2.484057626261915e-9,0.033333323895931244,-2.3684751152992507e-16,0,1.0858162996456159e-16,2.3684751152992507e-16,0.033333323895931244,0,-0.000161648727953434,-0.1518634855747223,0.4294103980064392,1],[7,0.033333323895931244,2.4882800264691696e-9,-1.0876621035516912e-16,0,-2.4882795823799597e-9,0.03333332762122154,-4.588920635153972e-16,0,1.0876617726794462e-16,4.588921164549564e-16,0.033333323895931244,0,-0.00016164884436875582,-0.19214454293251038,0.4202556312084198,1],[7,0.033333323895931244,2.4897908179610795e-9,-1.0883225245527536e-16,0,-2.4897905959164746e-9,0.03333332762122154,-4.588920635153972e-16,0,1.0883221936805086e-16,4.588921164549564e-16,0.033333323895931244,0,-0.00016165013948921114,-0.2342565506696701,0.4202556312084198,1],[7,0.033333323895931244,2.478193872335055e-9,-1.0832533632356816e-16,0,-2.47819365029045e-9,0.03333332762122154,-4.588920635153972e-16,0,1.0832530323634366e-16,4.588921164549564e-16,0.033333323895931244,0,-0.0001616533554624766,-0.2754530906677246,0.43581876158714294,1],[7,0.033333323895931244,2.484227046295473e-9,-1.0858904812029497e-16,0,-2.484226602206263e-9,0.03333332762122154,-4.588920635153972e-16,0,1.0858901503307046e-16,4.588921164549564e-16,0.033333323895931244,0,-0.00016165694978553802,-0.3131858706474304,0.45698079466819763,1],[7,0.033333323895931244,2.4873649806522735e-9,-1.0872621451819096e-16,0,-2.4873647586076686e-9,0.03333332762122154,-4.588920635153972e-16,0,1.0872618143096646e-16,4.588921164549564e-16,0.033333323895931244,0,-0.0001616607332834974,-0.3475164771080017,0.4799630343914032,1],[7,0.033333323895931244,2.4853654689849236e-9,-1.0863881130594616e-16,0,-2.4853650248957138e-9,0.03333332762122154,-4.588920635153972e-16,0,1.0863877821872165e-16,4.588921164549564e-16,0.033333323895931244,0,-0.00016165342822205275,-0.37143614888191223,0.4123653173446655,1],[7,0.033333323895931244,2.485364580806504e-9,-1.0863877821872165e-16,0,-2.485364358761899e-9,0.03333332762122154,-4.588920635153972e-16,0,1.0863874513149715e-16,4.588921164549564e-16,0.033333323895931244,0,-0.00016165054694283754,-0.5083661079406738,0.35424885153770447,1],[7,0.033333323895931244,2.485364580806504e-9,-1.0863877821872165e-16,0,-2.485364358761899e-9,0.03333332762122154,-4.588920635153972e-16,0,1.0863874513149715e-16,4.588921164549564e-16,0.033333323895931244,0,-0.00016166301793418825,-0.6025660634040833,0.35424885153770447,1],[7,0.033333323895931244,2.4706745538338737e-9,-1.0799665445280899e-16,0,-2.4706743317892688e-9,0.03333332762122154,-4.588920635153972e-16,0,1.0799662136558449e-16,4.588921164549564e-16,0.033333323895931244,0,-4.341822190667699e-8,-0.406871497631073,0.394582599401474,1],[7,0.033333323895931244,2.4849602375809354e-9,-1.0862109640594772e-16,0,-2.4849597934917256e-9,0.03333332762122154,-4.588920635153972e-16,0,1.0862106331872322e-16,4.588921164549564e-16,0.033333323895931244,0,-4.41181882138153e-8,-0.44861865043640137,0.3912619650363922,1],[7,0.033333323895931244,2.4849571289564665e-9,-1.0862096405704971e-16,0,-2.4849569069118616e-9,0.03333332762122154,-4.588920635153972e-16,0,1.0862093096982521e-16,4.588921164549564e-16,0.033333323895931244,0,-4.3208743250033876e-8,-0.4728791117668152,0.37831467390060425,1],[7,0.033333323895931244,2.4849535762427877e-9,-1.08620811855817e-16,0,-2.4849533541981828e-9,0.03333332762122154,-4.588920635153972e-16,0,1.086207787685925e-16,4.588921164549564e-16,0.033333323895931244,0,-4.4046348790516276e-8,-0.48885658383369446,0.3777938485145569,1],[7,0.033333323895931244,2.4849533541981828e-9,-1.086207986209272e-16,0,-2.484953132153578e-9,0.03333332762122154,-4.588920635153972e-16,0,1.086207655337027e-16,4.588921164549564e-16,0.033333323895931244,0,-4.6157840216665136e-8,-0.5048425793647766,0.3777938783168793,1],[7,-0.033333323895931244,-8.374010818101851e-9,-3.6603978244178874e-16,0,8.374009929923432e-9,-0.03333332762122154,-4.481711675019995e-16,0,-3.6603965009289073e-16,-4.481713263206771e-16,0.033333323895931244,0,0.0001557466312078759,0.4250625967979431,0.4640948176383972,1],[7,5.319812146353797e-9,-0.03333332762122154,3.0220885793852403e-9,0,-3.979460094782894e-10,3.0220885793852403e-9,0.03333332762122154,0,-0.033333323895931244,-5.319813034532217e-9,-3.9794556538907955e-10,0,-0.46410563588142395,0.04114333540201187,-0.42507076263427734,1],[7,5.3202615646341656e-9,-0.03333332762122154,3.9689442843382494e-9,0,1.4570449291539944e-9,3.968944728427459e-9,0.03333332762122154,0,-0.033333323895931244,-5.320262008723375e-9,1.4570457063101117e-9,0,-0.4641057252883911,-3.424052152922741e-8,-0.42507076263427734,1],[7,2.911661134419319e-9,-0.033333323895931244,-5.430239813364324e-9,0,0.03333332762122154,2.9116613564639238e-9,-5.033193417602888e-9,0,5.033194749870518e-9,-5.430239369275114e-9,0.033333323895931244,0,-0.4250706434249878,-0.041143398731946945,0.46410563588142395,1],[7,3.858518393684562e-9,-0.033333323895931244,-5.430688343466272e-9,0,0.03333332762122154,3.858518393684562e-9,-5.0331920853352585e-9,0,5.033193417602888e-9,-5.4306878993770624e-9,0.033333323895931244,0,-0.4250706434249878,-0.0822867751121521,0.4641057252883911,1],[7,0.033333323895931244,2.484544348035911e-9,-1.0860292490225116e-16,0,-2.484543903946701e-9,0.03333332762122154,-4.588920635153972e-16,0,1.0860288519758175e-16,4.588921164549564e-16,0.033333323895931244,0,-0.00016546339611522853,-0.4403172433376312,0.42262622714042664,1],[7,0.033333323895931244,2.4846069646144997e-9,-1.0860565790699503e-16,0,-2.48460652052529e-9,0.03333332762122154,-4.588920635153972e-16,0,1.0860562481977053e-16,4.588921164549564e-16,0.033333323895931244,0,-0.0001654639490880072,-0.5390945672988892,0.4191979467868805,1],[7,0.033333323895931244,2.4846069646144997e-9,-1.0860565790699503e-16,0,-2.48460652052529e-9,0.03333332762122154,-4.588920635153972e-16,0,1.0860562481977053e-16,4.588921164549564e-16,0.033333323895931244,0,-0.00016547695850022137,-0.6379313468933105,0.41919803619384766,1],[7,-1.062906651583262e-9,-0.033333323895931244,-6.023036736024778e-9,0,0.03333332762122154,-1.0629056523825398e-9,-5.033192973513678e-9,0,5.033193417602888e-9,-6.023036736024778e-9,0.033333323895931244,0,-0.1928120106458664,0.05728321895003319,0.32155555486679077,1],[7,1.389238057925013e-9,-0.033333323895931244,-6.023036736024778e-9,0,0.03333332762122154,1.3892388350811302e-9,-5.033193861692098e-9,0,5.033194749870518e-9,-6.0230362919355684e-9,0.033333323895931244,0,-0.20019303262233734,0.06177392601966858,0.26571139693260193,1],[7,1.389237835880408e-9,-0.033333323895931244,-3.526406944232008e-9,0,0.03333332762122154,1.3892381689473154e-9,-5.033193417602888e-9,0,5.033194305781308e-9,-3.526406722187403e-9,0.033333323895931244,0,-0.22010472416877747,0.07611674070358276,0.24454094469547272,1],[7,5.398876457007873e-9,-0.03333332762122154,1.3892391681480376e-9,0,-3.974967022202236e-10,1.3892390571257351e-9,0.03333332762122154,0,-0.033333323895931244,-5.398877345186293e-9,-3.974965356867699e-10,0,-0.25137731432914734,0.0759626254439354,-0.25119367241859436,1],[7,5.4306878993770624e-9,-0.03333332762122154,1.6471987107635755e-9,0,1.4570438189309698e-9,1.6471989328081804e-9,0.03333332762122154,0,-0.033333323895931244,-5.430688787555482e-9,1.4570442630201796e-9,0,-0.2513773441314697,0.044130533933639526,-0.251193642616272,1],[7,6.884378844773664e-9,-0.033333323895931244,-6.02303140695426e-9,0,0.03333332762122154,6.884378844773664e-9,-5.033192973513678e-9,0,5.033194749870518e-9,-6.02303051877584e-9,0.033333323895931244,0,-0.1928120106458664,-0.057293739169836044,0.32155564427375793,1],[7,3.819200511401277e-9,-0.033333323895931244,-6.02303140695426e-9,0,0.03333332762122154,3.819200955490487e-9,-5.033193417602888e-9,0,5.033194749870518e-9,-6.02303096286505e-9,0.033333323895931244,0,-0.20019306242465973,-0.06178443133831024,0.26571136713027954,1],[7,3.819200511401277e-9,-0.033333323895931244,-6.02303140695426e-9,0,0.03333332762122154,3.819200955490487e-9,-5.033193417602888e-9,0,5.033194749870518e-9,-6.02303096286505e-9,0.033333323895931244,0,-0.22010475397109985,-0.07612723112106323,0.24454088509082794,1],[7,3.819200511401277e-9,-0.033333323895931244,-5.398875568829453e-9,0,0.03333332762122154,3.819200955490487e-9,-5.033192973513678e-9,0,5.033194305781308e-9,-5.3988746806510335e-9,0.033333323895931244,0,-0.25119367241859436,-0.07597312331199646,0.2513773739337921,1],[7,3.96894339615983e-9,-0.033333323895931244,-5.4306878993770624e-9,0,0.03333332762122154,3.96894339615983e-9,-5.033192973513678e-9,0,5.033194305781308e-9,-5.4306874552878526e-9,0.033333323895931244,0,-0.25119367241859436,-0.10780522227287292,0.2513773739337921,1],[7,0.033333323895931244,2.484769501265305e-9,-1.0861276504281809e-16,0,-2.484769501265305e-9,0.033333323895931244,-2.3684751152992507e-16,0,1.0861275180792829e-16,2.3684751152992507e-16,0.033333323895931244,0,-0.00016163841064553708,0.08652326464653015,0.405289888381958,1],[7,0.033333323895931244,2.4833637368715245e-9,-1.0855131544947275e-16,0,-2.4833637368715245e-9,0.033333323895931244,-2.3684751152992507e-16,0,1.0855129559713805e-16,2.3684751152992507e-16,0.033333323895931244,0,-0.00016163414693437517,0.14572422206401825,0.38484427332878113,1],[7,0.033333323895931244,-4.313658319432534e-9,-1.2208202226915432e-9,0,4.483084570239271e-9,0.032073576003313065,0.009077232331037521,0,-2.8120003600251196e-16,-0.009077232331037521,0.032073576003313065,0,-0.00016161741223186255,0.01801634021103382,0.3661743402481079,1],[7,0.033333323895931244,8.17689860266313e-10,5.4876457544761337e-11,0,-8.195291112400582e-10,0.03325850889086723,0.0022320325952023268,0,3.850576044015587e-17,-0.0022320325952023268,0.03325850889086723,0,-0.00016163648979272693,0.14941318333148956,0.35027825832366943,1],[7,0.033333323895931244,-7.811585156503043e-9,-1.2471960963988948e-10,0,7.812579916333107e-9,0.033329077064991,0.0005321328062564135,0,-3.345446622431505e-16,-0.0005321328062564135,0.033329077064991,0,-0.00016157145728357136,0.23450355231761932,0.34087032079696655,1],[7,0.033333323895931244,-2.2908823726908167e-9,-3.6096625688486483e-11,0,2.2911668118297257e-9,0.03332918882369995,0.0005251576658338308,0,-9.816094095651656e-17,-0.0005251576658338308,0.03332918509840965,0,-0.00016159955703187734,0.3071669936180115,0.33934107422828674,1],[7,0.033333323895931244,2.4841542156650576e-9,-1.07965618636226e-16,0,-2.4841542156650576e-9,0.033333323895931244,8.322325467657876e-12,0,1.0858583865951826e-16,-8.322325467657876e-12,0.033333320170640945,0,-0.0001616429362911731,0.3663313686847687,0.3398728668689728,1],[7,0.033333323895931244,-1.293227480658743e-8,-2.1532500782406316e-10,0,1.2934065374281545e-8,0.03332870081067085,0.000554931175429374,0,-5.871444454931638e-16,-0.000554931175429374,0.03332870081067085,0,-0.00016143513494171202,0.4358961582183838,0.3412432372570038,1],[7,0.033333323895931244,2.7244528855163708e-9,1.1417094353260993e-10,0,-2.7268436397775986e-9,0.03330409526824951,0.0013956432230770588,0,1.2304007209260867e-16,-0.0013956434559077024,0.03330409526824951,0,-0.00016164086991921067,0.48958319425582886,0.34827977418899536,1],[7,0.033333323895931244,-1.2378860603234898e-8,-2.0611072570897448e-10,0,1.238057478758492e-8,0.03332870081067085,0.0005549316410906613,0,-5.627872719410375e-16,-0.0005549316410906613,0.03332870081067085,0,-0.00016144812980201095,0.43583518266677856,0.3373910188674927,1],[7,2.9156970171584362e-9,-0.033333323895931244,-5.523157931008882e-9,0,0.033333323895931244,2.915697905336856e-9,-5.033192529424468e-9,0,5.033192973513678e-9,-5.523157486919672e-9,0.033333323895931244,0,0.09011320024728775,-0.07255298644304276,0.3774973154067993,1],[7,1.8211713248561523e-9,-0.033333323895931244,-5.523157931008882e-9,0,0.033333323895931244,1.821172213034572e-9,-5.033191197156839e-9,0,5.033191641246049e-9,-5.523157486919672e-9,0.033333323895931244,0,0.011402532458305359,-0.09528148919343948,0.22350415587425232,1],[7,-1.888727174659266e-9,-0.033333323895931244,-5.523157931008882e-9,0,0.033333323895931244,-1.8887262864808463e-9,-5.033191197156839e-9,0,5.033190753067629e-9,-5.523157931008882e-9,0.033333323895931244,0,0.09972560405731201,-0.10041382163763046,0.10834702849388123,1],[7,3.456798736145572e-10,-0.03333332762122154,-5.523157931008882e-9,0,0.033333323895931244,3.456807617929769e-10,-5.0331920853352585e-9,0,5.0331920853352585e-9,-5.523158375098092e-9,0.033333323895931244,0,0.06732991337776184,-0.10114700347185135,0.02902303636074066,1],[7,3.3250813213925312e-9,-0.03333332762122154,-6.9812475800290485e-9,0,-3.9749606384198444e-10,-6.981248468207468e-9,0.033333323895931244,0,-0.033333323895931244,-3.325081765481741e-9,-3.9749678548695044e-10,0,-0.016697196289896965,-0.13297221064567566,0.047025166451931,1],[7,3.9647560790001535e-9,-0.03333332762122154,-4.050475954642252e-9,0,1.4570461503993215e-9,-4.050476398731462e-9,0.033333323895931244,0,-0.033333323895931244,-3.964756967178573e-9,1.4570457063101117e-9,0,-0.01671072281897068,-0.1485200673341751,-0.004931772593408823,1],[7,3.9653040850851085e-9,-0.03333332762122154,-4.360855232476979e-9,0,1.457046261421624e-9,-4.360855676566189e-9,0.033333323895931244,0,-0.033333323895931244,-3.965304529174318e-9,1.4570457063101117e-9,0,-0.01671072281897068,-0.202753484249115,-0.0049317823722958565,1],[7,4.801931297038209e-9,-0.03333332762122154,-6.866594848276009e-9,0,-3.9749697977597975e-10,-6.866595736454428e-9,0.033333323895931244,0,-0.033333323895931244,-4.8019321852166286e-9,-3.974979789767019e-10,0,-0.016729263588786125,-0.07252659648656845,0.04612816870212555,1],[7,3.987733254717796e-9,-0.03333332762122154,-9.75150360460475e-9,0,1.4570464834662289e-9,-9.75150538096159e-9,0.033333323895931244,0,-0.033333323895931244,-3.9877341428962154e-9,1.4570453732432043e-9,0,-0.016697198152542114,-0.05831163749098778,-0.007102004252374172,1],[7,3.988232855078877e-9,-0.03333332762122154,-7.159779435994551e-9,0,1.4570461503993215e-9,-7.159780324172971e-9,0.033333323895931244,0,-0.033333323895931244,-3.988233743257297e-9,1.4570452622209018e-9,0,-0.016697200015187263,-0.1134071797132492,-0.007102002389729023,1],[7,2.8877251700976103e-9,-0.03333332762122154,-4.252135532567536e-9,0,0.033333323895931244,2.887726280320635e-9,-5.033191641246049e-9,0,5.0331920853352585e-9,-4.252135532567536e-9,0.033333323895931244,0,0.04079709202051163,-0.1005169004201889,0.01658293791115284,1],[7,0.03333332762122154,-3.101218726264676e-10,1.354421481809326e-17,0,3.1012190038204324e-10,0.033333323895931244,1.2516576317067596e-12,0,-1.3555861521118007e-17,-1.2516576317067596e-12,0.033333323895931244,0,0.10401155799627304,-0.021631760522723198,0.016683386638760567,1],[7,0.03333332762122154,-3.110349755530706e-10,1.3595774640034915e-17,0,3.110350310642218e-10,0.033333323895931244,-1.5097752485230748e-25,0,-1.3595777121576753e-17,-1.5097752485230748e-25,0.033333323895931244,0,0.10401155054569244,-0.08415842056274414,0.016683388501405716,1],[7,2.9156970171584362e-9,-0.033333323895931244,-5.409258374555748e-9,0,0.033333323895931244,2.915697905336856e-9,-5.033191641246049e-9,0,5.0331920853352585e-9,-5.409257930466538e-9,0.033333323895931244,0,0.0901130735874176,0.0725424513220787,0.3774973154067993,1],[7,4.010223708661442e-9,-0.033333323895931244,-5.409258374555748e-9,0,0.033333323895931244,4.010224596839862e-9,-5.033191197156839e-9,0,5.033191641246049e-9,-5.409257930466538e-9,0.033333323895931244,0,0.01140247005969286,0.09527091681957245,0.22350433468818665,1],[7,3.003257642575363e-10,-0.033333323895931244,-5.409258374555748e-9,0,0.033333323895931244,3.0032656916922917e-10,-5.033191641246049e-9,0,5.033191641246049e-9,-5.409258374555748e-9,0.033333323895931244,0,0.09972555190324783,0.10040313750505447,0.10834727436304092,1],[7,3.003249871014191e-10,-0.03333332762122154,-5.409258374555748e-9,0,0.033333323895931244,3.0032584752426317e-10,-5.0331920853352585e-9,0,5.0331920853352585e-9,-5.4092588186449575e-9,0.033333323895931244,0,0.06732984632253647,0.10113637894392014,0.029023244976997375,1],[7,0.03333332762122154,2.2659940590585848e-9,-9.786641833633338e-17,0,-2.2659940590585848e-9,0.03333332762122154,1.7407188537821305e-11,0,9.904976968576194e-17,-1.7407192007268257e-11,0.033333323895931244,0,-0.1005062609910965,0.041224174201488495,0.016583116725087166,1],[7,0.03333332762122154,2.109353358648036e-9,-9.234965966364162e-17,0,-2.109353358648036e-9,0.03333332762122154,-2.321253649364974e-12,0,9.22027854740767e-17,2.3212538662054083e-12,0.033333323895931244,0,-0.10396330058574677,-0.021622024476528168,0.016688009724020958,1],[7,0.03333332762122154,2.1868487021237115e-9,-9.559019596159976e-17,0,-2.1868487021237115e-9,0.03333333134651184,-1.0362078960306467e-16,0,9.559020257904466e-17,1.0362080945539937e-16,0.033333323895931244,0,-0.10396328568458557,-0.08456333726644516,0.016688011586666107,1],[7,3.952508542681699e-9,-0.03333332762122154,-6.9834307225846715e-9,0,-3.974968965092529e-10,-6.983431610763091e-9,0.033333323895931244,0,-0.033333323895931244,-3.9525089867709085e-9,-3.974977291765214e-10,0,-0.016688019037246704,0.1321132779121399,0.04702858254313469,1],[7,3.973936735235384e-9,-0.03333332762122154,-6.983429390317042e-9,0,1.4570459283547166e-9,-6.983430278495462e-9,0.033333323895931244,0,-0.033333323895931244,-3.9739376234138035e-9,1.4570450401762969e-9,0,-0.016688020899891853,0.14867481589317322,-0.004951657727360725,1],[7,3.973936291146174e-9,-0.03333332762122154,-7.2419834573622666e-9,0,1.4570461503993215e-9,-7.241984345540686e-9,0.033333323895931244,0,-0.033333323895931244,-3.973937179324594e-9,1.4570452622209018e-9,0,-0.016688024625182152,0.09411996603012085,-0.00495166378095746,1],[7,3.979370610807109e-9,-0.03333332762122154,-8.279011254330726e-9,0,-3.9749606384198444e-10,-8.279013030687565e-9,0.033333323895931244,0,-0.033333323895931244,-3.979371054896319e-9,-3.97497035287131e-10,0,-0.016688022762537003,0.07441543787717819,0.04612430930137634,1],[7,4.000798803360794e-9,-0.03333332762122154,-8.279011254330726e-9,0,1.4570467055108338e-9,-8.279012142509146e-9,0.033333323895931244,0,-0.033333323895931244,-4.000799691539214e-9,1.4570457063101117e-9,0,-0.016688019037246704,0.058364950120449066,-0.007087374571710825,1],[7,4.000798803360794e-9,-0.03333332762122154,-7.087526121551946e-9,0,1.4570463724439264e-9,-7.0875270097303655e-9,0.033333323895931244,0,-0.033333323895931244,-4.000799691539214e-9,1.4570455952878092e-9,0,-0.016688017174601555,0.002785255666822195,-0.007087380159646273,1]],8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8]]],0,0,[],[],[]],[[[14,".bin",420170756,[{"primitives":[{"primitiveMode":7,"jointMapIndex":0,"vertexBundelIndices":[0],"indexView":{"offset":45432,"length":2778,"count":1389,"stride":2}},{"primitiveMode":7,"jointMapIndex":1,"vertexBundelIndices":[1],"indexView":{"offset":84714,"length":1752,"count":876,"stride":2}},{"primitiveMode":7,"jointMapIndex":2,"vertexBundelIndices":[2],"indexView":{"offset":106266,"length":774,"count":387,"stride":2}},{"primitiveMode":7,"jointMapIndex":3,"vertexBundelIndices":[3],"indexView":{"offset":114312,"length":234,"count":117,"stride":2}},{"primitiveMode":7,"jointMapIndex":4,"vertexBundelIndices":[4],"indexView":{"offset":144930,"length":1656,"count":828,"stride":2}},{"primitiveMode":7,"jointMapIndex":4,"vertexBundelIndices":[5],"indexView":{"offset":148316,"length":384,"count":96,"stride":4}}],"vertexBundles":[{"view":{"offset":0,"length":45432,"count":631,"stride":72},"attributes":[{"name":"a_position","format":32,"isNormalized":false},{"name":"a_normal","format":32,"isNormalized":false},{"name":"a_texCoord","format":21,"isNormalized":false},{"name":"a_tangent","format":44,"isNormalized":false},{"name":"a_joints","format":42,"isNormalized":false},{"name":"a_weights","format":44,"isNormalized":false}]},{"view":{"offset":48210,"length":36504,"count":507,"stride":72},"attributes":[{"name":"a_position","format":32,"isNormalized":false},{"name":"a_normal","format":32,"isNormalized":false},{"name":"a_texCoord","format":21,"isNormalized":false},{"name":"a_tangent","format":44,"isNormalized":false},{"name":"a_joints","format":42,"isNormalized":false},{"name":"a_weights","format":44,"isNormalized":false}]},{"view":{"offset":86466,"length":19800,"count":275,"stride":72},"attributes":[{"name":"a_position","format":32,"isNormalized":false},{"name":"a_normal","format":32,"isNormalized":false},{"name":"a_texCoord","format":21,"isNormalized":false},{"name":"a_tangent","format":44,"isNormalized":false},{"name":"a_joints","format":42,"isNormalized":false},{"name":"a_weights","format":44,"isNormalized":false}]},{"view":{"offset":107040,"length":7272,"count":101,"stride":72},"attributes":[{"name":"a_position","format":32,"isNormalized":false},{"name":"a_normal","format":32,"isNormalized":false},{"name":"a_texCoord","format":21,"isNormalized":false},{"name":"a_tangent","format":44,"isNormalized":false},{"name":"a_joints","format":42,"isNormalized":false},{"name":"a_weights","format":44,"isNormalized":false}]},{"view":{"offset":114546,"length":30384,"count":422,"stride":72},"attributes":[{"name":"a_position","format":32,"isNormalized":false},{"name":"a_normal","format":32,"isNormalized":false},{"name":"a_texCoord","format":21,"isNormalized":false},{"name":"a_tangent","format":44,"isNormalized":false},{"name":"a_joints","format":42,"isNormalized":false},{"name":"a_weights","format":44,"isNormalized":false}]},{"view":{"offset":146586,"length":1728,"count":24,"stride":72},"attributes":[{"name":"a_position","format":32,"isNormalized":false},{"name":"a_normal","format":32,"isNormalized":false},{"name":"a_texCoord","format":21,"isNormalized":false},{"name":"a_tangent","format":44,"isNormalized":false},{"name":"a_joints","format":42,"isNormalized":false},{"name":"a_weights","format":44,"isNormalized":false}]}],"jointMaps":[[0,1,2,3,4,5,6,7,8,9,22,25,26,27,35,36,37,38,39,40,41,42,43,58,59,60,61,62,65,68],[0,1,2,3,4,5,6,7,8,9,22,30,31,32,35,36,37,38,39,40,41,42,43,45,46,47,48,49,52,55],[0,1,2,3,4,5,6,7,8,9,22,30,31,32,35,36,37,38,39,45,46,47,48,49,52,55,58],[0,1,2,3,4,5,6,7,8,9,30,31,32,35,36,37,38,39,40,41,42,43,45,46,47,49,55,58],[0,1,2,3,5,8,9,12,13,14,15,18,20,25,26,30,31,36,45,46,47,49,58,59,60,65]]},"minPosition",8,[1,-4.758838653564453,-15.821130752563477,-15.441506385803223],"maxPosition",8,[1,4.758838653564453,16.186349868774414,0.15424422919750214]]],-1],0,0,[],[],[]],[[{"name":"TryAgain","rect":{"x":0,"y":0,"width":442,"height":148},"offset":{"x":0,"y":0},"originalSize":{"width":442,"height":148},"rotated":false,"capInsets":[0,0,0,0],"packable":true}],[2],0,[0],[7],[58]],[[[34,"1",[{"rasterizerState":{},"depthStencilState":{},"blendState":{"targets":[{}]}},{},{}],[{"USE_LIGHTMAP":true,"USE_ALBEDO_MAP":true},{},{}],[[[{},"mainTexture",6,0],{},{}],11,0,0]]],0,0,[0,0],[6,4],[59,3]],[[[90,[{},{},{}],[{"rasterizerState":{},"depthStencilState":{},"blendState":{"targets":[{}]}},{},{}],[{"USE_LIGHTMAP":true},{},{}]]],0,0,[0],[4],[3]],[[[89]],0,0,[0],[4],[3]],[[[27,[{"rasterizerState":{},"depthStencilState":{},"blendState":{"targets":[{}]}},{},{}],[{"USE_LIGHTMAP":true},{},{}],[[[{},"mainColor",8,[4,4286356144]],{},{}],11,0,0]]],0,0,[0],[4],[3]],[[{"name":"TAP TO START","rect":{"x":0,"y":0,"width":445,"height":60},"offset":{"x":0,"y":0},"originalSize":{"width":445,"height":60},"rotated":false,"capInsets":[0,0,0,0],"packable":true}],[2],0,[0],[7],[60]],[[{"base":"2,2,0,0,2,0","rgbe":true,"mipmaps":[{"front":"d032ac98-05e1-4090-88bb-eb640dcb5fc1@b47c0@e9a6d","back":"d032ac98-05e1-4090-88bb-eb640dcb5fc1@b47c0@40c10","left":"d032ac98-05e1-4090-88bb-eb640dcb5fc1@b47c0@8fd34","right":"d032ac98-05e1-4090-88bb-eb640dcb5fc1@b47c0@74afd","top":"d032ac98-05e1-4090-88bb-eb640dcb5fc1@b47c0@bb97f","bottom":"d032ac98-05e1-4090-88bb-eb640dcb5fc1@b47c0@7d38f"}]}],[12],0,[],[],[]],[[{"fmt":"0","w":0,"h":0},-1],[1],0,[],[],[]],[[{"fmt":"0","w":0,"h":0},-1],[1],0,[],[],[]],[[{"fmt":"0","w":0,"h":0},-1],[1],0,[],[],[]],[[{"fmt":"0","w":0,"h":0},-1],[1],0,[],[],[]],[[{"fmt":"0","w":0,"h":0},-1],[1],0,[],[],[]],[[{"fmt":"0","w":0,"h":0},-1],[1],0,[],[],[]],[[[58,"builtin-particle",[{"hash":2554907268,"name":"builtin-particle|particle-vs-legacy:lpvs_main|tinted-fs:add","blocks":[{"name":"Constants","stageFlags":1,"binding":0,"members":[{"name":"mainTiling_Offset","type":16,"count":1},{"name":"frameTile_velLenScale","type":16,"count":1},{"name":"scale","type":16,"count":1},{"name":"nodeRotation","type":16,"count":1}],"defines":[]},{"name":"FragConstants","stageFlags":16,"binding":1,"members":[{"name":"tintColor","type":16,"count":1}],"defines":[]}],"samplerTextures":[{"name":"mainTexture","type":28,"count":1,"stageFlags":16,"binding":2,"defines":[]}],"samplers":[],"textures":[],"buffers":[],"images":[],"subpassInputs":[],"attributes":[{"name":"a_position","format":32,"location":0,"defines":[]},{"name":"a_texCoord","format":32,"location":1,"defines":[]},{"name":"a_texCoord1","format":32,"location":2,"defines":[]},{"name":"a_texCoord2","format":32,"location":3,"defines":[]},{"name":"a_color","format":44,"location":4,"defines":[]},{"name":"a_color1","format":32,"location":8,"defines":["CC_RENDER_MODE"]},{"name":"a_texCoord3","format":32,"location":6,"defines":["CC_RENDER_MODE"]},{"name":"a_normal","format":32,"location":7,"defines":["CC_RENDER_MODE"]}],"varyings":[{"name":"uv","type":14,"count":1,"stageFlags":17,"location":0,"defines":[]},{"name":"color","type":16,"count":1,"stageFlags":17,"location":1,"defines":[]}],"fragColors":[{"name":"cc_FragColor","typename":"vec4","type":16,"count":1,"stageFlags":16,"location":0,"defines":[]}],"glsl4":{"vert":"\nprecision highp float;\nvec4 quaternionFromAxis (vec3 xAxis,vec3 yAxis,vec3 zAxis){\n  mat3 m = mat3(xAxis,yAxis,zAxis);\n  float trace = m[0][0] + m[1][1] + m[2][2];\n  vec4 quat;\n  if (trace > 0.) {\n    float s = 0.5 / sqrt(trace + 1.0);\n    quat.w = 0.25 / s;\n    quat.x = (m[2][1] - m[1][2]) * s;\n    quat.y = (m[0][2] - m[2][0]) * s;\n    quat.z = (m[1][0] - m[0][1]) * s;\n  } else if ((m[0][0] > m[1][1]) && (m[0][0] > m[2][2])) {\n    float s = 2.0 * sqrt(1.0 + m[0][0] - m[1][1] - m[2][2]);\n    quat.w = (m[2][1] - m[1][2]) / s;\n    quat.x = 0.25 * s;\n    quat.y = (m[0][1] + m[1][0]) / s;\n    quat.z = (m[0][2] + m[2][0]) / s;\n  } else if (m[1][1] > m[2][2]) {\n    float s = 2.0 * sqrt(1.0 + m[1][1] - m[0][0] - m[2][2]);\n    quat.w = (m[0][2] - m[2][0]) / s;\n    quat.x = (m[0][1] + m[1][0]) / s;\n    quat.y = 0.25 * s;\n    quat.z = (m[1][2] + m[2][1]) / s;\n  } else {\n    float s = 2.0 * sqrt(1.0 + m[2][2] - m[0][0] - m[1][1]);\n    quat.w = (m[1][0] - m[0][1]) / s;\n    quat.x = (m[0][2] + m[2][0]) / s;\n    quat.y = (m[1][2] + m[2][1]) / s;\n    quat.z = 0.25 * s;\n  }\n  float len = quat.x * quat.x + quat.y * quat.y + quat.z * quat.z + quat.w * quat.w;\n  if (len > 0.) {\n    len = 1. / sqrt(len);\n    quat.x = quat.x * len;\n    quat.y = quat.y * len;\n    quat.z = quat.z * len;\n    quat.w = quat.w * len;\n  }\n  return quat;\n}\nvec4 quaternionFromEuler (vec3 angle){\n  float x = angle.x / 2.;\n  float y = angle.y / 2.;\n  float z = angle.z / 2.;\n  float sx = sin(x);\n  float cx = cos(x);\n  float sy = sin(y);\n  float cy = cos(y);\n  float sz = sin(z);\n  float cz = cos(z);\n  vec4 quat = vec4(0);\n  quat.x = sx * cy * cz + cx * sy * sz;\n  quat.y = cx * sy * cz + sx * cy * sz;\n  quat.z = cx * cy * sz - sx * sy * cz;\n  quat.w = cx * cy * cz - sx * sy * sz;\n  return quat;\n}\nmat4 matrixFromRT (vec4 q, vec3 p){\n  float x2 = q.x + q.x;\n  float y2 = q.y + q.y;\n  float z2 = q.z + q.z;\n  float xx = q.x * x2;\n  float xy = q.x * y2;\n  float xz = q.x * z2;\n  float yy = q.y * y2;\n  float yz = q.y * z2;\n  float zz = q.z * z2;\n  float wx = q.w * x2;\n  float wy = q.w * y2;\n  float wz = q.w * z2;\n  return mat4(\n    1. - (yy + zz), xy + wz, xz - wy, 0,\n    xy - wz, 1. - (xx + zz), yz + wx, 0,\n    xz + wy, yz - wx, 1. - (xx + yy), 0,\n    p.x, p.y, p.z, 1\n  );\n}\nmat4 matFromRTS (vec4 q, vec3 t, vec3 s){\n  float x = q.x, y = q.y, z = q.z, w = q.w;\n  float x2 = x + x;\n  float y2 = y + y;\n  float z2 = z + z;\n  float xx = x * x2;\n  float xy = x * y2;\n  float xz = x * z2;\n  float yy = y * y2;\n  float yz = y * z2;\n  float zz = z * z2;\n  float wx = w * x2;\n  float wy = w * y2;\n  float wz = w * z2;\n  float sx = s.x;\n  float sy = s.y;\n  float sz = s.z;\n  return mat4((1. - (yy + zz)) * sx, (xy + wz) * sx, (xz - wy) * sx, 0,\n    (xy - wz) * sy, (1. - (xx + zz)) * sy, (yz + wx) * sy, 0,\n    (xz + wy) * sz, (yz - wx) * sz, (1. - (xx + yy)) * sz, 0,\n    t.x, t.y, t.z, 1);\n}\nvec4 quatMultiply (vec4 a, vec4 b){\n  vec4 quat;\n  quat.x = a.x * b.w + a.w * b.x + a.y * b.z - a.z * b.y;\n  quat.y = a.y * b.w + a.w * b.y + a.z * b.x - a.x * b.z;\n  quat.z = a.z * b.w + a.w * b.z + a.x * b.y - a.y * b.x;\n  quat.w = a.w * b.w - a.x * b.x - a.y * b.y - a.z * b.z;\n  return quat;\n}\nvoid rotateVecFromQuat (inout vec3 v, vec4 q){\n  float ix = q.w * v.x + q.y * v.z - q.z * v.y;\n  float iy = q.w * v.y + q.z * v.x - q.x * v.z;\n  float iz = q.w * v.z + q.x * v.y - q.y * v.x;\n  float iw = -q.x * v.x - q.y * v.y - q.z * v.z;\n  v.x = ix * q.w + iw * -q.x + iy * -q.z - iz * -q.y;\n  v.y = iy * q.w + iw * -q.y + iz * -q.x - ix * -q.z;\n  v.z = iz * q.w + iw * -q.z + ix * -q.y - iy * -q.x;\n}\nvec3 rotateInLocalSpace (vec3 pos, vec3 xAxis, vec3 yAxis, vec3 zAxis, vec4 q){\n  vec4 viewQuat = quaternionFromAxis(xAxis, yAxis, zAxis);\n  vec4 rotQuat = quatMultiply(viewQuat, q);\n  rotateVecFromQuat(pos, rotQuat);\n  return pos;\n}\nmat3 quatToMat3(vec4 q) {\n  vec3 m0 = vec3(\n    1.0 - 2.0 * q.y * q.y - 2.0 * q.z * q.z,\n    2.0 * q.x * q.y + 2.0 * q.w * q.z,\n    2.0 * q.x * q.z - 2.0 * q.w * q.y);\n\tvec3 m1 = vec3(\n    2.0 * q.x * q.y - 2.0 * q.w * q.z,\n    1.0 - 2.0 * q.x * q.x - 2.0 * q.z * q.z,\n    2.0 * q.y * q.z + 2.0 * q.w * q.x);\n\tvec3 m2 = vec3(\n    2.0 * q.x * q.z + 2.0 * q.w * q.y,\n    2.0 * q.y * q.z - 2.0 * q.w * q.x,\n    1.0 - 2.0 * q.x * q.x - 2.0 * q.y * q.y);\n  return mat3(m0, m1, m2);\n}\nvec4 mat3ToQuat(mat3 mat) {\n  float tr = mat[0][0] + mat[1][1] + mat[2][2];\n\tfloat qw, qx, qy, qz;\n  if (tr > 0.0) {\n    float S = sqrt(tr + 1.0) * 2.0;\n\t  float invS = 1.0 / S;\n\t  qw = 0.25 * S;\n\t  qx = (mat[1][2] - mat[2][1]) * invS;\n\t  qy = (mat[2][0] - mat[0][2]) * invS;\n\t  qz = (mat[0][1] - mat[1][0]) * invS;\n  } else if ((mat[0][0] > mat[1][1])&&(mat[0][0] > mat[2][2])) {\n    float S = sqrt(1.0 + mat[0][0] - mat[1][1] - mat[2][2]) * 2.0;\n\t  float invS = 1.0 / S;\n\t  qw = (mat[1][2] - mat[2][1]) * invS;\n\t  qx = 0.25 * S;\n\t  qy = (mat[1][0] + mat[0][1]) * invS;\n\t  qz = (mat[2][0] + mat[0][2]) * invS;\n  } else if (mat[1][1] > mat[2][2]) {\n\t  float S = sqrt(1.0 + mat[1][1] - mat[0][0] - mat[2][2]) * 2.0;\n\t  float invS = 1.0 / S;\n\t  qw = (mat[2][0] - mat[0][2]) * invS;\n\t  qx = (mat[1][0] + mat[0][1]) * invS;\n\t  qy = 0.25 * S;\n\t  qz = (mat[2][1] + mat[1][2]) * invS;\n  } else {\n\t  float S = sqrt(1.0 + mat[2][2] - mat[0][0] - mat[1][1]) * 2.0;\n\t  float invS = 1.0 / S;\n\t  qw = (mat[0][1] - mat[1][0]) * invS;\n\t  qx = (mat[2][0] + mat[0][2]) * invS;\n\t  qy = (mat[2][1] + mat[1][2]) * invS;\n\t  qz = 0.25 * S;\n  }\n  return vec4(qx, qy, qz, qw);\n}\nlayout(set = 1, binding = 0) uniform Constants {\n  vec4 mainTiling_Offset;\n  vec4 frameTile_velLenScale;\n  vec4 scale;\n  vec4 nodeRotation;\n};\nlayout(set = 0, binding = 0) uniform CCGlobal {\n  highp   vec4 cc_time;\n  mediump vec4 cc_screenSize;\n  mediump vec4 cc_nativeSize;\n};\nlayout(set = 0, binding = 1) uniform CCCamera {\n  highp   mat4 cc_matView;\n  highp   mat4 cc_matViewInv;\n  highp   mat4 cc_matProj;\n  highp   mat4 cc_matProjInv;\n  highp   mat4 cc_matViewProj;\n  highp   mat4 cc_matViewProjInv;\n  highp   vec4 cc_cameraPos;\n  mediump vec4 cc_screenScale;\n  mediump vec4 cc_exposure;\n  mediump vec4 cc_mainLitDir;\n  mediump vec4 cc_mainLitColor;\n  mediump vec4 cc_ambientSky;\n  mediump vec4 cc_ambientGround;\n  mediump vec4 cc_fogColor;\n  mediump vec4 cc_fogBase;\n  mediump vec4 cc_fogAdd;\n  mediump vec4 cc_nearFar;\n  mediump vec4 cc_viewPort;\n};\nlayout(set = 2, binding = 0) uniform CCLocal {\n  highp mat4 cc_matWorld;\n  highp mat4 cc_matWorldIT;\n  highp vec4 cc_lightingMapUVParam;\n};\nlayout(location = 0) out mediump vec2 uv;\nlayout(location = 1) out mediump vec4 color;\nvoid computeVertPos (inout vec4 pos, vec2 vertOffset, vec4 q, vec3 s\n#if CC_RENDER_MODE == 0 || CC_RENDER_MODE == 3\n  , mat4 viewInv\n#endif\n#if CC_RENDER_MODE == 1\n  , vec3 eye\n  , vec4 velocity\n  , float velocityScale\n  , float lengthScale\n  , float xIndex\n#endif\n) {\n#if CC_RENDER_MODE == 0\n  vec3 viewSpaceVert = vec3(vertOffset.x * s.x, vertOffset.y * s.y, 0.);\n  vec3 camX = normalize(vec3(viewInv[0][0], viewInv[1][0], viewInv[2][0]));\n  vec3 camY = normalize(vec3(viewInv[0][1], viewInv[1][1], viewInv[2][1]));\n  vec3 camZ = normalize(vec3(viewInv[0][2], viewInv[1][2], viewInv[2][2]));\n  pos.xyz += rotateInLocalSpace(viewSpaceVert, camX, camY, camZ, q);\n#elif CC_RENDER_MODE == 1\n  vec3 camRight = normalize(cross(pos.xyz - eye, velocity.xyz)) * s.x;\n  vec3 camUp = velocity.xyz * velocityScale + normalize(velocity.xyz) * lengthScale * s.y;\n  pos.xyz += (camRight * abs(vertOffset.x) * sign(vertOffset.y)) - camUp * xIndex;\n#elif CC_RENDER_MODE == 2\n  vec3 viewSpaceVert = vec3(vertOffset.x * s.x, vertOffset.y * s.y, 0.);\n  vec3 camX = vec3(1, 0, 0);\n  vec3 camY = vec3(0, 0, -1);\n  pos.xyz += rotateInLocalSpace(viewSpaceVert, camX, camY, cross(camX, camY), q);\n#elif CC_RENDER_MODE == 3\n  vec3 viewSpaceVert = vec3(vertOffset.x * s.x, vertOffset.y * s.y, 0.);\n  rotateVecFromQuat(viewSpaceVert, q);\n  vec3 camX = normalize(vec3(cc_matView[0][0], cc_matView[1][0], cc_matView[2][0]));\n  vec3 camY = vec3(0, 1, 0);\n  vec3 offset = camX * viewSpaceVert.x + camY * viewSpaceVert.y;\n  pos.xyz += offset;\n#else\n  pos.x += vertOffset.x;\n  pos.y += vertOffset.y;\n#endif\n}\nvec2 computeUV (float frameIndex, vec2 vertIndex, vec2 frameTile){\n  vec2 aniUV = vec2(0, floor(frameIndex * frameTile.y));\n  aniUV.x = floor(frameIndex * frameTile.x * frameTile.y - aniUV.y * frameTile.x);\n#if CC_RENDER_MODE != 4\n  vertIndex.y = 1. - vertIndex.y;\n#endif\n  return (aniUV.xy + vertIndex) / vec2(frameTile.x, frameTile.y);\n}\nlayout(location = 0) in vec3 a_position;\nlayout(location = 1) in vec3 a_texCoord;\nlayout(location = 2) in vec3 a_texCoord1;\nlayout(location = 3) in vec3 a_texCoord2;\nlayout(location = 4) in vec4 a_color;\n#if CC_RENDER_MODE == 1\n  layout(location = 8) in vec3 a_color1;\n#endif\n#if CC_RENDER_MODE == 4\n  layout(location = 6) in vec3 a_texCoord3;\n  layout(location = 7) in vec3 a_normal;\n  layout(location = 8) in vec4 a_color1;\n#endif\nvec4 lpvs_main () {\n  vec3 compScale = scale.xyz * a_texCoord1;\n  vec4 pos = vec4(a_position, 1);\n  #if CC_RENDER_MODE == 1\n    vec4 velocity = vec4(a_color1.xyz, 0);\n  #endif\n  #if !CC_USE_WORLD_SPACE\n    pos = cc_matWorld * pos;\n    #if CC_RENDER_MODE == 1\n      velocity = cc_matWorld * velocity;\n    #endif\n  #endif\n  #if ROTATION_OVER_TIME_MODULE_ENABLE\n    vec3 rotTmp = a_texCoord2;\n    float mulFactor = 1.0;\n    if (rotTmp.x > 10.0 * 0.5) {\n        rotTmp.x -= 10.0;\n        mulFactor = -1.0;\n    }\n    vec4 rot = vec4(rotTmp, 0.0);\n    rot.w = mulFactor * sqrt(abs(1.0 - rot.x * rot.x - rot.y * rot.y - rot.z * rot.z));\n  #else\n    #if CC_RENDER_MODE != 4\n      #if CC_RENDER_MODE == 0\n        vec3 rotEuler = a_texCoord2;\n      #elif CC_RENDER_MODE == 1\n        vec3 rotEuler = vec3(0.);\n      #else\n        vec3 rotEuler = vec3(0., 0., a_texCoord2.z);\n      #endif\n      vec4 rot = quaternionFromEuler(rotEuler);\n    #else\n      vec4 rot = quaternionFromEuler(a_texCoord2);\n    #endif\n  #endif\n  #if CC_RENDER_MODE != 4\n    vec2 cornerOffset = vec2((a_texCoord.xy - 0.5));\n    #if CC_RENDER_MODE == 0 || CC_RENDER_MODE == 3\n      computeVertPos(pos, cornerOffset, rot, compScale, cc_matViewInv);\n    #elif CC_RENDER_MODE == 1\n      computeVertPos(pos, cornerOffset, rot, compScale, cc_cameraPos.xyz, velocity, frameTile_velLenScale.z, frameTile_velLenScale.w, a_texCoord.x);\n    #elif 2\n      computeVertPos(pos, cornerOffset, rot, compScale);\n    #endif\n    color = a_color;\n  #else\n    mat3 rotMat = quatToMat3(rot);\n    mat3 nodeMat = quatToMat3(nodeRotation);\n    rotMat = nodeMat * rotMat;\n    rot = mat3ToQuat(rotMat);\n    mat4 xformNoScale = matrixFromRT(rot, pos.xyz);\n    mat4 xform = matFromRTS(rot, pos.xyz, compScale);\n    pos = xform * vec4(a_texCoord3, 1);\n    vec4 normal = xformNoScale * vec4(a_normal, 0);\n    color = a_color * a_color1;\n  #endif\n  uv = computeUV(a_texCoord.z, a_texCoord.xy, frameTile_velLenScale.xy) * mainTiling_Offset.xy + mainTiling_Offset.zw;\n  pos = cc_matViewProj * pos;\n  return pos;\n}\nvoid main() { gl_Position = lpvs_main(); }","frag":"\nprecision mediump float;\nlayout(set = 0, binding = 0) uniform CCGlobal {\n  highp   vec4 cc_time;\n  mediump vec4 cc_screenSize;\n  mediump vec4 cc_nativeSize;\n};\nlayout(set = 0, binding = 1) uniform CCCamera {\n  highp   mat4 cc_matView;\n  highp   mat4 cc_matViewInv;\n  highp   mat4 cc_matProj;\n  highp   mat4 cc_matProjInv;\n  highp   mat4 cc_matViewProj;\n  highp   mat4 cc_matViewProjInv;\n  highp   vec4 cc_cameraPos;\n  mediump vec4 cc_screenScale;\n  mediump vec4 cc_exposure;\n  mediump vec4 cc_mainLitDir;\n  mediump vec4 cc_mainLitColor;\n  mediump vec4 cc_ambientSky;\n  mediump vec4 cc_ambientGround;\n  mediump vec4 cc_fogColor;\n  mediump vec4 cc_fogBase;\n  mediump vec4 cc_fogAdd;\n  mediump vec4 cc_nearFar;\n  mediump vec4 cc_viewPort;\n};\nvec4 CCFragOutput (vec4 color) {\n  return color;\n}\nlayout(location = 0) in vec2 uv;\nlayout(location = 1) in vec4 color;\nlayout(set = 1, binding = 2) uniform sampler2D mainTexture;\nlayout(set = 1, binding = 1) uniform FragConstants {\n  vec4 tintColor;\n};\nvec4 add () {\n  vec4 col = 2.0 * color * tintColor * texture(mainTexture, uv);\n  return CCFragOutput(col);\n}\nlayout(location = 0) out vec4 cc_FragColor;\nvoid main() { cc_FragColor = add(); }"},"glsl3":{"vert":"\nprecision highp float;\nvec4 quaternionFromAxis (vec3 xAxis,vec3 yAxis,vec3 zAxis){\n  mat3 m = mat3(xAxis,yAxis,zAxis);\n  float trace = m[0][0] + m[1][1] + m[2][2];\n  vec4 quat;\n  if (trace > 0.) {\n    float s = 0.5 / sqrt(trace + 1.0);\n    quat.w = 0.25 / s;\n    quat.x = (m[2][1] - m[1][2]) * s;\n    quat.y = (m[0][2] - m[2][0]) * s;\n    quat.z = (m[1][0] - m[0][1]) * s;\n  } else if ((m[0][0] > m[1][1]) && (m[0][0] > m[2][2])) {\n    float s = 2.0 * sqrt(1.0 + m[0][0] - m[1][1] - m[2][2]);\n    quat.w = (m[2][1] - m[1][2]) / s;\n    quat.x = 0.25 * s;\n    quat.y = (m[0][1] + m[1][0]) / s;\n    quat.z = (m[0][2] + m[2][0]) / s;\n  } else if (m[1][1] > m[2][2]) {\n    float s = 2.0 * sqrt(1.0 + m[1][1] - m[0][0] - m[2][2]);\n    quat.w = (m[0][2] - m[2][0]) / s;\n    quat.x = (m[0][1] + m[1][0]) / s;\n    quat.y = 0.25 * s;\n    quat.z = (m[1][2] + m[2][1]) / s;\n  } else {\n    float s = 2.0 * sqrt(1.0 + m[2][2] - m[0][0] - m[1][1]);\n    quat.w = (m[1][0] - m[0][1]) / s;\n    quat.x = (m[0][2] + m[2][0]) / s;\n    quat.y = (m[1][2] + m[2][1]) / s;\n    quat.z = 0.25 * s;\n  }\n  float len = quat.x * quat.x + quat.y * quat.y + quat.z * quat.z + quat.w * quat.w;\n  if (len > 0.) {\n    len = 1. / sqrt(len);\n    quat.x = quat.x * len;\n    quat.y = quat.y * len;\n    quat.z = quat.z * len;\n    quat.w = quat.w * len;\n  }\n  return quat;\n}\nvec4 quaternionFromEuler (vec3 angle){\n  float x = angle.x / 2.;\n  float y = angle.y / 2.;\n  float z = angle.z / 2.;\n  float sx = sin(x);\n  float cx = cos(x);\n  float sy = sin(y);\n  float cy = cos(y);\n  float sz = sin(z);\n  float cz = cos(z);\n  vec4 quat = vec4(0);\n  quat.x = sx * cy * cz + cx * sy * sz;\n  quat.y = cx * sy * cz + sx * cy * sz;\n  quat.z = cx * cy * sz - sx * sy * cz;\n  quat.w = cx * cy * cz - sx * sy * sz;\n  return quat;\n}\nmat4 matrixFromRT (vec4 q, vec3 p){\n  float x2 = q.x + q.x;\n  float y2 = q.y + q.y;\n  float z2 = q.z + q.z;\n  float xx = q.x * x2;\n  float xy = q.x * y2;\n  float xz = q.x * z2;\n  float yy = q.y * y2;\n  float yz = q.y * z2;\n  float zz = q.z * z2;\n  float wx = q.w * x2;\n  float wy = q.w * y2;\n  float wz = q.w * z2;\n  return mat4(\n    1. - (yy + zz), xy + wz, xz - wy, 0,\n    xy - wz, 1. - (xx + zz), yz + wx, 0,\n    xz + wy, yz - wx, 1. - (xx + yy), 0,\n    p.x, p.y, p.z, 1\n  );\n}\nmat4 matFromRTS (vec4 q, vec3 t, vec3 s){\n  float x = q.x, y = q.y, z = q.z, w = q.w;\n  float x2 = x + x;\n  float y2 = y + y;\n  float z2 = z + z;\n  float xx = x * x2;\n  float xy = x * y2;\n  float xz = x * z2;\n  float yy = y * y2;\n  float yz = y * z2;\n  float zz = z * z2;\n  float wx = w * x2;\n  float wy = w * y2;\n  float wz = w * z2;\n  float sx = s.x;\n  float sy = s.y;\n  float sz = s.z;\n  return mat4((1. - (yy + zz)) * sx, (xy + wz) * sx, (xz - wy) * sx, 0,\n    (xy - wz) * sy, (1. - (xx + zz)) * sy, (yz + wx) * sy, 0,\n    (xz + wy) * sz, (yz - wx) * sz, (1. - (xx + yy)) * sz, 0,\n    t.x, t.y, t.z, 1);\n}\nvec4 quatMultiply (vec4 a, vec4 b){\n  vec4 quat;\n  quat.x = a.x * b.w + a.w * b.x + a.y * b.z - a.z * b.y;\n  quat.y = a.y * b.w + a.w * b.y + a.z * b.x - a.x * b.z;\n  quat.z = a.z * b.w + a.w * b.z + a.x * b.y - a.y * b.x;\n  quat.w = a.w * b.w - a.x * b.x - a.y * b.y - a.z * b.z;\n  return quat;\n}\nvoid rotateVecFromQuat (inout vec3 v, vec4 q){\n  float ix = q.w * v.x + q.y * v.z - q.z * v.y;\n  float iy = q.w * v.y + q.z * v.x - q.x * v.z;\n  float iz = q.w * v.z + q.x * v.y - q.y * v.x;\n  float iw = -q.x * v.x - q.y * v.y - q.z * v.z;\n  v.x = ix * q.w + iw * -q.x + iy * -q.z - iz * -q.y;\n  v.y = iy * q.w + iw * -q.y + iz * -q.x - ix * -q.z;\n  v.z = iz * q.w + iw * -q.z + ix * -q.y - iy * -q.x;\n}\nvec3 rotateInLocalSpace (vec3 pos, vec3 xAxis, vec3 yAxis, vec3 zAxis, vec4 q){\n  vec4 viewQuat = quaternionFromAxis(xAxis, yAxis, zAxis);\n  vec4 rotQuat = quatMultiply(viewQuat, q);\n  rotateVecFromQuat(pos, rotQuat);\n  return pos;\n}\nmat3 quatToMat3(vec4 q) {\n  vec3 m0 = vec3(\n    1.0 - 2.0 * q.y * q.y - 2.0 * q.z * q.z,\n    2.0 * q.x * q.y + 2.0 * q.w * q.z,\n    2.0 * q.x * q.z - 2.0 * q.w * q.y);\n\tvec3 m1 = vec3(\n    2.0 * q.x * q.y - 2.0 * q.w * q.z,\n    1.0 - 2.0 * q.x * q.x - 2.0 * q.z * q.z,\n    2.0 * q.y * q.z + 2.0 * q.w * q.x);\n\tvec3 m2 = vec3(\n    2.0 * q.x * q.z + 2.0 * q.w * q.y,\n    2.0 * q.y * q.z - 2.0 * q.w * q.x,\n    1.0 - 2.0 * q.x * q.x - 2.0 * q.y * q.y);\n  return mat3(m0, m1, m2);\n}\nvec4 mat3ToQuat(mat3 mat) {\n  float tr = mat[0][0] + mat[1][1] + mat[2][2];\n\tfloat qw, qx, qy, qz;\n  if (tr > 0.0) {\n    float S = sqrt(tr + 1.0) * 2.0;\n\t  float invS = 1.0 / S;\n\t  qw = 0.25 * S;\n\t  qx = (mat[1][2] - mat[2][1]) * invS;\n\t  qy = (mat[2][0] - mat[0][2]) * invS;\n\t  qz = (mat[0][1] - mat[1][0]) * invS;\n  } else if ((mat[0][0] > mat[1][1])&&(mat[0][0] > mat[2][2])) {\n    float S = sqrt(1.0 + mat[0][0] - mat[1][1] - mat[2][2]) * 2.0;\n\t  float invS = 1.0 / S;\n\t  qw = (mat[1][2] - mat[2][1]) * invS;\n\t  qx = 0.25 * S;\n\t  qy = (mat[1][0] + mat[0][1]) * invS;\n\t  qz = (mat[2][0] + mat[0][2]) * invS;\n  } else if (mat[1][1] > mat[2][2]) {\n\t  float S = sqrt(1.0 + mat[1][1] - mat[0][0] - mat[2][2]) * 2.0;\n\t  float invS = 1.0 / S;\n\t  qw = (mat[2][0] - mat[0][2]) * invS;\n\t  qx = (mat[1][0] + mat[0][1]) * invS;\n\t  qy = 0.25 * S;\n\t  qz = (mat[2][1] + mat[1][2]) * invS;\n  } else {\n\t  float S = sqrt(1.0 + mat[2][2] - mat[0][0] - mat[1][1]) * 2.0;\n\t  float invS = 1.0 / S;\n\t  qw = (mat[0][1] - mat[1][0]) * invS;\n\t  qx = (mat[2][0] + mat[0][2]) * invS;\n\t  qy = (mat[2][1] + mat[1][2]) * invS;\n\t  qz = 0.25 * S;\n  }\n  return vec4(qx, qy, qz, qw);\n}\nlayout(std140) uniform Constants {\n  vec4 mainTiling_Offset;\n  vec4 frameTile_velLenScale;\n  vec4 scale;\n  vec4 nodeRotation;\n};\nlayout(std140) uniform CCGlobal {\n  highp   vec4 cc_time;\n  mediump vec4 cc_screenSize;\n  mediump vec4 cc_nativeSize;\n};\nlayout(std140) uniform CCCamera {\n  highp   mat4 cc_matView;\n  highp   mat4 cc_matViewInv;\n  highp   mat4 cc_matProj;\n  highp   mat4 cc_matProjInv;\n  highp   mat4 cc_matViewProj;\n  highp   mat4 cc_matViewProjInv;\n  highp   vec4 cc_cameraPos;\n  mediump vec4 cc_screenScale;\n  mediump vec4 cc_exposure;\n  mediump vec4 cc_mainLitDir;\n  mediump vec4 cc_mainLitColor;\n  mediump vec4 cc_ambientSky;\n  mediump vec4 cc_ambientGround;\n  mediump vec4 cc_fogColor;\n  mediump vec4 cc_fogBase;\n  mediump vec4 cc_fogAdd;\n  mediump vec4 cc_nearFar;\n  mediump vec4 cc_viewPort;\n};\nlayout(std140) uniform CCLocal {\n  highp mat4 cc_matWorld;\n  highp mat4 cc_matWorldIT;\n  highp vec4 cc_lightingMapUVParam;\n};\nout mediump vec2 uv;\nout mediump vec4 color;\nvoid computeVertPos (inout vec4 pos, vec2 vertOffset, vec4 q, vec3 s\n#if CC_RENDER_MODE == 0 || CC_RENDER_MODE == 3\n  , mat4 viewInv\n#endif\n#if CC_RENDER_MODE == 1\n  , vec3 eye\n  , vec4 velocity\n  , float velocityScale\n  , float lengthScale\n  , float xIndex\n#endif\n) {\n#if CC_RENDER_MODE == 0\n  vec3 viewSpaceVert = vec3(vertOffset.x * s.x, vertOffset.y * s.y, 0.);\n  vec3 camX = normalize(vec3(viewInv[0][0], viewInv[1][0], viewInv[2][0]));\n  vec3 camY = normalize(vec3(viewInv[0][1], viewInv[1][1], viewInv[2][1]));\n  vec3 camZ = normalize(vec3(viewInv[0][2], viewInv[1][2], viewInv[2][2]));\n  pos.xyz += rotateInLocalSpace(viewSpaceVert, camX, camY, camZ, q);\n#elif CC_RENDER_MODE == 1\n  vec3 camRight = normalize(cross(pos.xyz - eye, velocity.xyz)) * s.x;\n  vec3 camUp = velocity.xyz * velocityScale + normalize(velocity.xyz) * lengthScale * s.y;\n  pos.xyz += (camRight * abs(vertOffset.x) * sign(vertOffset.y)) - camUp * xIndex;\n#elif CC_RENDER_MODE == 2\n  vec3 viewSpaceVert = vec3(vertOffset.x * s.x, vertOffset.y * s.y, 0.);\n  vec3 camX = vec3(1, 0, 0);\n  vec3 camY = vec3(0, 0, -1);\n  pos.xyz += rotateInLocalSpace(viewSpaceVert, camX, camY, cross(camX, camY), q);\n#elif CC_RENDER_MODE == 3\n  vec3 viewSpaceVert = vec3(vertOffset.x * s.x, vertOffset.y * s.y, 0.);\n  rotateVecFromQuat(viewSpaceVert, q);\n  vec3 camX = normalize(vec3(cc_matView[0][0], cc_matView[1][0], cc_matView[2][0]));\n  vec3 camY = vec3(0, 1, 0);\n  vec3 offset = camX * viewSpaceVert.x + camY * viewSpaceVert.y;\n  pos.xyz += offset;\n#else\n  pos.x += vertOffset.x;\n  pos.y += vertOffset.y;\n#endif\n}\nvec2 computeUV (float frameIndex, vec2 vertIndex, vec2 frameTile){\n  vec2 aniUV = vec2(0, floor(frameIndex * frameTile.y));\n  aniUV.x = floor(frameIndex * frameTile.x * frameTile.y - aniUV.y * frameTile.x);\n#if CC_RENDER_MODE != 4\n  vertIndex.y = 1. - vertIndex.y;\n#endif\n  return (aniUV.xy + vertIndex) / vec2(frameTile.x, frameTile.y);\n}\nin vec3 a_position;\nin vec3 a_texCoord;\nin vec3 a_texCoord1;\nin vec3 a_texCoord2;\nin vec4 a_color;\n#if CC_RENDER_MODE == 1\n  in vec3 a_color1;\n#endif\n#if CC_RENDER_MODE == 4\n  in vec3 a_texCoord3;\n  in vec3 a_normal;\n  in vec4 a_color1;\n#endif\nvec4 lpvs_main () {\n  vec3 compScale = scale.xyz * a_texCoord1;\n  vec4 pos = vec4(a_position, 1);\n  #if CC_RENDER_MODE == 1\n    vec4 velocity = vec4(a_color1.xyz, 0);\n  #endif\n  #if !CC_USE_WORLD_SPACE\n    pos = cc_matWorld * pos;\n    #if CC_RENDER_MODE == 1\n      velocity = cc_matWorld * velocity;\n    #endif\n  #endif\n  #if ROTATION_OVER_TIME_MODULE_ENABLE\n    vec3 rotTmp = a_texCoord2;\n    float mulFactor = 1.0;\n    if (rotTmp.x > 10.0 * 0.5) {\n        rotTmp.x -= 10.0;\n        mulFactor = -1.0;\n    }\n    vec4 rot = vec4(rotTmp, 0.0);\n    rot.w = mulFactor * sqrt(abs(1.0 - rot.x * rot.x - rot.y * rot.y - rot.z * rot.z));\n  #else\n    #if CC_RENDER_MODE != 4\n      #if CC_RENDER_MODE == 0\n        vec3 rotEuler = a_texCoord2;\n      #elif CC_RENDER_MODE == 1\n        vec3 rotEuler = vec3(0.);\n      #else\n        vec3 rotEuler = vec3(0., 0., a_texCoord2.z);\n      #endif\n      vec4 rot = quaternionFromEuler(rotEuler);\n    #else\n      vec4 rot = quaternionFromEuler(a_texCoord2);\n    #endif\n  #endif\n  #if CC_RENDER_MODE != 4\n    vec2 cornerOffset = vec2((a_texCoord.xy - 0.5));\n    #if CC_RENDER_MODE == 0 || CC_RENDER_MODE == 3\n      computeVertPos(pos, cornerOffset, rot, compScale, cc_matViewInv);\n    #elif CC_RENDER_MODE == 1\n      computeVertPos(pos, cornerOffset, rot, compScale, cc_cameraPos.xyz, velocity, frameTile_velLenScale.z, frameTile_velLenScale.w, a_texCoord.x);\n    #elif 2\n      computeVertPos(pos, cornerOffset, rot, compScale);\n    #endif\n    color = a_color;\n  #else\n    mat3 rotMat = quatToMat3(rot);\n    mat3 nodeMat = quatToMat3(nodeRotation);\n    rotMat = nodeMat * rotMat;\n    rot = mat3ToQuat(rotMat);\n    mat4 xformNoScale = matrixFromRT(rot, pos.xyz);\n    mat4 xform = matFromRTS(rot, pos.xyz, compScale);\n    pos = xform * vec4(a_texCoord3, 1);\n    vec4 normal = xformNoScale * vec4(a_normal, 0);\n    color = a_color * a_color1;\n  #endif\n  uv = computeUV(a_texCoord.z, a_texCoord.xy, frameTile_velLenScale.xy) * mainTiling_Offset.xy + mainTiling_Offset.zw;\n  pos = cc_matViewProj * pos;\n  return pos;\n}\nvoid main() { gl_Position = lpvs_main(); }","frag":"\nprecision mediump float;\nlayout(std140) uniform CCGlobal {\n  highp   vec4 cc_time;\n  mediump vec4 cc_screenSize;\n  mediump vec4 cc_nativeSize;\n};\nlayout(std140) uniform CCCamera {\n  highp   mat4 cc_matView;\n  highp   mat4 cc_matViewInv;\n  highp   mat4 cc_matProj;\n  highp   mat4 cc_matProjInv;\n  highp   mat4 cc_matViewProj;\n  highp   mat4 cc_matViewProjInv;\n  highp   vec4 cc_cameraPos;\n  mediump vec4 cc_screenScale;\n  mediump vec4 cc_exposure;\n  mediump vec4 cc_mainLitDir;\n  mediump vec4 cc_mainLitColor;\n  mediump vec4 cc_ambientSky;\n  mediump vec4 cc_ambientGround;\n  mediump vec4 cc_fogColor;\n  mediump vec4 cc_fogBase;\n  mediump vec4 cc_fogAdd;\n  mediump vec4 cc_nearFar;\n  mediump vec4 cc_viewPort;\n};\nvec4 CCFragOutput (vec4 color) {\n  return color;\n}\nin vec2 uv;\nin vec4 color;\nuniform sampler2D mainTexture;\nlayout(std140) uniform FragConstants {\n  vec4 tintColor;\n};\nvec4 add () {\n  vec4 col = 2.0 * color * tintColor * texture(mainTexture, uv);\n  return CCFragOutput(col);\n}\nlayout(location = 0) out vec4 cc_FragColor;\nvoid main() { cc_FragColor = add(); }"},"glsl1":{"vert":"\nprecision highp float;\nvec4 quaternionFromAxis (vec3 xAxis,vec3 yAxis,vec3 zAxis){\n  mat3 m = mat3(xAxis,yAxis,zAxis);\n  float trace = m[0][0] + m[1][1] + m[2][2];\n  vec4 quat;\n  if (trace > 0.) {\n    float s = 0.5 / sqrt(trace + 1.0);\n    quat.w = 0.25 / s;\n    quat.x = (m[2][1] - m[1][2]) * s;\n    quat.y = (m[0][2] - m[2][0]) * s;\n    quat.z = (m[1][0] - m[0][1]) * s;\n  } else if ((m[0][0] > m[1][1]) && (m[0][0] > m[2][2])) {\n    float s = 2.0 * sqrt(1.0 + m[0][0] - m[1][1] - m[2][2]);\n    quat.w = (m[2][1] - m[1][2]) / s;\n    quat.x = 0.25 * s;\n    quat.y = (m[0][1] + m[1][0]) / s;\n    quat.z = (m[0][2] + m[2][0]) / s;\n  } else if (m[1][1] > m[2][2]) {\n    float s = 2.0 * sqrt(1.0 + m[1][1] - m[0][0] - m[2][2]);\n    quat.w = (m[0][2] - m[2][0]) / s;\n    quat.x = (m[0][1] + m[1][0]) / s;\n    quat.y = 0.25 * s;\n    quat.z = (m[1][2] + m[2][1]) / s;\n  } else {\n    float s = 2.0 * sqrt(1.0 + m[2][2] - m[0][0] - m[1][1]);\n    quat.w = (m[1][0] - m[0][1]) / s;\n    quat.x = (m[0][2] + m[2][0]) / s;\n    quat.y = (m[1][2] + m[2][1]) / s;\n    quat.z = 0.25 * s;\n  }\n  float len = quat.x * quat.x + quat.y * quat.y + quat.z * quat.z + quat.w * quat.w;\n  if (len > 0.) {\n    len = 1. / sqrt(len);\n    quat.x = quat.x * len;\n    quat.y = quat.y * len;\n    quat.z = quat.z * len;\n    quat.w = quat.w * len;\n  }\n  return quat;\n}\nvec4 quaternionFromEuler (vec3 angle){\n  float x = angle.x / 2.;\n  float y = angle.y / 2.;\n  float z = angle.z / 2.;\n  float sx = sin(x);\n  float cx = cos(x);\n  float sy = sin(y);\n  float cy = cos(y);\n  float sz = sin(z);\n  float cz = cos(z);\n  vec4 quat = vec4(0);\n  quat.x = sx * cy * cz + cx * sy * sz;\n  quat.y = cx * sy * cz + sx * cy * sz;\n  quat.z = cx * cy * sz - sx * sy * cz;\n  quat.w = cx * cy * cz - sx * sy * sz;\n  return quat;\n}\nmat4 matrixFromRT (vec4 q, vec3 p){\n  float x2 = q.x + q.x;\n  float y2 = q.y + q.y;\n  float z2 = q.z + q.z;\n  float xx = q.x * x2;\n  float xy = q.x * y2;\n  float xz = q.x * z2;\n  float yy = q.y * y2;\n  float yz = q.y * z2;\n  float zz = q.z * z2;\n  float wx = q.w * x2;\n  float wy = q.w * y2;\n  float wz = q.w * z2;\n  return mat4(\n    1. - (yy + zz), xy + wz, xz - wy, 0,\n    xy - wz, 1. - (xx + zz), yz + wx, 0,\n    xz + wy, yz - wx, 1. - (xx + yy), 0,\n    p.x, p.y, p.z, 1\n  );\n}\nmat4 matFromRTS (vec4 q, vec3 t, vec3 s){\n  float x = q.x, y = q.y, z = q.z, w = q.w;\n  float x2 = x + x;\n  float y2 = y + y;\n  float z2 = z + z;\n  float xx = x * x2;\n  float xy = x * y2;\n  float xz = x * z2;\n  float yy = y * y2;\n  float yz = y * z2;\n  float zz = z * z2;\n  float wx = w * x2;\n  float wy = w * y2;\n  float wz = w * z2;\n  float sx = s.x;\n  float sy = s.y;\n  float sz = s.z;\n  return mat4((1. - (yy + zz)) * sx, (xy + wz) * sx, (xz - wy) * sx, 0,\n    (xy - wz) * sy, (1. - (xx + zz)) * sy, (yz + wx) * sy, 0,\n    (xz + wy) * sz, (yz - wx) * sz, (1. - (xx + yy)) * sz, 0,\n    t.x, t.y, t.z, 1);\n}\nvec4 quatMultiply (vec4 a, vec4 b){\n  vec4 quat;\n  quat.x = a.x * b.w + a.w * b.x + a.y * b.z - a.z * b.y;\n  quat.y = a.y * b.w + a.w * b.y + a.z * b.x - a.x * b.z;\n  quat.z = a.z * b.w + a.w * b.z + a.x * b.y - a.y * b.x;\n  quat.w = a.w * b.w - a.x * b.x - a.y * b.y - a.z * b.z;\n  return quat;\n}\nvoid rotateVecFromQuat (inout vec3 v, vec4 q){\n  float ix = q.w * v.x + q.y * v.z - q.z * v.y;\n  float iy = q.w * v.y + q.z * v.x - q.x * v.z;\n  float iz = q.w * v.z + q.x * v.y - q.y * v.x;\n  float iw = -q.x * v.x - q.y * v.y - q.z * v.z;\n  v.x = ix * q.w + iw * -q.x + iy * -q.z - iz * -q.y;\n  v.y = iy * q.w + iw * -q.y + iz * -q.x - ix * -q.z;\n  v.z = iz * q.w + iw * -q.z + ix * -q.y - iy * -q.x;\n}\nvec3 rotateInLocalSpace (vec3 pos, vec3 xAxis, vec3 yAxis, vec3 zAxis, vec4 q){\n  vec4 viewQuat = quaternionFromAxis(xAxis, yAxis, zAxis);\n  vec4 rotQuat = quatMultiply(viewQuat, q);\n  rotateVecFromQuat(pos, rotQuat);\n  return pos;\n}\nmat3 quatToMat3(vec4 q) {\n  vec3 m0 = vec3(\n    1.0 - 2.0 * q.y * q.y - 2.0 * q.z * q.z,\n    2.0 * q.x * q.y + 2.0 * q.w * q.z,\n    2.0 * q.x * q.z - 2.0 * q.w * q.y);\n\tvec3 m1 = vec3(\n    2.0 * q.x * q.y - 2.0 * q.w * q.z,\n    1.0 - 2.0 * q.x * q.x - 2.0 * q.z * q.z,\n    2.0 * q.y * q.z + 2.0 * q.w * q.x);\n\tvec3 m2 = vec3(\n    2.0 * q.x * q.z + 2.0 * q.w * q.y,\n    2.0 * q.y * q.z - 2.0 * q.w * q.x,\n    1.0 - 2.0 * q.x * q.x - 2.0 * q.y * q.y);\n  return mat3(m0, m1, m2);\n}\nvec4 mat3ToQuat(mat3 mat) {\n  float tr = mat[0][0] + mat[1][1] + mat[2][2];\n\tfloat qw, qx, qy, qz;\n  if (tr > 0.0) {\n    float S = sqrt(tr + 1.0) * 2.0;\n\t  float invS = 1.0 / S;\n\t  qw = 0.25 * S;\n\t  qx = (mat[1][2] - mat[2][1]) * invS;\n\t  qy = (mat[2][0] - mat[0][2]) * invS;\n\t  qz = (mat[0][1] - mat[1][0]) * invS;\n  } else if ((mat[0][0] > mat[1][1])&&(mat[0][0] > mat[2][2])) {\n    float S = sqrt(1.0 + mat[0][0] - mat[1][1] - mat[2][2]) * 2.0;\n\t  float invS = 1.0 / S;\n\t  qw = (mat[1][2] - mat[2][1]) * invS;\n\t  qx = 0.25 * S;\n\t  qy = (mat[1][0] + mat[0][1]) * invS;\n\t  qz = (mat[2][0] + mat[0][2]) * invS;\n  } else if (mat[1][1] > mat[2][2]) {\n\t  float S = sqrt(1.0 + mat[1][1] - mat[0][0] - mat[2][2]) * 2.0;\n\t  float invS = 1.0 / S;\n\t  qw = (mat[2][0] - mat[0][2]) * invS;\n\t  qx = (mat[1][0] + mat[0][1]) * invS;\n\t  qy = 0.25 * S;\n\t  qz = (mat[2][1] + mat[1][2]) * invS;\n  } else {\n\t  float S = sqrt(1.0 + mat[2][2] - mat[0][0] - mat[1][1]) * 2.0;\n\t  float invS = 1.0 / S;\n\t  qw = (mat[0][1] - mat[1][0]) * invS;\n\t  qx = (mat[2][0] + mat[0][2]) * invS;\n\t  qy = (mat[2][1] + mat[1][2]) * invS;\n\t  qz = 0.25 * S;\n  }\n  return vec4(qx, qy, qz, qw);\n}\n   uniform vec4 mainTiling_Offset;\n   uniform vec4 frameTile_velLenScale;\n   uniform vec4 scale;\n   uniform vec4 nodeRotation;\nuniform highp mat4 cc_matView;\n  uniform highp mat4 cc_matViewInv;\n  uniform highp mat4 cc_matViewProj;\n  uniform highp vec4 cc_cameraPos;\nuniform highp mat4 cc_matWorld;\nvarying mediump vec2 uv;\nvarying mediump vec4 color;\nvoid computeVertPos (inout vec4 pos, vec2 vertOffset, vec4 q, vec3 s\n#if CC_RENDER_MODE == 0 || CC_RENDER_MODE == 3\n  , mat4 viewInv\n#endif\n#if CC_RENDER_MODE == 1\n  , vec3 eye\n  , vec4 velocity\n  , float velocityScale\n  , float lengthScale\n  , float xIndex\n#endif\n) {\n#if CC_RENDER_MODE == 0\n  vec3 viewSpaceVert = vec3(vertOffset.x * s.x, vertOffset.y * s.y, 0.);\n  vec3 camX = normalize(vec3(viewInv[0][0], viewInv[1][0], viewInv[2][0]));\n  vec3 camY = normalize(vec3(viewInv[0][1], viewInv[1][1], viewInv[2][1]));\n  vec3 camZ = normalize(vec3(viewInv[0][2], viewInv[1][2], viewInv[2][2]));\n  pos.xyz += rotateInLocalSpace(viewSpaceVert, camX, camY, camZ, q);\n#elif CC_RENDER_MODE == 1\n  vec3 camRight = normalize(cross(pos.xyz - eye, velocity.xyz)) * s.x;\n  vec3 camUp = velocity.xyz * velocityScale + normalize(velocity.xyz) * lengthScale * s.y;\n  pos.xyz += (camRight * abs(vertOffset.x) * sign(vertOffset.y)) - camUp * xIndex;\n#elif CC_RENDER_MODE == 2\n  vec3 viewSpaceVert = vec3(vertOffset.x * s.x, vertOffset.y * s.y, 0.);\n  vec3 camX = vec3(1, 0, 0);\n  vec3 camY = vec3(0, 0, -1);\n  pos.xyz += rotateInLocalSpace(viewSpaceVert, camX, camY, cross(camX, camY), q);\n#elif CC_RENDER_MODE == 3\n  vec3 viewSpaceVert = vec3(vertOffset.x * s.x, vertOffset.y * s.y, 0.);\n  rotateVecFromQuat(viewSpaceVert, q);\n  vec3 camX = normalize(vec3(cc_matView[0][0], cc_matView[1][0], cc_matView[2][0]));\n  vec3 camY = vec3(0, 1, 0);\n  vec3 offset = camX * viewSpaceVert.x + camY * viewSpaceVert.y;\n  pos.xyz += offset;\n#else\n  pos.x += vertOffset.x;\n  pos.y += vertOffset.y;\n#endif\n}\nvec2 computeUV (float frameIndex, vec2 vertIndex, vec2 frameTile){\n  vec2 aniUV = vec2(0, floor(frameIndex * frameTile.y));\n  aniUV.x = floor(frameIndex * frameTile.x * frameTile.y - aniUV.y * frameTile.x);\n#if CC_RENDER_MODE != 4\n  vertIndex.y = 1. - vertIndex.y;\n#endif\n  return (aniUV.xy + vertIndex) / vec2(frameTile.x, frameTile.y);\n}\nattribute vec3 a_position;\nattribute vec3 a_texCoord;\nattribute vec3 a_texCoord1;\nattribute vec3 a_texCoord2;\nattribute vec4 a_color;\n#if CC_RENDER_MODE == 1\n  attribute vec3 a_color1;\n#endif\n#if CC_RENDER_MODE == 4\n  attribute vec3 a_texCoord3;\n  attribute vec3 a_normal;\n  attribute vec4 a_color1;\n#endif\nvec4 lpvs_main () {\n  vec3 compScale = scale.xyz * a_texCoord1;\n  vec4 pos = vec4(a_position, 1);\n  #if CC_RENDER_MODE == 1\n    vec4 velocity = vec4(a_color1.xyz, 0);\n  #endif\n  #if !CC_USE_WORLD_SPACE\n    pos = cc_matWorld * pos;\n    #if CC_RENDER_MODE == 1\n      velocity = cc_matWorld * velocity;\n    #endif\n  #endif\n  #if ROTATION_OVER_TIME_MODULE_ENABLE\n    vec3 rotTmp = a_texCoord2;\n    float mulFactor = 1.0;\n    if (rotTmp.x > 10.0 * 0.5) {\n        rotTmp.x -= 10.0;\n        mulFactor = -1.0;\n    }\n    vec4 rot = vec4(rotTmp, 0.0);\n    rot.w = mulFactor * sqrt(abs(1.0 - rot.x * rot.x - rot.y * rot.y - rot.z * rot.z));\n  #else\n    #if CC_RENDER_MODE != 4\n      #if CC_RENDER_MODE == 0\n        vec3 rotEuler = a_texCoord2;\n      #elif CC_RENDER_MODE == 1\n        vec3 rotEuler = vec3(0.);\n      #else\n        vec3 rotEuler = vec3(0., 0., a_texCoord2.z);\n      #endif\n      vec4 rot = quaternionFromEuler(rotEuler);\n    #else\n      vec4 rot = quaternionFromEuler(a_texCoord2);\n    #endif\n  #endif\n  #if CC_RENDER_MODE != 4\n    vec2 cornerOffset = vec2((a_texCoord.xy - 0.5));\n    #if CC_RENDER_MODE == 0 || CC_RENDER_MODE == 3\n      computeVertPos(pos, cornerOffset, rot, compScale, cc_matViewInv);\n    #elif CC_RENDER_MODE == 1\n      computeVertPos(pos, cornerOffset, rot, compScale, cc_cameraPos.xyz, velocity, frameTile_velLenScale.z, frameTile_velLenScale.w, a_texCoord.x);\n    #elif 2\n      computeVertPos(pos, cornerOffset, rot, compScale);\n    #endif\n    color = a_color;\n  #else\n    mat3 rotMat = quatToMat3(rot);\n    mat3 nodeMat = quatToMat3(nodeRotation);\n    rotMat = nodeMat * rotMat;\n    rot = mat3ToQuat(rotMat);\n    mat4 xformNoScale = matrixFromRT(rot, pos.xyz);\n    mat4 xform = matFromRTS(rot, pos.xyz, compScale);\n    pos = xform * vec4(a_texCoord3, 1);\n    vec4 normal = xformNoScale * vec4(a_normal, 0);\n    color = a_color * a_color1;\n  #endif\n  uv = computeUV(a_texCoord.z, a_texCoord.xy, frameTile_velLenScale.xy) * mainTiling_Offset.xy + mainTiling_Offset.zw;\n  pos = cc_matViewProj * pos;\n  return pos;\n}\nvoid main() { gl_Position = lpvs_main(); }","frag":"\nprecision mediump float;\nvec4 CCFragOutput (vec4 color) {\n  return color;\n}\nvarying vec2 uv;\nvarying vec4 color;\nuniform sampler2D mainTexture;\n  uniform vec4 tintColor;\nvec4 add () {\n  vec4 col = 2.0 * color * tintColor * texture2D(mainTexture, uv);\n  return CCFragOutput(col);\n}\nvoid main() { gl_FragColor = add(); }"},"builtins":{"globals":{"blocks":[{"name":"CCGlobal","defines":[]},{"name":"CCCamera","defines":[]}],"samplerTextures":[],"buffers":[],"images":[]},"locals":{"blocks":[{"name":"CCLocal","defines":[]}],"samplerTextures":[],"buffers":[],"images":[]},"statistics":{"CC_EFFECT_USED_VERTEX_UNIFORM_VECTORS":52,"CC_EFFECT_USED_FRAGMENT_UNIFORM_VECTORS":40}},"defines":[{"name":"CC_RENDER_MODE","type":"number","defines":[],"range":[0,4]},{"name":"CC_USE_WORLD_SPACE","type":"boolean","defines":[]},{"name":"ROTATION_OVER_TIME_MODULE_ENABLE","type":"boolean","defines":[]}]},{"hash":1720952533,"name":"builtin-particle|particle-vs-legacy:lpvs_main|tinted-fs:multiply","blocks":[{"name":"Constants","stageFlags":1,"binding":0,"members":[{"name":"mainTiling_Offset","type":16,"count":1},{"name":"frameTile_velLenScale","type":16,"count":1},{"name":"scale","type":16,"count":1},{"name":"nodeRotation","type":16,"count":1}],"defines":[]},{"name":"FragConstants","stageFlags":16,"binding":1,"members":[{"name":"tintColor","type":16,"count":1}],"defines":[]}],"samplerTextures":[{"name":"mainTexture","type":28,"count":1,"stageFlags":16,"binding":2,"defines":[]}],"samplers":[],"textures":[],"buffers":[],"images":[],"subpassInputs":[],"attributes":[{"name":"a_position","format":32,"location":0,"defines":[]},{"name":"a_texCoord","format":32,"location":1,"defines":[]},{"name":"a_texCoord1","format":32,"location":2,"defines":[]},{"name":"a_texCoord2","format":32,"location":3,"defines":[]},{"name":"a_color","format":44,"location":4,"defines":[]},{"name":"a_color1","format":32,"location":8,"defines":["CC_RENDER_MODE"]},{"name":"a_texCoord3","format":32,"location":6,"defines":["CC_RENDER_MODE"]},{"name":"a_normal","format":32,"location":7,"defines":["CC_RENDER_MODE"]}],"varyings":[{"name":"uv","type":14,"count":1,"stageFlags":17,"location":0,"defines":[]},{"name":"color","type":16,"count":1,"stageFlags":17,"location":1,"defines":[]}],"fragColors":[{"name":"cc_FragColor","typename":"vec4","type":16,"count":1,"stageFlags":16,"location":0,"defines":[]}],"glsl4":{"vert":"\nprecision highp float;\nvec4 quaternionFromAxis (vec3 xAxis,vec3 yAxis,vec3 zAxis){\n  mat3 m = mat3(xAxis,yAxis,zAxis);\n  float trace = m[0][0] + m[1][1] + m[2][2];\n  vec4 quat;\n  if (trace > 0.) {\n    float s = 0.5 / sqrt(trace + 1.0);\n    quat.w = 0.25 / s;\n    quat.x = (m[2][1] - m[1][2]) * s;\n    quat.y = (m[0][2] - m[2][0]) * s;\n    quat.z = (m[1][0] - m[0][1]) * s;\n  } else if ((m[0][0] > m[1][1]) && (m[0][0] > m[2][2])) {\n    float s = 2.0 * sqrt(1.0 + m[0][0] - m[1][1] - m[2][2]);\n    quat.w = (m[2][1] - m[1][2]) / s;\n    quat.x = 0.25 * s;\n    quat.y = (m[0][1] + m[1][0]) / s;\n    quat.z = (m[0][2] + m[2][0]) / s;\n  } else if (m[1][1] > m[2][2]) {\n    float s = 2.0 * sqrt(1.0 + m[1][1] - m[0][0] - m[2][2]);\n    quat.w = (m[0][2] - m[2][0]) / s;\n    quat.x = (m[0][1] + m[1][0]) / s;\n    quat.y = 0.25 * s;\n    quat.z = (m[1][2] + m[2][1]) / s;\n  } else {\n    float s = 2.0 * sqrt(1.0 + m[2][2] - m[0][0] - m[1][1]);\n    quat.w = (m[1][0] - m[0][1]) / s;\n    quat.x = (m[0][2] + m[2][0]) / s;\n    quat.y = (m[1][2] + m[2][1]) / s;\n    quat.z = 0.25 * s;\n  }\n  float len = quat.x * quat.x + quat.y * quat.y + quat.z * quat.z + quat.w * quat.w;\n  if (len > 0.) {\n    len = 1. / sqrt(len);\n    quat.x = quat.x * len;\n    quat.y = quat.y * len;\n    quat.z = quat.z * len;\n    quat.w = quat.w * len;\n  }\n  return quat;\n}\nvec4 quaternionFromEuler (vec3 angle){\n  float x = angle.x / 2.;\n  float y = angle.y / 2.;\n  float z = angle.z / 2.;\n  float sx = sin(x);\n  float cx = cos(x);\n  float sy = sin(y);\n  float cy = cos(y);\n  float sz = sin(z);\n  float cz = cos(z);\n  vec4 quat = vec4(0);\n  quat.x = sx * cy * cz + cx * sy * sz;\n  quat.y = cx * sy * cz + sx * cy * sz;\n  quat.z = cx * cy * sz - sx * sy * cz;\n  quat.w = cx * cy * cz - sx * sy * sz;\n  return quat;\n}\nmat4 matrixFromRT (vec4 q, vec3 p){\n  float x2 = q.x + q.x;\n  float y2 = q.y + q.y;\n  float z2 = q.z + q.z;\n  float xx = q.x * x2;\n  float xy = q.x * y2;\n  float xz = q.x * z2;\n  float yy = q.y * y2;\n  float yz = q.y * z2;\n  float zz = q.z * z2;\n  float wx = q.w * x2;\n  float wy = q.w * y2;\n  float wz = q.w * z2;\n  return mat4(\n    1. - (yy + zz), xy + wz, xz - wy, 0,\n    xy - wz, 1. - (xx + zz), yz + wx, 0,\n    xz + wy, yz - wx, 1. - (xx + yy), 0,\n    p.x, p.y, p.z, 1\n  );\n}\nmat4 matFromRTS (vec4 q, vec3 t, vec3 s){\n  float x = q.x, y = q.y, z = q.z, w = q.w;\n  float x2 = x + x;\n  float y2 = y + y;\n  float z2 = z + z;\n  float xx = x * x2;\n  float xy = x * y2;\n  float xz = x * z2;\n  float yy = y * y2;\n  float yz = y * z2;\n  float zz = z * z2;\n  float wx = w * x2;\n  float wy = w * y2;\n  float wz = w * z2;\n  float sx = s.x;\n  float sy = s.y;\n  float sz = s.z;\n  return mat4((1. - (yy + zz)) * sx, (xy + wz) * sx, (xz - wy) * sx, 0,\n    (xy - wz) * sy, (1. - (xx + zz)) * sy, (yz + wx) * sy, 0,\n    (xz + wy) * sz, (yz - wx) * sz, (1. - (xx + yy)) * sz, 0,\n    t.x, t.y, t.z, 1);\n}\nvec4 quatMultiply (vec4 a, vec4 b){\n  vec4 quat;\n  quat.x = a.x * b.w + a.w * b.x + a.y * b.z - a.z * b.y;\n  quat.y = a.y * b.w + a.w * b.y + a.z * b.x - a.x * b.z;\n  quat.z = a.z * b.w + a.w * b.z + a.x * b.y - a.y * b.x;\n  quat.w = a.w * b.w - a.x * b.x - a.y * b.y - a.z * b.z;\n  return quat;\n}\nvoid rotateVecFromQuat (inout vec3 v, vec4 q){\n  float ix = q.w * v.x + q.y * v.z - q.z * v.y;\n  float iy = q.w * v.y + q.z * v.x - q.x * v.z;\n  float iz = q.w * v.z + q.x * v.y - q.y * v.x;\n  float iw = -q.x * v.x - q.y * v.y - q.z * v.z;\n  v.x = ix * q.w + iw * -q.x + iy * -q.z - iz * -q.y;\n  v.y = iy * q.w + iw * -q.y + iz * -q.x - ix * -q.z;\n  v.z = iz * q.w + iw * -q.z + ix * -q.y - iy * -q.x;\n}\nvec3 rotateInLocalSpace (vec3 pos, vec3 xAxis, vec3 yAxis, vec3 zAxis, vec4 q){\n  vec4 viewQuat = quaternionFromAxis(xAxis, yAxis, zAxis);\n  vec4 rotQuat = quatMultiply(viewQuat, q);\n  rotateVecFromQuat(pos, rotQuat);\n  return pos;\n}\nmat3 quatToMat3(vec4 q) {\n  vec3 m0 = vec3(\n    1.0 - 2.0 * q.y * q.y - 2.0 * q.z * q.z,\n    2.0 * q.x * q.y + 2.0 * q.w * q.z,\n    2.0 * q.x * q.z - 2.0 * q.w * q.y);\n\tvec3 m1 = vec3(\n    2.0 * q.x * q.y - 2.0 * q.w * q.z,\n    1.0 - 2.0 * q.x * q.x - 2.0 * q.z * q.z,\n    2.0 * q.y * q.z + 2.0 * q.w * q.x);\n\tvec3 m2 = vec3(\n    2.0 * q.x * q.z + 2.0 * q.w * q.y,\n    2.0 * q.y * q.z - 2.0 * q.w * q.x,\n    1.0 - 2.0 * q.x * q.x - 2.0 * q.y * q.y);\n  return mat3(m0, m1, m2);\n}\nvec4 mat3ToQuat(mat3 mat) {\n  float tr = mat[0][0] + mat[1][1] + mat[2][2];\n\tfloat qw, qx, qy, qz;\n  if (tr > 0.0) {\n    float S = sqrt(tr + 1.0) * 2.0;\n\t  float invS = 1.0 / S;\n\t  qw = 0.25 * S;\n\t  qx = (mat[1][2] - mat[2][1]) * invS;\n\t  qy = (mat[2][0] - mat[0][2]) * invS;\n\t  qz = (mat[0][1] - mat[1][0]) * invS;\n  } else if ((mat[0][0] > mat[1][1])&&(mat[0][0] > mat[2][2])) {\n    float S = sqrt(1.0 + mat[0][0] - mat[1][1] - mat[2][2]) * 2.0;\n\t  float invS = 1.0 / S;\n\t  qw = (mat[1][2] - mat[2][1]) * invS;\n\t  qx = 0.25 * S;\n\t  qy = (mat[1][0] + mat[0][1]) * invS;\n\t  qz = (mat[2][0] + mat[0][2]) * invS;\n  } else if (mat[1][1] > mat[2][2]) {\n\t  float S = sqrt(1.0 + mat[1][1] - mat[0][0] - mat[2][2]) * 2.0;\n\t  float invS = 1.0 / S;\n\t  qw = (mat[2][0] - mat[0][2]) * invS;\n\t  qx = (mat[1][0] + mat[0][1]) * invS;\n\t  qy = 0.25 * S;\n\t  qz = (mat[2][1] + mat[1][2]) * invS;\n  } else {\n\t  float S = sqrt(1.0 + mat[2][2] - mat[0][0] - mat[1][1]) * 2.0;\n\t  float invS = 1.0 / S;\n\t  qw = (mat[0][1] - mat[1][0]) * invS;\n\t  qx = (mat[2][0] + mat[0][2]) * invS;\n\t  qy = (mat[2][1] + mat[1][2]) * invS;\n\t  qz = 0.25 * S;\n  }\n  return vec4(qx, qy, qz, qw);\n}\nlayout(set = 1, binding = 0) uniform Constants {\n  vec4 mainTiling_Offset;\n  vec4 frameTile_velLenScale;\n  vec4 scale;\n  vec4 nodeRotation;\n};\nlayout(set = 0, binding = 0) uniform CCGlobal {\n  highp   vec4 cc_time;\n  mediump vec4 cc_screenSize;\n  mediump vec4 cc_nativeSize;\n};\nlayout(set = 0, binding = 1) uniform CCCamera {\n  highp   mat4 cc_matView;\n  highp   mat4 cc_matViewInv;\n  highp   mat4 cc_matProj;\n  highp   mat4 cc_matProjInv;\n  highp   mat4 cc_matViewProj;\n  highp   mat4 cc_matViewProjInv;\n  highp   vec4 cc_cameraPos;\n  mediump vec4 cc_screenScale;\n  mediump vec4 cc_exposure;\n  mediump vec4 cc_mainLitDir;\n  mediump vec4 cc_mainLitColor;\n  mediump vec4 cc_ambientSky;\n  mediump vec4 cc_ambientGround;\n  mediump vec4 cc_fogColor;\n  mediump vec4 cc_fogBase;\n  mediump vec4 cc_fogAdd;\n  mediump vec4 cc_nearFar;\n  mediump vec4 cc_viewPort;\n};\nlayout(set = 2, binding = 0) uniform CCLocal {\n  highp mat4 cc_matWorld;\n  highp mat4 cc_matWorldIT;\n  highp vec4 cc_lightingMapUVParam;\n};\nlayout(location = 0) out mediump vec2 uv;\nlayout(location = 1) out mediump vec4 color;\nvoid computeVertPos (inout vec4 pos, vec2 vertOffset, vec4 q, vec3 s\n#if CC_RENDER_MODE == 0 || CC_RENDER_MODE == 3\n  , mat4 viewInv\n#endif\n#if CC_RENDER_MODE == 1\n  , vec3 eye\n  , vec4 velocity\n  , float velocityScale\n  , float lengthScale\n  , float xIndex\n#endif\n) {\n#if CC_RENDER_MODE == 0\n  vec3 viewSpaceVert = vec3(vertOffset.x * s.x, vertOffset.y * s.y, 0.);\n  vec3 camX = normalize(vec3(viewInv[0][0], viewInv[1][0], viewInv[2][0]));\n  vec3 camY = normalize(vec3(viewInv[0][1], viewInv[1][1], viewInv[2][1]));\n  vec3 camZ = normalize(vec3(viewInv[0][2], viewInv[1][2], viewInv[2][2]));\n  pos.xyz += rotateInLocalSpace(viewSpaceVert, camX, camY, camZ, q);\n#elif CC_RENDER_MODE == 1\n  vec3 camRight = normalize(cross(pos.xyz - eye, velocity.xyz)) * s.x;\n  vec3 camUp = velocity.xyz * velocityScale + normalize(velocity.xyz) * lengthScale * s.y;\n  pos.xyz += (camRight * abs(vertOffset.x) * sign(vertOffset.y)) - camUp * xIndex;\n#elif CC_RENDER_MODE == 2\n  vec3 viewSpaceVert = vec3(vertOffset.x * s.x, vertOffset.y * s.y, 0.);\n  vec3 camX = vec3(1, 0, 0);\n  vec3 camY = vec3(0, 0, -1);\n  pos.xyz += rotateInLocalSpace(viewSpaceVert, camX, camY, cross(camX, camY), q);\n#elif CC_RENDER_MODE == 3\n  vec3 viewSpaceVert = vec3(vertOffset.x * s.x, vertOffset.y * s.y, 0.);\n  rotateVecFromQuat(viewSpaceVert, q);\n  vec3 camX = normalize(vec3(cc_matView[0][0], cc_matView[1][0], cc_matView[2][0]));\n  vec3 camY = vec3(0, 1, 0);\n  vec3 offset = camX * viewSpaceVert.x + camY * viewSpaceVert.y;\n  pos.xyz += offset;\n#else\n  pos.x += vertOffset.x;\n  pos.y += vertOffset.y;\n#endif\n}\nvec2 computeUV (float frameIndex, vec2 vertIndex, vec2 frameTile){\n  vec2 aniUV = vec2(0, floor(frameIndex * frameTile.y));\n  aniUV.x = floor(frameIndex * frameTile.x * frameTile.y - aniUV.y * frameTile.x);\n#if CC_RENDER_MODE != 4\n  vertIndex.y = 1. - vertIndex.y;\n#endif\n  return (aniUV.xy + vertIndex) / vec2(frameTile.x, frameTile.y);\n}\nlayout(location = 0) in vec3 a_position;\nlayout(location = 1) in vec3 a_texCoord;\nlayout(location = 2) in vec3 a_texCoord1;\nlayout(location = 3) in vec3 a_texCoord2;\nlayout(location = 4) in vec4 a_color;\n#if CC_RENDER_MODE == 1\n  layout(location = 8) in vec3 a_color1;\n#endif\n#if CC_RENDER_MODE == 4\n  layout(location = 6) in vec3 a_texCoord3;\n  layout(location = 7) in vec3 a_normal;\n  layout(location = 8) in vec4 a_color1;\n#endif\nvec4 lpvs_main () {\n  vec3 compScale = scale.xyz * a_texCoord1;\n  vec4 pos = vec4(a_position, 1);\n  #if CC_RENDER_MODE == 1\n    vec4 velocity = vec4(a_color1.xyz, 0);\n  #endif\n  #if !CC_USE_WORLD_SPACE\n    pos = cc_matWorld * pos;\n    #if CC_RENDER_MODE == 1\n      velocity = cc_matWorld * velocity;\n    #endif\n  #endif\n  #if ROTATION_OVER_TIME_MODULE_ENABLE\n    vec3 rotTmp = a_texCoord2;\n    float mulFactor = 1.0;\n    if (rotTmp.x > 10.0 * 0.5) {\n        rotTmp.x -= 10.0;\n        mulFactor = -1.0;\n    }\n    vec4 rot = vec4(rotTmp, 0.0);\n    rot.w = mulFactor * sqrt(abs(1.0 - rot.x * rot.x - rot.y * rot.y - rot.z * rot.z));\n  #else\n    #if CC_RENDER_MODE != 4\n      #if CC_RENDER_MODE == 0\n        vec3 rotEuler = a_texCoord2;\n      #elif CC_RENDER_MODE == 1\n        vec3 rotEuler = vec3(0.);\n      #else\n        vec3 rotEuler = vec3(0., 0., a_texCoord2.z);\n      #endif\n      vec4 rot = quaternionFromEuler(rotEuler);\n    #else\n      vec4 rot = quaternionFromEuler(a_texCoord2);\n    #endif\n  #endif\n  #if CC_RENDER_MODE != 4\n    vec2 cornerOffset = vec2((a_texCoord.xy - 0.5));\n    #if CC_RENDER_MODE == 0 || CC_RENDER_MODE == 3\n      computeVertPos(pos, cornerOffset, rot, compScale, cc_matViewInv);\n    #elif CC_RENDER_MODE == 1\n      computeVertPos(pos, cornerOffset, rot, compScale, cc_cameraPos.xyz, velocity, frameTile_velLenScale.z, frameTile_velLenScale.w, a_texCoord.x);\n    #elif 2\n      computeVertPos(pos, cornerOffset, rot, compScale);\n    #endif\n    color = a_color;\n  #else\n    mat3 rotMat = quatToMat3(rot);\n    mat3 nodeMat = quatToMat3(nodeRotation);\n    rotMat = nodeMat * rotMat;\n    rot = mat3ToQuat(rotMat);\n    mat4 xformNoScale = matrixFromRT(rot, pos.xyz);\n    mat4 xform = matFromRTS(rot, pos.xyz, compScale);\n    pos = xform * vec4(a_texCoord3, 1);\n    vec4 normal = xformNoScale * vec4(a_normal, 0);\n    color = a_color * a_color1;\n  #endif\n  uv = computeUV(a_texCoord.z, a_texCoord.xy, frameTile_velLenScale.xy) * mainTiling_Offset.xy + mainTiling_Offset.zw;\n  pos = cc_matViewProj * pos;\n  return pos;\n}\nvoid main() { gl_Position = lpvs_main(); }","frag":"\nprecision mediump float;\nlayout(set = 0, binding = 0) uniform CCGlobal {\n  highp   vec4 cc_time;\n  mediump vec4 cc_screenSize;\n  mediump vec4 cc_nativeSize;\n};\nlayout(set = 0, binding = 1) uniform CCCamera {\n  highp   mat4 cc_matView;\n  highp   mat4 cc_matViewInv;\n  highp   mat4 cc_matProj;\n  highp   mat4 cc_matProjInv;\n  highp   mat4 cc_matViewProj;\n  highp   mat4 cc_matViewProjInv;\n  highp   vec4 cc_cameraPos;\n  mediump vec4 cc_screenScale;\n  mediump vec4 cc_exposure;\n  mediump vec4 cc_mainLitDir;\n  mediump vec4 cc_mainLitColor;\n  mediump vec4 cc_ambientSky;\n  mediump vec4 cc_ambientGround;\n  mediump vec4 cc_fogColor;\n  mediump vec4 cc_fogBase;\n  mediump vec4 cc_fogAdd;\n  mediump vec4 cc_nearFar;\n  mediump vec4 cc_viewPort;\n};\nvec4 CCFragOutput (vec4 color) {\n  return color;\n}\nlayout(location = 0) in vec2 uv;\nlayout(location = 1) in vec4 color;\nlayout(set = 1, binding = 2) uniform sampler2D mainTexture;\nlayout(set = 1, binding = 1) uniform FragConstants {\n  vec4 tintColor;\n};\nvec4 multiply () {\n  vec4 col;\n  vec4 texColor = texture(mainTexture, uv);\n  col.rgb = tintColor.rgb * texColor.rgb * color.rgb * vec3(2.0);\n  return CCFragOutput(col);\n}\nlayout(location = 0) out vec4 cc_FragColor;\nvoid main() { cc_FragColor = multiply(); }"},"glsl3":{"vert":"\nprecision highp float;\nvec4 quaternionFromAxis (vec3 xAxis,vec3 yAxis,vec3 zAxis){\n  mat3 m = mat3(xAxis,yAxis,zAxis);\n  float trace = m[0][0] + m[1][1] + m[2][2];\n  vec4 quat;\n  if (trace > 0.) {\n    float s = 0.5 / sqrt(trace + 1.0);\n    quat.w = 0.25 / s;\n    quat.x = (m[2][1] - m[1][2]) * s;\n    quat.y = (m[0][2] - m[2][0]) * s;\n    quat.z = (m[1][0] - m[0][1]) * s;\n  } else if ((m[0][0] > m[1][1]) && (m[0][0] > m[2][2])) {\n    float s = 2.0 * sqrt(1.0 + m[0][0] - m[1][1] - m[2][2]);\n    quat.w = (m[2][1] - m[1][2]) / s;\n    quat.x = 0.25 * s;\n    quat.y = (m[0][1] + m[1][0]) / s;\n    quat.z = (m[0][2] + m[2][0]) / s;\n  } else if (m[1][1] > m[2][2]) {\n    float s = 2.0 * sqrt(1.0 + m[1][1] - m[0][0] - m[2][2]);\n    quat.w = (m[0][2] - m[2][0]) / s;\n    quat.x = (m[0][1] + m[1][0]) / s;\n    quat.y = 0.25 * s;\n    quat.z = (m[1][2] + m[2][1]) / s;\n  } else {\n    float s = 2.0 * sqrt(1.0 + m[2][2] - m[0][0] - m[1][1]);\n    quat.w = (m[1][0] - m[0][1]) / s;\n    quat.x = (m[0][2] + m[2][0]) / s;\n    quat.y = (m[1][2] + m[2][1]) / s;\n    quat.z = 0.25 * s;\n  }\n  float len = quat.x * quat.x + quat.y * quat.y + quat.z * quat.z + quat.w * quat.w;\n  if (len > 0.) {\n    len = 1. / sqrt(len);\n    quat.x = quat.x * len;\n    quat.y = quat.y * len;\n    quat.z = quat.z * len;\n    quat.w = quat.w * len;\n  }\n  return quat;\n}\nvec4 quaternionFromEuler (vec3 angle){\n  float x = angle.x / 2.;\n  float y = angle.y / 2.;\n  float z = angle.z / 2.;\n  float sx = sin(x);\n  float cx = cos(x);\n  float sy = sin(y);\n  float cy = cos(y);\n  float sz = sin(z);\n  float cz = cos(z);\n  vec4 quat = vec4(0);\n  quat.x = sx * cy * cz + cx * sy * sz;\n  quat.y = cx * sy * cz + sx * cy * sz;\n  quat.z = cx * cy * sz - sx * sy * cz;\n  quat.w = cx * cy * cz - sx * sy * sz;\n  return quat;\n}\nmat4 matrixFromRT (vec4 q, vec3 p){\n  float x2 = q.x + q.x;\n  float y2 = q.y + q.y;\n  float z2 = q.z + q.z;\n  float xx = q.x * x2;\n  float xy = q.x * y2;\n  float xz = q.x * z2;\n  float yy = q.y * y2;\n  float yz = q.y * z2;\n  float zz = q.z * z2;\n  float wx = q.w * x2;\n  float wy = q.w * y2;\n  float wz = q.w * z2;\n  return mat4(\n    1. - (yy + zz), xy + wz, xz - wy, 0,\n    xy - wz, 1. - (xx + zz), yz + wx, 0,\n    xz + wy, yz - wx, 1. - (xx + yy), 0,\n    p.x, p.y, p.z, 1\n  );\n}\nmat4 matFromRTS (vec4 q, vec3 t, vec3 s){\n  float x = q.x, y = q.y, z = q.z, w = q.w;\n  float x2 = x + x;\n  float y2 = y + y;\n  float z2 = z + z;\n  float xx = x * x2;\n  float xy = x * y2;\n  float xz = x * z2;\n  float yy = y * y2;\n  float yz = y * z2;\n  float zz = z * z2;\n  float wx = w * x2;\n  float wy = w * y2;\n  float wz = w * z2;\n  float sx = s.x;\n  float sy = s.y;\n  float sz = s.z;\n  return mat4((1. - (yy + zz)) * sx, (xy + wz) * sx, (xz - wy) * sx, 0,\n    (xy - wz) * sy, (1. - (xx + zz)) * sy, (yz + wx) * sy, 0,\n    (xz + wy) * sz, (yz - wx) * sz, (1. - (xx + yy)) * sz, 0,\n    t.x, t.y, t.z, 1);\n}\nvec4 quatMultiply (vec4 a, vec4 b){\n  vec4 quat;\n  quat.x = a.x * b.w + a.w * b.x + a.y * b.z - a.z * b.y;\n  quat.y = a.y * b.w + a.w * b.y + a.z * b.x - a.x * b.z;\n  quat.z = a.z * b.w + a.w * b.z + a.x * b.y - a.y * b.x;\n  quat.w = a.w * b.w - a.x * b.x - a.y * b.y - a.z * b.z;\n  return quat;\n}\nvoid rotateVecFromQuat (inout vec3 v, vec4 q){\n  float ix = q.w * v.x + q.y * v.z - q.z * v.y;\n  float iy = q.w * v.y + q.z * v.x - q.x * v.z;\n  float iz = q.w * v.z + q.x * v.y - q.y * v.x;\n  float iw = -q.x * v.x - q.y * v.y - q.z * v.z;\n  v.x = ix * q.w + iw * -q.x + iy * -q.z - iz * -q.y;\n  v.y = iy * q.w + iw * -q.y + iz * -q.x - ix * -q.z;\n  v.z = iz * q.w + iw * -q.z + ix * -q.y - iy * -q.x;\n}\nvec3 rotateInLocalSpace (vec3 pos, vec3 xAxis, vec3 yAxis, vec3 zAxis, vec4 q){\n  vec4 viewQuat = quaternionFromAxis(xAxis, yAxis, zAxis);\n  vec4 rotQuat = quatMultiply(viewQuat, q);\n  rotateVecFromQuat(pos, rotQuat);\n  return pos;\n}\nmat3 quatToMat3(vec4 q) {\n  vec3 m0 = vec3(\n    1.0 - 2.0 * q.y * q.y - 2.0 * q.z * q.z,\n    2.0 * q.x * q.y + 2.0 * q.w * q.z,\n    2.0 * q.x * q.z - 2.0 * q.w * q.y);\n\tvec3 m1 = vec3(\n    2.0 * q.x * q.y - 2.0 * q.w * q.z,\n    1.0 - 2.0 * q.x * q.x - 2.0 * q.z * q.z,\n    2.0 * q.y * q.z + 2.0 * q.w * q.x);\n\tvec3 m2 = vec3(\n    2.0 * q.x * q.z + 2.0 * q.w * q.y,\n    2.0 * q.y * q.z - 2.0 * q.w * q.x,\n    1.0 - 2.0 * q.x * q.x - 2.0 * q.y * q.y);\n  return mat3(m0, m1, m2);\n}\nvec4 mat3ToQuat(mat3 mat) {\n  float tr = mat[0][0] + mat[1][1] + mat[2][2];\n\tfloat qw, qx, qy, qz;\n  if (tr > 0.0) {\n    float S = sqrt(tr + 1.0) * 2.0;\n\t  float invS = 1.0 / S;\n\t  qw = 0.25 * S;\n\t  qx = (mat[1][2] - mat[2][1]) * invS;\n\t  qy = (mat[2][0] - mat[0][2]) * invS;\n\t  qz = (mat[0][1] - mat[1][0]) * invS;\n  } else if ((mat[0][0] > mat[1][1])&&(mat[0][0] > mat[2][2])) {\n    float S = sqrt(1.0 + mat[0][0] - mat[1][1] - mat[2][2]) * 2.0;\n\t  float invS = 1.0 / S;\n\t  qw = (mat[1][2] - mat[2][1]) * invS;\n\t  qx = 0.25 * S;\n\t  qy = (mat[1][0] + mat[0][1]) * invS;\n\t  qz = (mat[2][0] + mat[0][2]) * invS;\n  } else if (mat[1][1] > mat[2][2]) {\n\t  float S = sqrt(1.0 + mat[1][1] - mat[0][0] - mat[2][2]) * 2.0;\n\t  float invS = 1.0 / S;\n\t  qw = (mat[2][0] - mat[0][2]) * invS;\n\t  qx = (mat[1][0] + mat[0][1]) * invS;\n\t  qy = 0.25 * S;\n\t  qz = (mat[2][1] + mat[1][2]) * invS;\n  } else {\n\t  float S = sqrt(1.0 + mat[2][2] - mat[0][0] - mat[1][1]) * 2.0;\n\t  float invS = 1.0 / S;\n\t  qw = (mat[0][1] - mat[1][0]) * invS;\n\t  qx = (mat[2][0] + mat[0][2]) * invS;\n\t  qy = (mat[2][1] + mat[1][2]) * invS;\n\t  qz = 0.25 * S;\n  }\n  return vec4(qx, qy, qz, qw);\n}\nlayout(std140) uniform Constants {\n  vec4 mainTiling_Offset;\n  vec4 frameTile_velLenScale;\n  vec4 scale;\n  vec4 nodeRotation;\n};\nlayout(std140) uniform CCGlobal {\n  highp   vec4 cc_time;\n  mediump vec4 cc_screenSize;\n  mediump vec4 cc_nativeSize;\n};\nlayout(std140) uniform CCCamera {\n  highp   mat4 cc_matView;\n  highp   mat4 cc_matViewInv;\n  highp   mat4 cc_matProj;\n  highp   mat4 cc_matProjInv;\n  highp   mat4 cc_matViewProj;\n  highp   mat4 cc_matViewProjInv;\n  highp   vec4 cc_cameraPos;\n  mediump vec4 cc_screenScale;\n  mediump vec4 cc_exposure;\n  mediump vec4 cc_mainLitDir;\n  mediump vec4 cc_mainLitColor;\n  mediump vec4 cc_ambientSky;\n  mediump vec4 cc_ambientGround;\n  mediump vec4 cc_fogColor;\n  mediump vec4 cc_fogBase;\n  mediump vec4 cc_fogAdd;\n  mediump vec4 cc_nearFar;\n  mediump vec4 cc_viewPort;\n};\nlayout(std140) uniform CCLocal {\n  highp mat4 cc_matWorld;\n  highp mat4 cc_matWorldIT;\n  highp vec4 cc_lightingMapUVParam;\n};\nout mediump vec2 uv;\nout mediump vec4 color;\nvoid computeVertPos (inout vec4 pos, vec2 vertOffset, vec4 q, vec3 s\n#if CC_RENDER_MODE == 0 || CC_RENDER_MODE == 3\n  , mat4 viewInv\n#endif\n#if CC_RENDER_MODE == 1\n  , vec3 eye\n  , vec4 velocity\n  , float velocityScale\n  , float lengthScale\n  , float xIndex\n#endif\n) {\n#if CC_RENDER_MODE == 0\n  vec3 viewSpaceVert = vec3(vertOffset.x * s.x, vertOffset.y * s.y, 0.);\n  vec3 camX = normalize(vec3(viewInv[0][0], viewInv[1][0], viewInv[2][0]));\n  vec3 camY = normalize(vec3(viewInv[0][1], viewInv[1][1], viewInv[2][1]));\n  vec3 camZ = normalize(vec3(viewInv[0][2], viewInv[1][2], viewInv[2][2]));\n  pos.xyz += rotateInLocalSpace(viewSpaceVert, camX, camY, camZ, q);\n#elif CC_RENDER_MODE == 1\n  vec3 camRight = normalize(cross(pos.xyz - eye, velocity.xyz)) * s.x;\n  vec3 camUp = velocity.xyz * velocityScale + normalize(velocity.xyz) * lengthScale * s.y;\n  pos.xyz += (camRight * abs(vertOffset.x) * sign(vertOffset.y)) - camUp * xIndex;\n#elif CC_RENDER_MODE == 2\n  vec3 viewSpaceVert = vec3(vertOffset.x * s.x, vertOffset.y * s.y, 0.);\n  vec3 camX = vec3(1, 0, 0);\n  vec3 camY = vec3(0, 0, -1);\n  pos.xyz += rotateInLocalSpace(viewSpaceVert, camX, camY, cross(camX, camY), q);\n#elif CC_RENDER_MODE == 3\n  vec3 viewSpaceVert = vec3(vertOffset.x * s.x, vertOffset.y * s.y, 0.);\n  rotateVecFromQuat(viewSpaceVert, q);\n  vec3 camX = normalize(vec3(cc_matView[0][0], cc_matView[1][0], cc_matView[2][0]));\n  vec3 camY = vec3(0, 1, 0);\n  vec3 offset = camX * viewSpaceVert.x + camY * viewSpaceVert.y;\n  pos.xyz += offset;\n#else\n  pos.x += vertOffset.x;\n  pos.y += vertOffset.y;\n#endif\n}\nvec2 computeUV (float frameIndex, vec2 vertIndex, vec2 frameTile){\n  vec2 aniUV = vec2(0, floor(frameIndex * frameTile.y));\n  aniUV.x = floor(frameIndex * frameTile.x * frameTile.y - aniUV.y * frameTile.x);\n#if CC_RENDER_MODE != 4\n  vertIndex.y = 1. - vertIndex.y;\n#endif\n  return (aniUV.xy + vertIndex) / vec2(frameTile.x, frameTile.y);\n}\nin vec3 a_position;\nin vec3 a_texCoord;\nin vec3 a_texCoord1;\nin vec3 a_texCoord2;\nin vec4 a_color;\n#if CC_RENDER_MODE == 1\n  in vec3 a_color1;\n#endif\n#if CC_RENDER_MODE == 4\n  in vec3 a_texCoord3;\n  in vec3 a_normal;\n  in vec4 a_color1;\n#endif\nvec4 lpvs_main () {\n  vec3 compScale = scale.xyz * a_texCoord1;\n  vec4 pos = vec4(a_position, 1);\n  #if CC_RENDER_MODE == 1\n    vec4 velocity = vec4(a_color1.xyz, 0);\n  #endif\n  #if !CC_USE_WORLD_SPACE\n    pos = cc_matWorld * pos;\n    #if CC_RENDER_MODE == 1\n      velocity = cc_matWorld * velocity;\n    #endif\n  #endif\n  #if ROTATION_OVER_TIME_MODULE_ENABLE\n    vec3 rotTmp = a_texCoord2;\n    float mulFactor = 1.0;\n    if (rotTmp.x > 10.0 * 0.5) {\n        rotTmp.x -= 10.0;\n        mulFactor = -1.0;\n    }\n    vec4 rot = vec4(rotTmp, 0.0);\n    rot.w = mulFactor * sqrt(abs(1.0 - rot.x * rot.x - rot.y * rot.y - rot.z * rot.z));\n  #else\n    #if CC_RENDER_MODE != 4\n      #if CC_RENDER_MODE == 0\n        vec3 rotEuler = a_texCoord2;\n      #elif CC_RENDER_MODE == 1\n        vec3 rotEuler = vec3(0.);\n      #else\n        vec3 rotEuler = vec3(0., 0., a_texCoord2.z);\n      #endif\n      vec4 rot = quaternionFromEuler(rotEuler);\n    #else\n      vec4 rot = quaternionFromEuler(a_texCoord2);\n    #endif\n  #endif\n  #if CC_RENDER_MODE != 4\n    vec2 cornerOffset = vec2((a_texCoord.xy - 0.5));\n    #if CC_RENDER_MODE == 0 || CC_RENDER_MODE == 3\n      computeVertPos(pos, cornerOffset, rot, compScale, cc_matViewInv);\n    #elif CC_RENDER_MODE == 1\n      computeVertPos(pos, cornerOffset, rot, compScale, cc_cameraPos.xyz, velocity, frameTile_velLenScale.z, frameTile_velLenScale.w, a_texCoord.x);\n    #elif 2\n      computeVertPos(pos, cornerOffset, rot, compScale);\n    #endif\n    color = a_color;\n  #else\n    mat3 rotMat = quatToMat3(rot);\n    mat3 nodeMat = quatToMat3(nodeRotation);\n    rotMat = nodeMat * rotMat;\n    rot = mat3ToQuat(rotMat);\n    mat4 xformNoScale = matrixFromRT(rot, pos.xyz);\n    mat4 xform = matFromRTS(rot, pos.xyz, compScale);\n    pos = xform * vec4(a_texCoord3, 1);\n    vec4 normal = xformNoScale * vec4(a_normal, 0);\n    color = a_color * a_color1;\n  #endif\n  uv = computeUV(a_texCoord.z, a_texCoord.xy, frameTile_velLenScale.xy) * mainTiling_Offset.xy + mainTiling_Offset.zw;\n  pos = cc_matViewProj * pos;\n  return pos;\n}\nvoid main() { gl_Position = lpvs_main(); }","frag":"\nprecision mediump float;\nlayout(std140) uniform CCGlobal {\n  highp   vec4 cc_time;\n  mediump vec4 cc_screenSize;\n  mediump vec4 cc_nativeSize;\n};\nlayout(std140) uniform CCCamera {\n  highp   mat4 cc_matView;\n  highp   mat4 cc_matViewInv;\n  highp   mat4 cc_matProj;\n  highp   mat4 cc_matProjInv;\n  highp   mat4 cc_matViewProj;\n  highp   mat4 cc_matViewProjInv;\n  highp   vec4 cc_cameraPos;\n  mediump vec4 cc_screenScale;\n  mediump vec4 cc_exposure;\n  mediump vec4 cc_mainLitDir;\n  mediump vec4 cc_mainLitColor;\n  mediump vec4 cc_ambientSky;\n  mediump vec4 cc_ambientGround;\n  mediump vec4 cc_fogColor;\n  mediump vec4 cc_fogBase;\n  mediump vec4 cc_fogAdd;\n  mediump vec4 cc_nearFar;\n  mediump vec4 cc_viewPort;\n};\nvec4 CCFragOutput (vec4 color) {\n  return color;\n}\nin vec2 uv;\nin vec4 color;\nuniform sampler2D mainTexture;\nlayout(std140) uniform FragConstants {\n  vec4 tintColor;\n};\nvec4 multiply () {\n  vec4 col;\n  vec4 texColor = texture(mainTexture, uv);\n  col.rgb = tintColor.rgb * texColor.rgb * color.rgb * vec3(2.0);\n  return CCFragOutput(col);\n}\nlayout(location = 0) out vec4 cc_FragColor;\nvoid main() { cc_FragColor = multiply(); }"},"glsl1":{"vert":"\nprecision highp float;\nvec4 quaternionFromAxis (vec3 xAxis,vec3 yAxis,vec3 zAxis){\n  mat3 m = mat3(xAxis,yAxis,zAxis);\n  float trace = m[0][0] + m[1][1] + m[2][2];\n  vec4 quat;\n  if (trace > 0.) {\n    float s = 0.5 / sqrt(trace + 1.0);\n    quat.w = 0.25 / s;\n    quat.x = (m[2][1] - m[1][2]) * s;\n    quat.y = (m[0][2] - m[2][0]) * s;\n    quat.z = (m[1][0] - m[0][1]) * s;\n  } else if ((m[0][0] > m[1][1]) && (m[0][0] > m[2][2])) {\n    float s = 2.0 * sqrt(1.0 + m[0][0] - m[1][1] - m[2][2]);\n    quat.w = (m[2][1] - m[1][2]) / s;\n    quat.x = 0.25 * s;\n    quat.y = (m[0][1] + m[1][0]) / s;\n    quat.z = (m[0][2] + m[2][0]) / s;\n  } else if (m[1][1] > m[2][2]) {\n    float s = 2.0 * sqrt(1.0 + m[1][1] - m[0][0] - m[2][2]);\n    quat.w = (m[0][2] - m[2][0]) / s;\n    quat.x = (m[0][1] + m[1][0]) / s;\n    quat.y = 0.25 * s;\n    quat.z = (m[1][2] + m[2][1]) / s;\n  } else {\n    float s = 2.0 * sqrt(1.0 + m[2][2] - m[0][0] - m[1][1]);\n    quat.w = (m[1][0] - m[0][1]) / s;\n    quat.x = (m[0][2] + m[2][0]) / s;\n    quat.y = (m[1][2] + m[2][1]) / s;\n    quat.z = 0.25 * s;\n  }\n  float len = quat.x * quat.x + quat.y * quat.y + quat.z * quat.z + quat.w * quat.w;\n  if (len > 0.) {\n    len = 1. / sqrt(len);\n    quat.x = quat.x * len;\n    quat.y = quat.y * len;\n    quat.z = quat.z * len;\n    quat.w = quat.w * len;\n  }\n  return quat;\n}\nvec4 quaternionFromEuler (vec3 angle){\n  float x = angle.x / 2.;\n  float y = angle.y / 2.;\n  float z = angle.z / 2.;\n  float sx = sin(x);\n  float cx = cos(x);\n  float sy = sin(y);\n  float cy = cos(y);\n  float sz = sin(z);\n  float cz = cos(z);\n  vec4 quat = vec4(0);\n  quat.x = sx * cy * cz + cx * sy * sz;\n  quat.y = cx * sy * cz + sx * cy * sz;\n  quat.z = cx * cy * sz - sx * sy * cz;\n  quat.w = cx * cy * cz - sx * sy * sz;\n  return quat;\n}\nmat4 matrixFromRT (vec4 q, vec3 p){\n  float x2 = q.x + q.x;\n  float y2 = q.y + q.y;\n  float z2 = q.z + q.z;\n  float xx = q.x * x2;\n  float xy = q.x * y2;\n  float xz = q.x * z2;\n  float yy = q.y * y2;\n  float yz = q.y * z2;\n  float zz = q.z * z2;\n  float wx = q.w * x2;\n  float wy = q.w * y2;\n  float wz = q.w * z2;\n  return mat4(\n    1. - (yy + zz), xy + wz, xz - wy, 0,\n    xy - wz, 1. - (xx + zz), yz + wx, 0,\n    xz + wy, yz - wx, 1. - (xx + yy), 0,\n    p.x, p.y, p.z, 1\n  );\n}\nmat4 matFromRTS (vec4 q, vec3 t, vec3 s){\n  float x = q.x, y = q.y, z = q.z, w = q.w;\n  float x2 = x + x;\n  float y2 = y + y;\n  float z2 = z + z;\n  float xx = x * x2;\n  float xy = x * y2;\n  float xz = x * z2;\n  float yy = y * y2;\n  float yz = y * z2;\n  float zz = z * z2;\n  float wx = w * x2;\n  float wy = w * y2;\n  float wz = w * z2;\n  float sx = s.x;\n  float sy = s.y;\n  float sz = s.z;\n  return mat4((1. - (yy + zz)) * sx, (xy + wz) * sx, (xz - wy) * sx, 0,\n    (xy - wz) * sy, (1. - (xx + zz)) * sy, (yz + wx) * sy, 0,\n    (xz + wy) * sz, (yz - wx) * sz, (1. - (xx + yy)) * sz, 0,\n    t.x, t.y, t.z, 1);\n}\nvec4 quatMultiply (vec4 a, vec4 b){\n  vec4 quat;\n  quat.x = a.x * b.w + a.w * b.x + a.y * b.z - a.z * b.y;\n  quat.y = a.y * b.w + a.w * b.y + a.z * b.x - a.x * b.z;\n  quat.z = a.z * b.w + a.w * b.z + a.x * b.y - a.y * b.x;\n  quat.w = a.w * b.w - a.x * b.x - a.y * b.y - a.z * b.z;\n  return quat;\n}\nvoid rotateVecFromQuat (inout vec3 v, vec4 q){\n  float ix = q.w * v.x + q.y * v.z - q.z * v.y;\n  float iy = q.w * v.y + q.z * v.x - q.x * v.z;\n  float iz = q.w * v.z + q.x * v.y - q.y * v.x;\n  float iw = -q.x * v.x - q.y * v.y - q.z * v.z;\n  v.x = ix * q.w + iw * -q.x + iy * -q.z - iz * -q.y;\n  v.y = iy * q.w + iw * -q.y + iz * -q.x - ix * -q.z;\n  v.z = iz * q.w + iw * -q.z + ix * -q.y - iy * -q.x;\n}\nvec3 rotateInLocalSpace (vec3 pos, vec3 xAxis, vec3 yAxis, vec3 zAxis, vec4 q){\n  vec4 viewQuat = quaternionFromAxis(xAxis, yAxis, zAxis);\n  vec4 rotQuat = quatMultiply(viewQuat, q);\n  rotateVecFromQuat(pos, rotQuat);\n  return pos;\n}\nmat3 quatToMat3(vec4 q) {\n  vec3 m0 = vec3(\n    1.0 - 2.0 * q.y * q.y - 2.0 * q.z * q.z,\n    2.0 * q.x * q.y + 2.0 * q.w * q.z,\n    2.0 * q.x * q.z - 2.0 * q.w * q.y);\n\tvec3 m1 = vec3(\n    2.0 * q.x * q.y - 2.0 * q.w * q.z,\n    1.0 - 2.0 * q.x * q.x - 2.0 * q.z * q.z,\n    2.0 * q.y * q.z + 2.0 * q.w * q.x);\n\tvec3 m2 = vec3(\n    2.0 * q.x * q.z + 2.0 * q.w * q.y,\n    2.0 * q.y * q.z - 2.0 * q.w * q.x,\n    1.0 - 2.0 * q.x * q.x - 2.0 * q.y * q.y);\n  return mat3(m0, m1, m2);\n}\nvec4 mat3ToQuat(mat3 mat) {\n  float tr = mat[0][0] + mat[1][1] + mat[2][2];\n\tfloat qw, qx, qy, qz;\n  if (tr > 0.0) {\n    float S = sqrt(tr + 1.0) * 2.0;\n\t  float invS = 1.0 / S;\n\t  qw = 0.25 * S;\n\t  qx = (mat[1][2] - mat[2][1]) * invS;\n\t  qy = (mat[2][0] - mat[0][2]) * invS;\n\t  qz = (mat[0][1] - mat[1][0]) * invS;\n  } else if ((mat[0][0] > mat[1][1])&&(mat[0][0] > mat[2][2])) {\n    float S = sqrt(1.0 + mat[0][0] - mat[1][1] - mat[2][2]) * 2.0;\n\t  float invS = 1.0 / S;\n\t  qw = (mat[1][2] - mat[2][1]) * invS;\n\t  qx = 0.25 * S;\n\t  qy = (mat[1][0] + mat[0][1]) * invS;\n\t  qz = (mat[2][0] + mat[0][2]) * invS;\n  } else if (mat[1][1] > mat[2][2]) {\n\t  float S = sqrt(1.0 + mat[1][1] - mat[0][0] - mat[2][2]) * 2.0;\n\t  float invS = 1.0 / S;\n\t  qw = (mat[2][0] - mat[0][2]) * invS;\n\t  qx = (mat[1][0] + mat[0][1]) * invS;\n\t  qy = 0.25 * S;\n\t  qz = (mat[2][1] + mat[1][2]) * invS;\n  } else {\n\t  float S = sqrt(1.0 + mat[2][2] - mat[0][0] - mat[1][1]) * 2.0;\n\t  float invS = 1.0 / S;\n\t  qw = (mat[0][1] - mat[1][0]) * invS;\n\t  qx = (mat[2][0] + mat[0][2]) * invS;\n\t  qy = (mat[2][1] + mat[1][2]) * invS;\n\t  qz = 0.25 * S;\n  }\n  return vec4(qx, qy, qz, qw);\n}\n   uniform vec4 mainTiling_Offset;\n   uniform vec4 frameTile_velLenScale;\n   uniform vec4 scale;\n   uniform vec4 nodeRotation;\nuniform highp mat4 cc_matView;\n  uniform highp mat4 cc_matViewInv;\n  uniform highp mat4 cc_matViewProj;\n  uniform highp vec4 cc_cameraPos;\nuniform highp mat4 cc_matWorld;\nvarying mediump vec2 uv;\nvarying mediump vec4 color;\nvoid computeVertPos (inout vec4 pos, vec2 vertOffset, vec4 q, vec3 s\n#if CC_RENDER_MODE == 0 || CC_RENDER_MODE == 3\n  , mat4 viewInv\n#endif\n#if CC_RENDER_MODE == 1\n  , vec3 eye\n  , vec4 velocity\n  , float velocityScale\n  , float lengthScale\n  , float xIndex\n#endif\n) {\n#if CC_RENDER_MODE == 0\n  vec3 viewSpaceVert = vec3(vertOffset.x * s.x, vertOffset.y * s.y, 0.);\n  vec3 camX = normalize(vec3(viewInv[0][0], viewInv[1][0], viewInv[2][0]));\n  vec3 camY = normalize(vec3(viewInv[0][1], viewInv[1][1], viewInv[2][1]));\n  vec3 camZ = normalize(vec3(viewInv[0][2], viewInv[1][2], viewInv[2][2]));\n  pos.xyz += rotateInLocalSpace(viewSpaceVert, camX, camY, camZ, q);\n#elif CC_RENDER_MODE == 1\n  vec3 camRight = normalize(cross(pos.xyz - eye, velocity.xyz)) * s.x;\n  vec3 camUp = velocity.xyz * velocityScale + normalize(velocity.xyz) * lengthScale * s.y;\n  pos.xyz += (camRight * abs(vertOffset.x) * sign(vertOffset.y)) - camUp * xIndex;\n#elif CC_RENDER_MODE == 2\n  vec3 viewSpaceVert = vec3(vertOffset.x * s.x, vertOffset.y * s.y, 0.);\n  vec3 camX = vec3(1, 0, 0);\n  vec3 camY = vec3(0, 0, -1);\n  pos.xyz += rotateInLocalSpace(viewSpaceVert, camX, camY, cross(camX, camY), q);\n#elif CC_RENDER_MODE == 3\n  vec3 viewSpaceVert = vec3(vertOffset.x * s.x, vertOffset.y * s.y, 0.);\n  rotateVecFromQuat(viewSpaceVert, q);\n  vec3 camX = normalize(vec3(cc_matView[0][0], cc_matView[1][0], cc_matView[2][0]));\n  vec3 camY = vec3(0, 1, 0);\n  vec3 offset = camX * viewSpaceVert.x + camY * viewSpaceVert.y;\n  pos.xyz += offset;\n#else\n  pos.x += vertOffset.x;\n  pos.y += vertOffset.y;\n#endif\n}\nvec2 computeUV (float frameIndex, vec2 vertIndex, vec2 frameTile){\n  vec2 aniUV = vec2(0, floor(frameIndex * frameTile.y));\n  aniUV.x = floor(frameIndex * frameTile.x * frameTile.y - aniUV.y * frameTile.x);\n#if CC_RENDER_MODE != 4\n  vertIndex.y = 1. - vertIndex.y;\n#endif\n  return (aniUV.xy + vertIndex) / vec2(frameTile.x, frameTile.y);\n}\nattribute vec3 a_position;\nattribute vec3 a_texCoord;\nattribute vec3 a_texCoord1;\nattribute vec3 a_texCoord2;\nattribute vec4 a_color;\n#if CC_RENDER_MODE == 1\n  attribute vec3 a_color1;\n#endif\n#if CC_RENDER_MODE == 4\n  attribute vec3 a_texCoord3;\n  attribute vec3 a_normal;\n  attribute vec4 a_color1;\n#endif\nvec4 lpvs_main () {\n  vec3 compScale = scale.xyz * a_texCoord1;\n  vec4 pos = vec4(a_position, 1);\n  #if CC_RENDER_MODE == 1\n    vec4 velocity = vec4(a_color1.xyz, 0);\n  #endif\n  #if !CC_USE_WORLD_SPACE\n    pos = cc_matWorld * pos;\n    #if CC_RENDER_MODE == 1\n      velocity = cc_matWorld * velocity;\n    #endif\n  #endif\n  #if ROTATION_OVER_TIME_MODULE_ENABLE\n    vec3 rotTmp = a_texCoord2;\n    float mulFactor = 1.0;\n    if (rotTmp.x > 10.0 * 0.5) {\n        rotTmp.x -= 10.0;\n        mulFactor = -1.0;\n    }\n    vec4 rot = vec4(rotTmp, 0.0);\n    rot.w = mulFactor * sqrt(abs(1.0 - rot.x * rot.x - rot.y * rot.y - rot.z * rot.z));\n  #else\n    #if CC_RENDER_MODE != 4\n      #if CC_RENDER_MODE == 0\n        vec3 rotEuler = a_texCoord2;\n      #elif CC_RENDER_MODE == 1\n        vec3 rotEuler = vec3(0.);\n      #else\n        vec3 rotEuler = vec3(0., 0., a_texCoord2.z);\n      #endif\n      vec4 rot = quaternionFromEuler(rotEuler);\n    #else\n      vec4 rot = quaternionFromEuler(a_texCoord2);\n    #endif\n  #endif\n  #if CC_RENDER_MODE != 4\n    vec2 cornerOffset = vec2((a_texCoord.xy - 0.5));\n    #if CC_RENDER_MODE == 0 || CC_RENDER_MODE == 3\n      computeVertPos(pos, cornerOffset, rot, compScale, cc_matViewInv);\n    #elif CC_RENDER_MODE == 1\n      computeVertPos(pos, cornerOffset, rot, compScale, cc_cameraPos.xyz, velocity, frameTile_velLenScale.z, frameTile_velLenScale.w, a_texCoord.x);\n    #elif 2\n      computeVertPos(pos, cornerOffset, rot, compScale);\n    #endif\n    color = a_color;\n  #else\n    mat3 rotMat = quatToMat3(rot);\n    mat3 nodeMat = quatToMat3(nodeRotation);\n    rotMat = nodeMat * rotMat;\n    rot = mat3ToQuat(rotMat);\n    mat4 xformNoScale = matrixFromRT(rot, pos.xyz);\n    mat4 xform = matFromRTS(rot, pos.xyz, compScale);\n    pos = xform * vec4(a_texCoord3, 1);\n    vec4 normal = xformNoScale * vec4(a_normal, 0);\n    color = a_color * a_color1;\n  #endif\n  uv = computeUV(a_texCoord.z, a_texCoord.xy, frameTile_velLenScale.xy) * mainTiling_Offset.xy + mainTiling_Offset.zw;\n  pos = cc_matViewProj * pos;\n  return pos;\n}\nvoid main() { gl_Position = lpvs_main(); }","frag":"\nprecision mediump float;\nvec4 CCFragOutput (vec4 color) {\n  return color;\n}\nvarying vec2 uv;\nvarying vec4 color;\nuniform sampler2D mainTexture;\n  uniform vec4 tintColor;\nvec4 multiply () {\n  vec4 col;\n  vec4 texColor = texture2D(mainTexture, uv);\n  col.rgb = tintColor.rgb * texColor.rgb * color.rgb * vec3(2.0);\n  return CCFragOutput(col);\n}\nvoid main() { gl_FragColor = multiply(); }"},"builtins":{"globals":{"blocks":[{"name":"CCGlobal","defines":[]},{"name":"CCCamera","defines":[]}],"samplerTextures":[],"buffers":[],"images":[]},"locals":{"blocks":[{"name":"CCLocal","defines":[]}],"samplerTextures":[],"buffers":[],"images":[]},"statistics":{"CC_EFFECT_USED_VERTEX_UNIFORM_VECTORS":52,"CC_EFFECT_USED_FRAGMENT_UNIFORM_VECTORS":40}},"defines":[{"name":"CC_RENDER_MODE","type":"number","defines":[],"range":[0,4]},{"name":"CC_USE_WORLD_SPACE","type":"boolean","defines":[]},{"name":"ROTATION_OVER_TIME_MODULE_ENABLE","type":"boolean","defines":[]}]},{"hash":1759026248,"name":"builtin-particle|particle-vs-legacy:lpvs_main|no-tint-fs:addSmooth","blocks":[{"name":"Constants","stageFlags":1,"binding":0,"members":[{"name":"mainTiling_Offset","type":16,"count":1},{"name":"frameTile_velLenScale","type":16,"count":1},{"name":"scale","type":16,"count":1},{"name":"nodeRotation","type":16,"count":1}],"defines":[]}],"samplerTextures":[{"name":"mainTexture","type":28,"count":1,"stageFlags":16,"binding":1,"defines":[]}],"samplers":[],"textures":[],"buffers":[],"images":[],"subpassInputs":[],"attributes":[{"name":"a_position","format":32,"location":0,"defines":[]},{"name":"a_texCoord","format":32,"location":1,"defines":[]},{"name":"a_texCoord1","format":32,"location":2,"defines":[]},{"name":"a_texCoord2","format":32,"location":3,"defines":[]},{"name":"a_color","format":44,"location":4,"defines":[]},{"name":"a_color1","format":32,"location":8,"defines":["CC_RENDER_MODE"]},{"name":"a_texCoord3","format":32,"location":6,"defines":["CC_RENDER_MODE"]},{"name":"a_normal","format":32,"location":7,"defines":["CC_RENDER_MODE"]}],"varyings":[{"name":"uv","type":14,"count":1,"stageFlags":17,"location":0,"defines":[]},{"name":"color","type":16,"count":1,"stageFlags":17,"location":1,"defines":[]}],"fragColors":[{"name":"cc_FragColor","typename":"vec4","type":16,"count":1,"stageFlags":16,"location":0,"defines":[]}],"glsl4":{"vert":"\nprecision highp float;\nvec4 quaternionFromAxis (vec3 xAxis,vec3 yAxis,vec3 zAxis){\n  mat3 m = mat3(xAxis,yAxis,zAxis);\n  float trace = m[0][0] + m[1][1] + m[2][2];\n  vec4 quat;\n  if (trace > 0.) {\n    float s = 0.5 / sqrt(trace + 1.0);\n    quat.w = 0.25 / s;\n    quat.x = (m[2][1] - m[1][2]) * s;\n    quat.y = (m[0][2] - m[2][0]) * s;\n    quat.z = (m[1][0] - m[0][1]) * s;\n  } else if ((m[0][0] > m[1][1]) && (m[0][0] > m[2][2])) {\n    float s = 2.0 * sqrt(1.0 + m[0][0] - m[1][1] - m[2][2]);\n    quat.w = (m[2][1] - m[1][2]) / s;\n    quat.x = 0.25 * s;\n    quat.y = (m[0][1] + m[1][0]) / s;\n    quat.z = (m[0][2] + m[2][0]) / s;\n  } else if (m[1][1] > m[2][2]) {\n    float s = 2.0 * sqrt(1.0 + m[1][1] - m[0][0] - m[2][2]);\n    quat.w = (m[0][2] - m[2][0]) / s;\n    quat.x = (m[0][1] + m[1][0]) / s;\n    quat.y = 0.25 * s;\n    quat.z = (m[1][2] + m[2][1]) / s;\n  } else {\n    float s = 2.0 * sqrt(1.0 + m[2][2] - m[0][0] - m[1][1]);\n    quat.w = (m[1][0] - m[0][1]) / s;\n    quat.x = (m[0][2] + m[2][0]) / s;\n    quat.y = (m[1][2] + m[2][1]) / s;\n    quat.z = 0.25 * s;\n  }\n  float len = quat.x * quat.x + quat.y * quat.y + quat.z * quat.z + quat.w * quat.w;\n  if (len > 0.) {\n    len = 1. / sqrt(len);\n    quat.x = quat.x * len;\n    quat.y = quat.y * len;\n    quat.z = quat.z * len;\n    quat.w = quat.w * len;\n  }\n  return quat;\n}\nvec4 quaternionFromEuler (vec3 angle){\n  float x = angle.x / 2.;\n  float y = angle.y / 2.;\n  float z = angle.z / 2.;\n  float sx = sin(x);\n  float cx = cos(x);\n  float sy = sin(y);\n  float cy = cos(y);\n  float sz = sin(z);\n  float cz = cos(z);\n  vec4 quat = vec4(0);\n  quat.x = sx * cy * cz + cx * sy * sz;\n  quat.y = cx * sy * cz + sx * cy * sz;\n  quat.z = cx * cy * sz - sx * sy * cz;\n  quat.w = cx * cy * cz - sx * sy * sz;\n  return quat;\n}\nmat4 matrixFromRT (vec4 q, vec3 p){\n  float x2 = q.x + q.x;\n  float y2 = q.y + q.y;\n  float z2 = q.z + q.z;\n  float xx = q.x * x2;\n  float xy = q.x * y2;\n  float xz = q.x * z2;\n  float yy = q.y * y2;\n  float yz = q.y * z2;\n  float zz = q.z * z2;\n  float wx = q.w * x2;\n  float wy = q.w * y2;\n  float wz = q.w * z2;\n  return mat4(\n    1. - (yy + zz), xy + wz, xz - wy, 0,\n    xy - wz, 1. - (xx + zz), yz + wx, 0,\n    xz + wy, yz - wx, 1. - (xx + yy), 0,\n    p.x, p.y, p.z, 1\n  );\n}\nmat4 matFromRTS (vec4 q, vec3 t, vec3 s){\n  float x = q.x, y = q.y, z = q.z, w = q.w;\n  float x2 = x + x;\n  float y2 = y + y;\n  float z2 = z + z;\n  float xx = x * x2;\n  float xy = x * y2;\n  float xz = x * z2;\n  float yy = y * y2;\n  float yz = y * z2;\n  float zz = z * z2;\n  float wx = w * x2;\n  float wy = w * y2;\n  float wz = w * z2;\n  float sx = s.x;\n  float sy = s.y;\n  float sz = s.z;\n  return mat4((1. - (yy + zz)) * sx, (xy + wz) * sx, (xz - wy) * sx, 0,\n    (xy - wz) * sy, (1. - (xx + zz)) * sy, (yz + wx) * sy, 0,\n    (xz + wy) * sz, (yz - wx) * sz, (1. - (xx + yy)) * sz, 0,\n    t.x, t.y, t.z, 1);\n}\nvec4 quatMultiply (vec4 a, vec4 b){\n  vec4 quat;\n  quat.x = a.x * b.w + a.w * b.x + a.y * b.z - a.z * b.y;\n  quat.y = a.y * b.w + a.w * b.y + a.z * b.x - a.x * b.z;\n  quat.z = a.z * b.w + a.w * b.z + a.x * b.y - a.y * b.x;\n  quat.w = a.w * b.w - a.x * b.x - a.y * b.y - a.z * b.z;\n  return quat;\n}\nvoid rotateVecFromQuat (inout vec3 v, vec4 q){\n  float ix = q.w * v.x + q.y * v.z - q.z * v.y;\n  float iy = q.w * v.y + q.z * v.x - q.x * v.z;\n  float iz = q.w * v.z + q.x * v.y - q.y * v.x;\n  float iw = -q.x * v.x - q.y * v.y - q.z * v.z;\n  v.x = ix * q.w + iw * -q.x + iy * -q.z - iz * -q.y;\n  v.y = iy * q.w + iw * -q.y + iz * -q.x - ix * -q.z;\n  v.z = iz * q.w + iw * -q.z + ix * -q.y - iy * -q.x;\n}\nvec3 rotateInLocalSpace (vec3 pos, vec3 xAxis, vec3 yAxis, vec3 zAxis, vec4 q){\n  vec4 viewQuat = quaternionFromAxis(xAxis, yAxis, zAxis);\n  vec4 rotQuat = quatMultiply(viewQuat, q);\n  rotateVecFromQuat(pos, rotQuat);\n  return pos;\n}\nmat3 quatToMat3(vec4 q) {\n  vec3 m0 = vec3(\n    1.0 - 2.0 * q.y * q.y - 2.0 * q.z * q.z,\n    2.0 * q.x * q.y + 2.0 * q.w * q.z,\n    2.0 * q.x * q.z - 2.0 * q.w * q.y);\n\tvec3 m1 = vec3(\n    2.0 * q.x * q.y - 2.0 * q.w * q.z,\n    1.0 - 2.0 * q.x * q.x - 2.0 * q.z * q.z,\n    2.0 * q.y * q.z + 2.0 * q.w * q.x);\n\tvec3 m2 = vec3(\n    2.0 * q.x * q.z + 2.0 * q.w * q.y,\n    2.0 * q.y * q.z - 2.0 * q.w * q.x,\n    1.0 - 2.0 * q.x * q.x - 2.0 * q.y * q.y);\n  return mat3(m0, m1, m2);\n}\nvec4 mat3ToQuat(mat3 mat) {\n  float tr = mat[0][0] + mat[1][1] + mat[2][2];\n\tfloat qw, qx, qy, qz;\n  if (tr > 0.0) {\n    float S = sqrt(tr + 1.0) * 2.0;\n\t  float invS = 1.0 / S;\n\t  qw = 0.25 * S;\n\t  qx = (mat[1][2] - mat[2][1]) * invS;\n\t  qy = (mat[2][0] - mat[0][2]) * invS;\n\t  qz = (mat[0][1] - mat[1][0]) * invS;\n  } else if ((mat[0][0] > mat[1][1])&&(mat[0][0] > mat[2][2])) {\n    float S = sqrt(1.0 + mat[0][0] - mat[1][1] - mat[2][2]) * 2.0;\n\t  float invS = 1.0 / S;\n\t  qw = (mat[1][2] - mat[2][1]) * invS;\n\t  qx = 0.25 * S;\n\t  qy = (mat[1][0] + mat[0][1]) * invS;\n\t  qz = (mat[2][0] + mat[0][2]) * invS;\n  } else if (mat[1][1] > mat[2][2]) {\n\t  float S = sqrt(1.0 + mat[1][1] - mat[0][0] - mat[2][2]) * 2.0;\n\t  float invS = 1.0 / S;\n\t  qw = (mat[2][0] - mat[0][2]) * invS;\n\t  qx = (mat[1][0] + mat[0][1]) * invS;\n\t  qy = 0.25 * S;\n\t  qz = (mat[2][1] + mat[1][2]) * invS;\n  } else {\n\t  float S = sqrt(1.0 + mat[2][2] - mat[0][0] - mat[1][1]) * 2.0;\n\t  float invS = 1.0 / S;\n\t  qw = (mat[0][1] - mat[1][0]) * invS;\n\t  qx = (mat[2][0] + mat[0][2]) * invS;\n\t  qy = (mat[2][1] + mat[1][2]) * invS;\n\t  qz = 0.25 * S;\n  }\n  return vec4(qx, qy, qz, qw);\n}\nlayout(set = 1, binding = 0) uniform Constants {\n  vec4 mainTiling_Offset;\n  vec4 frameTile_velLenScale;\n  vec4 scale;\n  vec4 nodeRotation;\n};\nlayout(set = 0, binding = 0) uniform CCGlobal {\n  highp   vec4 cc_time;\n  mediump vec4 cc_screenSize;\n  mediump vec4 cc_nativeSize;\n};\nlayout(set = 0, binding = 1) uniform CCCamera {\n  highp   mat4 cc_matView;\n  highp   mat4 cc_matViewInv;\n  highp   mat4 cc_matProj;\n  highp   mat4 cc_matProjInv;\n  highp   mat4 cc_matViewProj;\n  highp   mat4 cc_matViewProjInv;\n  highp   vec4 cc_cameraPos;\n  mediump vec4 cc_screenScale;\n  mediump vec4 cc_exposure;\n  mediump vec4 cc_mainLitDir;\n  mediump vec4 cc_mainLitColor;\n  mediump vec4 cc_ambientSky;\n  mediump vec4 cc_ambientGround;\n  mediump vec4 cc_fogColor;\n  mediump vec4 cc_fogBase;\n  mediump vec4 cc_fogAdd;\n  mediump vec4 cc_nearFar;\n  mediump vec4 cc_viewPort;\n};\nlayout(set = 2, binding = 0) uniform CCLocal {\n  highp mat4 cc_matWorld;\n  highp mat4 cc_matWorldIT;\n  highp vec4 cc_lightingMapUVParam;\n};\nlayout(location = 0) out mediump vec2 uv;\nlayout(location = 1) out mediump vec4 color;\nvoid computeVertPos (inout vec4 pos, vec2 vertOffset, vec4 q, vec3 s\n#if CC_RENDER_MODE == 0 || CC_RENDER_MODE == 3\n  , mat4 viewInv\n#endif\n#if CC_RENDER_MODE == 1\n  , vec3 eye\n  , vec4 velocity\n  , float velocityScale\n  , float lengthScale\n  , float xIndex\n#endif\n) {\n#if CC_RENDER_MODE == 0\n  vec3 viewSpaceVert = vec3(vertOffset.x * s.x, vertOffset.y * s.y, 0.);\n  vec3 camX = normalize(vec3(viewInv[0][0], viewInv[1][0], viewInv[2][0]));\n  vec3 camY = normalize(vec3(viewInv[0][1], viewInv[1][1], viewInv[2][1]));\n  vec3 camZ = normalize(vec3(viewInv[0][2], viewInv[1][2], viewInv[2][2]));\n  pos.xyz += rotateInLocalSpace(viewSpaceVert, camX, camY, camZ, q);\n#elif CC_RENDER_MODE == 1\n  vec3 camRight = normalize(cross(pos.xyz - eye, velocity.xyz)) * s.x;\n  vec3 camUp = velocity.xyz * velocityScale + normalize(velocity.xyz) * lengthScale * s.y;\n  pos.xyz += (camRight * abs(vertOffset.x) * sign(vertOffset.y)) - camUp * xIndex;\n#elif CC_RENDER_MODE == 2\n  vec3 viewSpaceVert = vec3(vertOffset.x * s.x, vertOffset.y * s.y, 0.);\n  vec3 camX = vec3(1, 0, 0);\n  vec3 camY = vec3(0, 0, -1);\n  pos.xyz += rotateInLocalSpace(viewSpaceVert, camX, camY, cross(camX, camY), q);\n#elif CC_RENDER_MODE == 3\n  vec3 viewSpaceVert = vec3(vertOffset.x * s.x, vertOffset.y * s.y, 0.);\n  rotateVecFromQuat(viewSpaceVert, q);\n  vec3 camX = normalize(vec3(cc_matView[0][0], cc_matView[1][0], cc_matView[2][0]));\n  vec3 camY = vec3(0, 1, 0);\n  vec3 offset = camX * viewSpaceVert.x + camY * viewSpaceVert.y;\n  pos.xyz += offset;\n#else\n  pos.x += vertOffset.x;\n  pos.y += vertOffset.y;\n#endif\n}\nvec2 computeUV (float frameIndex, vec2 vertIndex, vec2 frameTile){\n  vec2 aniUV = vec2(0, floor(frameIndex * frameTile.y));\n  aniUV.x = floor(frameIndex * frameTile.x * frameTile.y - aniUV.y * frameTile.x);\n#if CC_RENDER_MODE != 4\n  vertIndex.y = 1. - vertIndex.y;\n#endif\n  return (aniUV.xy + vertIndex) / vec2(frameTile.x, frameTile.y);\n}\nlayout(location = 0) in vec3 a_position;\nlayout(location = 1) in vec3 a_texCoord;\nlayout(location = 2) in vec3 a_texCoord1;\nlayout(location = 3) in vec3 a_texCoord2;\nlayout(location = 4) in vec4 a_color;\n#if CC_RENDER_MODE == 1\n  layout(location = 8) in vec3 a_color1;\n#endif\n#if CC_RENDER_MODE == 4\n  layout(location = 6) in vec3 a_texCoord3;\n  layout(location = 7) in vec3 a_normal;\n  layout(location = 8) in vec4 a_color1;\n#endif\nvec4 lpvs_main () {\n  vec3 compScale = scale.xyz * a_texCoord1;\n  vec4 pos = vec4(a_position, 1);\n  #if CC_RENDER_MODE == 1\n    vec4 velocity = vec4(a_color1.xyz, 0);\n  #endif\n  #if !CC_USE_WORLD_SPACE\n    pos = cc_matWorld * pos;\n    #if CC_RENDER_MODE == 1\n      velocity = cc_matWorld * velocity;\n    #endif\n  #endif\n  #if ROTATION_OVER_TIME_MODULE_ENABLE\n    vec3 rotTmp = a_texCoord2;\n    float mulFactor = 1.0;\n    if (rotTmp.x > 10.0 * 0.5) {\n        rotTmp.x -= 10.0;\n        mulFactor = -1.0;\n    }\n    vec4 rot = vec4(rotTmp, 0.0);\n    rot.w = mulFactor * sqrt(abs(1.0 - rot.x * rot.x - rot.y * rot.y - rot.z * rot.z));\n  #else\n    #if CC_RENDER_MODE != 4\n      #if CC_RENDER_MODE == 0\n        vec3 rotEuler = a_texCoord2;\n      #elif CC_RENDER_MODE == 1\n        vec3 rotEuler = vec3(0.);\n      #else\n        vec3 rotEuler = vec3(0., 0., a_texCoord2.z);\n      #endif\n      vec4 rot = quaternionFromEuler(rotEuler);\n    #else\n      vec4 rot = quaternionFromEuler(a_texCoord2);\n    #endif\n  #endif\n  #if CC_RENDER_MODE != 4\n    vec2 cornerOffset = vec2((a_texCoord.xy - 0.5));\n    #if CC_RENDER_MODE == 0 || CC_RENDER_MODE == 3\n      computeVertPos(pos, cornerOffset, rot, compScale, cc_matViewInv);\n    #elif CC_RENDER_MODE == 1\n      computeVertPos(pos, cornerOffset, rot, compScale, cc_cameraPos.xyz, velocity, frameTile_velLenScale.z, frameTile_velLenScale.w, a_texCoord.x);\n    #elif 2\n      computeVertPos(pos, cornerOffset, rot, compScale);\n    #endif\n    color = a_color;\n  #else\n    mat3 rotMat = quatToMat3(rot);\n    mat3 nodeMat = quatToMat3(nodeRotation);\n    rotMat = nodeMat * rotMat;\n    rot = mat3ToQuat(rotMat);\n    mat4 xformNoScale = matrixFromRT(rot, pos.xyz);\n    mat4 xform = matFromRTS(rot, pos.xyz, compScale);\n    pos = xform * vec4(a_texCoord3, 1);\n    vec4 normal = xformNoScale * vec4(a_normal, 0);\n    color = a_color * a_color1;\n  #endif\n  uv = computeUV(a_texCoord.z, a_texCoord.xy, frameTile_velLenScale.xy) * mainTiling_Offset.xy + mainTiling_Offset.zw;\n  pos = cc_matViewProj * pos;\n  return pos;\n}\nvoid main() { gl_Position = lpvs_main(); }","frag":"\nprecision mediump float;\nlayout(set = 0, binding = 0) uniform CCGlobal {\n  highp   vec4 cc_time;\n  mediump vec4 cc_screenSize;\n  mediump vec4 cc_nativeSize;\n};\nlayout(set = 0, binding = 1) uniform CCCamera {\n  highp   mat4 cc_matView;\n  highp   mat4 cc_matViewInv;\n  highp   mat4 cc_matProj;\n  highp   mat4 cc_matProjInv;\n  highp   mat4 cc_matViewProj;\n  highp   mat4 cc_matViewProjInv;\n  highp   vec4 cc_cameraPos;\n  mediump vec4 cc_screenScale;\n  mediump vec4 cc_exposure;\n  mediump vec4 cc_mainLitDir;\n  mediump vec4 cc_mainLitColor;\n  mediump vec4 cc_ambientSky;\n  mediump vec4 cc_ambientGround;\n  mediump vec4 cc_fogColor;\n  mediump vec4 cc_fogBase;\n  mediump vec4 cc_fogAdd;\n  mediump vec4 cc_nearFar;\n  mediump vec4 cc_viewPort;\n};\nvec4 CCFragOutput (vec4 color) {\n  return color;\n}\nlayout(location = 0) in vec2 uv;\nlayout(location = 1) in vec4 color;\nlayout(set = 1, binding = 1) uniform sampler2D mainTexture;\nvec4 addSmooth () {\n  vec4 col = color * texture(mainTexture, uv);\n  col.rgb *= col.a;\n  return CCFragOutput(col);\n}\nlayout(location = 0) out vec4 cc_FragColor;\nvoid main() { cc_FragColor = addSmooth(); }"},"glsl3":{"vert":"\nprecision highp float;\nvec4 quaternionFromAxis (vec3 xAxis,vec3 yAxis,vec3 zAxis){\n  mat3 m = mat3(xAxis,yAxis,zAxis);\n  float trace = m[0][0] + m[1][1] + m[2][2];\n  vec4 quat;\n  if (trace > 0.) {\n    float s = 0.5 / sqrt(trace + 1.0);\n    quat.w = 0.25 / s;\n    quat.x = (m[2][1] - m[1][2]) * s;\n    quat.y = (m[0][2] - m[2][0]) * s;\n    quat.z = (m[1][0] - m[0][1]) * s;\n  } else if ((m[0][0] > m[1][1]) && (m[0][0] > m[2][2])) {\n    float s = 2.0 * sqrt(1.0 + m[0][0] - m[1][1] - m[2][2]);\n    quat.w = (m[2][1] - m[1][2]) / s;\n    quat.x = 0.25 * s;\n    quat.y = (m[0][1] + m[1][0]) / s;\n    quat.z = (m[0][2] + m[2][0]) / s;\n  } else if (m[1][1] > m[2][2]) {\n    float s = 2.0 * sqrt(1.0 + m[1][1] - m[0][0] - m[2][2]);\n    quat.w = (m[0][2] - m[2][0]) / s;\n    quat.x = (m[0][1] + m[1][0]) / s;\n    quat.y = 0.25 * s;\n    quat.z = (m[1][2] + m[2][1]) / s;\n  } else {\n    float s = 2.0 * sqrt(1.0 + m[2][2] - m[0][0] - m[1][1]);\n    quat.w = (m[1][0] - m[0][1]) / s;\n    quat.x = (m[0][2] + m[2][0]) / s;\n    quat.y = (m[1][2] + m[2][1]) / s;\n    quat.z = 0.25 * s;\n  }\n  float len = quat.x * quat.x + quat.y * quat.y + quat.z * quat.z + quat.w * quat.w;\n  if (len > 0.) {\n    len = 1. / sqrt(len);\n    quat.x = quat.x * len;\n    quat.y = quat.y * len;\n    quat.z = quat.z * len;\n    quat.w = quat.w * len;\n  }\n  return quat;\n}\nvec4 quaternionFromEuler (vec3 angle){\n  float x = angle.x / 2.;\n  float y = angle.y / 2.;\n  float z = angle.z / 2.;\n  float sx = sin(x);\n  float cx = cos(x);\n  float sy = sin(y);\n  float cy = cos(y);\n  float sz = sin(z);\n  float cz = cos(z);\n  vec4 quat = vec4(0);\n  quat.x = sx * cy * cz + cx * sy * sz;\n  quat.y = cx * sy * cz + sx * cy * sz;\n  quat.z = cx * cy * sz - sx * sy * cz;\n  quat.w = cx * cy * cz - sx * sy * sz;\n  return quat;\n}\nmat4 matrixFromRT (vec4 q, vec3 p){\n  float x2 = q.x + q.x;\n  float y2 = q.y + q.y;\n  float z2 = q.z + q.z;\n  float xx = q.x * x2;\n  float xy = q.x * y2;\n  float xz = q.x * z2;\n  float yy = q.y * y2;\n  float yz = q.y * z2;\n  float zz = q.z * z2;\n  float wx = q.w * x2;\n  float wy = q.w * y2;\n  float wz = q.w * z2;\n  return mat4(\n    1. - (yy + zz), xy + wz, xz - wy, 0,\n    xy - wz, 1. - (xx + zz), yz + wx, 0,\n    xz + wy, yz - wx, 1. - (xx + yy), 0,\n    p.x, p.y, p.z, 1\n  );\n}\nmat4 matFromRTS (vec4 q, vec3 t, vec3 s){\n  float x = q.x, y = q.y, z = q.z, w = q.w;\n  float x2 = x + x;\n  float y2 = y + y;\n  float z2 = z + z;\n  float xx = x * x2;\n  float xy = x * y2;\n  float xz = x * z2;\n  float yy = y * y2;\n  float yz = y * z2;\n  float zz = z * z2;\n  float wx = w * x2;\n  float wy = w * y2;\n  float wz = w * z2;\n  float sx = s.x;\n  float sy = s.y;\n  float sz = s.z;\n  return mat4((1. - (yy + zz)) * sx, (xy + wz) * sx, (xz - wy) * sx, 0,\n    (xy - wz) * sy, (1. - (xx + zz)) * sy, (yz + wx) * sy, 0,\n    (xz + wy) * sz, (yz - wx) * sz, (1. - (xx + yy)) * sz, 0,\n    t.x, t.y, t.z, 1);\n}\nvec4 quatMultiply (vec4 a, vec4 b){\n  vec4 quat;\n  quat.x = a.x * b.w + a.w * b.x + a.y * b.z - a.z * b.y;\n  quat.y = a.y * b.w + a.w * b.y + a.z * b.x - a.x * b.z;\n  quat.z = a.z * b.w + a.w * b.z + a.x * b.y - a.y * b.x;\n  quat.w = a.w * b.w - a.x * b.x - a.y * b.y - a.z * b.z;\n  return quat;\n}\nvoid rotateVecFromQuat (inout vec3 v, vec4 q){\n  float ix = q.w * v.x + q.y * v.z - q.z * v.y;\n  float iy = q.w * v.y + q.z * v.x - q.x * v.z;\n  float iz = q.w * v.z + q.x * v.y - q.y * v.x;\n  float iw = -q.x * v.x - q.y * v.y - q.z * v.z;\n  v.x = ix * q.w + iw * -q.x + iy * -q.z - iz * -q.y;\n  v.y = iy * q.w + iw * -q.y + iz * -q.x - ix * -q.z;\n  v.z = iz * q.w + iw * -q.z + ix * -q.y - iy * -q.x;\n}\nvec3 rotateInLocalSpace (vec3 pos, vec3 xAxis, vec3 yAxis, vec3 zAxis, vec4 q){\n  vec4 viewQuat = quaternionFromAxis(xAxis, yAxis, zAxis);\n  vec4 rotQuat = quatMultiply(viewQuat, q);\n  rotateVecFromQuat(pos, rotQuat);\n  return pos;\n}\nmat3 quatToMat3(vec4 q) {\n  vec3 m0 = vec3(\n    1.0 - 2.0 * q.y * q.y - 2.0 * q.z * q.z,\n    2.0 * q.x * q.y + 2.0 * q.w * q.z,\n    2.0 * q.x * q.z - 2.0 * q.w * q.y);\n\tvec3 m1 = vec3(\n    2.0 * q.x * q.y - 2.0 * q.w * q.z,\n    1.0 - 2.0 * q.x * q.x - 2.0 * q.z * q.z,\n    2.0 * q.y * q.z + 2.0 * q.w * q.x);\n\tvec3 m2 = vec3(\n    2.0 * q.x * q.z + 2.0 * q.w * q.y,\n    2.0 * q.y * q.z - 2.0 * q.w * q.x,\n    1.0 - 2.0 * q.x * q.x - 2.0 * q.y * q.y);\n  return mat3(m0, m1, m2);\n}\nvec4 mat3ToQuat(mat3 mat) {\n  float tr = mat[0][0] + mat[1][1] + mat[2][2];\n\tfloat qw, qx, qy, qz;\n  if (tr > 0.0) {\n    float S = sqrt(tr + 1.0) * 2.0;\n\t  float invS = 1.0 / S;\n\t  qw = 0.25 * S;\n\t  qx = (mat[1][2] - mat[2][1]) * invS;\n\t  qy = (mat[2][0] - mat[0][2]) * invS;\n\t  qz = (mat[0][1] - mat[1][0]) * invS;\n  } else if ((mat[0][0] > mat[1][1])&&(mat[0][0] > mat[2][2])) {\n    float S = sqrt(1.0 + mat[0][0] - mat[1][1] - mat[2][2]) * 2.0;\n\t  float invS = 1.0 / S;\n\t  qw = (mat[1][2] - mat[2][1]) * invS;\n\t  qx = 0.25 * S;\n\t  qy = (mat[1][0] + mat[0][1]) * invS;\n\t  qz = (mat[2][0] + mat[0][2]) * invS;\n  } else if (mat[1][1] > mat[2][2]) {\n\t  float S = sqrt(1.0 + mat[1][1] - mat[0][0] - mat[2][2]) * 2.0;\n\t  float invS = 1.0 / S;\n\t  qw = (mat[2][0] - mat[0][2]) * invS;\n\t  qx = (mat[1][0] + mat[0][1]) * invS;\n\t  qy = 0.25 * S;\n\t  qz = (mat[2][1] + mat[1][2]) * invS;\n  } else {\n\t  float S = sqrt(1.0 + mat[2][2] - mat[0][0] - mat[1][1]) * 2.0;\n\t  float invS = 1.0 / S;\n\t  qw = (mat[0][1] - mat[1][0]) * invS;\n\t  qx = (mat[2][0] + mat[0][2]) * invS;\n\t  qy = (mat[2][1] + mat[1][2]) * invS;\n\t  qz = 0.25 * S;\n  }\n  return vec4(qx, qy, qz, qw);\n}\nlayout(std140) uniform Constants {\n  vec4 mainTiling_Offset;\n  vec4 frameTile_velLenScale;\n  vec4 scale;\n  vec4 nodeRotation;\n};\nlayout(std140) uniform CCGlobal {\n  highp   vec4 cc_time;\n  mediump vec4 cc_screenSize;\n  mediump vec4 cc_nativeSize;\n};\nlayout(std140) uniform CCCamera {\n  highp   mat4 cc_matView;\n  highp   mat4 cc_matViewInv;\n  highp   mat4 cc_matProj;\n  highp   mat4 cc_matProjInv;\n  highp   mat4 cc_matViewProj;\n  highp   mat4 cc_matViewProjInv;\n  highp   vec4 cc_cameraPos;\n  mediump vec4 cc_screenScale;\n  mediump vec4 cc_exposure;\n  mediump vec4 cc_mainLitDir;\n  mediump vec4 cc_mainLitColor;\n  mediump vec4 cc_ambientSky;\n  mediump vec4 cc_ambientGround;\n  mediump vec4 cc_fogColor;\n  mediump vec4 cc_fogBase;\n  mediump vec4 cc_fogAdd;\n  mediump vec4 cc_nearFar;\n  mediump vec4 cc_viewPort;\n};\nlayout(std140) uniform CCLocal {\n  highp mat4 cc_matWorld;\n  highp mat4 cc_matWorldIT;\n  highp vec4 cc_lightingMapUVParam;\n};\nout mediump vec2 uv;\nout mediump vec4 color;\nvoid computeVertPos (inout vec4 pos, vec2 vertOffset, vec4 q, vec3 s\n#if CC_RENDER_MODE == 0 || CC_RENDER_MODE == 3\n  , mat4 viewInv\n#endif\n#if CC_RENDER_MODE == 1\n  , vec3 eye\n  , vec4 velocity\n  , float velocityScale\n  , float lengthScale\n  , float xIndex\n#endif\n) {\n#if CC_RENDER_MODE == 0\n  vec3 viewSpaceVert = vec3(vertOffset.x * s.x, vertOffset.y * s.y, 0.);\n  vec3 camX = normalize(vec3(viewInv[0][0], viewInv[1][0], viewInv[2][0]));\n  vec3 camY = normalize(vec3(viewInv[0][1], viewInv[1][1], viewInv[2][1]));\n  vec3 camZ = normalize(vec3(viewInv[0][2], viewInv[1][2], viewInv[2][2]));\n  pos.xyz += rotateInLocalSpace(viewSpaceVert, camX, camY, camZ, q);\n#elif CC_RENDER_MODE == 1\n  vec3 camRight = normalize(cross(pos.xyz - eye, velocity.xyz)) * s.x;\n  vec3 camUp = velocity.xyz * velocityScale + normalize(velocity.xyz) * lengthScale * s.y;\n  pos.xyz += (camRight * abs(vertOffset.x) * sign(vertOffset.y)) - camUp * xIndex;\n#elif CC_RENDER_MODE == 2\n  vec3 viewSpaceVert = vec3(vertOffset.x * s.x, vertOffset.y * s.y, 0.);\n  vec3 camX = vec3(1, 0, 0);\n  vec3 camY = vec3(0, 0, -1);\n  pos.xyz += rotateInLocalSpace(viewSpaceVert, camX, camY, cross(camX, camY), q);\n#elif CC_RENDER_MODE == 3\n  vec3 viewSpaceVert = vec3(vertOffset.x * s.x, vertOffset.y * s.y, 0.);\n  rotateVecFromQuat(viewSpaceVert, q);\n  vec3 camX = normalize(vec3(cc_matView[0][0], cc_matView[1][0], cc_matView[2][0]));\n  vec3 camY = vec3(0, 1, 0);\n  vec3 offset = camX * viewSpaceVert.x + camY * viewSpaceVert.y;\n  pos.xyz += offset;\n#else\n  pos.x += vertOffset.x;\n  pos.y += vertOffset.y;\n#endif\n}\nvec2 computeUV (float frameIndex, vec2 vertIndex, vec2 frameTile){\n  vec2 aniUV = vec2(0, floor(frameIndex * frameTile.y));\n  aniUV.x = floor(frameIndex * frameTile.x * frameTile.y - aniUV.y * frameTile.x);\n#if CC_RENDER_MODE != 4\n  vertIndex.y = 1. - vertIndex.y;\n#endif\n  return (aniUV.xy + vertIndex) / vec2(frameTile.x, frameTile.y);\n}\nin vec3 a_position;\nin vec3 a_texCoord;\nin vec3 a_texCoord1;\nin vec3 a_texCoord2;\nin vec4 a_color;\n#if CC_RENDER_MODE == 1\n  in vec3 a_color1;\n#endif\n#if CC_RENDER_MODE == 4\n  in vec3 a_texCoord3;\n  in vec3 a_normal;\n  in vec4 a_color1;\n#endif\nvec4 lpvs_main () {\n  vec3 compScale = scale.xyz * a_texCoord1;\n  vec4 pos = vec4(a_position, 1);\n  #if CC_RENDER_MODE == 1\n    vec4 velocity = vec4(a_color1.xyz, 0);\n  #endif\n  #if !CC_USE_WORLD_SPACE\n    pos = cc_matWorld * pos;\n    #if CC_RENDER_MODE == 1\n      velocity = cc_matWorld * velocity;\n    #endif\n  #endif\n  #if ROTATION_OVER_TIME_MODULE_ENABLE\n    vec3 rotTmp = a_texCoord2;\n    float mulFactor = 1.0;\n    if (rotTmp.x > 10.0 * 0.5) {\n        rotTmp.x -= 10.0;\n        mulFactor = -1.0;\n    }\n    vec4 rot = vec4(rotTmp, 0.0);\n    rot.w = mulFactor * sqrt(abs(1.0 - rot.x * rot.x - rot.y * rot.y - rot.z * rot.z));\n  #else\n    #if CC_RENDER_MODE != 4\n      #if CC_RENDER_MODE == 0\n        vec3 rotEuler = a_texCoord2;\n      #elif CC_RENDER_MODE == 1\n        vec3 rotEuler = vec3(0.);\n      #else\n        vec3 rotEuler = vec3(0., 0., a_texCoord2.z);\n      #endif\n      vec4 rot = quaternionFromEuler(rotEuler);\n    #else\n      vec4 rot = quaternionFromEuler(a_texCoord2);\n    #endif\n  #endif\n  #if CC_RENDER_MODE != 4\n    vec2 cornerOffset = vec2((a_texCoord.xy - 0.5));\n    #if CC_RENDER_MODE == 0 || CC_RENDER_MODE == 3\n      computeVertPos(pos, cornerOffset, rot, compScale, cc_matViewInv);\n    #elif CC_RENDER_MODE == 1\n      computeVertPos(pos, cornerOffset, rot, compScale, cc_cameraPos.xyz, velocity, frameTile_velLenScale.z, frameTile_velLenScale.w, a_texCoord.x);\n    #elif 2\n      computeVertPos(pos, cornerOffset, rot, compScale);\n    #endif\n    color = a_color;\n  #else\n    mat3 rotMat = quatToMat3(rot);\n    mat3 nodeMat = quatToMat3(nodeRotation);\n    rotMat = nodeMat * rotMat;\n    rot = mat3ToQuat(rotMat);\n    mat4 xformNoScale = matrixFromRT(rot, pos.xyz);\n    mat4 xform = matFromRTS(rot, pos.xyz, compScale);\n    pos = xform * vec4(a_texCoord3, 1);\n    vec4 normal = xformNoScale * vec4(a_normal, 0);\n    color = a_color * a_color1;\n  #endif\n  uv = computeUV(a_texCoord.z, a_texCoord.xy, frameTile_velLenScale.xy) * mainTiling_Offset.xy + mainTiling_Offset.zw;\n  pos = cc_matViewProj * pos;\n  return pos;\n}\nvoid main() { gl_Position = lpvs_main(); }","frag":"\nprecision mediump float;\nlayout(std140) uniform CCGlobal {\n  highp   vec4 cc_time;\n  mediump vec4 cc_screenSize;\n  mediump vec4 cc_nativeSize;\n};\nlayout(std140) uniform CCCamera {\n  highp   mat4 cc_matView;\n  highp   mat4 cc_matViewInv;\n  highp   mat4 cc_matProj;\n  highp   mat4 cc_matProjInv;\n  highp   mat4 cc_matViewProj;\n  highp   mat4 cc_matViewProjInv;\n  highp   vec4 cc_cameraPos;\n  mediump vec4 cc_screenScale;\n  mediump vec4 cc_exposure;\n  mediump vec4 cc_mainLitDir;\n  mediump vec4 cc_mainLitColor;\n  mediump vec4 cc_ambientSky;\n  mediump vec4 cc_ambientGround;\n  mediump vec4 cc_fogColor;\n  mediump vec4 cc_fogBase;\n  mediump vec4 cc_fogAdd;\n  mediump vec4 cc_nearFar;\n  mediump vec4 cc_viewPort;\n};\nvec4 CCFragOutput (vec4 color) {\n  return color;\n}\nin vec2 uv;\nin vec4 color;\nuniform sampler2D mainTexture;\nvec4 addSmooth () {\n  vec4 col = color * texture(mainTexture, uv);\n  col.rgb *= col.a;\n  return CCFragOutput(col);\n}\nlayout(location = 0) out vec4 cc_FragColor;\nvoid main() { cc_FragColor = addSmooth(); }"},"glsl1":{"vert":"\nprecision highp float;\nvec4 quaternionFromAxis (vec3 xAxis,vec3 yAxis,vec3 zAxis){\n  mat3 m = mat3(xAxis,yAxis,zAxis);\n  float trace = m[0][0] + m[1][1] + m[2][2];\n  vec4 quat;\n  if (trace > 0.) {\n    float s = 0.5 / sqrt(trace + 1.0);\n    quat.w = 0.25 / s;\n    quat.x = (m[2][1] - m[1][2]) * s;\n    quat.y = (m[0][2] - m[2][0]) * s;\n    quat.z = (m[1][0] - m[0][1]) * s;\n  } else if ((m[0][0] > m[1][1]) && (m[0][0] > m[2][2])) {\n    float s = 2.0 * sqrt(1.0 + m[0][0] - m[1][1] - m[2][2]);\n    quat.w = (m[2][1] - m[1][2]) / s;\n    quat.x = 0.25 * s;\n    quat.y = (m[0][1] + m[1][0]) / s;\n    quat.z = (m[0][2] + m[2][0]) / s;\n  } else if (m[1][1] > m[2][2]) {\n    float s = 2.0 * sqrt(1.0 + m[1][1] - m[0][0] - m[2][2]);\n    quat.w = (m[0][2] - m[2][0]) / s;\n    quat.x = (m[0][1] + m[1][0]) / s;\n    quat.y = 0.25 * s;\n    quat.z = (m[1][2] + m[2][1]) / s;\n  } else {\n    float s = 2.0 * sqrt(1.0 + m[2][2] - m[0][0] - m[1][1]);\n    quat.w = (m[1][0] - m[0][1]) / s;\n    quat.x = (m[0][2] + m[2][0]) / s;\n    quat.y = (m[1][2] + m[2][1]) / s;\n    quat.z = 0.25 * s;\n  }\n  float len = quat.x * quat.x + quat.y * quat.y + quat.z * quat.z + quat.w * quat.w;\n  if (len > 0.) {\n    len = 1. / sqrt(len);\n    quat.x = quat.x * len;\n    quat.y = quat.y * len;\n    quat.z = quat.z * len;\n    quat.w = quat.w * len;\n  }\n  return quat;\n}\nvec4 quaternionFromEuler (vec3 angle){\n  float x = angle.x / 2.;\n  float y = angle.y / 2.;\n  float z = angle.z / 2.;\n  float sx = sin(x);\n  float cx = cos(x);\n  float sy = sin(y);\n  float cy = cos(y);\n  float sz = sin(z);\n  float cz = cos(z);\n  vec4 quat = vec4(0);\n  quat.x = sx * cy * cz + cx * sy * sz;\n  quat.y = cx * sy * cz + sx * cy * sz;\n  quat.z = cx * cy * sz - sx * sy * cz;\n  quat.w = cx * cy * cz - sx * sy * sz;\n  return quat;\n}\nmat4 matrixFromRT (vec4 q, vec3 p){\n  float x2 = q.x + q.x;\n  float y2 = q.y + q.y;\n  float z2 = q.z + q.z;\n  float xx = q.x * x2;\n  float xy = q.x * y2;\n  float xz = q.x * z2;\n  float yy = q.y * y2;\n  float yz = q.y * z2;\n  float zz = q.z * z2;\n  float wx = q.w * x2;\n  float wy = q.w * y2;\n  float wz = q.w * z2;\n  return mat4(\n    1. - (yy + zz), xy + wz, xz - wy, 0,\n    xy - wz, 1. - (xx + zz), yz + wx, 0,\n    xz + wy, yz - wx, 1. - (xx + yy), 0,\n    p.x, p.y, p.z, 1\n  );\n}\nmat4 matFromRTS (vec4 q, vec3 t, vec3 s){\n  float x = q.x, y = q.y, z = q.z, w = q.w;\n  float x2 = x + x;\n  float y2 = y + y;\n  float z2 = z + z;\n  float xx = x * x2;\n  float xy = x * y2;\n  float xz = x * z2;\n  float yy = y * y2;\n  float yz = y * z2;\n  float zz = z * z2;\n  float wx = w * x2;\n  float wy = w * y2;\n  float wz = w * z2;\n  float sx = s.x;\n  float sy = s.y;\n  float sz = s.z;\n  return mat4((1. - (yy + zz)) * sx, (xy + wz) * sx, (xz - wy) * sx, 0,\n    (xy - wz) * sy, (1. - (xx + zz)) * sy, (yz + wx) * sy, 0,\n    (xz + wy) * sz, (yz - wx) * sz, (1. - (xx + yy)) * sz, 0,\n    t.x, t.y, t.z, 1);\n}\nvec4 quatMultiply (vec4 a, vec4 b){\n  vec4 quat;\n  quat.x = a.x * b.w + a.w * b.x + a.y * b.z - a.z * b.y;\n  quat.y = a.y * b.w + a.w * b.y + a.z * b.x - a.x * b.z;\n  quat.z = a.z * b.w + a.w * b.z + a.x * b.y - a.y * b.x;\n  quat.w = a.w * b.w - a.x * b.x - a.y * b.y - a.z * b.z;\n  return quat;\n}\nvoid rotateVecFromQuat (inout vec3 v, vec4 q){\n  float ix = q.w * v.x + q.y * v.z - q.z * v.y;\n  float iy = q.w * v.y + q.z * v.x - q.x * v.z;\n  float iz = q.w * v.z + q.x * v.y - q.y * v.x;\n  float iw = -q.x * v.x - q.y * v.y - q.z * v.z;\n  v.x = ix * q.w + iw * -q.x + iy * -q.z - iz * -q.y;\n  v.y = iy * q.w + iw * -q.y + iz * -q.x - ix * -q.z;\n  v.z = iz * q.w + iw * -q.z + ix * -q.y - iy * -q.x;\n}\nvec3 rotateInLocalSpace (vec3 pos, vec3 xAxis, vec3 yAxis, vec3 zAxis, vec4 q){\n  vec4 viewQuat = quaternionFromAxis(xAxis, yAxis, zAxis);\n  vec4 rotQuat = quatMultiply(viewQuat, q);\n  rotateVecFromQuat(pos, rotQuat);\n  return pos;\n}\nmat3 quatToMat3(vec4 q) {\n  vec3 m0 = vec3(\n    1.0 - 2.0 * q.y * q.y - 2.0 * q.z * q.z,\n    2.0 * q.x * q.y + 2.0 * q.w * q.z,\n    2.0 * q.x * q.z - 2.0 * q.w * q.y);\n\tvec3 m1 = vec3(\n    2.0 * q.x * q.y - 2.0 * q.w * q.z,\n    1.0 - 2.0 * q.x * q.x - 2.0 * q.z * q.z,\n    2.0 * q.y * q.z + 2.0 * q.w * q.x);\n\tvec3 m2 = vec3(\n    2.0 * q.x * q.z + 2.0 * q.w * q.y,\n    2.0 * q.y * q.z - 2.0 * q.w * q.x,\n    1.0 - 2.0 * q.x * q.x - 2.0 * q.y * q.y);\n  return mat3(m0, m1, m2);\n}\nvec4 mat3ToQuat(mat3 mat) {\n  float tr = mat[0][0] + mat[1][1] + mat[2][2];\n\tfloat qw, qx, qy, qz;\n  if (tr > 0.0) {\n    float S = sqrt(tr + 1.0) * 2.0;\n\t  float invS = 1.0 / S;\n\t  qw = 0.25 * S;\n\t  qx = (mat[1][2] - mat[2][1]) * invS;\n\t  qy = (mat[2][0] - mat[0][2]) * invS;\n\t  qz = (mat[0][1] - mat[1][0]) * invS;\n  } else if ((mat[0][0] > mat[1][1])&&(mat[0][0] > mat[2][2])) {\n    float S = sqrt(1.0 + mat[0][0] - mat[1][1] - mat[2][2]) * 2.0;\n\t  float invS = 1.0 / S;\n\t  qw = (mat[1][2] - mat[2][1]) * invS;\n\t  qx = 0.25 * S;\n\t  qy = (mat[1][0] + mat[0][1]) * invS;\n\t  qz = (mat[2][0] + mat[0][2]) * invS;\n  } else if (mat[1][1] > mat[2][2]) {\n\t  float S = sqrt(1.0 + mat[1][1] - mat[0][0] - mat[2][2]) * 2.0;\n\t  float invS = 1.0 / S;\n\t  qw = (mat[2][0] - mat[0][2]) * invS;\n\t  qx = (mat[1][0] + mat[0][1]) * invS;\n\t  qy = 0.25 * S;\n\t  qz = (mat[2][1] + mat[1][2]) * invS;\n  } else {\n\t  float S = sqrt(1.0 + mat[2][2] - mat[0][0] - mat[1][1]) * 2.0;\n\t  float invS = 1.0 / S;\n\t  qw = (mat[0][1] - mat[1][0]) * invS;\n\t  qx = (mat[2][0] + mat[0][2]) * invS;\n\t  qy = (mat[2][1] + mat[1][2]) * invS;\n\t  qz = 0.25 * S;\n  }\n  return vec4(qx, qy, qz, qw);\n}\n   uniform vec4 mainTiling_Offset;\n   uniform vec4 frameTile_velLenScale;\n   uniform vec4 scale;\n   uniform vec4 nodeRotation;\nuniform highp mat4 cc_matView;\n  uniform highp mat4 cc_matViewInv;\n  uniform highp mat4 cc_matViewProj;\n  uniform highp vec4 cc_cameraPos;\nuniform highp mat4 cc_matWorld;\nvarying mediump vec2 uv;\nvarying mediump vec4 color;\nvoid computeVertPos (inout vec4 pos, vec2 vertOffset, vec4 q, vec3 s\n#if CC_RENDER_MODE == 0 || CC_RENDER_MODE == 3\n  , mat4 viewInv\n#endif\n#if CC_RENDER_MODE == 1\n  , vec3 eye\n  , vec4 velocity\n  , float velocityScale\n  , float lengthScale\n  , float xIndex\n#endif\n) {\n#if CC_RENDER_MODE == 0\n  vec3 viewSpaceVert = vec3(vertOffset.x * s.x, vertOffset.y * s.y, 0.);\n  vec3 camX = normalize(vec3(viewInv[0][0], viewInv[1][0], viewInv[2][0]));\n  vec3 camY = normalize(vec3(viewInv[0][1], viewInv[1][1], viewInv[2][1]));\n  vec3 camZ = normalize(vec3(viewInv[0][2], viewInv[1][2], viewInv[2][2]));\n  pos.xyz += rotateInLocalSpace(viewSpaceVert, camX, camY, camZ, q);\n#elif CC_RENDER_MODE == 1\n  vec3 camRight = normalize(cross(pos.xyz - eye, velocity.xyz)) * s.x;\n  vec3 camUp = velocity.xyz * velocityScale + normalize(velocity.xyz) * lengthScale * s.y;\n  pos.xyz += (camRight * abs(vertOffset.x) * sign(vertOffset.y)) - camUp * xIndex;\n#elif CC_RENDER_MODE == 2\n  vec3 viewSpaceVert = vec3(vertOffset.x * s.x, vertOffset.y * s.y, 0.);\n  vec3 camX = vec3(1, 0, 0);\n  vec3 camY = vec3(0, 0, -1);\n  pos.xyz += rotateInLocalSpace(viewSpaceVert, camX, camY, cross(camX, camY), q);\n#elif CC_RENDER_MODE == 3\n  vec3 viewSpaceVert = vec3(vertOffset.x * s.x, vertOffset.y * s.y, 0.);\n  rotateVecFromQuat(viewSpaceVert, q);\n  vec3 camX = normalize(vec3(cc_matView[0][0], cc_matView[1][0], cc_matView[2][0]));\n  vec3 camY = vec3(0, 1, 0);\n  vec3 offset = camX * viewSpaceVert.x + camY * viewSpaceVert.y;\n  pos.xyz += offset;\n#else\n  pos.x += vertOffset.x;\n  pos.y += vertOffset.y;\n#endif\n}\nvec2 computeUV (float frameIndex, vec2 vertIndex, vec2 frameTile){\n  vec2 aniUV = vec2(0, floor(frameIndex * frameTile.y));\n  aniUV.x = floor(frameIndex * frameTile.x * frameTile.y - aniUV.y * frameTile.x);\n#if CC_RENDER_MODE != 4\n  vertIndex.y = 1. - vertIndex.y;\n#endif\n  return (aniUV.xy + vertIndex) / vec2(frameTile.x, frameTile.y);\n}\nattribute vec3 a_position;\nattribute vec3 a_texCoord;\nattribute vec3 a_texCoord1;\nattribute vec3 a_texCoord2;\nattribute vec4 a_color;\n#if CC_RENDER_MODE == 1\n  attribute vec3 a_color1;\n#endif\n#if CC_RENDER_MODE == 4\n  attribute vec3 a_texCoord3;\n  attribute vec3 a_normal;\n  attribute vec4 a_color1;\n#endif\nvec4 lpvs_main () {\n  vec3 compScale = scale.xyz * a_texCoord1;\n  vec4 pos = vec4(a_position, 1);\n  #if CC_RENDER_MODE == 1\n    vec4 velocity = vec4(a_color1.xyz, 0);\n  #endif\n  #if !CC_USE_WORLD_SPACE\n    pos = cc_matWorld * pos;\n    #if CC_RENDER_MODE == 1\n      velocity = cc_matWorld * velocity;\n    #endif\n  #endif\n  #if ROTATION_OVER_TIME_MODULE_ENABLE\n    vec3 rotTmp = a_texCoord2;\n    float mulFactor = 1.0;\n    if (rotTmp.x > 10.0 * 0.5) {\n        rotTmp.x -= 10.0;\n        mulFactor = -1.0;\n    }\n    vec4 rot = vec4(rotTmp, 0.0);\n    rot.w = mulFactor * sqrt(abs(1.0 - rot.x * rot.x - rot.y * rot.y - rot.z * rot.z));\n  #else\n    #if CC_RENDER_MODE != 4\n      #if CC_RENDER_MODE == 0\n        vec3 rotEuler = a_texCoord2;\n      #elif CC_RENDER_MODE == 1\n        vec3 rotEuler = vec3(0.);\n      #else\n        vec3 rotEuler = vec3(0., 0., a_texCoord2.z);\n      #endif\n      vec4 rot = quaternionFromEuler(rotEuler);\n    #else\n      vec4 rot = quaternionFromEuler(a_texCoord2);\n    #endif\n  #endif\n  #if CC_RENDER_MODE != 4\n    vec2 cornerOffset = vec2((a_texCoord.xy - 0.5));\n    #if CC_RENDER_MODE == 0 || CC_RENDER_MODE == 3\n      computeVertPos(pos, cornerOffset, rot, compScale, cc_matViewInv);\n    #elif CC_RENDER_MODE == 1\n      computeVertPos(pos, cornerOffset, rot, compScale, cc_cameraPos.xyz, velocity, frameTile_velLenScale.z, frameTile_velLenScale.w, a_texCoord.x);\n    #elif 2\n      computeVertPos(pos, cornerOffset, rot, compScale);\n    #endif\n    color = a_color;\n  #else\n    mat3 rotMat = quatToMat3(rot);\n    mat3 nodeMat = quatToMat3(nodeRotation);\n    rotMat = nodeMat * rotMat;\n    rot = mat3ToQuat(rotMat);\n    mat4 xformNoScale = matrixFromRT(rot, pos.xyz);\n    mat4 xform = matFromRTS(rot, pos.xyz, compScale);\n    pos = xform * vec4(a_texCoord3, 1);\n    vec4 normal = xformNoScale * vec4(a_normal, 0);\n    color = a_color * a_color1;\n  #endif\n  uv = computeUV(a_texCoord.z, a_texCoord.xy, frameTile_velLenScale.xy) * mainTiling_Offset.xy + mainTiling_Offset.zw;\n  pos = cc_matViewProj * pos;\n  return pos;\n}\nvoid main() { gl_Position = lpvs_main(); }","frag":"\nprecision mediump float;\nvec4 CCFragOutput (vec4 color) {\n  return color;\n}\nvarying vec2 uv;\nvarying vec4 color;\nuniform sampler2D mainTexture;\nvec4 addSmooth () {\n  vec4 col = color * texture2D(mainTexture, uv);\n  col.rgb *= col.a;\n  return CCFragOutput(col);\n}\nvoid main() { gl_FragColor = addSmooth(); }"},"builtins":{"globals":{"blocks":[{"name":"CCGlobal","defines":[]},{"name":"CCCamera","defines":[]}],"samplerTextures":[],"buffers":[],"images":[]},"locals":{"blocks":[{"name":"CCLocal","defines":[]}],"samplerTextures":[],"buffers":[],"images":[]},"statistics":{"CC_EFFECT_USED_VERTEX_UNIFORM_VECTORS":52,"CC_EFFECT_USED_FRAGMENT_UNIFORM_VECTORS":39}},"defines":[{"name":"CC_RENDER_MODE","type":"number","defines":[],"range":[0,4]},{"name":"CC_USE_WORLD_SPACE","type":"boolean","defines":[]},{"name":"ROTATION_OVER_TIME_MODULE_ENABLE","type":"boolean","defines":[]}]},{"hash":3775475229,"name":"builtin-particle|particle-vs-legacy:lpvs_main|no-tint-fs:premultiplied","blocks":[{"name":"Constants","stageFlags":1,"binding":0,"members":[{"name":"mainTiling_Offset","type":16,"count":1},{"name":"frameTile_velLenScale","type":16,"count":1},{"name":"scale","type":16,"count":1},{"name":"nodeRotation","type":16,"count":1}],"defines":[]}],"samplerTextures":[{"name":"mainTexture","type":28,"count":1,"stageFlags":16,"binding":1,"defines":[]}],"samplers":[],"textures":[],"buffers":[],"images":[],"subpassInputs":[],"attributes":[{"name":"a_position","format":32,"location":0,"defines":[]},{"name":"a_texCoord","format":32,"location":1,"defines":[]},{"name":"a_texCoord1","format":32,"location":2,"defines":[]},{"name":"a_texCoord2","format":32,"location":3,"defines":[]},{"name":"a_color","format":44,"location":4,"defines":[]},{"name":"a_color1","format":32,"location":8,"defines":["CC_RENDER_MODE"]},{"name":"a_texCoord3","format":32,"location":6,"defines":["CC_RENDER_MODE"]},{"name":"a_normal","format":32,"location":7,"defines":["CC_RENDER_MODE"]}],"varyings":[{"name":"uv","type":14,"count":1,"stageFlags":17,"location":0,"defines":[]},{"name":"color","type":16,"count":1,"stageFlags":17,"location":1,"defines":[]}],"fragColors":[{"name":"cc_FragColor","typename":"vec4","type":16,"count":1,"stageFlags":16,"location":0,"defines":[]}],"glsl4":{"vert":"\nprecision highp float;\nvec4 quaternionFromAxis (vec3 xAxis,vec3 yAxis,vec3 zAxis){\n  mat3 m = mat3(xAxis,yAxis,zAxis);\n  float trace = m[0][0] + m[1][1] + m[2][2];\n  vec4 quat;\n  if (trace > 0.) {\n    float s = 0.5 / sqrt(trace + 1.0);\n    quat.w = 0.25 / s;\n    quat.x = (m[2][1] - m[1][2]) * s;\n    quat.y = (m[0][2] - m[2][0]) * s;\n    quat.z = (m[1][0] - m[0][1]) * s;\n  } else if ((m[0][0] > m[1][1]) && (m[0][0] > m[2][2])) {\n    float s = 2.0 * sqrt(1.0 + m[0][0] - m[1][1] - m[2][2]);\n    quat.w = (m[2][1] - m[1][2]) / s;\n    quat.x = 0.25 * s;\n    quat.y = (m[0][1] + m[1][0]) / s;\n    quat.z = (m[0][2] + m[2][0]) / s;\n  } else if (m[1][1] > m[2][2]) {\n    float s = 2.0 * sqrt(1.0 + m[1][1] - m[0][0] - m[2][2]);\n    quat.w = (m[0][2] - m[2][0]) / s;\n    quat.x = (m[0][1] + m[1][0]) / s;\n    quat.y = 0.25 * s;\n    quat.z = (m[1][2] + m[2][1]) / s;\n  } else {\n    float s = 2.0 * sqrt(1.0 + m[2][2] - m[0][0] - m[1][1]);\n    quat.w = (m[1][0] - m[0][1]) / s;\n    quat.x = (m[0][2] + m[2][0]) / s;\n    quat.y = (m[1][2] + m[2][1]) / s;\n    quat.z = 0.25 * s;\n  }\n  float len = quat.x * quat.x + quat.y * quat.y + quat.z * quat.z + quat.w * quat.w;\n  if (len > 0.) {\n    len = 1. / sqrt(len);\n    quat.x = quat.x * len;\n    quat.y = quat.y * len;\n    quat.z = quat.z * len;\n    quat.w = quat.w * len;\n  }\n  return quat;\n}\nvec4 quaternionFromEuler (vec3 angle){\n  float x = angle.x / 2.;\n  float y = angle.y / 2.;\n  float z = angle.z / 2.;\n  float sx = sin(x);\n  float cx = cos(x);\n  float sy = sin(y);\n  float cy = cos(y);\n  float sz = sin(z);\n  float cz = cos(z);\n  vec4 quat = vec4(0);\n  quat.x = sx * cy * cz + cx * sy * sz;\n  quat.y = cx * sy * cz + sx * cy * sz;\n  quat.z = cx * cy * sz - sx * sy * cz;\n  quat.w = cx * cy * cz - sx * sy * sz;\n  return quat;\n}\nmat4 matrixFromRT (vec4 q, vec3 p){\n  float x2 = q.x + q.x;\n  float y2 = q.y + q.y;\n  float z2 = q.z + q.z;\n  float xx = q.x * x2;\n  float xy = q.x * y2;\n  float xz = q.x * z2;\n  float yy = q.y * y2;\n  float yz = q.y * z2;\n  float zz = q.z * z2;\n  float wx = q.w * x2;\n  float wy = q.w * y2;\n  float wz = q.w * z2;\n  return mat4(\n    1. - (yy + zz), xy + wz, xz - wy, 0,\n    xy - wz, 1. - (xx + zz), yz + wx, 0,\n    xz + wy, yz - wx, 1. - (xx + yy), 0,\n    p.x, p.y, p.z, 1\n  );\n}\nmat4 matFromRTS (vec4 q, vec3 t, vec3 s){\n  float x = q.x, y = q.y, z = q.z, w = q.w;\n  float x2 = x + x;\n  float y2 = y + y;\n  float z2 = z + z;\n  float xx = x * x2;\n  float xy = x * y2;\n  float xz = x * z2;\n  float yy = y * y2;\n  float yz = y * z2;\n  float zz = z * z2;\n  float wx = w * x2;\n  float wy = w * y2;\n  float wz = w * z2;\n  float sx = s.x;\n  float sy = s.y;\n  float sz = s.z;\n  return mat4((1. - (yy + zz)) * sx, (xy + wz) * sx, (xz - wy) * sx, 0,\n    (xy - wz) * sy, (1. - (xx + zz)) * sy, (yz + wx) * sy, 0,\n    (xz + wy) * sz, (yz - wx) * sz, (1. - (xx + yy)) * sz, 0,\n    t.x, t.y, t.z, 1);\n}\nvec4 quatMultiply (vec4 a, vec4 b){\n  vec4 quat;\n  quat.x = a.x * b.w + a.w * b.x + a.y * b.z - a.z * b.y;\n  quat.y = a.y * b.w + a.w * b.y + a.z * b.x - a.x * b.z;\n  quat.z = a.z * b.w + a.w * b.z + a.x * b.y - a.y * b.x;\n  quat.w = a.w * b.w - a.x * b.x - a.y * b.y - a.z * b.z;\n  return quat;\n}\nvoid rotateVecFromQuat (inout vec3 v, vec4 q){\n  float ix = q.w * v.x + q.y * v.z - q.z * v.y;\n  float iy = q.w * v.y + q.z * v.x - q.x * v.z;\n  float iz = q.w * v.z + q.x * v.y - q.y * v.x;\n  float iw = -q.x * v.x - q.y * v.y - q.z * v.z;\n  v.x = ix * q.w + iw * -q.x + iy * -q.z - iz * -q.y;\n  v.y = iy * q.w + iw * -q.y + iz * -q.x - ix * -q.z;\n  v.z = iz * q.w + iw * -q.z + ix * -q.y - iy * -q.x;\n}\nvec3 rotateInLocalSpace (vec3 pos, vec3 xAxis, vec3 yAxis, vec3 zAxis, vec4 q){\n  vec4 viewQuat = quaternionFromAxis(xAxis, yAxis, zAxis);\n  vec4 rotQuat = quatMultiply(viewQuat, q);\n  rotateVecFromQuat(pos, rotQuat);\n  return pos;\n}\nmat3 quatToMat3(vec4 q) {\n  vec3 m0 = vec3(\n    1.0 - 2.0 * q.y * q.y - 2.0 * q.z * q.z,\n    2.0 * q.x * q.y + 2.0 * q.w * q.z,\n    2.0 * q.x * q.z - 2.0 * q.w * q.y);\n\tvec3 m1 = vec3(\n    2.0 * q.x * q.y - 2.0 * q.w * q.z,\n    1.0 - 2.0 * q.x * q.x - 2.0 * q.z * q.z,\n    2.0 * q.y * q.z + 2.0 * q.w * q.x);\n\tvec3 m2 = vec3(\n    2.0 * q.x * q.z + 2.0 * q.w * q.y,\n    2.0 * q.y * q.z - 2.0 * q.w * q.x,\n    1.0 - 2.0 * q.x * q.x - 2.0 * q.y * q.y);\n  return mat3(m0, m1, m2);\n}\nvec4 mat3ToQuat(mat3 mat) {\n  float tr = mat[0][0] + mat[1][1] + mat[2][2];\n\tfloat qw, qx, qy, qz;\n  if (tr > 0.0) {\n    float S = sqrt(tr + 1.0) * 2.0;\n\t  float invS = 1.0 / S;\n\t  qw = 0.25 * S;\n\t  qx = (mat[1][2] - mat[2][1]) * invS;\n\t  qy = (mat[2][0] - mat[0][2]) * invS;\n\t  qz = (mat[0][1] - mat[1][0]) * invS;\n  } else if ((mat[0][0] > mat[1][1])&&(mat[0][0] > mat[2][2])) {\n    float S = sqrt(1.0 + mat[0][0] - mat[1][1] - mat[2][2]) * 2.0;\n\t  float invS = 1.0 / S;\n\t  qw = (mat[1][2] - mat[2][1]) * invS;\n\t  qx = 0.25 * S;\n\t  qy = (mat[1][0] + mat[0][1]) * invS;\n\t  qz = (mat[2][0] + mat[0][2]) * invS;\n  } else if (mat[1][1] > mat[2][2]) {\n\t  float S = sqrt(1.0 + mat[1][1] - mat[0][0] - mat[2][2]) * 2.0;\n\t  float invS = 1.0 / S;\n\t  qw = (mat[2][0] - mat[0][2]) * invS;\n\t  qx = (mat[1][0] + mat[0][1]) * invS;\n\t  qy = 0.25 * S;\n\t  qz = (mat[2][1] + mat[1][2]) * invS;\n  } else {\n\t  float S = sqrt(1.0 + mat[2][2] - mat[0][0] - mat[1][1]) * 2.0;\n\t  float invS = 1.0 / S;\n\t  qw = (mat[0][1] - mat[1][0]) * invS;\n\t  qx = (mat[2][0] + mat[0][2]) * invS;\n\t  qy = (mat[2][1] + mat[1][2]) * invS;\n\t  qz = 0.25 * S;\n  }\n  return vec4(qx, qy, qz, qw);\n}\nlayout(set = 1, binding = 0) uniform Constants {\n  vec4 mainTiling_Offset;\n  vec4 frameTile_velLenScale;\n  vec4 scale;\n  vec4 nodeRotation;\n};\nlayout(set = 0, binding = 0) uniform CCGlobal {\n  highp   vec4 cc_time;\n  mediump vec4 cc_screenSize;\n  mediump vec4 cc_nativeSize;\n};\nlayout(set = 0, binding = 1) uniform CCCamera {\n  highp   mat4 cc_matView;\n  highp   mat4 cc_matViewInv;\n  highp   mat4 cc_matProj;\n  highp   mat4 cc_matProjInv;\n  highp   mat4 cc_matViewProj;\n  highp   mat4 cc_matViewProjInv;\n  highp   vec4 cc_cameraPos;\n  mediump vec4 cc_screenScale;\n  mediump vec4 cc_exposure;\n  mediump vec4 cc_mainLitDir;\n  mediump vec4 cc_mainLitColor;\n  mediump vec4 cc_ambientSky;\n  mediump vec4 cc_ambientGround;\n  mediump vec4 cc_fogColor;\n  mediump vec4 cc_fogBase;\n  mediump vec4 cc_fogAdd;\n  mediump vec4 cc_nearFar;\n  mediump vec4 cc_viewPort;\n};\nlayout(set = 2, binding = 0) uniform CCLocal {\n  highp mat4 cc_matWorld;\n  highp mat4 cc_matWorldIT;\n  highp vec4 cc_lightingMapUVParam;\n};\nlayout(location = 0) out mediump vec2 uv;\nlayout(location = 1) out mediump vec4 color;\nvoid computeVertPos (inout vec4 pos, vec2 vertOffset, vec4 q, vec3 s\n#if CC_RENDER_MODE == 0 || CC_RENDER_MODE == 3\n  , mat4 viewInv\n#endif\n#if CC_RENDER_MODE == 1\n  , vec3 eye\n  , vec4 velocity\n  , float velocityScale\n  , float lengthScale\n  , float xIndex\n#endif\n) {\n#if CC_RENDER_MODE == 0\n  vec3 viewSpaceVert = vec3(vertOffset.x * s.x, vertOffset.y * s.y, 0.);\n  vec3 camX = normalize(vec3(viewInv[0][0], viewInv[1][0], viewInv[2][0]));\n  vec3 camY = normalize(vec3(viewInv[0][1], viewInv[1][1], viewInv[2][1]));\n  vec3 camZ = normalize(vec3(viewInv[0][2], viewInv[1][2], viewInv[2][2]));\n  pos.xyz += rotateInLocalSpace(viewSpaceVert, camX, camY, camZ, q);\n#elif CC_RENDER_MODE == 1\n  vec3 camRight = normalize(cross(pos.xyz - eye, velocity.xyz)) * s.x;\n  vec3 camUp = velocity.xyz * velocityScale + normalize(velocity.xyz) * lengthScale * s.y;\n  pos.xyz += (camRight * abs(vertOffset.x) * sign(vertOffset.y)) - camUp * xIndex;\n#elif CC_RENDER_MODE == 2\n  vec3 viewSpaceVert = vec3(vertOffset.x * s.x, vertOffset.y * s.y, 0.);\n  vec3 camX = vec3(1, 0, 0);\n  vec3 camY = vec3(0, 0, -1);\n  pos.xyz += rotateInLocalSpace(viewSpaceVert, camX, camY, cross(camX, camY), q);\n#elif CC_RENDER_MODE == 3\n  vec3 viewSpaceVert = vec3(vertOffset.x * s.x, vertOffset.y * s.y, 0.);\n  rotateVecFromQuat(viewSpaceVert, q);\n  vec3 camX = normalize(vec3(cc_matView[0][0], cc_matView[1][0], cc_matView[2][0]));\n  vec3 camY = vec3(0, 1, 0);\n  vec3 offset = camX * viewSpaceVert.x + camY * viewSpaceVert.y;\n  pos.xyz += offset;\n#else\n  pos.x += vertOffset.x;\n  pos.y += vertOffset.y;\n#endif\n}\nvec2 computeUV (float frameIndex, vec2 vertIndex, vec2 frameTile){\n  vec2 aniUV = vec2(0, floor(frameIndex * frameTile.y));\n  aniUV.x = floor(frameIndex * frameTile.x * frameTile.y - aniUV.y * frameTile.x);\n#if CC_RENDER_MODE != 4\n  vertIndex.y = 1. - vertIndex.y;\n#endif\n  return (aniUV.xy + vertIndex) / vec2(frameTile.x, frameTile.y);\n}\nlayout(location = 0) in vec3 a_position;\nlayout(location = 1) in vec3 a_texCoord;\nlayout(location = 2) in vec3 a_texCoord1;\nlayout(location = 3) in vec3 a_texCoord2;\nlayout(location = 4) in vec4 a_color;\n#if CC_RENDER_MODE == 1\n  layout(location = 8) in vec3 a_color1;\n#endif\n#if CC_RENDER_MODE == 4\n  layout(location = 6) in vec3 a_texCoord3;\n  layout(location = 7) in vec3 a_normal;\n  layout(location = 8) in vec4 a_color1;\n#endif\nvec4 lpvs_main () {\n  vec3 compScale = scale.xyz * a_texCoord1;\n  vec4 pos = vec4(a_position, 1);\n  #if CC_RENDER_MODE == 1\n    vec4 velocity = vec4(a_color1.xyz, 0);\n  #endif\n  #if !CC_USE_WORLD_SPACE\n    pos = cc_matWorld * pos;\n    #if CC_RENDER_MODE == 1\n      velocity = cc_matWorld * velocity;\n    #endif\n  #endif\n  #if ROTATION_OVER_TIME_MODULE_ENABLE\n    vec3 rotTmp = a_texCoord2;\n    float mulFactor = 1.0;\n    if (rotTmp.x > 10.0 * 0.5) {\n        rotTmp.x -= 10.0;\n        mulFactor = -1.0;\n    }\n    vec4 rot = vec4(rotTmp, 0.0);\n    rot.w = mulFactor * sqrt(abs(1.0 - rot.x * rot.x - rot.y * rot.y - rot.z * rot.z));\n  #else\n    #if CC_RENDER_MODE != 4\n      #if CC_RENDER_MODE == 0\n        vec3 rotEuler = a_texCoord2;\n      #elif CC_RENDER_MODE == 1\n        vec3 rotEuler = vec3(0.);\n      #else\n        vec3 rotEuler = vec3(0., 0., a_texCoord2.z);\n      #endif\n      vec4 rot = quaternionFromEuler(rotEuler);\n    #else\n      vec4 rot = quaternionFromEuler(a_texCoord2);\n    #endif\n  #endif\n  #if CC_RENDER_MODE != 4\n    vec2 cornerOffset = vec2((a_texCoord.xy - 0.5));\n    #if CC_RENDER_MODE == 0 || CC_RENDER_MODE == 3\n      computeVertPos(pos, cornerOffset, rot, compScale, cc_matViewInv);\n    #elif CC_RENDER_MODE == 1\n      computeVertPos(pos, cornerOffset, rot, compScale, cc_cameraPos.xyz, velocity, frameTile_velLenScale.z, frameTile_velLenScale.w, a_texCoord.x);\n    #elif 2\n      computeVertPos(pos, cornerOffset, rot, compScale);\n    #endif\n    color = a_color;\n  #else\n    mat3 rotMat = quatToMat3(rot);\n    mat3 nodeMat = quatToMat3(nodeRotation);\n    rotMat = nodeMat * rotMat;\n    rot = mat3ToQuat(rotMat);\n    mat4 xformNoScale = matrixFromRT(rot, pos.xyz);\n    mat4 xform = matFromRTS(rot, pos.xyz, compScale);\n    pos = xform * vec4(a_texCoord3, 1);\n    vec4 normal = xformNoScale * vec4(a_normal, 0);\n    color = a_color * a_color1;\n  #endif\n  uv = computeUV(a_texCoord.z, a_texCoord.xy, frameTile_velLenScale.xy) * mainTiling_Offset.xy + mainTiling_Offset.zw;\n  pos = cc_matViewProj * pos;\n  return pos;\n}\nvoid main() { gl_Position = lpvs_main(); }","frag":"\nprecision mediump float;\nlayout(set = 0, binding = 0) uniform CCGlobal {\n  highp   vec4 cc_time;\n  mediump vec4 cc_screenSize;\n  mediump vec4 cc_nativeSize;\n};\nlayout(set = 0, binding = 1) uniform CCCamera {\n  highp   mat4 cc_matView;\n  highp   mat4 cc_matViewInv;\n  highp   mat4 cc_matProj;\n  highp   mat4 cc_matProjInv;\n  highp   mat4 cc_matViewProj;\n  highp   mat4 cc_matViewProjInv;\n  highp   vec4 cc_cameraPos;\n  mediump vec4 cc_screenScale;\n  mediump vec4 cc_exposure;\n  mediump vec4 cc_mainLitDir;\n  mediump vec4 cc_mainLitColor;\n  mediump vec4 cc_ambientSky;\n  mediump vec4 cc_ambientGround;\n  mediump vec4 cc_fogColor;\n  mediump vec4 cc_fogBase;\n  mediump vec4 cc_fogAdd;\n  mediump vec4 cc_nearFar;\n  mediump vec4 cc_viewPort;\n};\nvec4 CCFragOutput (vec4 color) {\n  return color;\n}\nlayout(location = 0) in vec2 uv;\nlayout(location = 1) in vec4 color;\nlayout(set = 1, binding = 1) uniform sampler2D mainTexture;\nvec4 premultiplied () {\n  vec4 col = color * texture(mainTexture, uv) * color.a;\n  return CCFragOutput(col);\n}\nlayout(location = 0) out vec4 cc_FragColor;\nvoid main() { cc_FragColor = premultiplied(); }"},"glsl3":{"vert":"\nprecision highp float;\nvec4 quaternionFromAxis (vec3 xAxis,vec3 yAxis,vec3 zAxis){\n  mat3 m = mat3(xAxis,yAxis,zAxis);\n  float trace = m[0][0] + m[1][1] + m[2][2];\n  vec4 quat;\n  if (trace > 0.) {\n    float s = 0.5 / sqrt(trace + 1.0);\n    quat.w = 0.25 / s;\n    quat.x = (m[2][1] - m[1][2]) * s;\n    quat.y = (m[0][2] - m[2][0]) * s;\n    quat.z = (m[1][0] - m[0][1]) * s;\n  } else if ((m[0][0] > m[1][1]) && (m[0][0] > m[2][2])) {\n    float s = 2.0 * sqrt(1.0 + m[0][0] - m[1][1] - m[2][2]);\n    quat.w = (m[2][1] - m[1][2]) / s;\n    quat.x = 0.25 * s;\n    quat.y = (m[0][1] + m[1][0]) / s;\n    quat.z = (m[0][2] + m[2][0]) / s;\n  } else if (m[1][1] > m[2][2]) {\n    float s = 2.0 * sqrt(1.0 + m[1][1] - m[0][0] - m[2][2]);\n    quat.w = (m[0][2] - m[2][0]) / s;\n    quat.x = (m[0][1] + m[1][0]) / s;\n    quat.y = 0.25 * s;\n    quat.z = (m[1][2] + m[2][1]) / s;\n  } else {\n    float s = 2.0 * sqrt(1.0 + m[2][2] - m[0][0] - m[1][1]);\n    quat.w = (m[1][0] - m[0][1]) / s;\n    quat.x = (m[0][2] + m[2][0]) / s;\n    quat.y = (m[1][2] + m[2][1]) / s;\n    quat.z = 0.25 * s;\n  }\n  float len = quat.x * quat.x + quat.y * quat.y + quat.z * quat.z + quat.w * quat.w;\n  if (len > 0.) {\n    len = 1. / sqrt(len);\n    quat.x = quat.x * len;\n    quat.y = quat.y * len;\n    quat.z = quat.z * len;\n    quat.w = quat.w * len;\n  }\n  return quat;\n}\nvec4 quaternionFromEuler (vec3 angle){\n  float x = angle.x / 2.;\n  float y = angle.y / 2.;\n  float z = angle.z / 2.;\n  float sx = sin(x);\n  float cx = cos(x);\n  float sy = sin(y);\n  float cy = cos(y);\n  float sz = sin(z);\n  float cz = cos(z);\n  vec4 quat = vec4(0);\n  quat.x = sx * cy * cz + cx * sy * sz;\n  quat.y = cx * sy * cz + sx * cy * sz;\n  quat.z = cx * cy * sz - sx * sy * cz;\n  quat.w = cx * cy * cz - sx * sy * sz;\n  return quat;\n}\nmat4 matrixFromRT (vec4 q, vec3 p){\n  float x2 = q.x + q.x;\n  float y2 = q.y + q.y;\n  float z2 = q.z + q.z;\n  float xx = q.x * x2;\n  float xy = q.x * y2;\n  float xz = q.x * z2;\n  float yy = q.y * y2;\n  float yz = q.y * z2;\n  float zz = q.z * z2;\n  float wx = q.w * x2;\n  float wy = q.w * y2;\n  float wz = q.w * z2;\n  return mat4(\n    1. - (yy + zz), xy + wz, xz - wy, 0,\n    xy - wz, 1. - (xx + zz), yz + wx, 0,\n    xz + wy, yz - wx, 1. - (xx + yy), 0,\n    p.x, p.y, p.z, 1\n  );\n}\nmat4 matFromRTS (vec4 q, vec3 t, vec3 s){\n  float x = q.x, y = q.y, z = q.z, w = q.w;\n  float x2 = x + x;\n  float y2 = y + y;\n  float z2 = z + z;\n  float xx = x * x2;\n  float xy = x * y2;\n  float xz = x * z2;\n  float yy = y * y2;\n  float yz = y * z2;\n  float zz = z * z2;\n  float wx = w * x2;\n  float wy = w * y2;\n  float wz = w * z2;\n  float sx = s.x;\n  float sy = s.y;\n  float sz = s.z;\n  return mat4((1. - (yy + zz)) * sx, (xy + wz) * sx, (xz - wy) * sx, 0,\n    (xy - wz) * sy, (1. - (xx + zz)) * sy, (yz + wx) * sy, 0,\n    (xz + wy) * sz, (yz - wx) * sz, (1. - (xx + yy)) * sz, 0,\n    t.x, t.y, t.z, 1);\n}\nvec4 quatMultiply (vec4 a, vec4 b){\n  vec4 quat;\n  quat.x = a.x * b.w + a.w * b.x + a.y * b.z - a.z * b.y;\n  quat.y = a.y * b.w + a.w * b.y + a.z * b.x - a.x * b.z;\n  quat.z = a.z * b.w + a.w * b.z + a.x * b.y - a.y * b.x;\n  quat.w = a.w * b.w - a.x * b.x - a.y * b.y - a.z * b.z;\n  return quat;\n}\nvoid rotateVecFromQuat (inout vec3 v, vec4 q){\n  float ix = q.w * v.x + q.y * v.z - q.z * v.y;\n  float iy = q.w * v.y + q.z * v.x - q.x * v.z;\n  float iz = q.w * v.z + q.x * v.y - q.y * v.x;\n  float iw = -q.x * v.x - q.y * v.y - q.z * v.z;\n  v.x = ix * q.w + iw * -q.x + iy * -q.z - iz * -q.y;\n  v.y = iy * q.w + iw * -q.y + iz * -q.x - ix * -q.z;\n  v.z = iz * q.w + iw * -q.z + ix * -q.y - iy * -q.x;\n}\nvec3 rotateInLocalSpace (vec3 pos, vec3 xAxis, vec3 yAxis, vec3 zAxis, vec4 q){\n  vec4 viewQuat = quaternionFromAxis(xAxis, yAxis, zAxis);\n  vec4 rotQuat = quatMultiply(viewQuat, q);\n  rotateVecFromQuat(pos, rotQuat);\n  return pos;\n}\nmat3 quatToMat3(vec4 q) {\n  vec3 m0 = vec3(\n    1.0 - 2.0 * q.y * q.y - 2.0 * q.z * q.z,\n    2.0 * q.x * q.y + 2.0 * q.w * q.z,\n    2.0 * q.x * q.z - 2.0 * q.w * q.y);\n\tvec3 m1 = vec3(\n    2.0 * q.x * q.y - 2.0 * q.w * q.z,\n    1.0 - 2.0 * q.x * q.x - 2.0 * q.z * q.z,\n    2.0 * q.y * q.z + 2.0 * q.w * q.x);\n\tvec3 m2 = vec3(\n    2.0 * q.x * q.z + 2.0 * q.w * q.y,\n    2.0 * q.y * q.z - 2.0 * q.w * q.x,\n    1.0 - 2.0 * q.x * q.x - 2.0 * q.y * q.y);\n  return mat3(m0, m1, m2);\n}\nvec4 mat3ToQuat(mat3 mat) {\n  float tr = mat[0][0] + mat[1][1] + mat[2][2];\n\tfloat qw, qx, qy, qz;\n  if (tr > 0.0) {\n    float S = sqrt(tr + 1.0) * 2.0;\n\t  float invS = 1.0 / S;\n\t  qw = 0.25 * S;\n\t  qx = (mat[1][2] - mat[2][1]) * invS;\n\t  qy = (mat[2][0] - mat[0][2]) * invS;\n\t  qz = (mat[0][1] - mat[1][0]) * invS;\n  } else if ((mat[0][0] > mat[1][1])&&(mat[0][0] > mat[2][2])) {\n    float S = sqrt(1.0 + mat[0][0] - mat[1][1] - mat[2][2]) * 2.0;\n\t  float invS = 1.0 / S;\n\t  qw = (mat[1][2] - mat[2][1]) * invS;\n\t  qx = 0.25 * S;\n\t  qy = (mat[1][0] + mat[0][1]) * invS;\n\t  qz = (mat[2][0] + mat[0][2]) * invS;\n  } else if (mat[1][1] > mat[2][2]) {\n\t  float S = sqrt(1.0 + mat[1][1] - mat[0][0] - mat[2][2]) * 2.0;\n\t  float invS = 1.0 / S;\n\t  qw = (mat[2][0] - mat[0][2]) * invS;\n\t  qx = (mat[1][0] + mat[0][1]) * invS;\n\t  qy = 0.25 * S;\n\t  qz = (mat[2][1] + mat[1][2]) * invS;\n  } else {\n\t  float S = sqrt(1.0 + mat[2][2] - mat[0][0] - mat[1][1]) * 2.0;\n\t  float invS = 1.0 / S;\n\t  qw = (mat[0][1] - mat[1][0]) * invS;\n\t  qx = (mat[2][0] + mat[0][2]) * invS;\n\t  qy = (mat[2][1] + mat[1][2]) * invS;\n\t  qz = 0.25 * S;\n  }\n  return vec4(qx, qy, qz, qw);\n}\nlayout(std140) uniform Constants {\n  vec4 mainTiling_Offset;\n  vec4 frameTile_velLenScale;\n  vec4 scale;\n  vec4 nodeRotation;\n};\nlayout(std140) uniform CCGlobal {\n  highp   vec4 cc_time;\n  mediump vec4 cc_screenSize;\n  mediump vec4 cc_nativeSize;\n};\nlayout(std140) uniform CCCamera {\n  highp   mat4 cc_matView;\n  highp   mat4 cc_matViewInv;\n  highp   mat4 cc_matProj;\n  highp   mat4 cc_matProjInv;\n  highp   mat4 cc_matViewProj;\n  highp   mat4 cc_matViewProjInv;\n  highp   vec4 cc_cameraPos;\n  mediump vec4 cc_screenScale;\n  mediump vec4 cc_exposure;\n  mediump vec4 cc_mainLitDir;\n  mediump vec4 cc_mainLitColor;\n  mediump vec4 cc_ambientSky;\n  mediump vec4 cc_ambientGround;\n  mediump vec4 cc_fogColor;\n  mediump vec4 cc_fogBase;\n  mediump vec4 cc_fogAdd;\n  mediump vec4 cc_nearFar;\n  mediump vec4 cc_viewPort;\n};\nlayout(std140) uniform CCLocal {\n  highp mat4 cc_matWorld;\n  highp mat4 cc_matWorldIT;\n  highp vec4 cc_lightingMapUVParam;\n};\nout mediump vec2 uv;\nout mediump vec4 color;\nvoid computeVertPos (inout vec4 pos, vec2 vertOffset, vec4 q, vec3 s\n#if CC_RENDER_MODE == 0 || CC_RENDER_MODE == 3\n  , mat4 viewInv\n#endif\n#if CC_RENDER_MODE == 1\n  , vec3 eye\n  , vec4 velocity\n  , float velocityScale\n  , float lengthScale\n  , float xIndex\n#endif\n) {\n#if CC_RENDER_MODE == 0\n  vec3 viewSpaceVert = vec3(vertOffset.x * s.x, vertOffset.y * s.y, 0.);\n  vec3 camX = normalize(vec3(viewInv[0][0], viewInv[1][0], viewInv[2][0]));\n  vec3 camY = normalize(vec3(viewInv[0][1], viewInv[1][1], viewInv[2][1]));\n  vec3 camZ = normalize(vec3(viewInv[0][2], viewInv[1][2], viewInv[2][2]));\n  pos.xyz += rotateInLocalSpace(viewSpaceVert, camX, camY, camZ, q);\n#elif CC_RENDER_MODE == 1\n  vec3 camRight = normalize(cross(pos.xyz - eye, velocity.xyz)) * s.x;\n  vec3 camUp = velocity.xyz * velocityScale + normalize(velocity.xyz) * lengthScale * s.y;\n  pos.xyz += (camRight * abs(vertOffset.x) * sign(vertOffset.y)) - camUp * xIndex;\n#elif CC_RENDER_MODE == 2\n  vec3 viewSpaceVert = vec3(vertOffset.x * s.x, vertOffset.y * s.y, 0.);\n  vec3 camX = vec3(1, 0, 0);\n  vec3 camY = vec3(0, 0, -1);\n  pos.xyz += rotateInLocalSpace(viewSpaceVert, camX, camY, cross(camX, camY), q);\n#elif CC_RENDER_MODE == 3\n  vec3 viewSpaceVert = vec3(vertOffset.x * s.x, vertOffset.y * s.y, 0.);\n  rotateVecFromQuat(viewSpaceVert, q);\n  vec3 camX = normalize(vec3(cc_matView[0][0], cc_matView[1][0], cc_matView[2][0]));\n  vec3 camY = vec3(0, 1, 0);\n  vec3 offset = camX * viewSpaceVert.x + camY * viewSpaceVert.y;\n  pos.xyz += offset;\n#else\n  pos.x += vertOffset.x;\n  pos.y += vertOffset.y;\n#endif\n}\nvec2 computeUV (float frameIndex, vec2 vertIndex, vec2 frameTile){\n  vec2 aniUV = vec2(0, floor(frameIndex * frameTile.y));\n  aniUV.x = floor(frameIndex * frameTile.x * frameTile.y - aniUV.y * frameTile.x);\n#if CC_RENDER_MODE != 4\n  vertIndex.y = 1. - vertIndex.y;\n#endif\n  return (aniUV.xy + vertIndex) / vec2(frameTile.x, frameTile.y);\n}\nin vec3 a_position;\nin vec3 a_texCoord;\nin vec3 a_texCoord1;\nin vec3 a_texCoord2;\nin vec4 a_color;\n#if CC_RENDER_MODE == 1\n  in vec3 a_color1;\n#endif\n#if CC_RENDER_MODE == 4\n  in vec3 a_texCoord3;\n  in vec3 a_normal;\n  in vec4 a_color1;\n#endif\nvec4 lpvs_main () {\n  vec3 compScale = scale.xyz * a_texCoord1;\n  vec4 pos = vec4(a_position, 1);\n  #if CC_RENDER_MODE == 1\n    vec4 velocity = vec4(a_color1.xyz, 0);\n  #endif\n  #if !CC_USE_WORLD_SPACE\n    pos = cc_matWorld * pos;\n    #if CC_RENDER_MODE == 1\n      velocity = cc_matWorld * velocity;\n    #endif\n  #endif\n  #if ROTATION_OVER_TIME_MODULE_ENABLE\n    vec3 rotTmp = a_texCoord2;\n    float mulFactor = 1.0;\n    if (rotTmp.x > 10.0 * 0.5) {\n        rotTmp.x -= 10.0;\n        mulFactor = -1.0;\n    }\n    vec4 rot = vec4(rotTmp, 0.0);\n    rot.w = mulFactor * sqrt(abs(1.0 - rot.x * rot.x - rot.y * rot.y - rot.z * rot.z));\n  #else\n    #if CC_RENDER_MODE != 4\n      #if CC_RENDER_MODE == 0\n        vec3 rotEuler = a_texCoord2;\n      #elif CC_RENDER_MODE == 1\n        vec3 rotEuler = vec3(0.);\n      #else\n        vec3 rotEuler = vec3(0., 0., a_texCoord2.z);\n      #endif\n      vec4 rot = quaternionFromEuler(rotEuler);\n    #else\n      vec4 rot = quaternionFromEuler(a_texCoord2);\n    #endif\n  #endif\n  #if CC_RENDER_MODE != 4\n    vec2 cornerOffset = vec2((a_texCoord.xy - 0.5));\n    #if CC_RENDER_MODE == 0 || CC_RENDER_MODE == 3\n      computeVertPos(pos, cornerOffset, rot, compScale, cc_matViewInv);\n    #elif CC_RENDER_MODE == 1\n      computeVertPos(pos, cornerOffset, rot, compScale, cc_cameraPos.xyz, velocity, frameTile_velLenScale.z, frameTile_velLenScale.w, a_texCoord.x);\n    #elif 2\n      computeVertPos(pos, cornerOffset, rot, compScale);\n    #endif\n    color = a_color;\n  #else\n    mat3 rotMat = quatToMat3(rot);\n    mat3 nodeMat = quatToMat3(nodeRotation);\n    rotMat = nodeMat * rotMat;\n    rot = mat3ToQuat(rotMat);\n    mat4 xformNoScale = matrixFromRT(rot, pos.xyz);\n    mat4 xform = matFromRTS(rot, pos.xyz, compScale);\n    pos = xform * vec4(a_texCoord3, 1);\n    vec4 normal = xformNoScale * vec4(a_normal, 0);\n    color = a_color * a_color1;\n  #endif\n  uv = computeUV(a_texCoord.z, a_texCoord.xy, frameTile_velLenScale.xy) * mainTiling_Offset.xy + mainTiling_Offset.zw;\n  pos = cc_matViewProj * pos;\n  return pos;\n}\nvoid main() { gl_Position = lpvs_main(); }","frag":"\nprecision mediump float;\nlayout(std140) uniform CCGlobal {\n  highp   vec4 cc_time;\n  mediump vec4 cc_screenSize;\n  mediump vec4 cc_nativeSize;\n};\nlayout(std140) uniform CCCamera {\n  highp   mat4 cc_matView;\n  highp   mat4 cc_matViewInv;\n  highp   mat4 cc_matProj;\n  highp   mat4 cc_matProjInv;\n  highp   mat4 cc_matViewProj;\n  highp   mat4 cc_matViewProjInv;\n  highp   vec4 cc_cameraPos;\n  mediump vec4 cc_screenScale;\n  mediump vec4 cc_exposure;\n  mediump vec4 cc_mainLitDir;\n  mediump vec4 cc_mainLitColor;\n  mediump vec4 cc_ambientSky;\n  mediump vec4 cc_ambientGround;\n  mediump vec4 cc_fogColor;\n  mediump vec4 cc_fogBase;\n  mediump vec4 cc_fogAdd;\n  mediump vec4 cc_nearFar;\n  mediump vec4 cc_viewPort;\n};\nvec4 CCFragOutput (vec4 color) {\n  return color;\n}\nin vec2 uv;\nin vec4 color;\nuniform sampler2D mainTexture;\nvec4 premultiplied () {\n  vec4 col = color * texture(mainTexture, uv) * color.a;\n  return CCFragOutput(col);\n}\nlayout(location = 0) out vec4 cc_FragColor;\nvoid main() { cc_FragColor = premultiplied(); }"},"glsl1":{"vert":"\nprecision highp float;\nvec4 quaternionFromAxis (vec3 xAxis,vec3 yAxis,vec3 zAxis){\n  mat3 m = mat3(xAxis,yAxis,zAxis);\n  float trace = m[0][0] + m[1][1] + m[2][2];\n  vec4 quat;\n  if (trace > 0.) {\n    float s = 0.5 / sqrt(trace + 1.0);\n    quat.w = 0.25 / s;\n    quat.x = (m[2][1] - m[1][2]) * s;\n    quat.y = (m[0][2] - m[2][0]) * s;\n    quat.z = (m[1][0] - m[0][1]) * s;\n  } else if ((m[0][0] > m[1][1]) && (m[0][0] > m[2][2])) {\n    float s = 2.0 * sqrt(1.0 + m[0][0] - m[1][1] - m[2][2]);\n    quat.w = (m[2][1] - m[1][2]) / s;\n    quat.x = 0.25 * s;\n    quat.y = (m[0][1] + m[1][0]) / s;\n    quat.z = (m[0][2] + m[2][0]) / s;\n  } else if (m[1][1] > m[2][2]) {\n    float s = 2.0 * sqrt(1.0 + m[1][1] - m[0][0] - m[2][2]);\n    quat.w = (m[0][2] - m[2][0]) / s;\n    quat.x = (m[0][1] + m[1][0]) / s;\n    quat.y = 0.25 * s;\n    quat.z = (m[1][2] + m[2][1]) / s;\n  } else {\n    float s = 2.0 * sqrt(1.0 + m[2][2] - m[0][0] - m[1][1]);\n    quat.w = (m[1][0] - m[0][1]) / s;\n    quat.x = (m[0][2] + m[2][0]) / s;\n    quat.y = (m[1][2] + m[2][1]) / s;\n    quat.z = 0.25 * s;\n  }\n  float len = quat.x * quat.x + quat.y * quat.y + quat.z * quat.z + quat.w * quat.w;\n  if (len > 0.) {\n    len = 1. / sqrt(len);\n    quat.x = quat.x * len;\n    quat.y = quat.y * len;\n    quat.z = quat.z * len;\n    quat.w = quat.w * len;\n  }\n  return quat;\n}\nvec4 quaternionFromEuler (vec3 angle){\n  float x = angle.x / 2.;\n  float y = angle.y / 2.;\n  float z = angle.z / 2.;\n  float sx = sin(x);\n  float cx = cos(x);\n  float sy = sin(y);\n  float cy = cos(y);\n  float sz = sin(z);\n  float cz = cos(z);\n  vec4 quat = vec4(0);\n  quat.x = sx * cy * cz + cx * sy * sz;\n  quat.y = cx * sy * cz + sx * cy * sz;\n  quat.z = cx * cy * sz - sx * sy * cz;\n  quat.w = cx * cy * cz - sx * sy * sz;\n  return quat;\n}\nmat4 matrixFromRT (vec4 q, vec3 p){\n  float x2 = q.x + q.x;\n  float y2 = q.y + q.y;\n  float z2 = q.z + q.z;\n  float xx = q.x * x2;\n  float xy = q.x * y2;\n  float xz = q.x * z2;\n  float yy = q.y * y2;\n  float yz = q.y * z2;\n  float zz = q.z * z2;\n  float wx = q.w * x2;\n  float wy = q.w * y2;\n  float wz = q.w * z2;\n  return mat4(\n    1. - (yy + zz), xy + wz, xz - wy, 0,\n    xy - wz, 1. - (xx + zz), yz + wx, 0,\n    xz + wy, yz - wx, 1. - (xx + yy), 0,\n    p.x, p.y, p.z, 1\n  );\n}\nmat4 matFromRTS (vec4 q, vec3 t, vec3 s){\n  float x = q.x, y = q.y, z = q.z, w = q.w;\n  float x2 = x + x;\n  float y2 = y + y;\n  float z2 = z + z;\n  float xx = x * x2;\n  float xy = x * y2;\n  float xz = x * z2;\n  float yy = y * y2;\n  float yz = y * z2;\n  float zz = z * z2;\n  float wx = w * x2;\n  float wy = w * y2;\n  float wz = w * z2;\n  float sx = s.x;\n  float sy = s.y;\n  float sz = s.z;\n  return mat4((1. - (yy + zz)) * sx, (xy + wz) * sx, (xz - wy) * sx, 0,\n    (xy - wz) * sy, (1. - (xx + zz)) * sy, (yz + wx) * sy, 0,\n    (xz + wy) * sz, (yz - wx) * sz, (1. - (xx + yy)) * sz, 0,\n    t.x, t.y, t.z, 1);\n}\nvec4 quatMultiply (vec4 a, vec4 b){\n  vec4 quat;\n  quat.x = a.x * b.w + a.w * b.x + a.y * b.z - a.z * b.y;\n  quat.y = a.y * b.w + a.w * b.y + a.z * b.x - a.x * b.z;\n  quat.z = a.z * b.w + a.w * b.z + a.x * b.y - a.y * b.x;\n  quat.w = a.w * b.w - a.x * b.x - a.y * b.y - a.z * b.z;\n  return quat;\n}\nvoid rotateVecFromQuat (inout vec3 v, vec4 q){\n  float ix = q.w * v.x + q.y * v.z - q.z * v.y;\n  float iy = q.w * v.y + q.z * v.x - q.x * v.z;\n  float iz = q.w * v.z + q.x * v.y - q.y * v.x;\n  float iw = -q.x * v.x - q.y * v.y - q.z * v.z;\n  v.x = ix * q.w + iw * -q.x + iy * -q.z - iz * -q.y;\n  v.y = iy * q.w + iw * -q.y + iz * -q.x - ix * -q.z;\n  v.z = iz * q.w + iw * -q.z + ix * -q.y - iy * -q.x;\n}\nvec3 rotateInLocalSpace (vec3 pos, vec3 xAxis, vec3 yAxis, vec3 zAxis, vec4 q){\n  vec4 viewQuat = quaternionFromAxis(xAxis, yAxis, zAxis);\n  vec4 rotQuat = quatMultiply(viewQuat, q);\n  rotateVecFromQuat(pos, rotQuat);\n  return pos;\n}\nmat3 quatToMat3(vec4 q) {\n  vec3 m0 = vec3(\n    1.0 - 2.0 * q.y * q.y - 2.0 * q.z * q.z,\n    2.0 * q.x * q.y + 2.0 * q.w * q.z,\n    2.0 * q.x * q.z - 2.0 * q.w * q.y);\n\tvec3 m1 = vec3(\n    2.0 * q.x * q.y - 2.0 * q.w * q.z,\n    1.0 - 2.0 * q.x * q.x - 2.0 * q.z * q.z,\n    2.0 * q.y * q.z + 2.0 * q.w * q.x);\n\tvec3 m2 = vec3(\n    2.0 * q.x * q.z + 2.0 * q.w * q.y,\n    2.0 * q.y * q.z - 2.0 * q.w * q.x,\n    1.0 - 2.0 * q.x * q.x - 2.0 * q.y * q.y);\n  return mat3(m0, m1, m2);\n}\nvec4 mat3ToQuat(mat3 mat) {\n  float tr = mat[0][0] + mat[1][1] + mat[2][2];\n\tfloat qw, qx, qy, qz;\n  if (tr > 0.0) {\n    float S = sqrt(tr + 1.0) * 2.0;\n\t  float invS = 1.0 / S;\n\t  qw = 0.25 * S;\n\t  qx = (mat[1][2] - mat[2][1]) * invS;\n\t  qy = (mat[2][0] - mat[0][2]) * invS;\n\t  qz = (mat[0][1] - mat[1][0]) * invS;\n  } else if ((mat[0][0] > mat[1][1])&&(mat[0][0] > mat[2][2])) {\n    float S = sqrt(1.0 + mat[0][0] - mat[1][1] - mat[2][2]) * 2.0;\n\t  float invS = 1.0 / S;\n\t  qw = (mat[1][2] - mat[2][1]) * invS;\n\t  qx = 0.25 * S;\n\t  qy = (mat[1][0] + mat[0][1]) * invS;\n\t  qz = (mat[2][0] + mat[0][2]) * invS;\n  } else if (mat[1][1] > mat[2][2]) {\n\t  float S = sqrt(1.0 + mat[1][1] - mat[0][0] - mat[2][2]) * 2.0;\n\t  float invS = 1.0 / S;\n\t  qw = (mat[2][0] - mat[0][2]) * invS;\n\t  qx = (mat[1][0] + mat[0][1]) * invS;\n\t  qy = 0.25 * S;\n\t  qz = (mat[2][1] + mat[1][2]) * invS;\n  } else {\n\t  float S = sqrt(1.0 + mat[2][2] - mat[0][0] - mat[1][1]) * 2.0;\n\t  float invS = 1.0 / S;\n\t  qw = (mat[0][1] - mat[1][0]) * invS;\n\t  qx = (mat[2][0] + mat[0][2]) * invS;\n\t  qy = (mat[2][1] + mat[1][2]) * invS;\n\t  qz = 0.25 * S;\n  }\n  return vec4(qx, qy, qz, qw);\n}\n   uniform vec4 mainTiling_Offset;\n   uniform vec4 frameTile_velLenScale;\n   uniform vec4 scale;\n   uniform vec4 nodeRotation;\nuniform highp mat4 cc_matView;\n  uniform highp mat4 cc_matViewInv;\n  uniform highp mat4 cc_matViewProj;\n  uniform highp vec4 cc_cameraPos;\nuniform highp mat4 cc_matWorld;\nvarying mediump vec2 uv;\nvarying mediump vec4 color;\nvoid computeVertPos (inout vec4 pos, vec2 vertOffset, vec4 q, vec3 s\n#if CC_RENDER_MODE == 0 || CC_RENDER_MODE == 3\n  , mat4 viewInv\n#endif\n#if CC_RENDER_MODE == 1\n  , vec3 eye\n  , vec4 velocity\n  , float velocityScale\n  , float lengthScale\n  , float xIndex\n#endif\n) {\n#if CC_RENDER_MODE == 0\n  vec3 viewSpaceVert = vec3(vertOffset.x * s.x, vertOffset.y * s.y, 0.);\n  vec3 camX = normalize(vec3(viewInv[0][0], viewInv[1][0], viewInv[2][0]));\n  vec3 camY = normalize(vec3(viewInv[0][1], viewInv[1][1], viewInv[2][1]));\n  vec3 camZ = normalize(vec3(viewInv[0][2], viewInv[1][2], viewInv[2][2]));\n  pos.xyz += rotateInLocalSpace(viewSpaceVert, camX, camY, camZ, q);\n#elif CC_RENDER_MODE == 1\n  vec3 camRight = normalize(cross(pos.xyz - eye, velocity.xyz)) * s.x;\n  vec3 camUp = velocity.xyz * velocityScale + normalize(velocity.xyz) * lengthScale * s.y;\n  pos.xyz += (camRight * abs(vertOffset.x) * sign(vertOffset.y)) - camUp * xIndex;\n#elif CC_RENDER_MODE == 2\n  vec3 viewSpaceVert = vec3(vertOffset.x * s.x, vertOffset.y * s.y, 0.);\n  vec3 camX = vec3(1, 0, 0);\n  vec3 camY = vec3(0, 0, -1);\n  pos.xyz += rotateInLocalSpace(viewSpaceVert, camX, camY, cross(camX, camY), q);\n#elif CC_RENDER_MODE == 3\n  vec3 viewSpaceVert = vec3(vertOffset.x * s.x, vertOffset.y * s.y, 0.);\n  rotateVecFromQuat(viewSpaceVert, q);\n  vec3 camX = normalize(vec3(cc_matView[0][0], cc_matView[1][0], cc_matView[2][0]));\n  vec3 camY = vec3(0, 1, 0);\n  vec3 offset = camX * viewSpaceVert.x + camY * viewSpaceVert.y;\n  pos.xyz += offset;\n#else\n  pos.x += vertOffset.x;\n  pos.y += vertOffset.y;\n#endif\n}\nvec2 computeUV (float frameIndex, vec2 vertIndex, vec2 frameTile){\n  vec2 aniUV = vec2(0, floor(frameIndex * frameTile.y));\n  aniUV.x = floor(frameIndex * frameTile.x * frameTile.y - aniUV.y * frameTile.x);\n#if CC_RENDER_MODE != 4\n  vertIndex.y = 1. - vertIndex.y;\n#endif\n  return (aniUV.xy + vertIndex) / vec2(frameTile.x, frameTile.y);\n}\nattribute vec3 a_position;\nattribute vec3 a_texCoord;\nattribute vec3 a_texCoord1;\nattribute vec3 a_texCoord2;\nattribute vec4 a_color;\n#if CC_RENDER_MODE == 1\n  attribute vec3 a_color1;\n#endif\n#if CC_RENDER_MODE == 4\n  attribute vec3 a_texCoord3;\n  attribute vec3 a_normal;\n  attribute vec4 a_color1;\n#endif\nvec4 lpvs_main () {\n  vec3 compScale = scale.xyz * a_texCoord1;\n  vec4 pos = vec4(a_position, 1);\n  #if CC_RENDER_MODE == 1\n    vec4 velocity = vec4(a_color1.xyz, 0);\n  #endif\n  #if !CC_USE_WORLD_SPACE\n    pos = cc_matWorld * pos;\n    #if CC_RENDER_MODE == 1\n      velocity = cc_matWorld * velocity;\n    #endif\n  #endif\n  #if ROTATION_OVER_TIME_MODULE_ENABLE\n    vec3 rotTmp = a_texCoord2;\n    float mulFactor = 1.0;\n    if (rotTmp.x > 10.0 * 0.5) {\n        rotTmp.x -= 10.0;\n        mulFactor = -1.0;\n    }\n    vec4 rot = vec4(rotTmp, 0.0);\n    rot.w = mulFactor * sqrt(abs(1.0 - rot.x * rot.x - rot.y * rot.y - rot.z * rot.z));\n  #else\n    #if CC_RENDER_MODE != 4\n      #if CC_RENDER_MODE == 0\n        vec3 rotEuler = a_texCoord2;\n      #elif CC_RENDER_MODE == 1\n        vec3 rotEuler = vec3(0.);\n      #else\n        vec3 rotEuler = vec3(0., 0., a_texCoord2.z);\n      #endif\n      vec4 rot = quaternionFromEuler(rotEuler);\n    #else\n      vec4 rot = quaternionFromEuler(a_texCoord2);\n    #endif\n  #endif\n  #if CC_RENDER_MODE != 4\n    vec2 cornerOffset = vec2((a_texCoord.xy - 0.5));\n    #if CC_RENDER_MODE == 0 || CC_RENDER_MODE == 3\n      computeVertPos(pos, cornerOffset, rot, compScale, cc_matViewInv);\n    #elif CC_RENDER_MODE == 1\n      computeVertPos(pos, cornerOffset, rot, compScale, cc_cameraPos.xyz, velocity, frameTile_velLenScale.z, frameTile_velLenScale.w, a_texCoord.x);\n    #elif 2\n      computeVertPos(pos, cornerOffset, rot, compScale);\n    #endif\n    color = a_color;\n  #else\n    mat3 rotMat = quatToMat3(rot);\n    mat3 nodeMat = quatToMat3(nodeRotation);\n    rotMat = nodeMat * rotMat;\n    rot = mat3ToQuat(rotMat);\n    mat4 xformNoScale = matrixFromRT(rot, pos.xyz);\n    mat4 xform = matFromRTS(rot, pos.xyz, compScale);\n    pos = xform * vec4(a_texCoord3, 1);\n    vec4 normal = xformNoScale * vec4(a_normal, 0);\n    color = a_color * a_color1;\n  #endif\n  uv = computeUV(a_texCoord.z, a_texCoord.xy, frameTile_velLenScale.xy) * mainTiling_Offset.xy + mainTiling_Offset.zw;\n  pos = cc_matViewProj * pos;\n  return pos;\n}\nvoid main() { gl_Position = lpvs_main(); }","frag":"\nprecision mediump float;\nvec4 CCFragOutput (vec4 color) {\n  return color;\n}\nvarying vec2 uv;\nvarying vec4 color;\nuniform sampler2D mainTexture;\nvec4 premultiplied () {\n  vec4 col = color * texture2D(mainTexture, uv) * color.a;\n  return CCFragOutput(col);\n}\nvoid main() { gl_FragColor = premultiplied(); }"},"builtins":{"globals":{"blocks":[{"name":"CCGlobal","defines":[]},{"name":"CCCamera","defines":[]}],"samplerTextures":[],"buffers":[],"images":[]},"locals":{"blocks":[{"name":"CCLocal","defines":[]}],"samplerTextures":[],"buffers":[],"images":[]},"statistics":{"CC_EFFECT_USED_VERTEX_UNIFORM_VECTORS":52,"CC_EFFECT_USED_FRAGMENT_UNIFORM_VECTORS":39}},"defines":[{"name":"CC_RENDER_MODE","type":"number","defines":[],"range":[0,4]},{"name":"CC_USE_WORLD_SPACE","type":"boolean","defines":[]},{"name":"ROTATION_OVER_TIME_MODULE_ENABLE","type":"boolean","defines":[]}]}],[{"name":"add","passes":[{"program":"builtin-particle|particle-vs-legacy:lpvs_main|tinted-fs:add","rasterizerState":{"cullMode":0},"blendState":{"targets":[{"blend":true,"blendSrc":2,"blendDst":1,"blendSrcAlpha":2,"blendDstAlpha":1}]},"depthStencilState":{"depthTest":true,"depthWrite":false},"properties":{"mainTexture":{"value":"grey","type":28},"mainTiling_Offset":{"type":16,"value":[1,1,0,0]},"tintColor":{"type":16,"value":[0.5,0.5,0.5,0.5],"editor":{"type":"color"}}}}]},{"name":"alpha-blend","passes":[{"program":"builtin-particle|particle-vs-legacy:lpvs_main|tinted-fs:add","rasterizerState":{"cullMode":0},"blendState":{"targets":[{"blend":true,"blendSrc":2,"blendDst":4,"blendSrcAlpha":0,"blendDstAlpha":1}]},"depthStencilState":{"depthTest":true,"depthWrite":false},"properties":{"mainTexture":{"value":"grey","type":28},"mainTiling_Offset":{"type":16,"value":[1,1,0,0]},"tintColor":{"type":16,"value":[0.5,0.5,0.5,0.5],"editor":{"type":"color"}}}}]},{"name":"add-multiply","passes":[{"program":"builtin-particle|particle-vs-legacy:lpvs_main|tinted-fs:multiply","rasterizerState":{"cullMode":0},"blendState":{"targets":[{"blend":true,"blendSrc":7,"blendDst":1,"blendSrcAlpha":0,"blendDstAlpha":3}]},"depthStencilState":{"depthTest":true,"depthWrite":false},"properties":{"mainTexture":{"value":"grey","type":28},"mainTiling_Offset":{"type":16,"value":[1,1,0,0]},"tintColor":{"type":16,"value":[0.5,0.5,0.5,0.5],"editor":{"type":"color"}}}}]},{"name":"add-smooth","passes":[{"program":"builtin-particle|particle-vs-legacy:lpvs_main|no-tint-fs:addSmooth","rasterizerState":{"cullMode":0},"blendState":{"targets":[{"blend":true,"blendSrc":2,"blendDst":1,"blendSrcAlpha":2,"blendDstAlpha":1}]},"depthStencilState":{"depthTest":true,"depthWrite":false},"properties":{"mainTexture":{"value":"grey","type":28},"mainTiling_Offset":{"type":16,"value":[1,1,0,0]}}}]},{"name":"premultiply-blend","passes":[{"program":"builtin-particle|particle-vs-legacy:lpvs_main|no-tint-fs:premultiplied","rasterizerState":{"cullMode":0},"blendState":{"targets":[{"blend":true,"blendSrc":2,"blendDst":4,"blendSrcAlpha":0,"blendDstAlpha":1}]},"depthStencilState":{"depthTest":true,"depthWrite":false},"properties":{"mainTexture":{"value":"grey","type":28},"mainTiling_Offset":{"type":16,"value":[1,1,0,0]}}}]}]]],0,0,[],[],[]],[[[32,"Lose",".mp3",0.648],-1],0,0,[],[],[]],[[[27,[{"rasterizerState":{},"depthStencilState":{},"blendState":{"targets":[{}]}},{},{}],[{"USE_LIGHTMAP":true},{},{}],[[[{},"mainColor",8,[4,4283325058]],{},{}],11,0,0]]],0,0,[0],[4],[3]],[[[27,[{"rasterizerState":{},"depthStencilState":{},"blendState":{"targets":[{}]}},{},{}],[{"USE_ALBEDO_MAP":true},{},{}],[[[{},"mainTexture",6,0],{},{}],11,0,0]]],0,0,[0,0],[6,4],[61,3]],[[[91,"Dino"],[92,"Points",33554432,[-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16],[[55,-1]]],[51,"bg02",8388608,[-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32]],[93,"Units",8388608,[-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47],[1,0,-2.799,5.983],[1,0.65,0.65,0.65]],[59,"Canvas2D",33554432,[-52,-53,-54,1,-55,-56,-57,-58],[[12,-48,[5,320,480]],[108,-50,-49],[109,45,2.842170943040401e-14,2.842170943040401e-14,-51]],[1,160,240.00000000000003,0]],[19,"Rap",8388608,[-65,-66,-67],[[21,-59,[112,113,114,115,116]],[64,-62,-61,-60],[17,-63,[1,0,3,0],[1,10,5.5,3]],[16,8,2,-64]],[3,0,-0.7071067811865475,0,0.7071067811865476],[1,0.004,0.004,0.004],[1,0,-90,0]],[19,"Comp",8388608,[-72,-73,-74],[[21,-68,[134,135,136,137,138]],[16,8,2,-69],[17,-70,[1,0,1,0],[1,2,2,1]],[24,-71]],[3,0,-0.7071067811865475,0,0.7071067811865476],[1,0.08,0.08,0.08],[1,0,-90,0]],[19,"Comp",8388608,[-79,-80,-81],[[21,-75,[151,152,153,154,155]],[16,8,2,-76],[17,-77,[1,0,1,0],[1,2,2,1]],[24,-78]],[3,0,-0.7071067811865475,0,0.7071067811865476],[1,0.08,0.08,0.08],[1,0,-90,0]],[19,"Comp",8388608,[-86,-87,-88],[[21,-82,[168,169,170,171,172]],[16,8,2,-83],[17,-84,[1,0,1,0],[1,2,2,1]],[24,-85]],[3,0,-0.7071067811865475,0,0.7071067811865476],[1,0.08,0.08,0.08],[1,0,-90,0]],[19,"Comp",8388608,[-93,-94,-95],[[21,-89,[185,186,187,188,189]],[16,8,2,-90],[17,-91,[1,0,1,0],[1,2,2,1]],[24,-92]],[3,0,-0.7071067811865475,0,0.7071067811865476],[1,0.08,0.08,0.08],[1,0,-90,0]],[19,"Comp",8388608,[-100,-101,-102],[[21,-96,[202,203,204,205,206]],[16,8,2,-97],[17,-98,[1,0,1,0],[1,2,2,1]],[24,-99]],[3,0,-0.7071067811865475,0,0.7071067811865476],[1,0.08,0.08,0.08],[1,0,-90,0]],[19,"Comp",8388608,[-107,-108,-109],[[21,-103,[219,220,221,222,223]],[16,8,2,-104],[17,-105,[1,0,1,0],[1,2,2,1]],[24,-106]],[3,0,-0.7071067811865475,0,0.7071067811865476],[1,0.08,0.08,0.08],[1,0,-90,0]],[19,"Comp",8388608,[-114,-115,-116],[[21,-110,[236,237,238,239,240]],[16,8,2,-111],[17,-112,[1,0,1,0],[1,2,2,1]],[24,-113]],[3,0,-0.7071067811865475,0,0.7071067811865476],[1,0.08,0.08,0.08],[1,0,-90,0]],[19,"Comp",8388608,[-121,-122,-123],[[21,-117,[253,254,255,256,257]],[16,8,2,-118],[17,-119,[1,0,1,0],[1,2,2,1]],[24,-120]],[3,0,-0.7071067811865475,0,0.7071067811865476],[1,0.08,0.08,0.08],[1,0,-90,0]],[19,"Comp",8388608,[-128,-129,-130],[[21,-124,[268,269,270,271,272]],[16,8,2,-125],[17,-126,[1,0,1,0],[1,2,2,1]],[24,-127]],[3,0,-0.7071067811865475,0,0.7071067811865476],[1,0.08,0.08,0.08],[1,0,-90,0]],[19,"Comp",8388608,[-135,-136,-137],[[21,-131,[285,286,287,288,289]],[16,8,2,-132],[17,-133,[1,0,1,0],[1,2,2,1]],[24,-134]],[3,0,-0.7071067811865475,0,0.7071067811865476],[1,0.08,0.08,0.08],[1,0,-90,0]],[19,"Comp",8388608,[-142,-143,-144],[[21,-138,[302,303,304,305,306]],[16,8,2,-139],[17,-140,[1,0,1,0],[1,2,2,1]],[24,-141]],[3,0,-0.7071067811865475,0,0.7071067811865476],[1,0.08,0.08,0.08],[1,0,-90,0]],[19,"Comp",8388608,[-149,-150,-151],[[21,-145,[319,320,321,322,323]],[16,8,2,-146],[17,-147,[1,0,1,0],[1,2,2,1]],[24,-148]],[3,0,-0.7071067811865475,0,0.7071067811865476],[1,0.08,0.08,0.08],[1,0,-90,0]],[19,"Comp",8388608,[-156,-157,-158],[[21,-152,[336,337,338,339,340]],[16,8,2,-153],[17,-154,[1,0,1,0],[1,2,2,1]],[24,-155]],[3,0,-0.7071067811865475,0,0.7071067811865476],[1,0.08,0.08,0.08],[1,0,-90,0]],[19,"Comp",8388608,[-163,-164,-165],[[21,-159,[353,354,355,356,357]],[16,8,2,-160],[17,-161,[1,0,1,0],[1,2,2,1]],[24,-162]],[3,0,-0.7071067811865475,0,0.7071067811865476],[1,0.08,0.08,0.08],[1,0,-90,0]],[19,"Rap_2",8388608,[-172,-173,-174],[[21,-166,[416,417,418,419,420]],[64,-169,-168,-167],[17,-170,[1,0,3,0],[1,10,5.5,3]],[16,8,2,-171]],[3,0,-0.7071067811865475,0,0.7071067811865476],[1,0.004,0.004,0.004],[1,0,-90,0]],[102,"AudioManager","43S0d/FAdIIa0438iJAqd+",[-176,-177,-178,-179,-180,-181,-182],[-175]],[19,"Comp",8388608,[-187,-188,-189],[[21,-183,[372,373,374,375,376]],[16,8,2,-184],[17,-185,[1,0,1,0],[1,2,2,1]],[24,-186]],[3,0,-0.7071067811865475,0,0.7071067811865476],[1,0.08,0.08,0.08],[1,0,-90,0]],[59,"Rex",8388608,[-194,-195],[[110,true,-190,[385,386,387,388,389,390],391],[111,-191],[17,-192,[1,0,8,0],[1,30,16,8]],[16,4,2,-193]],[1,0,0.35,0]],[112,"Dino",[-200,-201,-202,-203,21,-204,-205],[113,"e7973f3c-cbce-4a8a-9dbb-89db64b73708",[[114,["_trailModule","_particleSystem"],-197,[56,["dd75xDNvFL5JL1FFRSWiHm"]],-196,[56,["dd75xDNvFL5JL1FFRSWiHm"]]],[115,["FX_Merge"],-199,-198,[56,["dd75xDNvFL5JL1FFRSWiHm"]]]]],[116,[117,0.5208,[2,0.23529411764705882,0.3607843137254902,0.796078431372549,0.520833125],[2,0.23529411764705882,0.3607843137254902,0.796078431372549,1],[2,0.519964,0.630786,0.905039,0.5208],[2,0.519544,0.630484,0.905069,0]],[118,1,true,2,0.05,0.4,0.2,10,2000,10,1,[4,4283190348],[0,2048,2048]],[119,true,428,429],[120],[121]]],[94,"Reward",33554432,4,[-209,-210],[[55,-206],[39,-207,[40],41],[123,-208,[4,16777215]]]],[52,"btn_claim",33554432,25,[-215],[[12,-211,[5,303,114]],[30,-212,36],[39,-213,[37],38],[125,3,-214,39]],[1,0,-141.841,0],[1,0.7,0.7,1]],[126,21],[95,"TryAgain",false,33554432,4,[-219,-220],[[12,-216,[5,442,148]],[39,-217,[19],20],[127,-218]],[1,0,-201,0],[1,0.4,0.4,1]],[52,"glow",33554432,25,[-223,-224,-225],[[12,-221,[5,693,707]],[30,-222,32]],[1,0,44.556,0],[1,0.5,0.5,1]],[4,"eye0",8388608,[-226,-227,-228,-229,-230],[1,-1.7881393032936899e-9,0.0176206324249506,-0.014309639111161232],[3,-0.000006845453753711561,0.000001566950231709085,0.000007392839961155405,0.9999999999480151],[1,-0.0007844325454017371,0.00017956506915299574,0.0008471558276018774]],[103,"Merge FX",8388608,[-232],[-231],[3,4.3297802811774664e-17,0.7071067811865476,-0.7071067811865475,4.329780281177467e-17],[1,0.007692307692307693,0.007692307692307693,0.007692307692307693],[1,89.99999999999999,180,0]],[4,"eye0",8388608,[-233,-234,-235,-236,-237],[1,-1.7881393032936899e-9,0.0176206324249506,-0.014309639111161232],[3,-0.000006845453753711561,0.000001566950231709085,0.000007392839961155405,0.9999999999480151],[1,-0.0007844325454017371,0.00017956506915299574,0.0008471558276018774]],[51,"3D",8388608,[-238,-239,-240,-241]],[106,"GamePlay","74v0Gx9cVDhbRRRgISqK/C",24,[4,33],[[-242,[122,-243]],1,4]],[60,"fail",33554432,4,[[12,-244,[5,466,309]],[124,-245,[4,16777215],24],[40,true,-246,[25],26]],[1,0,-100,0],[1,0.8,0.8,1]],[2,"Details",8388608,33,[-247,3,-248,-249],[1,0,0,-1.45]],[128,[-294,-295,-296,-297,-298,-299,-300,-301,-302,-303,-304,-305,-306,-307],[-286,-287,-288,-289,-290,-291,-292,-293],[-280,-281,-282,-283,-284,-285],[-272,-273,-274,-275,-276,-277,-278,-279],[-266,-267,-268,-269,-270,-271],[-250,-251,-252,-253,-254,-255,-256,-257,-258,-259,-260,-261,-262,-263,-264,-265],[6,7,8,9,10,11,12,13],[14,15,16,17,18,19],23,5,20,25,26,35],[13,"HideMask",33554432,4,[[12,-308,[5,5000,5000]],[22,0,-309,[4,0],1]]],[13,"Point",33554432,1,[[12,-310,[5,10,10]],[22,0,-311,[4,16777215],2]]],[25,"Point_1",33554432,1,[[12,-312,[5,40,60]],[22,0,-313,[4,16777215],3]],[1,-105,17,0]],[25,"Point_2",33554432,1,[[12,-314,[5,40,60]],[22,0,-315,[4,16777215],4]],[1,-48,17,0]],[25,"Point_3",33554432,1,[[12,-316,[5,40,60]],[22,0,-317,[4,16777215],5]],[1,2,12,0]],[25,"Point_4",33554432,1,[[12,-318,[5,40,60]],[22,0,-319,[4,16777215],6]],[1,1,-41,0]],[25,"Point_5",33554432,1,[[12,-320,[5,40,60]],[22,0,-321,[4,16777215],7]],[1,-1,-105.548,0]],[25,"Point_6",33554432,1,[[12,-322,[5,40,60]],[22,0,-323,[4,16777215],8]],[1,-52.062,-104.548,0]],[25,"Point_7",33554432,1,[[12,-324,[5,40,60]],[22,0,-325,[4,16777215],9]],[1,-106.826,-105.548,0]],[25,"Point_8",33554432,1,[[12,-326,[5,40,60]],[22,0,-327,[4,16777215],10]],[1,-107.104,-46,0]],[25,"Point_9",33554432,1,[[12,-328,[5,40,60]],[22,0,-329,[4,16777215],11]],[1,54.661,17,0]],[25,"Point_10",33554432,1,[[12,-330,[5,40,60]],[22,0,-331,[4,16777215],12]],[1,99.785,17,0]],[25,"Point_11",33554432,1,[[12,-332,[5,40,60]],[22,0,-333,[4,16777215],13]],[1,102.943,-47.378,0]],[25,"Point_12",33554432,1,[[12,-334,[5,40,60]],[22,0,-335,[4,16777215],14]],[1,105.241,-107.635,0]],[25,"Point_13",33554432,1,[[12,-336,[5,40,60]],[22,0,-337,[4,16777215],15]],[1,53.1,-105.548,0]],[25,"Point_14",33554432,1,[[12,-338,[5,40,60]],[22,0,-339,[4,16777215],16]],[1,53.499,-43.191,0]],[52,"Text_TapToFight",33554432,4,[-341],[[55,-340]],[1,0,-180,0],[1,0.55,0.55,0.35]],[13,"Text_Tap",33554432,54,[[12,-342,[5,445,60]],[30,-343,21],[40,true,-344,[22],23]]],[13,"light",33554432,29,[[12,-345,[5,720,722]],[30,-346,27],[40,true,-347,[28],29]]],[8,"hand-001",33554432,26,[[63,-348,[5,201,257],[0,0.5,0]],[30,-349,33],[40,true,-350,[34],35]],[1,0,130.409,0],[3,0,0,1,6.123233995736766e-17],[1,0.4,0.4,1],[1,0,0,180]],[51,"platform02",8388608,[-351,-352,-353]],[96,"Collider_Ground",8388608,[[129,-354,[87],[7]],[130,-355],[16,2,2,-356]],[1,0.002,0.038,-0.037],[1,4,4,4]],[4,"spine5",8388608,[-357,-358,-359],[1,-3.054738018093417e-9,0.016499049961566925,0.002694531576707959],[3,-0.009894225994097696,0.0005233999239930176,-0.011855051218234382,0.9998806369287838],[1,-1.1333411123317212,0.04654195649602303,-1.3590475130366195]],[4,"left hand",8388608,[-360,-361,-362],[1,-0.0003948648227378726,0.022092225030064583,0.012079819105565548],[3,-0.039211574811330085,0.00043136524474992856,-0.0004430652173852275,0.9992307391278825],[1,-4.49444680659749,0.04740198434540322,-0.05267074501020296]],[4,"right hand",8388608,[-363,-364,-365],[1,0.022092172876000404,-0.0003948642988689244,0.012079805135726929],[3,0.00043135465316192413,0.03921144462672457,-0.0004430708075868277,0.9992307442386409],[1,0.0513824540261992,4.4944755443211335,-0.04879491760128577]],[4,"pelvis",8388608,[-366,-367,-368],[1,5.9604643443123e-10,-0.005087658297270536,0.0016539273783564568],[3,-0.0162704104322866,-0.0000020467364470420565,0.000006504505628576748,0.9998676280877721],[1,-1.8645339673748391,-0.00022238033750272615,0.0007490788170180913]],[8,"Level",8388608,5,[[9,"Quad<ModelComponent>",-369,[110],[7],111]],[1,2.25,5.499999999999986,1.7500000000000009],[3,-0.29883623873011983,-0.6408563820557887,-0.29883623873011983,0.6408563820557884],[1,1.4355000000000002,1.7500000000000002,1.4355],[1,-50,-90.00000000000003,6.3611093629270335e-15]],[20,"Unit_1",8388608,3,[-370,6],[1,-2.2,-15.535,7.6],[3,0,1,0,-6.123233995736766e-17],[1,8,8,8],[1,0,-180,0]],[4,"spine2",8388608,[-371,-372,-373],[1,-1.4901161415892261e-9,0.006562483496963978,-0.0020072516053915024],[3,0.021568042803244196,-0.010958361259436616,0.028499919453102734,0.9993009999190994],[1,2.5103865590934364,-1.3275341749729896,3.238207257235668]],[4,"spine5",8388608,[-374,-375,-376],[1,-1.7881393032936899e-9,0.00410446198657155,-0.0002641912433318794],[3,0.0012075748613808613,0.00027005144704535716,-0.011744127692849453,0.999930269718796],[1,0.13877007919452716,0.032577573786167026,-1.345770429492683]],[4,"pelvis",8388608,[-377,-378,-379],[1,-2.98023217215615e-10,-0.012511205859482288,0.0028946870006620884],[3,-0.01627070837653694,2.9823732615038286e-7,0.000007497692006350686,0.9998676232345067],[1,-1.8645681156146638,0.00004815029670273414,0.0008585024224275254]],[20,"Unit_2",8388608,3,[-380,7],[1,-1.1,-15.535,7.6],[3,0,-1,0,6.123233995736766e-17],[1,8,8,8],[1,0,-180,0]],[4,"spine2",8388608,[-381,-382,-383],[1,-1.4901161415892261e-9,0.006562483496963978,-0.0020072516053915024],[3,0.021568042803244196,-0.010958361259436616,0.028499919453102734,0.9993009999190994],[1,2.5103865590934364,-1.3275341749729896,3.238207257235668]],[4,"spine5",8388608,[-384,-385,-386],[1,-1.7881393032936899e-9,0.00410446198657155,-0.0002641912433318794],[3,0.0012075748613808613,0.00027005144704535716,-0.011744127692849453,0.999930269718796],[1,0.13877007919452716,0.032577573786167026,-1.345770429492683]],[4,"pelvis",8388608,[-387,-388,-389],[1,-2.98023217215615e-10,-0.012511205859482288,0.0028946870006620884],[3,-0.01627070837653694,2.9823732615038286e-7,0.000007497692006350686,0.9998676232345067],[1,-1.8645681156146638,0.00004815029670273414,0.0008585024224275254]],[20,"Unit_3",8388608,3,[-390,8],[1,0,-15.535,7.6],[3,0,-1,0,6.123233995736766e-17],[1,8,8,8],[1,0,-180,0]],[4,"spine2",8388608,[-391,-392,-393],[1,-1.4901161415892261e-9,0.006562483496963978,-0.0020072516053915024],[3,0.021568042803244196,-0.010958361259436616,0.028499919453102734,0.9993009999190994],[1,2.5103865590934364,-1.3275341749729896,3.238207257235668]],[4,"spine5",8388608,[-394,-395,-396],[1,-1.7881393032936899e-9,0.00410446198657155,-0.0002641912433318794],[3,0.0012075748613808613,0.00027005144704535716,-0.011744127692849453,0.999930269718796],[1,0.13877007919452716,0.032577573786167026,-1.345770429492683]],[4,"pelvis",8388608,[-397,-398,-399],[1,-2.98023217215615e-10,-0.012511205859482288,0.0028946870006620884],[3,-0.01627070837653694,2.9823732615038286e-7,0.000007497692006350686,0.9998676232345067],[1,-1.8645681156146638,0.00004815029670273414,0.0008585024224275254]],[20,"Unit_4",8388608,3,[-400,9],[1,0,-15.536,9.2],[3,0,-1,0,6.123233995736766e-17],[1,8,8,8],[1,0,-180,0]],[4,"spine2",8388608,[-401,-402,-403],[1,-1.4901161415892261e-9,0.006562483496963978,-0.0020072516053915024],[3,0.021568042803244196,-0.010958361259436616,0.028499919453102734,0.9993009999190994],[1,2.5103865590934364,-1.3275341749729896,3.238207257235668]],[4,"spine5",8388608,[-404,-405,-406],[1,-1.7881393032936899e-9,0.00410446198657155,-0.0002641912433318794],[3,0.0012075748613808613,0.00027005144704535716,-0.011744127692849453,0.999930269718796],[1,0.13877007919452716,0.032577573786167026,-1.345770429492683]],[4,"pelvis",8388608,[-407,-408,-409],[1,-2.98023217215615e-10,-0.012511205859482288,0.0028946870006620884],[3,-0.01627070837653694,2.9823732615038286e-7,0.000007497692006350686,0.9998676232345067],[1,-1.8645681156146638,0.00004815029670273414,0.0008585024224275254]],[20,"Unit_5",8388608,3,[-410,10],[1,0,-15.536,10.8],[3,0,-1,0,6.123233995736766e-17],[1,8,8,8],[1,0,-180,0]],[4,"spine2",8388608,[-411,-412,-413],[1,-1.4901161415892261e-9,0.006562483496963978,-0.0020072516053915024],[3,0.021568042803244196,-0.010958361259436616,0.028499919453102734,0.9993009999190994],[1,2.5103865590934364,-1.3275341749729896,3.238207257235668]],[4,"spine5",8388608,[-414,-415,-416],[1,-1.7881393032936899e-9,0.00410446198657155,-0.0002641912433318794],[3,0.0012075748613808613,0.00027005144704535716,-0.011744127692849453,0.999930269718796],[1,0.13877007919452716,0.032577573786167026,-1.345770429492683]],[4,"pelvis",8388608,[-417,-418,-419],[1,-2.98023217215615e-10,-0.012511205859482288,0.0028946870006620884],[3,-0.01627070837653694,2.9823732615038286e-7,0.000007497692006350686,0.9998676232345067],[1,-1.8645681156146638,0.00004815029670273414,0.0008585024224275254]],[20,"Unit_6",8388608,3,[-420,11],[1,-1.1,-15.536,10.8],[3,0,-1,0,6.123233995736766e-17],[1,8,8,8],[1,0,-180,0]],[4,"spine2",8388608,[-421,-422,-423],[1,-1.4901161415892261e-9,0.006562483496963978,-0.0020072516053915024],[3,0.021568042803244196,-0.010958361259436616,0.028499919453102734,0.9993009999190994],[1,2.5103865590934364,-1.3275341749729896,3.238207257235668]],[4,"spine5",8388608,[-424,-425,-426],[1,-1.7881393032936899e-9,0.00410446198657155,-0.0002641912433318794],[3,0.0012075748613808613,0.00027005144704535716,-0.011744127692849453,0.999930269718796],[1,0.13877007919452716,0.032577573786167026,-1.345770429492683]],[4,"pelvis",8388608,[-427,-428,-429],[1,-2.98023217215615e-10,-0.012511205859482288,0.0028946870006620884],[3,-0.01627070837653694,2.9823732615038286e-7,0.000007497692006350686,0.9998676232345067],[1,-1.8645681156146638,0.00004815029670273414,0.0008585024224275254]],[20,"Unit_7",8388608,3,[-430,12],[1,-2.2,-15.535,10.8],[3,0,-1,0,6.123233995736766e-17],[1,8,8,8],[1,0,-180,0]],[4,"spine2",8388608,[-431,-432,-433],[1,-1.4901161415892261e-9,0.006562483496963978,-0.0020072516053915024],[3,0.021568042803244196,-0.010958361259436616,0.028499919453102734,0.9993009999190994],[1,2.5103865590934364,-1.3275341749729896,3.238207257235668]],[4,"spine5",8388608,[-434,-435,-436],[1,-1.7881393032936899e-9,0.00410446198657155,-0.0002641912433318794],[3,0.0012075748613808613,0.00027005144704535716,-0.011744127692849453,0.999930269718796],[1,0.13877007919452716,0.032577573786167026,-1.345770429492683]],[4,"pelvis",8388608,[-437,-438,-439],[1,-2.98023217215615e-10,-0.012511205859482288,0.0028946870006620884],[3,-0.01627070837653694,2.9823732615038286e-7,0.000007497692006350686,0.9998676232345067],[1,-1.8645681156146638,0.00004815029670273414,0.0008585024224275254]],[20,"Unit_8",8388608,3,[-440,13],[1,-2.2,-15.535,9.2],[3,0,-1,0,6.123233995736766e-17],[1,8,8,8],[1,0,-180,0]],[4,"spine2",8388608,[-441,-442,-443],[1,-1.4901161415892261e-9,0.006562483496963978,-0.0020072516053915024],[3,0.021568042803244196,-0.010958361259436616,0.028499919453102734,0.9993009999190994],[1,2.5103865590934364,-1.3275341749729896,3.238207257235668]],[4,"spine5",8388608,[-444,-445,-446],[1,-1.7881393032936899e-9,0.00410446198657155,-0.0002641912433318794],[3,0.0012075748613808613,0.00027005144704535716,-0.011744127692849453,0.999930269718796],[1,0.13877007919452716,0.032577573786167026,-1.345770429492683]],[4,"pelvis",8388608,[-447,-448,-449],[1,-2.98023217215615e-10,-0.012511205859482288,0.0028946870006620884],[3,-0.01627070837653694,2.9823732615038286e-7,0.000007497692006350686,0.9998676232345067],[1,-1.8645681156146638,0.00004815029670273414,0.0008585024224275254]],[20,"Unit_9",8388608,3,[14,-450],[1,1.1,-15.536,7.6],[3,0,-1,0,6.123233995736766e-17],[1,8,8,8],[1,0,-180,0]],[4,"spine2",8388608,[-451,-452,-453],[1,-1.4901161415892261e-9,0.006562483496963978,-0.0020072516053915024],[3,0.021568042803244196,-0.010958361259436616,0.028499919453102734,0.9993009999190994],[1,2.5103865590934364,-1.3275341749729896,3.238207257235668]],[4,"spine5",8388608,[-454,-455,-456],[1,-1.7881393032936899e-9,0.00410446198657155,-0.0002641912433318794],[3,0.0012075748613808613,0.00027005144704535716,-0.011744127692849453,0.999930269718796],[1,0.13877007919452716,0.032577573786167026,-1.345770429492683]],[4,"pelvis",8388608,[-457,-458,-459],[1,-2.98023217215615e-10,-0.012511205859482288,0.0028946870006620884],[3,-0.01627070837653694,2.9823732615038286e-7,0.000007497692006350686,0.9998676232345067],[1,-1.8645681156146638,0.00004815029670273414,0.0008585024224275254]],[20,"Unit_10",8388608,3,[15,-460],[1,2.2,-15.535,7.623],[3,0,-1,0,6.123233995736766e-17],[1,8,8,8],[1,0,-180,0]],[4,"spine2",8388608,[-461,-462,-463],[1,-1.4901161415892261e-9,0.006562483496963978,-0.0020072516053915024],[3,0.021568042803244196,-0.010958361259436616,0.028499919453102734,0.9993009999190994],[1,2.5103865590934364,-1.3275341749729896,3.238207257235668]],[4,"spine5",8388608,[-464,-465,-466],[1,-1.7881393032936899e-9,0.00410446198657155,-0.0002641912433318794],[3,0.0012075748613808613,0.00027005144704535716,-0.011744127692849453,0.999930269718796],[1,0.13877007919452716,0.032577573786167026,-1.345770429492683]],[4,"pelvis",8388608,[-467,-468,-469],[1,-2.98023217215615e-10,-0.012511205859482288,0.0028946870006620884],[3,-0.01627070837653694,2.9823732615038286e-7,0.000007497692006350686,0.9998676232345067],[1,-1.8645681156146638,0.00004815029670273414,0.0008585024224275254]],[20,"Unit_11",8388608,3,[16,-470],[1,2.2,-15.535,9.197],[3,0,-1,0,6.123233995736766e-17],[1,8,8,8],[1,0,-180,0]],[4,"spine2",8388608,[-471,-472,-473],[1,-1.4901161415892261e-9,0.006562483496963978,-0.0020072516053915024],[3,0.021568042803244196,-0.010958361259436616,0.028499919453102734,0.9993009999190994],[1,2.5103865590934364,-1.3275341749729896,3.238207257235668]],[4,"spine5",8388608,[-474,-475,-476],[1,-1.7881393032936899e-9,0.00410446198657155,-0.0002641912433318794],[3,0.0012075748613808613,0.00027005144704535716,-0.011744127692849453,0.999930269718796],[1,0.13877007919452716,0.032577573786167026,-1.345770429492683]],[4,"pelvis",8388608,[-477,-478,-479],[1,-2.98023217215615e-10,-0.012511205859482288,0.0028946870006620884],[3,-0.01627070837653694,2.9823732615038286e-7,0.000007497692006350686,0.9998676232345067],[1,-1.8645681156146638,0.00004815029670273414,0.0008585024224275254]],[20,"Unit_12",8388608,3,[17,-480],[1,2.22,-15.535,10.8],[3,0,-1,0,6.123233995736766e-17],[1,8,8,8],[1,0,-180,0]],[4,"spine2",8388608,[-481,-482,-483],[1,-1.4901161415892261e-9,0.006562483496963978,-0.0020072516053915024],[3,0.021568042803244196,-0.010958361259436616,0.028499919453102734,0.9993009999190994],[1,2.5103865590934364,-1.3275341749729896,3.238207257235668]],[4,"spine5",8388608,[-484,-485,-486],[1,-1.7881393032936899e-9,0.00410446198657155,-0.0002641912433318794],[3,0.0012075748613808613,0.00027005144704535716,-0.011744127692849453,0.999930269718796],[1,0.13877007919452716,0.032577573786167026,-1.345770429492683]],[4,"pelvis",8388608,[-487,-488,-489],[1,-2.98023217215615e-10,-0.012511205859482288,0.0028946870006620884],[3,-0.01627070837653694,2.9823732615038286e-7,0.000007497692006350686,0.9998676232345067],[1,-1.8645681156146638,0.00004815029670273414,0.0008585024224275254]],[20,"Unit_13",8388608,3,[18,-490],[1,1.106,-15.535,10.8],[3,0,-1,0,6.123233995736766e-17],[1,8,8,8],[1,0,-180,0]],[4,"spine2",8388608,[-491,-492,-493],[1,-1.4901161415892261e-9,0.006562483496963978,-0.0020072516053915024],[3,0.021568042803244196,-0.010958361259436616,0.028499919453102734,0.9993009999190994],[1,2.5103865590934364,-1.3275341749729896,3.238207257235668]],[4,"spine5",8388608,[-494,-495,-496],[1,-1.7881393032936899e-9,0.00410446198657155,-0.0002641912433318794],[3,0.0012075748613808613,0.00027005144704535716,-0.011744127692849453,0.999930269718796],[1,0.13877007919452716,0.032577573786167026,-1.345770429492683]],[4,"pelvis",8388608,[-497,-498,-499],[1,-2.98023217215615e-10,-0.012511205859482288,0.0028946870006620884],[3,-0.01627070837653694,2.9823732615038286e-7,0.000007497692006350686,0.9998676232345067],[1,-1.8645681156146638,0.00004815029670273414,0.0008585024224275254]],[20,"Unit_14",8388608,3,[19,-500],[1,1.1,-15.536,9.2],[3,0,-1,0,6.123233995736766e-17],[1,8,8,8],[1,0,-180,0]],[4,"spine2",8388608,[-501,-502,-503],[1,-1.4901161415892261e-9,0.006562483496963978,-0.0020072516053915024],[3,0.021568042803244196,-0.010958361259436616,0.028499919453102734,0.9993009999190994],[1,2.5103865590934364,-1.3275341749729896,3.238207257235668]],[4,"spine5",8388608,[-504,-505,-506],[1,-1.7881393032936899e-9,0.00410446198657155,-0.0002641912433318794],[3,0.0012075748613808613,0.00027005144704535716,-0.011744127692849453,0.999930269718796],[1,0.13877007919452716,0.032577573786167026,-1.345770429492683]],[4,"pelvis",8388608,[-507,-508,-509],[1,-2.98023217215615e-10,-0.012511205859482288,0.0028946870006620884],[3,-0.01627070837653694,2.9823732615038286e-7,0.000007497692006350686,0.9998676232345067],[1,-1.8645681156146638,0.00004815029670273414,0.0008585024224275254]],[97,"Unit_15",false,8388608,3,[-510,22],[1,0.072,-15.535,3.183],[3,0,1,0,-6.123233995736766e-17],[1,8,8,8],[1,0,-180,0]],[4,"spine2",8388608,[-511,-512,-513],[1,-1.4901161415892261e-9,0.006562483496963978,-0.0020072516053915024],[3,0.021568042803244196,-0.010958361259436616,0.028499919453102734,0.9993009999190994],[1,2.5103865590934364,-1.3275341749729896,3.238207257235668]],[4,"spine5",8388608,[-514,-515,-516],[1,-1.7881393032936899e-9,0.00410446198657155,-0.0002641912433318794],[3,0.0012075748613808613,0.00027005144704535716,-0.011744127692849453,0.999930269718796],[1,0.13877007919452716,0.032577573786167026,-1.345770429492683]],[4,"pelvis",8388608,[-517,-518,-519],[1,-2.98023217215615e-10,-0.012511205859482288,0.0028946870006620884],[3,-0.01627070837653694,2.9823732615038286e-7,0.000007497692006350686,0.9998676232345067],[1,-1.8645681156146638,0.00004815029670273414,0.0008585024224275254]],[4,"spine3",8388608,[-520,-521,-522],[1,-1.0319054055685228e-8,0.0402810201048851,0.009154882282018661],[3,-0.012542071814331757,0.00015105800486901283,-0.01585906006795257,0.9997955610172734],[1,-1.4375211150689016,-0.005489215906791151,-1.8174647660886483]],[4,"head",8388608,[-523,-524,-525],[1,-3.7252903539730653e-10,0.0343305841088295,-0.02298218570649624],[3,-0.0009039105140619953,0.000010903371092083856,0.022024768020272614,0.9997570166898315],[1,-0.10368351330753188,0.003533896029767253,2.5240544356892762]],[98,"tail1",8388608,[-526,-527,-528],[1,3.1292437530083816e-9,-0.0592009499669075,0.02044546790421009]],[4,"right foot1",8388608,[-529,-530,-531],[1,0.03239568695425987,0.0007331488304771483,0.07932403683662415],[3,0.022765907065536266,-0.11232549217497922,-0.01691237318242082,0.9932666655619079],[1,2.375987851670732,-12.857974675225798,-2.2185528358657187]],[4,"left foot1",8388608,[-532,-533,-534],[1,0.03239574283361435,-0.0007332025561481714,0.07932406663894653],[3,-0.014273724325057061,-0.13441537138245316,-0.007892964300713548,0.9907908305210325],[1,-1.7425496307509478,-15.461983189492763,-0.6762971211308897]],[4,"spine5",8388608,[-535,-536,-537],[1,-3.054738018093417e-9,0.016499049961566925,0.002694531576707959],[3,-0.009894225994097696,0.0005233999239930176,-0.011855051218234382,0.9998806369287838],[1,-1.1333411123317212,0.04654195649602303,-1.3590475130366195]],[4,"left hand",8388608,[-538,-539,-540],[1,-0.0003948648227378726,0.022092225030064583,0.012079819105565548],[3,-0.039211574811330085,0.00043136524474992856,-0.0004430652173852275,0.9992307391278825],[1,-4.49444680659749,0.04740198434540322,-0.05267074501020296]],[4,"right hand",8388608,[-541,-542,-543],[1,0.022092172876000404,-0.0003948642988689244,0.012079805135726929],[3,0.00043135465316192413,0.03921144462672457,-0.0004430708075868277,0.9992307442386409],[1,0.0513824540261992,4.4944755443211335,-0.04879491760128577]],[4,"pelvis",8388608,[-544,-545,-546],[1,5.9604643443123e-10,-0.005087658297270536,0.0016539273783564568],[3,-0.0162704104322866,-0.0000020467364470420565,0.000006504505628576748,0.9998676280877721],[1,-1.8645339673748391,-0.00022238033750272615,0.0007490788170180913]],[107,"Camera_3D",33,[[-547,[39,-548,[426],427]],1,4],[1,0,-6.625,14.593],[3,-0.4289666654920372,0,0,0.9033203196522498],[1,-50.80400000000001,0,0]],[13,"FakeBg",33554432,4,[[12,-549,[5,5000,5000]],[22,0,-550,[4,2516582400],0]]],[13,"TryAgain_btn",33554432,28,[[12,-551,[5,442,148]],[30,-552,17]]],[8,"hand-001",33554432,28,[[63,-553,[5,201,257],[0,0.5,0]],[30,-554,18]],[1,-2.4999999999998863,235.0000000000001,0],[3,0,0,0.984807753012208,0.17364817766693044],[1,0.6999999999999998,0.6999999999999998,1],[1,180,180,20.00000000000001]],[60,"chest_1",33554432,29,[[12,-555,[5,368,331]],[30,-556,30]],[1,0,16.744000000000028,0],[1,1.1,1.1,1]],[99,"chest_2",false,33554432,29,[[12,-557,[5,382,356]],[30,-558,31]],[1,0,29.892000000000053,0],[1,1.1,1.1,1]],[131,27],[2,"Map",8388608,33,[-559,-560],[1,0,-15.5,3.718]],[0,"platform_02",8388608,2,[58,59],[1,-0.001,0,0],[3,0,-0.0017453283658983088,0,0.9999984769132877],[1,0,-0.2,0]],[20,"MergeUnit",8388608,36,[5,31],[1,-0.7,-12.9,12.15],[3,0,-1,0,6.123233995736766e-17],[1,65,65,65],[1,0,-180,0]],[4,"root",8388608,[-561,63],[1,-0.0039984192699193954,-0.005827454384416342,0.12623418867588043],[3,0.6025360708943303,0.7948973624865674,0.0427211514992014,-0.05712591003829515],[1,-26.84143842210427,-151.97739241528257,72.3691451612788]],[4,"head",8388608,[30,-562],[1,8.19563861220729e-10,0.005207926034927368,-0.01041912566870451],[3,0.15555330051688224,-0.03918567035849903,-0.040544060250554737,0.9862169300489921],[1,17.754487999060128,-3.724215251763632,-5.287962981178998]],[0,"jaw0",8388608,145,[-563,-564],[1,-1.7881393032936899e-9,0.01810682937502861,-0.006318637169897556],[3,-0.25247210789448593,0.0013981079973570002,0.0004707717842107198,0.967603047950589],[1,-29.24774413023847,0.16864124158638102,0.011749867910150164]],[4,"right foot1",8388608,[-565,-566],[1,0.0039070830680429935,0.0030419169925153255,0.018782716244459152],[3,-0.02549467440161613,-0.031017029878086872,0.007367443811280869,0.9991664957385157],[1,-2.8944689585227263,-3.5325102862985487,0.9342000425341567]],[0,"right foot2",8388608,147,[-567,-568],[1,0.005417807027697563,0.00018686027033254504,0.010887295939028263],[3,0.06435193946966054,-0.006079658941957276,0.13692434303328652,0.9884703282944539],[1,7.692282130046677,-1.7640922111019692,15.658841477415042]],[4,"left foot1",8388608,[-569,-570],[1,0.0030419081449508667,0.003907077480107546,0.018782710656523705],[3,-0.06414955222257944,-0.1235805920654387,0.0074090954288953655,0.990231173776772],[1,-7.196517003901635,-14.117416517251813,1.7494382741338435]],[0,"left foot2",8388608,149,[-571,-572],[1,0.00018687739793676883,0.005417811684310436,0.010887298732995987],[3,0.5686169921262199,-0.48557642601936524,-0.5183159762315395,-0.41501662562207825],[1,-100.68082749422483,90.51215075187437,-7.007225932523375]],[65,0,true,true,1.5,false,false,1.280170500278473,1.280170500278473,6.4008525013923645,0,31,[[119,null],6,0],[42,[4,4294940784]],[10,8],[10,8],[10,40],[5],[10,3.141592653589793],[5],[10,6.283185307179586],[5],[10,0.5],[5],[10,1],[5],[[44,[5]]],[69,true,[67,1,[71,[[72,0.5]],[[36,0,0.006696428571428571],[36,255,0.5],[36,0,0.9977678571428571]]]]],[73,0,[10,1]],[75,true,true,[5],[31,1,[29,[0,1],[[45,2,1,-0.04735883424408022,1,-0.04735883424408022,1],[46,2,-2.8888888888888875,1,-2.8888888888888875,1]]]],[31,1,[29,[0,1],[[45,2,1,-0.04735883424408022,1,-0.04735883424408022,1],[46,2,-2.8888888888888875,1,-2.8888888888888875,1]]]],[31,1,[29,[0,0.3076923076923077,1],[[77,2,0.4925925925925926,-1.2037037037037035,-1.2037037037037035],[78,2],[37,2,1]]]]],[47,[5],[5],[5],[10,1]],[48,[5],[5],[5]],[81,true,[5],[5],[5],[5]],[83,true,[5],[5],[5]],[85,true,[31,1,[29,[0,1],[[37,2,1],[37,2,1]]]],[5]],[49,[10,1],[5],[28],[28],-573],[87,4,0,120,121]],[8,"Line",8388608,65,[[9,"Quad<ModelComponent>",-574,[122],[7],123]],[1,0.01,0.005,0.003],[3,-0.7071067811865475,0,0,0.7071067811865476],[1,0.12,0.12,0.12],[1,-90,0,0]],[4,"root",8388608,[-575,68],[1,0.006815663073211908,0.000012269202670722734,0.12871931493282318],[3,0.6025356606293664,0.7948976697017438,0.042716059521415224,-0.057129770099603024],[1,-26.84069494030415,-151.97740180784288,72.36913948125456]],[4,"head",8388608,[-576,-577],[1,-1.3411045607369942e-9,0.01341153122484684,-0.012897348031401634],[3,0.15729017574541435,-0.0027976469170262635,-0.0005857000367276258,0.9875482928653015],[1,18.09904921271078,-0.3060402284510335,-0.11670579058275284]],[2,"eye0",8388608,154,[-578,-579],[1,1.490116086078075e-10,0.009062768891453743,0.0016654159408062696]],[0,"jaw0",8388608,154,[-580,-581],[1,-3.725290298461914e-9,0.01197443250566721,0.011124521493911743],[3,-0.12971614089484276,0.0013289866984905144,0.00064172303653651,0.9915500717448661],[1,-14.90646979942391,0.160542903494221,0.053160120145644876]],[8,"Level",8388608,6,[[9,"Quad<ModelComponent>",-582,[132],[7],133]],[1,0.9124999999999943,1.6999999999999957,0.5999999999999996],[3,-0.3707452120036063,-0.6021195792999934,-0.3707452120036063,0.6021195792999934],[1,0.5396874999999999,1,0.5396875],[1,-63.244,-90,0]],[8,"Line",8388608,69,[[9,"Quad<ModelComponent>",-583,[139],[7],140]],[1,0.01,0.005,0.003],[3,-0.7071067811865475,0,0,0.7071067811865476],[1,0.12,0.12,0.12],[1,-90,0,0]],[4,"root",8388608,[-584,72],[1,0.006815663073211908,0.000012269202670722734,0.12871931493282318],[3,0.6025356606293664,0.7948976697017438,0.042716059521415224,-0.057129770099603024],[1,-26.84069494030415,-151.97740180784288,72.36913948125456]],[4,"head",8388608,[-585,-586],[1,-1.3411045607369942e-9,0.01341153122484684,-0.012897348031401634],[3,0.15729017574541435,-0.0027976469170262635,-0.0005857000367276258,0.9875482928653015],[1,18.09904921271078,-0.3060402284510335,-0.11670579058275284]],[2,"eye0",8388608,160,[-587,-588],[1,1.490116086078075e-10,0.009062768891453743,0.0016654159408062696]],[0,"jaw0",8388608,160,[-589,-590],[1,-3.725290298461914e-9,0.01197443250566721,0.011124521493911743],[3,-0.12971614089484276,0.0013289866984905144,0.00064172303653651,0.9915500717448661],[1,-14.90646979942391,0.160542903494221,0.053160120145644876]],[8,"Level",8388608,7,[[9,"Quad<ModelComponent>",-591,[149],[7],150]],[1,0.9124999999999943,1.6999999999999957,0.6000000000000001],[3,-0.3707452120036063,-0.6021195792999934,-0.3707452120036063,0.6021195792999934],[1,0.5396874999999999,1,0.5396875],[1,-63.244,-90,0]],[8,"Line",8388608,73,[[9,"Quad<ModelComponent>",-592,[156],[7],157]],[1,0.01,0.005,0.003],[3,-0.7071067811865475,0,0,0.7071067811865476],[1,0.12,0.12,0.12],[1,-90,0,0]],[4,"root",8388608,[-593,76],[1,0.006815663073211908,0.000012269202670722734,0.12871931493282318],[3,0.6025356606293664,0.7948976697017438,0.042716059521415224,-0.057129770099603024],[1,-26.84069494030415,-151.97740180784288,72.36913948125456]],[4,"head",8388608,[-594,-595],[1,-1.3411045607369942e-9,0.01341153122484684,-0.012897348031401634],[3,0.15729017574541435,-0.0027976469170262635,-0.0005857000367276258,0.9875482928653015],[1,18.09904921271078,-0.3060402284510335,-0.11670579058275284]],[2,"eye0",8388608,166,[-596,-597],[1,1.490116086078075e-10,0.009062768891453743,0.0016654159408062696]],[0,"jaw0",8388608,166,[-598,-599],[1,-3.725290298461914e-9,0.01197443250566721,0.011124521493911743],[3,-0.12971614089484276,0.0013289866984905144,0.00064172303653651,0.9915500717448661],[1,-14.90646979942391,0.160542903494221,0.053160120145644876]],[8,"Level",8388608,8,[[9,"Quad<ModelComponent>",-600,[166],[7],167]],[1,0.9124999999999943,1.6999999999999957,0.6000000000000002],[3,-0.3707452120036063,-0.6021195792999934,-0.3707452120036063,0.6021195792999934],[1,0.5396874999999999,1,0.5396875],[1,-63.244,-90,0]],[8,"Line",8388608,77,[[9,"Quad<ModelComponent>",-601,[173],[7],174]],[1,0.01,0.005,0.003],[3,-0.7071067811865475,0,0,0.7071067811865476],[1,0.12,0.12,0.12],[1,-90,0,0]],[4,"root",8388608,[-602,80],[1,0.006815663073211908,0.000012269202670722734,0.12871931493282318],[3,0.6025356606293664,0.7948976697017438,0.042716059521415224,-0.057129770099603024],[1,-26.84069494030415,-151.97740180784288,72.36913948125456]],[4,"head",8388608,[-603,-604],[1,-1.3411045607369942e-9,0.01341153122484684,-0.012897348031401634],[3,0.15729017574541435,-0.0027976469170262635,-0.0005857000367276258,0.9875482928653015],[1,18.09904921271078,-0.3060402284510335,-0.11670579058275284]],[2,"eye0",8388608,172,[-605,-606],[1,1.490116086078075e-10,0.009062768891453743,0.0016654159408062696]],[0,"jaw0",8388608,172,[-607,-608],[1,-3.725290298461914e-9,0.01197443250566721,0.011124521493911743],[3,-0.12971614089484276,0.0013289866984905144,0.00064172303653651,0.9915500717448661],[1,-14.90646979942391,0.160542903494221,0.053160120145644876]],[8,"Level",8388608,9,[[9,"Quad<ModelComponent>",-609,[183],[7],184]],[1,0.9124999999999979,1.6999999999999993,0.6000000000000001],[3,-0.3707452120036063,-0.6021195792999934,-0.3707452120036063,0.6021195792999934],[1,0.5396874999999999,1,0.5396875],[1,-63.244,-90,0]],[8,"Line",8388608,81,[[9,"Quad<ModelComponent>",-610,[190],[7],191]],[1,0.01,0.005,0.003],[3,-0.7071067811865475,0,0,0.7071067811865476],[1,0.12,0.12,0.12],[1,-90,0,0]],[4,"root",8388608,[-611,84],[1,0.006815663073211908,0.000012269202670722734,0.12871931493282318],[3,0.6025356606293664,0.7948976697017438,0.042716059521415224,-0.057129770099603024],[1,-26.84069494030415,-151.97740180784288,72.36913948125456]],[4,"head",8388608,[-612,-613],[1,-1.3411045607369942e-9,0.01341153122484684,-0.012897348031401634],[3,0.15729017574541435,-0.0027976469170262635,-0.0005857000367276258,0.9875482928653015],[1,18.09904921271078,-0.3060402284510335,-0.11670579058275284]],[2,"eye0",8388608,178,[-614,-615],[1,1.490116086078075e-10,0.009062768891453743,0.0016654159408062696]],[0,"jaw0",8388608,178,[-616,-617],[1,-3.725290298461914e-9,0.01197443250566721,0.011124521493911743],[3,-0.12971614089484276,0.0013289866984905144,0.00064172303653651,0.9915500717448661],[1,-14.90646979942391,0.160542903494221,0.053160120145644876]],[8,"Level",8388608,10,[[9,"Quad<ModelComponent>",-618,[200],[7],201]],[1,0.9124999999999943,1.6999999999999993,0.6000000000000002],[3,-0.3707452120036063,-0.6021195792999934,-0.3707452120036063,0.6021195792999934],[1,0.5396874999999999,1,0.5396875],[1,-63.244,-90,0]],[8,"Line",8388608,85,[[9,"Quad<ModelComponent>",-619,[207],[7],208]],[1,0.01,0.005,0.003],[3,-0.7071067811865475,0,0,0.7071067811865476],[1,0.12,0.12,0.12],[1,-90,0,0]],[4,"root",8388608,[-620,88],[1,0.006815663073211908,0.000012269202670722734,0.12871931493282318],[3,0.6025356606293664,0.7948976697017438,0.042716059521415224,-0.057129770099603024],[1,-26.84069494030415,-151.97740180784288,72.36913948125456]],[4,"head",8388608,[-621,-622],[1,-1.3411045607369942e-9,0.01341153122484684,-0.012897348031401634],[3,0.15729017574541435,-0.0027976469170262635,-0.0005857000367276258,0.9875482928653015],[1,18.09904921271078,-0.3060402284510335,-0.11670579058275284]],[2,"eye0",8388608,184,[-623,-624],[1,1.490116086078075e-10,0.009062768891453743,0.0016654159408062696]],[0,"jaw0",8388608,184,[-625,-626],[1,-3.725290298461914e-9,0.01197443250566721,0.011124521493911743],[3,-0.12971614089484276,0.0013289866984905144,0.00064172303653651,0.9915500717448661],[1,-14.90646979942391,0.160542903494221,0.053160120145644876]],[8,"Level",8388608,11,[[9,"Quad<ModelComponent>",-627,[217],[7],218]],[1,0.9124999999999943,1.6999999999999993,0.5999999999999999],[3,-0.3707452120036063,-0.6021195792999934,-0.3707452120036063,0.6021195792999934],[1,0.5396874999999999,1,0.5396875],[1,-63.244,-90,0]],[8,"Line",8388608,89,[[9,"Quad<ModelComponent>",-628,[224],[7],225]],[1,0.01,0.005,0.003],[3,-0.7071067811865475,0,0,0.7071067811865476],[1,0.12,0.12,0.12],[1,-90,0,0]],[4,"root",8388608,[-629,92],[1,0.006815663073211908,0.000012269202670722734,0.12871931493282318],[3,0.6025356606293664,0.7948976697017438,0.042716059521415224,-0.057129770099603024],[1,-26.84069494030415,-151.97740180784288,72.36913948125456]],[4,"head",8388608,[-630,-631],[1,-1.3411045607369942e-9,0.01341153122484684,-0.012897348031401634],[3,0.15729017574541435,-0.0027976469170262635,-0.0005857000367276258,0.9875482928653015],[1,18.09904921271078,-0.3060402284510335,-0.11670579058275284]],[2,"eye0",8388608,190,[-632,-633],[1,1.490116086078075e-10,0.009062768891453743,0.0016654159408062696]],[0,"jaw0",8388608,190,[-634,-635],[1,-3.725290298461914e-9,0.01197443250566721,0.011124521493911743],[3,-0.12971614089484276,0.0013289866984905144,0.00064172303653651,0.9915500717448661],[1,-14.90646979942391,0.160542903494221,0.053160120145644876]],[8,"Level",8388608,12,[[9,"Quad<ModelComponent>",-636,[234],[7],235]],[1,0.9124999999999943,1.6999999999999957,0.6000000000000001],[3,-0.3707452120036063,-0.6021195792999934,-0.3707452120036063,0.6021195792999934],[1,0.5396874999999999,1,0.5396875],[1,-63.244,-90,0]],[8,"Line",8388608,93,[[9,"Quad<ModelComponent>",-637,[241],[7],242]],[1,0.01,0.005,0.003],[3,-0.7071067811865475,0,0,0.7071067811865476],[1,0.12,0.12,0.12],[1,-90,0,0]],[4,"root",8388608,[-638,96],[1,0.006815663073211908,0.000012269202670722734,0.12871931493282318],[3,0.6025356606293664,0.7948976697017438,0.042716059521415224,-0.057129770099603024],[1,-26.84069494030415,-151.97740180784288,72.36913948125456]],[4,"head",8388608,[-639,-640],[1,-1.3411045607369942e-9,0.01341153122484684,-0.012897348031401634],[3,0.15729017574541435,-0.0027976469170262635,-0.0005857000367276258,0.9875482928653015],[1,18.09904921271078,-0.3060402284510335,-0.11670579058275284]],[2,"eye0",8388608,196,[-641,-642],[1,1.490116086078075e-10,0.009062768891453743,0.0016654159408062696]],[0,"jaw0",8388608,196,[-643,-644],[1,-3.725290298461914e-9,0.01197443250566721,0.011124521493911743],[3,-0.12971614089484276,0.0013289866984905144,0.00064172303653651,0.9915500717448661],[1,-14.90646979942391,0.160542903494221,0.053160120145644876]],[8,"Level",8388608,13,[[9,"Quad<ModelComponent>",-645,[251],[7],252]],[1,0.9124999999999979,1.6999999999999957,0.6000000000000001],[3,-0.3707452120036063,-0.6021195792999934,-0.3707452120036063,0.6021195792999934],[1,0.5396874999999999,1,0.5396875],[1,-63.244,-90,0]],[4,"root",8388608,[-646,100],[1,0.006815663073211908,0.000012269202670722734,0.12871931493282318],[3,0.6025356606293664,0.7948976697017438,0.042716059521415224,-0.057129770099603024],[1,-26.84069494030415,-151.97740180784288,72.36913948125456]],[4,"head",8388608,[-647,-648],[1,-1.3411045607369942e-9,0.01341153122484684,-0.012897348031401634],[3,0.15729017574541435,-0.0027976469170262635,-0.0005857000367276258,0.9875482928653015],[1,18.09904921271078,-0.3060402284510335,-0.11670579058275284]],[2,"eye0",8388608,201,[-649,-650],[1,1.490116086078075e-10,0.009062768891453743,0.0016654159408062696]],[0,"jaw0",8388608,201,[-651,-652],[1,-3.725290298461914e-9,0.01197443250566721,0.011124521493911743],[3,-0.12971614089484276,0.0013289866984905144,0.00064172303653651,0.9915500717448661],[1,-14.90646979942391,0.160542903494221,0.053160120145644876]],[8,"Level",8388608,14,[[9,"Quad<ModelComponent>",-653,[266],[7],267]],[1,0.9124999999999943,1.6999999999999993,0.6000000000000005],[3,-0.3707452120036063,-0.6021195792999934,-0.3707452120036063,0.6021195792999934],[1,0.5396874999999999,1,0.5396875],[1,-63.244,-90,0]],[8,"Line",8388608,97,[[9,"Quad<ModelComponent>",-654,[273],[7],274]],[1,0.01,0.005,0.003],[3,-0.7071067811865475,0,0,0.7071067811865476],[1,0.12,0.12,0.12],[1,-90,0,0]],[4,"root",8388608,[-655,104],[1,0.006815663073211908,0.000012269202670722734,0.12871931493282318],[3,0.6025356606293664,0.7948976697017438,0.042716059521415224,-0.057129770099603024],[1,-26.84069494030415,-151.97740180784288,72.36913948125456]],[4,"head",8388608,[-656,-657],[1,-1.3411045607369942e-9,0.01341153122484684,-0.012897348031401634],[3,0.15729017574541435,-0.0027976469170262635,-0.0005857000367276258,0.9875482928653015],[1,18.09904921271078,-0.3060402284510335,-0.11670579058275284]],[2,"eye0",8388608,207,[-658,-659],[1,1.490116086078075e-10,0.009062768891453743,0.0016654159408062696]],[0,"jaw0",8388608,207,[-660,-661],[1,-3.725290298461914e-9,0.01197443250566721,0.011124521493911743],[3,-0.12971614089484276,0.0013289866984905144,0.00064172303653651,0.9915500717448661],[1,-14.90646979942391,0.160542903494221,0.053160120145644876]],[8,"Level",8388608,15,[[9,"Quad<ModelComponent>",-662,[283],[7],284]],[1,0.9124999999999943,1.6999999999999957,0.600000000000001],[3,-0.3707452120036063,-0.6021195792999934,-0.3707452120036063,0.6021195792999934],[1,0.5396874999999999,1,0.5396875],[1,-63.244,-90,0]],[8,"Line",8388608,101,[[9,"Quad<ModelComponent>",-663,[290],[7],291]],[1,0.01,0.005,0.003],[3,-0.7071067811865475,0,0,0.7071067811865476],[1,0.12,0.12,0.12],[1,-90,0,0]],[4,"root",8388608,[-664,108],[1,0.006815663073211908,0.000012269202670722734,0.12871931493282318],[3,0.6025356606293664,0.7948976697017438,0.042716059521415224,-0.057129770099603024],[1,-26.84069494030415,-151.97740180784288,72.36913948125456]],[4,"head",8388608,[-665,-666],[1,-1.3411045607369942e-9,0.01341153122484684,-0.012897348031401634],[3,0.15729017574541435,-0.0027976469170262635,-0.0005857000367276258,0.9875482928653015],[1,18.09904921271078,-0.3060402284510335,-0.11670579058275284]],[2,"eye0",8388608,213,[-667,-668],[1,1.490116086078075e-10,0.009062768891453743,0.0016654159408062696]],[0,"jaw0",8388608,213,[-669,-670],[1,-3.725290298461914e-9,0.01197443250566721,0.011124521493911743],[3,-0.12971614089484276,0.0013289866984905144,0.00064172303653651,0.9915500717448661],[1,-14.90646979942391,0.160542903494221,0.053160120145644876]],[8,"Level",8388608,16,[[9,"Quad<ModelComponent>",-671,[300],[7],301]],[1,0.9124999999999979,1.6999999999999957,0.6000000000000014],[3,-0.3707452120036063,-0.6021195792999934,-0.3707452120036063,0.6021195792999934],[1,0.5396874999999999,1,0.5396875],[1,-63.244,-90,0]],[8,"Line",8388608,105,[[9,"Quad<ModelComponent>",-672,[307],[7],308]],[1,0.01,0.005,0.003],[3,-0.7071067811865475,0,0,0.7071067811865476],[1,0.12,0.12,0.12],[1,-90,0,0]],[4,"root",8388608,[-673,112],[1,0.006815663073211908,0.000012269202670722734,0.12871931493282318],[3,0.6025356606293664,0.7948976697017438,0.042716059521415224,-0.057129770099603024],[1,-26.84069494030415,-151.97740180784288,72.36913948125456]],[4,"head",8388608,[-674,-675],[1,-1.3411045607369942e-9,0.01341153122484684,-0.012897348031401634],[3,0.15729017574541435,-0.0027976469170262635,-0.0005857000367276258,0.9875482928653015],[1,18.09904921271078,-0.3060402284510335,-0.11670579058275284]],[2,"eye0",8388608,219,[-676,-677],[1,1.490116086078075e-10,0.009062768891453743,0.0016654159408062696]],[0,"jaw0",8388608,219,[-678,-679],[1,-3.725290298461914e-9,0.01197443250566721,0.011124521493911743],[3,-0.12971614089484276,0.0013289866984905144,0.00064172303653651,0.9915500717448661],[1,-14.90646979942391,0.160542903494221,0.053160120145644876]],[8,"Level",8388608,17,[[9,"Quad<ModelComponent>",-680,[317],[7],318]],[1,0.9124999999999943,1.6999999999999957,0.600000000000001],[3,-0.3707452120036063,-0.6021195792999934,-0.3707452120036063,0.6021195792999934],[1,0.5396874999999999,1,0.5396875],[1,-63.244,-90,0]],[8,"Line",8388608,109,[[9,"Quad<ModelComponent>",-681,[324],[7],325]],[1,0.01,0.005,0.003],[3,-0.7071067811865475,0,0,0.7071067811865476],[1,0.12,0.12,0.12],[1,-90,0,0]],[4,"root",8388608,[-682,116],[1,0.006815663073211908,0.000012269202670722734,0.12871931493282318],[3,0.6025356606293664,0.7948976697017438,0.042716059521415224,-0.057129770099603024],[1,-26.84069494030415,-151.97740180784288,72.36913948125456]],[4,"head",8388608,[-683,-684],[1,-1.3411045607369942e-9,0.01341153122484684,-0.012897348031401634],[3,0.15729017574541435,-0.0027976469170262635,-0.0005857000367276258,0.9875482928653015],[1,18.09904921271078,-0.3060402284510335,-0.11670579058275284]],[2,"eye0",8388608,225,[-685,-686],[1,1.490116086078075e-10,0.009062768891453743,0.0016654159408062696]],[0,"jaw0",8388608,225,[-687,-688],[1,-3.725290298461914e-9,0.01197443250566721,0.011124521493911743],[3,-0.12971614089484276,0.0013289866984905144,0.00064172303653651,0.9915500717448661],[1,-14.90646979942391,0.160542903494221,0.053160120145644876]],[8,"Level",8388608,18,[[9,"Quad<ModelComponent>",-689,[334],[7],335]],[1,0.9124999999999943,1.6999999999999957,0.6000000000000003],[3,-0.3707452120036063,-0.6021195792999934,-0.3707452120036063,0.6021195792999934],[1,0.5396874999999999,1,0.5396875],[1,-63.244,-90,0]],[8,"Line",8388608,113,[[9,"Quad<ModelComponent>",-690,[341],[7],342]],[1,0.01,0.005,0.003],[3,-0.7071067811865475,0,0,0.7071067811865476],[1,0.12,0.12,0.12],[1,-90,0,0]],[4,"root",8388608,[-691,120],[1,0.006815663073211908,0.000012269202670722734,0.12871931493282318],[3,0.6025356606293664,0.7948976697017438,0.042716059521415224,-0.057129770099603024],[1,-26.84069494030415,-151.97740180784288,72.36913948125456]],[4,"head",8388608,[-692,-693],[1,-1.3411045607369942e-9,0.01341153122484684,-0.012897348031401634],[3,0.15729017574541435,-0.0027976469170262635,-0.0005857000367276258,0.9875482928653015],[1,18.09904921271078,-0.3060402284510335,-0.11670579058275284]],[2,"eye0",8388608,231,[-694,-695],[1,1.490116086078075e-10,0.009062768891453743,0.0016654159408062696]],[0,"jaw0",8388608,231,[-696,-697],[1,-3.725290298461914e-9,0.01197443250566721,0.011124521493911743],[3,-0.12971614089484276,0.0013289866984905144,0.00064172303653651,0.9915500717448661],[1,-14.90646979942391,0.160542903494221,0.053160120145644876]],[8,"Level",8388608,19,[[9,"Quad<ModelComponent>",-698,[351],[7],352]],[1,0.9124999999999979,1.6999999999999993,0.6000000000000003],[3,-0.3707452120036063,-0.6021195792999934,-0.3707452120036063,0.6021195792999934],[1,0.5396874999999999,1,0.5396875],[1,-63.244,-90,0]],[8,"Line",8388608,117,[[9,"Quad<ModelComponent>",-699,[358],[7],359]],[1,0.01,0.005,0.003],[3,-0.7071067811865475,0,0,0.7071067811865476],[1,0.12,0.12,0.12],[1,-90,0,0]],[4,"root",8388608,[-700,124],[1,0.006815663073211908,0.000012269202670722734,0.12871931493282318],[3,0.6025356606293664,0.7948976697017438,0.042716059521415224,-0.057129770099603024],[1,-26.84069494030415,-151.97740180784288,72.36913948125456]],[4,"head",8388608,[-701,-702],[1,-1.3411045607369942e-9,0.01341153122484684,-0.012897348031401634],[3,0.15729017574541435,-0.0027976469170262635,-0.0005857000367276258,0.9875482928653015],[1,18.09904921271078,-0.3060402284510335,-0.11670579058275284]],[2,"eye0",8388608,237,[-703,-704],[1,1.490116086078075e-10,0.009062768891453743,0.0016654159408062696]],[0,"jaw0",8388608,237,[-705,-706],[1,-3.725290298461914e-9,0.01197443250566721,0.011124521493911743],[3,-0.12971614089484276,0.0013289866984905144,0.00064172303653651,0.9915500717448661],[1,-14.90646979942391,0.160542903494221,0.053160120145644876]],[20,"Boss",8388608,36,[23,-707],[1,0,-12.89,8.051],[3,0,-0.7071067811865475,0,0.7071067811865476],[1,0.12,0.12,0.12],[1,0,-90,0]],[4,"root",8388608,[-708,-709],[1,-0.03473689407110214,-0.003911865409463644,0.41789576411247253],[3,0.7491487950379349,0.6621912201060578,-0.012512746416842725,-0.011059027297590325],[1,179.99909096422752,1.9146046408329145,82.94852695490565]],[0,"jaw0",8388608,126,[-710,-711],[1,-2.1904707381281696e-8,0.023919666185975075,0.06759779900312424],[3,-0.13416003923138714,0.0022769704954932702,-1.3634769140442505e-7,0.990957062278067],[1,-15.420064883618556,0.25856093089872145,-0.03502073713507826]],[0,"eyes",8388608,126,[-712,-713],[1,-0.000005867257641511969,0.07754618674516678,0.015868283808231354],[3,-1.9324941646913496e-8,-2.85537623767583e-7,0.9999999999999563,-7.549790836946737e-8],[1,179.99996727979837,179.99999778552234,-0.00000865142239095546]],[8,"Level",8388608,240,[[9,"Quad<ModelComponent>",-714,[392],[7],393]],[1,4.783,16.658,-2.792],[3,-0.24184476264797528,0.6644630243886747,0.24184476264797522,0.6644630243886748],[1,8.1,6,8.1],[1,-40,90,0]],[20,"MergeUnit_2",8388608,36,[20,-715],[1,1.003,-12.9,12.15],[3,0,-1,0,6.123233995736766e-17],[1,65,65,65],[1,0,-180,0]],[4,"root",8388608,[-716,133],[1,-0.0039984192699193954,-0.005827454384416342,0.12623418867588043],[3,0.6025360708943303,0.7948973624865674,0.0427211514992014,-0.05712591003829515],[1,-26.84143842210427,-151.97739241528257,72.3691451612788]],[4,"head",8388608,[32,-717],[1,8.19563861220729e-10,0.005207926034927368,-0.01041912566870451],[3,0.15555330051688224,-0.03918567035849903,-0.040544060250554737,0.9862169300489921],[1,17.754487999060128,-3.724215251763632,-5.287962981178998]],[0,"jaw0",8388608,247,[-718,-719],[1,-1.7881393032936899e-9,0.01810682937502861,-0.006318637169897556],[3,-0.25247210789448593,0.0013981079973570002,0.0004707717842107198,0.967603047950589],[1,-29.24774413023847,0.16864124158638102,0.011749867910150164]],[4,"right foot1",8388608,[-720,-721],[1,0.0039070830680429935,0.0030419169925153255,0.018782716244459152],[3,-0.02549467440161613,-0.031017029878086872,0.007367443811280869,0.9991664957385157],[1,-2.8944689585227263,-3.5325102862985487,0.9342000425341567]],[0,"right foot2",8388608,249,[-722,-723],[1,0.005417807027697563,0.00018686027033254504,0.010887295939028263],[3,0.06435193946966054,-0.006079658941957276,0.13692434303328652,0.9884703282944539],[1,7.692282130046677,-1.7640922111019692,15.658841477415042]],[4,"left foot1",8388608,[-724,-725],[1,0.0030419081449508667,0.003907077480107546,0.018782710656523705],[3,-0.06414955222257944,-0.1235805920654387,0.0074090954288953655,0.990231173776772],[1,-7.196517003901635,-14.117416517251813,1.7494382741338435]],[0,"left foot2",8388608,251,[-726,-727],[1,0.00018687739793676883,0.005417811684310436,0.010887298732995987],[3,0.5686169921262199,-0.48557642601936524,-0.5183159762315395,-0.41501662562207825],[1,-100.68082749422483,90.51215075187437,-7.007225932523375]],[8,"Level",8388608,20,[[9,"Quad<ModelComponent>",-728,[414],[7],415]],[1,2.25,5.499999999999986,1.7500000000000009],[3,-0.29883623873011983,-0.6408563820557887,-0.29883623873011983,0.6408563820557884],[1,1.4355000000000002,1.7500000000000002,1.4355],[1,-50,-90.00000000000003,6.3611093629270335e-15]],[104,"Merge FX",8388608,245,[-730],[-729],[3,4.3297802811774664e-17,0.7071067811865476,-0.7071067811865475,4.329780281177467e-17],[1,0.007692307692307693,0.007692307692307693,0.007692307692307693],[1,89.99999999999999,180,0]],[65,0,true,true,1.5,false,false,1.280170500278473,1.280170500278473,6.4008525013923645,0,254,[[423,null],6,0],[42,[4,4294940784]],[10,8],[10,8],[10,40],[5],[10,3.141592653589793],[5],[10,6.283185307179586],[5],[10,0.5],[5],[10,1],[5],[[44,[5]]],[69,true,[67,1,[71,[[72,0.5]],[[36,0,0.006696428571428571],[36,255,0.5],[36,0,0.9977678571428571]]]]],[73,0,[10,1]],[75,true,true,[5],[31,1,[29,[0,1],[[45,2,1,-0.04735883424408022,1,-0.04735883424408022,1],[46,2,-2.8888888888888875,1,-2.8888888888888875,1]]]],[31,1,[29,[0,1],[[45,2,1,-0.04735883424408022,1,-0.04735883424408022,1],[46,2,-2.8888888888888875,1,-2.8888888888888875,1]]]],[31,1,[29,[0,0.3076923076923077,1],[[77,2,0.4925925925925926,-1.2037037037037035,-1.2037037037037035],[78,2],[37,2,1]]]]],[47,[5],[5],[5],[10,1]],[48,[5],[5],[5]],[81,true,[5],[5],[5],[5]],[83,true,[5],[5],[5]],[85,true,[31,1,[29,[0,1],[[37,2,1],[37,2,1]]]],[5]],[49,[10,1],[5],[28],[28],-731],[87,4,0,424,425]],[54,"NodesController","8a/xFpmgpJurZJj8YB7OHC",24,[37]],[132,"Camera<CameraComponent>",2,60,60,8388608,134,[4,4286356144]],[105,"Camera",4,[-732],[1,0,0,1000]],[133,0,3,240,2000,6,33554432,258,[4,4278190080]],[134,34,37,140,27],[54,"GameController","e4w/NEXQNKr7VqS/zyMP8D",24,[140]],[33,"BgSound",21,[-733]],[135,true,false,262],[33,"AttackSound",21,[-734]],[38,false,264],[33,"MergeSound",21,[-735]],[38,false,266],[33,"LoseSound",21,[-736]],[38,false,268],[33,"FightSound",21,[-737]],[38,false,270],[33,"ScreamSound",21,[-738]],[38,false,272],[33,"ChooseSound",21,[-739]],[38,false,274],[15,"bg_02",8388608,141,[2],[3,0,1,0,6.123233995736766e-17],[1,70,70,70],[1,0,180,0]],[13,"xuong_rong_02_bg02",8388608,2,[[26,1,-740,[42,43],[7],44]]],[13,"xuong_rong_03_bg02",8388608,2,[[26,1,-741,[45],[7],46]]],[13,"xuong_rong_01_bg02",8388608,2,[[26,1,-742,[47],[7],48]]],[13,"da_09_bg02",8388608,2,[[41,-743,[49],[7],50]]],[13,"da_08_bg02",8388608,2,[[41,-744,[51],[7],52]]],[13,"da_07_bg02",8388608,2,[[41,-745,[53],[7],54]]],[13,"da_06_bg02",8388608,2,[[26,1,-746,[55],[7],56]]],[13,"da_04_bg02",8388608,2,[[26,1,-747,[57],[7],58]]],[13,"da_05_bg02",8388608,2,[[26,1,-748,[59],[7],60]]],[13,"nui_02_bg02",8388608,2,[[26,1,-749,[61,62],[7],63]]],[13,"nui_05_bg02",8388608,2,[[26,1,-750,[64,65],[7],66]]],[13,"nui_01_bg02",8388608,2,[[26,1,-751,[67,68],[7],69]]],[13,"nui_03_bg02",8388608,2,[[26,1,-752,[70,71],[7],72]]],[13,"nui_04_bg02",8388608,2,[[26,1,-753,[73,74],[7],75]]],[13,"terrain_bg02",8388608,2,[[41,-754,[76],[7],77]]],[13,"da_03_platform02",8388608,58,[[26,1,-755,[78,79],[7],80]]],[13,"da_04_platform02",8388608,58,[[26,1,-756,[81,82],[7],83]]],[13,"platform02",8388608,58,[[26,1,-757,[84,85],[7],86]]],[100,"Node",8388608,141,[-758],[1,0,2.191,3.527],[1,0.2,0.2,0.2]],[8,"Field_Line",8388608,295,[[9,"Quad<ModelComponent>",-759,[88],[7],89]],[1,0,2.995000000000001,3.3230000000000004],[3,-0.5446609911725051,0,0,0.838656309041424],[1,17.09375,0.5,0.5],[1,-66.00300000000001,0,0]],[15,"Rap",8388608,5,[144],[3,-0.7071068407911907,1.545431364905563e-8,-1.5454308319985022e-8,0.707106721581899],[1,35,35,35],[1,-90.00000965934633,2.2069469095738317e-13,-0.0000025044783001793626]],[0,"spine0",8388608,144,[-760],[1,3.3527614018424856e-10,0.006136342883110046,-0.0014270639512687922],[3,-0.02443160337152881,-0.022943109595223044,0.0201146698579882,0.9992357632387373],[1,-2.7480321522213016,-2.573826232055118,2.368116817714365]],[0,"spine1",8388608,298,[-761],[1,-5.9604643443123e-10,0.009312824346125126,-0.00239212135784328],[3,-0.025184007676141137,-0.0196636675519513,0.015162793177541899,0.9993744021330692],[1,-2.8524780959480984,-2.2097527491683993,1.793480864622867]],[0,"spine2",8388608,299,[-762],[1,-1.19209286886246e-9,0.007389235310256481,-0.0007077457848936319],[3,0.010935029975929024,-0.012035389463467102,0.021190295053382935,0.9996432093079205],[1,1.2830845805767541,-1.406603116942589,2.41299472347885]],[0,"spine3",8388608,300,[-763],[1,1.303851610012785e-10,0.008432909846305847,-0.001710528158582747],[3,0.009986723487370066,-0.010896543660344557,0.02164148477368679,0.9996565294275005],[1,1.1721922639861158,-1.27427577244788,2.4673723030040087]],[0,"spine4",8388608,301,[60],[1,-1.6111880718483462e-9,0.008760550990700722,0.0009084802586585283],[3,0.023264478545279663,-0.005376115361179491,0.045743241224262356,0.9986678213019273],[1,2.702782389747391,-0.7402840141679439,5.227724451695554]],[0,"left arm0",8388608,60,[-764],[1,0.01678166352212429,0.003843718208372593,0.01704486459493637],[3,0.06211955844699958,-0.0006931657552918404,0.000722125405369433,0.9980682133574261],[1,7.123023909707795,-0.08441796991511402,0.07765543025290726]],[0,"left arm1",8388608,303,[61],[1,0.002040128456428647,0.0028534443117678165,0.027775166556239128],[3,-0.10235316970570892,0.0011289024170732995,-0.0011684694235126894,0.994746796380734],[1,-11.749253906162236,0.11497881707942949,-0.1464341866827959]],[0,"left finger6",8388608,61,[-765],[1,-0.004345767665654421,-0.0027997016441076994,0.021122794598340988],[3,0.042911894828107505,-0.043951351409270395,0.7057449255925163,0.7057980929359144],[1,89.92273789153168,-90.00712280016079,82.95716981899638]],[0,"left finger7",8388608,305,[-766],[1,-0.0033442748244851828,0.0026702468749135733,0.0071599893271923065],[3,0.04291528529478036,-0.04394778676980856,-0.7057345022206643,0.7058085311906158],[1,0,-6.958944736564372,-90]],[3,"left finger8",8388608,306,[[1,"left finger8_end",8388608,-767,[1,1.639127722441458e-9,0.007925841957330704,-2.444721924899085e-10]]],[1,-0.0004964705440215766,-0.007903050631284714,-0.0003384559240657836],[3,0.06142204776297102,-0.0006906230868557941,0.0007109157913413585,0.9981113914223667],[1,7.0429408639736115,-0.0839939613753073,0.07645020131928479]],[0,"left finger3",8388608,61,[-768],[1,-1.415610295651959e-9,-0.003664781805127859,0.02361919730901718],[3,0.061421936546286346,-0.0006887890441339772,0.000711245733717938,0.9981113992987272],[1,7.042927986733109,-0.08378650601282547,0.07650085680498905]],[0,"left finger4",8388608,308,[-769],[1,0.00006173096335260198,-0.0014206927735358477,0.0068187834694981575],[3,0.04291125041504749,-0.043951947519393436,0.7057447478009807,0.7057982727723268],[1,89.92245162352819,-90.00693723984652,82.95717372248231]],[3,"left finger5",8388608,309,[[1,"left finger5_end",8388608,-770,[1,1.5273690090467085e-9,0.01039195153862238,2.607703164514419e-9]]],[1,-0.008789131417870522,-0.00016358729044441134,0.005542309954762459],[3,-0.049579054244646356,0.04854435858687916,-0.7054333704961869,0.7053716200840409],[1,0,8.04116950159453,-90]],[0,"left finger0",8388608,61,[-771],[1,0.004507369827479124,-0.004883136600255966,0.019688822329044342],[3,0.04291191348322144,-0.04395131791101415,0.7057448068546176,0.7057982126166317],[1,89.92258273948352,-90.00696341415573,82.95717101211484]],[0,"left finger1",8388608,311,[-772],[1,-0.004400424659252167,-0.0019052952993661165,0.004933197516947985],[3,-0.0006897126619303882,-0.061422029236350324,0.0007111226625290711,0.99811139304463],[1,-0.07388088823220039,-7.0428271276087315,0.08618929241197136]],[3,"left finger2",8388608,312,[[1,"left finger2_end",8388608,-773,[1,1.1175871339474952e-10,0.006281689275056124,1.9697472541935213e-9]]],[1,-0.005897655617445707,-0.001855254522524774,0.0011114660883322358],[3,0.04291460916750315,-0.04394846660365915,-0.7057343525925261,0.7058086795825025],[1,0,-6.958833908777449,-90]],[0,"right arm0",8388608,60,[-774],[1,-0.016805235296487808,0.0038437184412032366,0.017044860869646072],[3,0.043394638960881575,-0.044454897530476316,0.7056103165445806,0.7058716233004884],[1,89.7865366216498,-89.87261399620158,82.87706909566757]],[0,"right arm1",8388608,314,[62],[1,0.002853442681953311,0.0020401189103722572,0.02777515910565853],[3,0.0011288907858823176,0.10235308123633922,-0.0011684726938453703,0.9947468054930283],[1,0.14238703490861612,11.749539693283234,-0.11995327445419976]],[0,"right finger6",8388608,62,[-775],[1,-0.0027996874414384365,-0.004345774184912443,0.021122805774211884],[3,-0.0006887954862275872,-0.061421981024616816,0.0007112255179817629,0.9981113965715712],[1,-0.07377526620041537,-7.042821664582796,0.08619459751518821]],[0,"right finger7",8388608,316,[-776],[1,-0.003344250377267599,-0.002670247806236148,0.0071600014343857765],[3,-0.0006896776228519604,-0.0614219847051367,0.0007110737700869976,0.9981113958440472],[1,-0.07387722859076269,-7.042822021155266,0.08618345041350875]],[3,"right finger8",8388608,317,[[1,"right finger8_end",8388608,-777,[1,5.513429712777906e-9,0.007925831712782383,1.247972281070986e-9]]],[1,-0.007903031073510647,-0.0004964724066667259,-0.00033846235601231456],[3,-0.000690654577497668,-0.06142204033876392,0.0007109249302496036,0.9981113918509402],[1,-0.07399001086996873,-7.042828334097344,0.08617330713999664]],[0,"right finger3",8388608,62,[-778],[1,-0.003664761781692505,-3.5762786065873797e-9,0.02361920103430748],[3,-0.0006887954862275872,-0.061421981024616816,0.0007112255179817629,0.9981113965715712],[1,-0.07377526620041537,-7.042821664582796,0.08619459751518821]],[0,"right finger4",8388608,319,[-779],[1,-0.0014206956839188933,0.0000617306650383398,0.006818781606853008],[3,-0.0006897156906438388,-0.06142198470340455,0.0007110765058270861,0.9981113958158997],[1,-0.0738815633520291,-7.042822017520631,0.08618403125030016]],[3,"right finger5",8388608,320,[[1,"right finger5_end",8388608,-780,[1,-5.811452652437765e-9,0.01039194781333208,-2.197921178392903e-9]]],[1,-0.0087891248986125,0.0001635877852095291,0.00554230809211731],[3,-0.0007775086613122394,0.06938312249841522,0.0006146960700724433,0.9975895949444304],[1,-0.09376854933974299,7.957169543924637,0.06408745408308406]],[0,"right finger0",8388608,62,[-781],[1,-0.004883085377514362,0.004507404752075672,0.019688935950398445],[3,-0.0006887954862275872,-0.061421981024616816,0.0007112255179817629,0.9981113965715712],[1,-0.07377526620041537,-7.042821664582796,0.08619459751518821]],[0,"right finger1",8388608,322,[-782],[1,-0.004400453995913267,0.0019052857533097267,0.004933169577270746],[3,-0.0006897156324366608,-0.0614219847034477,0.0007110755745049844,0.9981113958166009],[1,-0.07388156324947487,-7.0428220175896525,0.08618392432045532]],[3,"right finger2",8388608,323,[[1,"right finger2_end",8388608,-783,[1,5.9604645663569045e-9,0.006281698122620583,-3.3853575498454802e-9]]],[1,-0.005897653289139271,0.0018552541732788086,0.0011114648077636957],[3,-0.0006906201187373032,-0.06142203662910394,0.0007109223110857104,0.9981113921049354],[1,-0.07398608839280943,-7.04282791131622,0.08617276476308627]],[0,"neck0",8388608,60,[-784],[1,-3.2037497099679513e-9,0.011111360974609852,0.003563487436622381],[3,-0.05415776212446365,-0.015673452526640656,0.028092875249285852,0.9980140630511142],[1,-6.165410620017269,-1.621056885347618,3.311927081126803]],[0,"neck1",8388608,325,[-785],[1,-2.98023217215615e-10,0.0062774051912128925,-0.00410560704767704],[3,-0.08966264868752813,-0.0009737873910163207,-0.0005594561804697564,0.9959715599238949],[1,-10.288461070754654,-0.11688660195574159,-0.053845445684746494]],[0,"neck2",8388608,326,[-786],[1,-7.450580430390374e-11,0.0052847303450107574,-0.006477942690253258],[3,-0.03310535025500392,-0.00407697437089932,-0.003582932669522528,0.9994371299176142],[1,-3.7959988108354192,-0.48053312020982336,-0.394879482527021]],[0,"neck3",8388608,327,[145],[1,4.4703482582342247e-10,0.005175611469894648,-0.009956556372344494],[3,0.1097725207973913,-0.0022896964163004354,-0.0014697322959371477,0.9939530123980135],[1,12.604037086545514,-0.24230764825624343,-0.1962029725687631]],[6,"facial right",8388608,30,[[1,"facial right_end",8388608,-787,[1,2.9802322831784522e-9,0.020877547562122345,-6.966292875887348e-9]]],[1,-0.004972147289663553,0.02323892153799534,-0.0007019501645117998]],[3,"facial left",8388608,30,[[1,"facial left_end",8388608,-788,[1,8.568167286782113e-10,0.020877551287412643,1.266598714799727e-9]]],[1,0.004376347176730633,0.023286135867238045,-0.000610654940828681],[3,1.020744707630372e-8,-8.758644790014262e-8,0.7071068705935041,0.7071066917795742],[1,0,0.0000016541878159955739,90]],[3,"left eye",8388608,30,[[1,"left eye_end",8388608,-789,[1,4.0009616952829674e-8,0.020877547562122345,1.989305076222081e-8]]],[1,0.007816694676876068,0.004855139646679163,-0.0005104455631226301],[3,-0.4974182708716994,0.5025755030158159,0.4974130256631019,0.5025666219239862],[1,-89.40923043063424,90.00021249067133,-0.0008082926587832862]],[3,"facial down",8388608,30,[[1,"facial down_end",8388608,-790,[1,-2.38418573772492e-9,0.0208775345236063,5.7369469175228005e-9]]],[1,-0.00010118782665813342,0.0382038950920105,-0.001761037390679121],[3,0.00019762107640772304,0.027702124713359824,0.9996162029499676,-0.000005671407491620731],[1,-176.825164120377,-179.97734498003916,-0.000022311792150195157]],[3,"right eye",8388608,30,[[1,"right eye_end",8388608,-791,[1,-5.587935447692871e-9,0.020877541974186897,8.940696516468449e-10]]],[1,-0.007840259931981564,0.004855108447372913,-0.0005104326992295682],[3,-0.000004122019059970457,0.0000059066849982143965,0.7071109236787789,0.7071026386333629],[1,0,-0.0006680056962100314,90]],[0,"tongue0",8388608,146,[-792],[1,5.9604643443123e-10,0.007476067636162043,0.00844585057348013],[3,0.14470158115352674,-8.09338962678829e-7,0.0000075048867718142726,0.9894753419639576],[1,16.639997603994093,-0.00021621019955646604,0.0008375253860280748]],[0,"tongue1",8388608,334,[-793],[1,0,0.009285949170589447,-0.00020238566503394395],[3,-0.000007194468252753639,5.871989401064034e-7,0.000007559196546522802,0.9999999999453768],[1,-0.0008244258421684543,0.00006729427400246825,0.0008662196331352479]],[3,"tongue2",8388608,335,[[1,"tongue2_end",8388608,-794,[1,0,0.009665919467806816,-1.1846423397798844e-8]]],[1,-1.7881393032936899e-9,0.00953700952231884,0.0015734168700873852],[3,-0.0000068105296119141,2.1944291005412067e-7,0.000007557217486073403,0.9999999999482285],[1,-0.0007804293961320656,0.000025152203055154416,0.0008659931623574263]],[3,"jaw1",8388608,146,[[1,"jaw1_end",8388608,-795,[1,2.38418573772492e-9,0.024566248059272766,1.512467839859255e-8]]],[1,1.7881393032936899e-9,0.03447001799941063,0.015642423182725906],[3,-0.000007077587724402676,-0.0000016866254099124525,0.000007322059900226215,0.9999999999467253],[1,-0.0008110303963978463,-0.00019326709680230037,0.0008390476271420361]],[0,"right leg0",8388608,63,[-796],[1,-0.01905568316578865,0.0004546025302261114,0.015213022008538246],[3,-0.17785023268328573,0.020265245941758638,0.6699854775070273,0.7204707311689366],[1,-82.16966369115825,69.23780358133965,73.37573459358418]],[0,"right leg1",8388608,338,[-797],[1,0.011830153875052929,0.005615810863673687,0.04575785622000694],[3,0.07421629799238305,0.020908709399497166,0.003722633662365716,0.997016002370157],[1,8.501899179187863,2.357948838487365,0.6031400140632077]],[0,"right foot0",8388608,339,[147],[1,-0.024167373776435852,-0.005615834146738052,0.028443854302167892],[3,-0.08061645305448968,-0.12210674028886478,0.0063115340708462956,0.9892174159458647],[1,-9.092850681330166,-13.927103805247068,1.8437860478257406]],[0,"right toe3",8388608,148,[-798],[1,0.0051707010716199875,-0.005034505855292082,0.000486021745018661],[3,-0.09527645081561366,0.6747166984011005,-0.089204905745727,0.7264449460279797],[1,-1.0705488113058321,85.63083507197072,-14.961749049774335]],[0,"right toe4",8388608,341,[-799],[1,0.00003912072497769259,-0.0009624829399399459,0.006962400861084461],[3,-0.019880966596395596,0.35771207889038753,-0.05723422587730518,0.9318642922503984],[1,0.2247600806246628,42.01394582402905,-6.943607528256003]],[3,"right toe5",8388608,342,[[1,"right toe5_end",8388608,-800,[1,-4.440891999238953e-18,0.006882984656840563,-2.980232449711906e-10]]],[1,-0.004092148505151272,0.00007404133793897927,0.005533925257623196],[3,-0.000003851366154606075,-0.5275889472886025,0.00000714525982263592,0.8494997955461888],[1,0.00005706950095668717,-63.68538798476834,0.0009284019006364583]],[0,"right toe0",8388608,148,[-801],[1,0.0047660404816269875,0.004738344810903072,-0.00009099074668483809],[3,0.0042941635988303925,-0.03657727732310943,0.13046305037654934,0.9907689213076178],[1,1.0707295193042492,-4.369200006209172,14.963480993410622]],[0,"right toe1",8388608,344,[-802],[1,0.0078045520931482315,0.0020730358082801104,0.0005770075367763638],[3,-0.001128621387382462,0.050887964123917655,-0.06002164940686158,0.9968984616918449],[1,0.22268066484699953,5.857785937256673,-6.879743333266996]],[3,"right toe2",8388608,345,[[1,"right toe2_end",8388608,-803,[1,-5.662441182607836e-9,0.006672547664493322,2.533197429599454e-9]]],[1,0.006148831453174353,0.002591283293440938,1.5832484212552345e-9],[3,0.0000023585570943415933,-0.2379354341648002,0.000007691452844440242,0.971280973304886],[1,0.0004722193016381901,-27.52943998046925,0.0007917563394937316]],[0,"right claw0",8388608,147,[-804],[1,0.0007721730507910252,-0.008722227066755295,0.007967600598931313],[3,-0.0000025569461284647272,0.000005755573965551217,0.00000845338308816606,0.999999999944438],[1,-0.00029301001857948313,0.0006595426707539052,0.0009686846607019436]],[3,"right claw1",8388608,347,[[1,"right claw1_end",8388608,-805,[1,2.98023217215615e-10,0.019258832558989525,8.940696516468449e-10]]],[1,0.011945203877985477,-0.0035537611693143845,-0.014682830311357975],[3,-0.000002631452389177881,0.000005736017100981615,0.000008412055648922045,0.9999999999447056],[1,-0.00030154776104337637,0.000657301678863356,0.0009639488417656074]],[0,"tail0",8388608,63,[-806],[1,-1.7881393032936899e-9,-0.021330013871192932,0.01197218056768179],[3,0.03965515667346802,0.029825434269129803,0.0550589266769855,0.9972494304902054],[1,4.375311874265729,3.1798398908889918,6.441023183002347]],[0,"tail1",8388608,349,[-807],[1,3.5762786065873797e-9,-0.011852532625198364,-0.0007820019382052124],[3,0.008202091906412407,0.005046298798562692,0.03852565268371837,0.9992112062232329],[1,0.9196460730927681,0.5432211855561329,4.420359033449537]],[0,"tail2",8388608,350,[-808],[1,5.9604645663569045e-9,-0.0095637496560812,-0.00047620327677577734],[3,-0.011139223526711622,0.0057910597859745176,0.038360335534204544,0.9991851009615187],[1,-1.30481599996516,0.7141440432337758,4.389087881368125]],[0,"tail3",8388608,351,[-809],[1,8.335336865172849e-9,-0.008867786265909672,-0.00032850803108885884],[3,-0.0154714971326145,0.005952051679916446,0.03827477143116253,0.9991297451928691],[1,-1.803018086775701,0.7515309744362392,4.375849102858241]],[0,"tail4",8388608,352,[-810],[1,1.7881393032936899e-9,-0.009247753769159317,0.0008474430651403964],[3,-0.05025408392748448,0.005035158688131844,0.01878929315385856,0.9985470127582242],[1,-5.774891784632758,0.6848357963710222,2.121454741811426]],[0,"tail5",8388608,353,[-811],[1,4.172325152040912e-9,-0.009859621524810791,-0.0009705275297164917],[3,0.06173731078799804,-0.011392463117960001,0.00018867715168469868,0.9980273947350866],[1,7.078864867225113,-1.304353077500048,-0.059018682062780145]],[0,"tail6",8388608,354,[-812],[1,-1.4901161415892261e-9,-0.010103093460202217,0.0011121081188321114],[3,-0.05659515416709156,-0.011642833252771134,0.0010709838254645341,0.9983287464319041],[1,-6.486948003139501,-1.3251210401429965,0.19802857500182264]],[0,"tail7",8388608,355,[-813],[1,1.1175871339474952e-9,-0.011288122273981571,-0.00011392786836950108],[3,0.013825285306723311,-0.013218420613385117,-0.000948558972955096,0.9998166007216274],[1,1.582738980428874,-1.5131186103052847,-0.12961845539995664]],[0,"tail8",8388608,356,[-814],[1,2.6822091214739885e-9,-0.0113936522975564,-0.00022619709488935769],[3,0.024788325904215147,-0.012316831512661622,-0.0010085908099989774,0.9996163350530708],[1,2.8391911683651196,-1.4081450949649523,-0.1505181892801957]],[0,"tail9",8388608,357,[-815],[1,-7.1525572131747595e-9,-0.008997928351163864,0.0003088857338298112],[3,-0.015303138615712872,-0.011302014792302787,-0.0004550526201377547,0.9998189192735132],[1,-1.7541566153453036,-1.2957896235541686,-0.03231641645904276]],[0,"tail10",8388608,358,[-816],[1,4.172325152040912e-9,-0.010187804698944092,0.00020333804422989488],[3,-0.02430352398028845,-0.010115237040459212,-0.00029950696818820127,0.9996534054347691],[1,-2.7854577140083756,-1.1596323336731569,-0.006138355243051012]],[3,"tail11",8388608,359,[[11,"tail11_end",8388608,-817,[1,-1.7881393032936899e-9,0.014969524927437305,-5.699694050065318e-9],[3,-0.0678038007575209,1.2666034032288826e-7,-3.6755410179991807e-9,0.9976986742513083],[1,-7.775708965422763,0.000014452245938741162,-0.0000014043350119690551]]],[1,1.19209286886246e-9,-0.014869323000311852,-0.001440257765352726],[3,0.0641143115460958,-0.008737050228345412,-0.0010215376075935177,0.9979037906878568],[1,7.350720152735696,-0.9916427583713855,-0.1810052558123102]],[0,"left leg0",8388608,63,[-818],[1,0.018341973423957825,0.0005686721415258944,0.02371845953166485],[3,-0.059312799378750024,0.008447008391998514,0.07803680918249539,0.9951486804953803],[1,-6.9391765369367295,1.5119400789025952,8.87703726528248]],[0,"left leg1",8388608,361,[-819],[1,0.005615829024463892,0.011830146424472332,0.04575786739587784],[3,0.12167748863638429,-0.0014848681233614938,0.008157222568458671,0.9925350591519513],[1,13.980570664107205,-0.28265763113048126,0.9071050678907172]],[0,"left foot0",8388608,362,[149],[1,-0.0056158192455768585,-0.024167375639081,0.028443854302167892],[3,0.09446038147516805,0.005244198633049949,-0.006419538878395956,0.9954941105967688],[1,10.844835055272458,0.6677820741062617,-0.6755608700291829]],[0,"left toe0",8388608,150,[-820],[1,0.00009099714225158095,-0.004738352261483669,0.004766042344272137],[3,0.00041404998355187877,-0.05181380027437721,-0.0002794852792177566,0.9986566379650801],[1,0.04572348559152735,-5.940071036858776,-0.0344420229264882]],[0,"left toe1",8388608,364,[-821],[1,-0.0005770096322521567,-0.002687971107661724,0.007804455701261759],[3,0.00039830285108509916,0.0605900612035852,-0.00030199798679294816,0.9981626093154365],[1,0.04765510015661467,6.947378898331921,-0.03177737590548919]],[3,"left toe2",8388608,365,[[1,"left toe2_end",8388608,-822,[1,-2.2351741291171123e-10,0.00645874161273241,1.1102229998097382e-18]]],[1,-8.940696516468449e-10,-0.0019763486925512552,0.006148929707705975],[3,0.00038142458880916034,-0.05181382255040501,-0.0003235289497147746,0.9986566365057697],[1,0.041728406572960126,-5.9400730306495175,-0.03928856691909781]],[0,"left toe3",8388608,150,[-823],[1,-0.0004860118788201362,0.0050345007330179214,0.005170698743313551],[3,-0.10411987546039528,-0.05828465573026303,0.002757470380755551,0.9928516237573546],[1,-11.915082710907141,-6.613988900819584,1.0091855612067413]],[0,"left toe4",8388608,367,[-824],[1,0.00003912120882887393,0.0004225992306601256,0.006962402258068323],[3,0.000398199882238931,0.0605900501044245,-0.00030017827020632293,0.9981626105791598],[1,0.0476306875527382,6.947377527036639,-0.03156995032740742]],[3,"left toe5",8388608,368,[[1,"left toe5_end",8388608,-825,[1,-3.725290215195187e-11,0.006898330058902502,-1.490116086078075e-10]]],[1,-0.00003912124884664081,0.0004658419347833842,0.006882472429424524],[3,0.00004524483307372373,0.6695190080315481,-0.0005006977013898457,0.7427947530369131],[1,0.04226530576820558,84.05993241325626,-0.03914715528676]],[0,"left claw0",8388608,149,[-826],[1,-0.008722207508981228,0.0007721720612607896,0.007967598736286163],[3,-0.0000045867960453209906,0.0000045453076248021775,0.7071120263611805,0.707101535943521],[1,0,-0.0007433276312427485,90]],[3,"left claw1",8388608,370,[[1,"left claw1_end",8388608,-827,[1,8.568167841893626e-10,0.019258836284279823,-4.582107138162428e-9]]],[1,0.011945197358727455,0.003553769551217556,-0.0146828293800354],[3,-3.678724169550181e-8,0.000006524614036286139,0.0000074706044866579266,0.9999999999508091],[1,-0.000004221092893115245,0.0007476657260223088,0.0008560681874791743]],[53,"rap_LOD_2",8388608,5,[[18,1,-828,[90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107],[7],5,108,109]],[3,0.5000000670552244,0.49999994784593305,-0.5000000074505787,0.4999999776482559],[1,90.00000853773666,89.9999948773579,0.0000017075469362810637]],[62,"Cube",8388608,31,[-829]],[66,1,false,false,373,[[117,null],6,0],[42,[4,4294939182]],[35,3,1,2],[5],[5],[35,3,30,60],[5],[5],[43,3,4.71238898038469],[5],[35,3,0.3,1],[5],[5],[5],[[44,[10,15]]],[70,[28]],[74,true,0,[10,1]],[76,[5],[5],[5],[5]],[47,[5],[5],[5],[10,1]],[48,[5],[5],[5]],[82,true,0.8,[5],[5],[5],[68,1,30,[29,[0,1],[[79,0.04444444444444444,1,1],[80,-0.562962962962963,-0.6074074074074074,1,-0.6074074074074074,1]]]]],[84,true,true,[10,0.7853981633974483],[10,0.7853981633974483],[10,0.8552113334772213]],[86,true,3,3,2,[5],[43,3,1]],[49,[10,1],[5],[28],[28],-830],[88,0,118]],[15,"Comp",8388608,6,[153],[3,-0.7071068407911907,1.54543154254125e-8,-1.545431187269876e-8,0.707106721581899],[1,9.999999046325684,9.999999046325684,9.999999046325684],[1,-90.00000965934633,7.675917777898835e-14,-0.0000025044787319857803]],[0,"spine0",8388608,153,[-831],[1,3.7252903539730653e-10,0.003909075167030096,-0.00092517607845366],[3,-0.013759418954332359,-0.02019218487723872,0.021461381934783252,0.9994710416742307],[1,-1.5278449136403591,-2.281549172864686,2.490613936032426]],[0,"spine1",8388608,376,[66],[1,2.38418573772492e-9,0.00814820732921362,-0.0024583544582128525],[3,-0.014868528756110217,-0.017917059571555493,0.022798139868672962,0.9994689343083488],[1,-1.6580895794748667,-2.015768713908674,2.642550980417355]],[0,"spine3",8388608,66,[-832],[1,-5.066394859198908e-9,0.007588513661175966,-0.0019066231325268745],[3,0.020843829879679646,-0.010312797462126119,0.02867264475851253,0.9993182978445878],[1,2.4254322263752033,-1.251564674977951,3.2605303745488974]],[0,"spine4",8388608,378,[67],[1,8.940696516468449e-10,0.008185500279068947,-0.0010699452832341194],[3,0.034254656149486834,-0.005485426314216125,0.05256574367670215,0.9980147149325741],[1,3.9755012009245196,-0.8382953020260973,6.001066118615762]],[0,"left arm0",8388608,67,[-833],[1,0.013951382599771023,0.016790246590971947,0.016093119978904724],[3,-0.012916867621556222,0.00014373601880273082,-0.00014094100334092016,0.9999165535215615],[1,-1.4802028695162106,0.01626094512362714,-0.016362054691447837]],[0,"left arm1",8388608,380,[-834],[1,0.0010551911545917392,-0.007742427755147219,0.021822387352585793],[3,-0.10235335396090298,0.001129400536059972,-0.0011684727766184703,0.9947467768526588],[1,-11.749275059688674,0.11503553126164667,-0.1464404324964447]],[0,"left hand",8388608,381,[-835],[1,0.00009416900866199285,0.015645749866962433,0.010464519262313843],[3,0.3301397245118249,0.0005644782763280047,-0.00025354159734460773,0.9439318722133448],[1,38.5545242496592,0.07064951765266128,-0.006069833765081632]],[2,"left finger3",8388608,382,[-836],[1,8.344650304081824e-9,0.009227232076227665,0.004294860176742077]],[0,"left finger4",8388608,383,[-837],[1,0.00005059279646957293,0.002204132964834571,0.003155963961035013],[3,0.000007673238672860348,-0.000009594779093684764,0.7071121455309554,0.7071014166947133],[1,0,0.0012435109893833497,90]],[0,"left finger5",8388608,384,[-838],[1,0.00042112517985515296,-0.0001340837770840153,0.005627484526485205],[3,-0.09230603438907505,0.09230350119162783,-0.7010510090251443,0.7010614398381622],[1,0,15.001533567975944,-90]],[0,"left finger5_end",8388608,385,[-839],[1,-8.940696516468449e-10,0.0056448024697601795,8.940696516468449e-10],[3,0.0000019192621039034926,-0.0000020400616449398495,-5.30853654365919e-8,0.999999999996076],[1,0.0002199312242558464,-0.00023377383272774185,-0.000006083583460109329]],[3,"left finger5_end_end",8388608,386,[[1,"left finger5_end_end_end",8388608,-840,[1,1.1175871339474952e-9,0.005644826218485832,-8.12113309933693e-9]]],[1,-1.639127722441458e-9,0.005644821096211672,2.4586914726398845e-9],[3,-0.0000027220794436078912,0.000002801418531795414,4.222383722630338e-7,0.9999999999922822],[1,-0.0003119274627818528,0.00032101904875022903,0.00004838407951892836]],[0,"right arm0",8388608,67,[-841],[1,-0.013974963687360287,0.016790248453617096,0.01609310694038868],[3,-0.009031942320728738,0.009235106619735695,0.7069480580786489,0.707147495224627],[1,-89.36624562339624,89.38270908907008,88.51971961785377]],[0,"right arm1",8388608,388,[-842],[1,-0.007742421701550484,0.0010551821906119585,0.021822378039360046],[3,0.0011293978723013517,0.10235323600169045,-0.00116846522389361,0.9947467890018288],[1,0.14244476872426218,11.749557580346796,-0.11994645319001446]],[0,"right hand",8388608,389,[-843],[1,0.015645867213606834,0.00009417087130714208,0.010464523918926716],[3,0.000564268567534426,-0.33015090822731785,-0.00025365272179565655,0.9439279607353295],[1,0.05143848065160351,-38.55585629010495,-0.048784345696111106]],[0,"right finger3",8388608,390,[-844],[1,0.009227292612195015,-7.599592066753758e-9,0.004294626880437136],[3,1.6298153937492528e-9,0.000002770327682799972,7.275961777491847e-11,0.9999999999961626],[1,1.867630637958631e-7,0.0003174561681857834,8.338155429893503e-9]],[0,"right finger4",8388608,391,[-845],[1,0.0022041972260922194,0.0000505955504195299,0.003155910177156329],[3,-6.984919309606769e-10,-0.000001633585839042647,1.4551918697794388e-11,0.9999999999986657],[1,-8.004127661182475e-8,-0.00018719514809904426,1.6676578047004918e-9]],[0,"right finger5",8388608,392,[-846],[1,0.00042110466165468097,0.0001340793096460402,0.005627505015581846],[3,-0.0000019479955177752215,0.13052655589795578,0.000007322112103060771,0.9914448134656862],[1,-0.00033083272104267504,15.000042036776538,0.000802737353376578]],[2,"right finger5_end",8388608,393,[-847],[1,-2.2538007016237316e-9,0.0056448327377438545,1.0002404238207419e-8]],[3,"right finger5_end_end",8388608,394,[[1,"right finger5_end_end_end",8388608,-848,[1,-1.974403973648009e-9,0.0056448327377438545,1.7881393032936899e-9]]],[1,-5.33647837031026e-9,0.005644836463034153,1.162290530487553e-8],[3,0.0000015022819752612897,-2.2382664610605817e-8,-2.478482770126758e-7,0.9999999999988407],[1,0.00017214883300648067,-0.0000025648217660946174,-0.000028401324317949088]],[0,"neck0",8388608,67,[-849],[1,-2.6822091214739885e-9,0.015256059356033802,-0.00595217477530241],[3,-0.07123410846437608,-0.014987513727382237,0.028143017193092368,0.9969498717622799],[1,-8.130615612736486,-1.4851653091889252,3.3393464157132535]],[0,"neck1",8388608,396,[-850],[1,8.940696516468449e-10,0.017543168738484383,-0.016172247007489204],[3,-0.10494259662545745,0.0000061833183705481795,-0.00008328176707578431,0.9944782775100824],[1,-12.047718701658109,-0.0002968642299670698,-0.009565049350708435]],[0,"neck2",8388608,397,[-851],[1,4.470348535789981e-9,0.017027776688337326,-0.016856519505381584],[3,-0.046461860349687426,-0.0033375966875403224,-0.003000175268067493,0.9989099833966815],[1,-5.327239229013977,-0.3980264941498488,-0.3256519505946268]],[0,"neck3",8388608,398,[154],[1,2.6822091214739885e-9,0.00766771798953414,-0.011520219966769218],[3,0.1129740622069687,-0.002462202908184354,-0.0016172785493945123,0.9935935704478913],[1,12.973139155541443,-0.25940575636329644,-0.21601506953467783]],[0,"right eye",8388608,155,[-852],[1,-0.007840261794626713,0.008088086731731892,0.0008104066364467144],[3,0.0000015153221586345103,0.000001291498019247911,0.7071119369679933,0.7071016253647057],[1,0,0.0002455702580163,90]],[0,"right eye_end",8388608,400,[-853],[1,7.450580596923828e-9,0.01128531713038683,1.2665987370041876e-8],[3,0.0000016917472294127718,6.170012056818174e-9,-4.1886227108925643e-7,0.9999999999984812],[1,0.00019385995279289637,7.071125014201777e-7,-0.000047998079465172375]],[3,"right eye_end_end",8388608,401,[[1,"right eye_end_end_end",8388608,-854,[1,5.960464899423812e-10,0.011285314336419106,3.44216815051368e-8]]],[1,1.3709068547029801e-8,0.011285322718322277,7.227063392178934e-9],[3,-0.0000025331978576933247,1.1146769729428502e-8,-6.984920419816702e-10,0.9999999999967915],[1,-0.00029028309183423673,0.0000012773255186363435,-8.004452777657305e-8]],[0,"left eye",8388608,155,[-855],[1,0.007816696539521217,0.008088074624538422,0.0008104006410576403],[3,-0.4833322786123404,0.5161297941585465,0.4833344541818849,0.5161276483913245],[1,-86.24125517318419,90.0002474051749,0.000009826573641812891]],[0,"left eye_end",8388608,403,[-856],[1,1.2433156726388006e-8,0.011285322718322277,5.856855000985206e-9],[3,1.0477378964409168e-9,5.915352208055046e-9,0.0000016901828985258776,0.9999999999985716],[1,1.200607733149561e-7,6.778492287861956e-7,0.00019368069338224458]],[3,"left eye_end_end",8388608,404,[[1,"left eye_end_end_end",8388608,-857,[1,7.078051478259795e-9,0.011285316199064255,4.842877210364804e-10]]],[1,1.672655258744271e-8,0.011285318061709404,-2.1606683109354208e-9],[3,-4.2284960954866026e-7,8.658391337221959e-9,-0.0000016913039644324944,0.9999999999984803],[1,-0.00004845499431391979,9.920966098682533e-7,-0.00019380915849106982]],[2,"jaw1",8388608,156,[-858],[1,1.862645149230957e-9,0.045013949275016785,0.015709517523646355]],[2,"jaw1_end",8388608,406,[-859],[1,-7.450580707946131e-10,0.027444317936897278,-1.0989605891964516e-9]],[3,"jaw1_end_end",8388608,407,[[11,"jaw1_end_end_end",8388608,-860,[1,-4.4703482582342247e-10,0.02744431234896183,-2.1569430685985935e-8],[3,-0.0000010203220881511088,0.0000010196818038810613,1.4551915228351714e-9,0.9999999999989597],[1,-0.00011692029896006154,0.00011684692778744354,1.6663344378198693e-7]]],[1,1.7881393032936899e-9,0.027444347739219666,1.7862767265341972e-8],[3,0.000002010551270351287,-0.000002014101482919643,-3.783497126692792e-10,0.9999999999959506],[1,0.00023039220448395494,-0.0002307990288771928,-4.3819716712579345e-8]],[0,"tongue0",8388608,156,[-861],[1,3.5762786065873797e-9,0.004420141689479351,0.005698944441974163],[3,0.14470117871230787,-1.3000424365683173e-8,0.000007537388013103071,0.9894754008172494],[1,16.639950996468475,-0.00012645551306502084,0.0008544151586764777]],[0,"tongue1",8388608,409,[-862],[1,-3.3527611797978807e-9,0.011291980743408203,-0.0012327989097684622],[3,-0.06670764023167682,-1.9519765523348155e-7,-2.3801742565346996e-8,0.9977725646331845],[1,-7.649813158440861,-0.000022500124022819532,-0.0000012292867664396407]],[0,"tongue2",8388608,410,[-863],[1,2.654269304347423e-10,0.01418344583362341,0.0005741515778936446],[3,-0.1374952653740075,5.523982732180117e-8,-4.5837314709614335e-8,0.9905024240251641],[1,-15.805867716311552,0.000005547694689655366,-0.000006073030173183047]],[0,"tongue2_end",8388608,411,[-864],[1,-1.3411045607369942e-9,0.014195075258612633,-5.79049830307099e-9],[3,0.0000014945978818981794,-0.0000014533287639974586,-3.259628789102487e-9,0.9999999999978271],[1,0.00017126830086094277,-0.00016653920828563922,-3.737748539378029e-7]],[3,"tongue2_end_end",8388608,412,[[11,"tongue2_end_end_end",8388608,-865,[1,-1.043081288010228e-9,0.014195038005709648,1.0114162840579866e-8],[3,0.0000021189916878843384,-0.0000021222513168954777,-2.3283064365282257e-10,0.9999999999955029],[1,0.00024281856102116275,-0.00024319208699148472,-2.7195748456137112e-8]]],[1,1.043081288010228e-9,0.014195079915225506,3.408640703028709e-9],[3,-0.0000035538696465228525,0.0000034507834242990154,-8.149073638008481e-10,0.9999999999877311],[1,-0.00040724346304701155,0.0003954306521184932,-9.478681427174957e-8]],[0,"Right Torso",8388608,66,[-866],[1,-0.017464520409703255,0.009573213756084442,0.030453024432063103],[3,-1.4765793285428368e-8,-1.2075035933521495e-7,0.7071068407911856,0.707106721581894],[1,0,-0.000002392899432563725,90]],[2,"Right Torso_end",8388608,414,[-867],[1,2.784654506982065e-9,0.02686261013150215,3.81842246710562e-9]],[6,"Right Torso_end_end",8388608,415,[[1,"Right Torso_end_end_end",8388608,-868,[1,-1.1431984248133631e-8,0.0268626157194376,1.240521640966108e-8]]],[1,1.9604340373291507e-9,0.0268626157194376,-2.1047890097491972e-9]],[0,"Left Torso",8388608,66,[-869],[1,0.017440930008888245,0.009573224000632763,0.030453002080321312],[3,0.500000126659862,-0.4999998882412794,-0.5000000670552164,-0.4999999180436022],[1,-90.0000221981152,89.99999487735771,-0.0000017075463256145647]],[2,"Left Torso_end",8388608,417,[-870],[1,1.7508864358362075e-9,0.026862619444727898,-2.8824433950802586e-9]],[6,"Left Torso_end_end",8388608,418,[[1,"Left Torso_end_end_end",8388608,-871,[1,-1.5832484212552345e-9,0.0268626157194376,-2.9336661988565993e-9]]],[1,-2.2165478341662492e-9,0.02686261013150215,5.820766091346741e-10]],[0,"tail0",8388608,68,[-872],[1,2.38418573772492e-9,-0.01958109252154827,0.004617891740053892],[3,0.05616177867879355,0.028151084982951425,0.004469596682825916,0.9980147262116976],[1,6.4223793484064045,3.1925924357445123,0.692349061695615]],[0,"tail1",8388608,420,[-873],[1,-1.19209286886246e-9,-0.026223542168736458,-0.0007214128854684532],[3,0.0031083005351771912,0.0014343740341220459,-0.01194275649172853,0.9999228228249882],[1,0.35822495434177337,0.16865661998027534,-1.3680525498125806]],[0,"tail2",8388608,421,[-874],[1,2.38418573772492e-9,-0.03143041208386421,0.00010329753422411159],[3,0.003111778308726112,0.0013797485805861092,-0.011948764385323093,0.999922817101038],[1,0.35854984255366873,0.16240262721771287,-1.368760051413259]],[0,"tail3",8388608,422,[-875],[1,-2.38418573772492e-9,-0.02927638776600361,0.00020010948355775326],[3,0.0031156022961344666,0.0013251705064710123,-0.011954564573702881,0.999922809686485],[1,0.35891436722033493,0.15615446645465633,-1.3694437187155908]],[0,"tail4",8388608,423,[-876],[1,-4.76837147544984e-9,-0.027391791343688965,0.00019631088071037084],[3,0.0035525737043447716,0.0014388119918525726,-0.011879632153546678,0.999922088654923],[1,0.40914076039233777,0.16974711963651254,-1.3607416889422317]],[0,"tail5",8388608,424,[-877],[1,-1.1920929132713809e-8,-0.027199802920222282,0.00030194639111869037],[3,-0.0012750914229008672,-0.008457227549468383,0.03171206615500072,0.9994604515958702],[1,-0.11553545910896909,-0.9659600928893592,3.6356494243513264]],[0,"tail6",8388608,425,[-878],[1,9.53674295089968e-9,-0.025129156187176704,0.0011446529533714056],[3,-0.014449086548818109,-0.008872484528700394,0.0315430043349346,0.9993585651775438],[1,-1.6260902547158433,-0.9658152257334518,3.629360742339713]],[0,"tail7",8388608,426,[-879],[1,-5.9604645663569045e-9,-0.024538598954677582,0.0006162720965221524],[3,-0.0035734080338886967,-0.010646847758866457,0.03040127757568557,0.9994746808747028],[1,-0.3728700575034159,-1.2092794445726276,3.488414221479557]],[0,"tail8",8388608,427,[-880],[1,8.940697071579962e-9,-0.013206311501562595,0.0002693343267310411],[3,-0.00421273810623833,-0.009717253247809712,0.030597281375363466,0.9994756796437836],[1,-0.449268537675818,-1.1002936678150768,3.5112401274933487]],[2,"tail8_end",8388608,428,[-881],[1,1.19209286886246e-9,0.013208942487835884,0]],[6,"tail8_end_end",8388608,429,[[1,"tail8_end_end_end",8388608,-882,[1,1.19209286886246e-9,0.013209017924964428,-6.556510889765832e-9]]],[1,5.9604645663569045e-9,0.013209058903157711,1.7881394143159923e-9]],[0,"right leg0",8388608,68,[-883],[1,-0.019055675715208054,0.0033091562800109386,0.016144664958119392],[3,-0.1758038810899314,-0.017633571842268422,0.6676717853270461,0.723184927674793],[1,-78.57820982882251,62.74263400658564,76.38525243107132]],[0,"right leg1",8388608,431,[-884],[1,0.011304101906716824,-0.0015700083458796144,0.04155361279845238],[3,0.06429759265723188,0.04945126062606861,0.0029156149162815385,0.9967005024532882],[1,7.347795831743105,5.636019159221763,0.6973746779464639]],[0,"right foot0",8388608,432,[-885],[1,-0.029886450618505478,0.0015699955401942134,0.032055873423814774],[3,-0.08061608046528909,-0.12210650177915211,0.006311681215104875,0.989217474812243],[1,-9.09280657404995,-13.92707573541503,1.8437953581496462]],[0,"right foot1",8388608,433,[-886],[1,0.003907094709575176,-0.00014767363609280437,0.018782703205943108],[3,0.012718700017344608,-0.019753488005658924,0.011716660245581385,0.9996553177241488],[1,1.4840307666426562,-2.2810810511675452,1.313492797221609]],[0,"right foot2",8388608,434,[-887],[1,0.005417832173407078,0.0001594980276422575,0.010887287557125092],[3,0.135298567316826,0.9880735445127315,-0.06766532475870929,0.028746689224323076],[1,8.434477156871264,175.53389993115258,15.276627672092612]],[0,"right toe0",8388608,435,[-888],[1,-0.004766051657497883,0.0004802089533768594,0.00009099081216845661],[3,0.13046292620968675,0.9907689432631921,-0.004293484967174884,0.036577205152664605],[1,1.070648052511951,175.63081923016807,14.963469722274361]],[0,"right toe1",8388608,436,[-889],[1,0.007804563734680414,-0.0004186089208815247,0.0005770097486674786],[3,-0.0011280903034880329,0.050888072283556754,-0.060021526621159046,0.9968984641645288],[1,0.22274179400602048,5.857801964075723,-6.879726116801438]],[0,"right toe2",8388608,437,[-890],[1,0.006148821674287319,0.0003150858683511615,-5.21540644005114e-10],[3,0.0000018084104049840189,-0.23793532170532997,0.000007286618322553768,0.9712810008584621],[1,0.00039994958420425553,-27.52942671179931,0.0007616980255523596]],[2,"right toe2_end",8388608,438,[-891],[1,-3.8743017682918435e-9,0.006156904622912407,7.450580707946131e-10]],[6,"right toe2_end_end",8388608,439,[[1,"right toe2_end_end_end",8388608,-892,[1,-5.9604643443123e-10,0.006156894378364086,-5.9604643443123e-10]]],[1,-1.639127722441458e-9,0.006156902760267258,2.98023217215615e-10]],[0,"left leg0",8388608,68,[-893],[1,0.01840258203446865,0.0034433561377227306,0.024012885987758636],[3,-0.026719246605534135,-0.019741520688928448,0.0797837020365437,0.9962584579872158],[1,-2.9085726705116217,-2.0361285181125104,9.208366644433342]],[0,"left leg1",8388608,441,[-894],[1,-0.001570010674186051,0.011304106563329697,0.04155363142490387],[3,0.07505410346936253,-0.006625843860994315,0.003316218579660744,0.9971519354841928],[1,8.611106043601785,-0.7856617226002104,0.32194404411108085]],[0,"left foot0",8388608,442,[-895],[1,0.0015700102085247636,-0.029886456206440926,0.03205588459968567],[3,0.09446010059390231,0.00524464439530843,-0.0064196456671164566,0.9954941342119829],[1,10.844803105330856,0.6678338961791349,-0.6755684135879525]],[0,"left foot1",8388608,443,[-896],[1,-0.00014768153778277338,0.003907082136720419,0.018782710656523705],[3,-0.0688300711131612,-0.09169756385766402,-0.0010759593875588616,0.9934046609536936],[1,-7.871803697878175,-10.506304455837528,0.6007786594490084]],[0,"left foot2",8388608,444,[-897],[1,0.0001594924251548946,0.005417830776423216,0.01088727731257677],[3,0.16557359601450405,-0.293024776702799,0.645517941625473,0.6855862101739744],[1,79.53737191070073,-90.47599166257511,52.00663712930689]],[0,"left toe0",8388608,445,[-898],[1,0.0032210317440330982,-0.00048022984992712736,-0.0035140234977006912],[3,-0.00025397410362682974,0.993890734182026,-0.00042949190776777463,0.11036738440757354],[1,0.045703432009614624,167.32702392606475,-0.03435734826850064]],[0,"left toe1",8388608,446,[-899],[1,-0.005144279450178146,0.00001669451557972934,0.0058973608538508415],[3,0.00047318134286587397,-0.25816592798791194,-0.00016007157822210818,0.9661004627380357],[1,0.047648980608224735,-29.922515804701185,-0.03171946383206957]],[0,"left toe2",8388608,447,[-900],[1,1.7881393032936899e-9,0.00008683509804541245,0.006148934364318848],[3,0.00038137636832103974,-0.05181359592711081,-0.0003230278147168311,0.9986566484443983],[1,0.04172587266780249,-5.9400470473863285,-0.03923092244094853]],[2,"left toe2_end",8388608,448,[-901],[1,4.097819306103645e-10,0.006149544846266508,-5.587935669737476e-10]],[6,"left toe2_end_end",8388608,449,[[1,"left toe2_end_end_end",8388608,-902,[1,9.31322467062623e-12,0.006149547640234232,-3.7252903539730653e-10]]],[1,-6.519258050063925e-11,0.006149547174572945,-7.823109382520954e-10]],[23,"comp_LOD_2",8388608,6,[[18,1,-903,[124,125,126,127,128,129],[7],6,130,131]],[3,1.5454308319985022e-8,0.707106721581899,-1.545430476727128e-8,0.7071068407911907],[1,99.99998474121094,99.99998474121094,99.99998474121094],[1,0.0000025044775805019677,89.99999034065368,7.675927522096591e-14]],[15,"Comp",8388608,7,[159],[3,-0.7071068407911907,1.54543154254125e-8,-1.545431187269876e-8,0.707106721581899],[1,9.999999046325684,9.999999046325684,9.999999046325684],[1,-90.00000965934633,7.675917777898835e-14,-0.0000025044787319857803]],[0,"spine0",8388608,159,[-904],[1,3.7252903539730653e-10,0.003909075167030096,-0.00092517607845366],[3,-0.013759418954332359,-0.02019218487723872,0.021461381934783252,0.9994710416742307],[1,-1.5278449136403591,-2.281549172864686,2.490613936032426]],[0,"spine1",8388608,453,[70],[1,2.38418573772492e-9,0.00814820732921362,-0.0024583544582128525],[3,-0.014868528756110217,-0.017917059571555493,0.022798139868672962,0.9994689343083488],[1,-1.6580895794748667,-2.015768713908674,2.642550980417355]],[0,"spine3",8388608,70,[-905],[1,-5.066394859198908e-9,0.007588513661175966,-0.0019066231325268745],[3,0.020843829879679646,-0.010312797462126119,0.02867264475851253,0.9993182978445878],[1,2.4254322263752033,-1.251564674977951,3.2605303745488974]],[0,"spine4",8388608,455,[71],[1,8.940696516468449e-10,0.008185500279068947,-0.0010699452832341194],[3,0.034254656149486834,-0.005485426314216125,0.05256574367670215,0.9980147149325741],[1,3.9755012009245196,-0.8382953020260973,6.001066118615762]],[0,"left arm0",8388608,71,[-906],[1,0.013951382599771023,0.016790246590971947,0.016093119978904724],[3,-0.012916867621556222,0.00014373601880273082,-0.00014094100334092016,0.9999165535215615],[1,-1.4802028695162106,0.01626094512362714,-0.016362054691447837]],[0,"left arm1",8388608,457,[-907],[1,0.0010551911545917392,-0.007742427755147219,0.021822387352585793],[3,-0.10235335396090298,0.001129400536059972,-0.0011684727766184703,0.9947467768526588],[1,-11.749275059688674,0.11503553126164667,-0.1464404324964447]],[0,"left hand",8388608,458,[-908],[1,0.00009416900866199285,0.015645749866962433,0.010464519262313843],[3,0.3301397245118249,0.0005644782763280047,-0.00025354159734460773,0.9439318722133448],[1,38.5545242496592,0.07064951765266128,-0.006069833765081632]],[2,"left finger3",8388608,459,[-909],[1,8.344650304081824e-9,0.009227232076227665,0.004294860176742077]],[0,"left finger4",8388608,460,[-910],[1,0.00005059279646957293,0.002204132964834571,0.003155963961035013],[3,0.000007673238672860348,-0.000009594779093684764,0.7071121455309554,0.7071014166947133],[1,0,0.0012435109893833497,90]],[0,"left finger5",8388608,461,[-911],[1,0.00042112517985515296,-0.0001340837770840153,0.005627484526485205],[3,-0.09230603438907505,0.09230350119162783,-0.7010510090251443,0.7010614398381622],[1,0,15.001533567975944,-90]],[0,"left finger5_end",8388608,462,[-912],[1,-8.940696516468449e-10,0.0056448024697601795,8.940696516468449e-10],[3,0.0000019192621039034926,-0.0000020400616449398495,-5.30853654365919e-8,0.999999999996076],[1,0.0002199312242558464,-0.00023377383272774185,-0.000006083583460109329]],[3,"left finger5_end_end",8388608,463,[[1,"left finger5_end_end_end",8388608,-913,[1,1.1175871339474952e-9,0.005644826218485832,-8.12113309933693e-9]]],[1,-1.639127722441458e-9,0.005644821096211672,2.4586914726398845e-9],[3,-0.0000027220794436078912,0.000002801418531795414,4.222383722630338e-7,0.9999999999922822],[1,-0.0003119274627818528,0.00032101904875022903,0.00004838407951892836]],[0,"right arm0",8388608,71,[-914],[1,-0.013974963687360287,0.016790248453617096,0.01609310694038868],[3,-0.009031942320728738,0.009235106619735695,0.7069480580786489,0.707147495224627],[1,-89.36624562339624,89.38270908907008,88.51971961785377]],[0,"right arm1",8388608,465,[-915],[1,-0.007742421701550484,0.0010551821906119585,0.021822378039360046],[3,0.0011293978723013517,0.10235323600169045,-0.00116846522389361,0.9947467890018288],[1,0.14244476872426218,11.749557580346796,-0.11994645319001446]],[0,"right hand",8388608,466,[-916],[1,0.015645867213606834,0.00009417087130714208,0.010464523918926716],[3,0.000564268567534426,-0.33015090822731785,-0.00025365272179565655,0.9439279607353295],[1,0.05143848065160351,-38.55585629010495,-0.048784345696111106]],[0,"right finger3",8388608,467,[-917],[1,0.009227292612195015,-7.599592066753758e-9,0.004294626880437136],[3,1.6298153937492528e-9,0.000002770327682799972,7.275961777491847e-11,0.9999999999961626],[1,1.867630637958631e-7,0.0003174561681857834,8.338155429893503e-9]],[0,"right finger4",8388608,468,[-918],[1,0.0022041972260922194,0.0000505955504195299,0.003155910177156329],[3,-6.984919309606769e-10,-0.000001633585839042647,1.4551918697794388e-11,0.9999999999986657],[1,-8.004127661182475e-8,-0.00018719514809904426,1.6676578047004918e-9]],[0,"right finger5",8388608,469,[-919],[1,0.00042110466165468097,0.0001340793096460402,0.005627505015581846],[3,-0.0000019479955177752215,0.13052655589795578,0.000007322112103060771,0.9914448134656862],[1,-0.00033083272104267504,15.000042036776538,0.000802737353376578]],[2,"right finger5_end",8388608,470,[-920],[1,-2.2538007016237316e-9,0.0056448327377438545,1.0002404238207419e-8]],[3,"right finger5_end_end",8388608,471,[[1,"right finger5_end_end_end",8388608,-921,[1,-1.974403973648009e-9,0.0056448327377438545,1.7881393032936899e-9]]],[1,-5.33647837031026e-9,0.005644836463034153,1.162290530487553e-8],[3,0.0000015022819752612897,-2.2382664610605817e-8,-2.478482770126758e-7,0.9999999999988407],[1,0.00017214883300648067,-0.0000025648217660946174,-0.000028401324317949088]],[0,"neck0",8388608,71,[-922],[1,-2.6822091214739885e-9,0.015256059356033802,-0.00595217477530241],[3,-0.07123410846437608,-0.014987513727382237,0.028143017193092368,0.9969498717622799],[1,-8.130615612736486,-1.4851653091889252,3.3393464157132535]],[0,"neck1",8388608,473,[-923],[1,8.940696516468449e-10,0.017543168738484383,-0.016172247007489204],[3,-0.10494259662545745,0.0000061833183705481795,-0.00008328176707578431,0.9944782775100824],[1,-12.047718701658109,-0.0002968642299670698,-0.009565049350708435]],[0,"neck2",8388608,474,[-924],[1,4.470348535789981e-9,0.017027776688337326,-0.016856519505381584],[3,-0.046461860349687426,-0.0033375966875403224,-0.003000175268067493,0.9989099833966815],[1,-5.327239229013977,-0.3980264941498488,-0.3256519505946268]],[0,"neck3",8388608,475,[160],[1,2.6822091214739885e-9,0.00766771798953414,-0.011520219966769218],[3,0.1129740622069687,-0.002462202908184354,-0.0016172785493945123,0.9935935704478913],[1,12.973139155541443,-0.25940575636329644,-0.21601506953467783]],[0,"right eye",8388608,161,[-925],[1,-0.007840261794626713,0.008088086731731892,0.0008104066364467144],[3,0.0000015153221586345103,0.000001291498019247911,0.7071119369679933,0.7071016253647057],[1,0,0.0002455702580163,90]],[0,"right eye_end",8388608,477,[-926],[1,7.450580596923828e-9,0.01128531713038683,1.2665987370041876e-8],[3,0.0000016917472294127718,6.170012056818174e-9,-4.1886227108925643e-7,0.9999999999984812],[1,0.00019385995279289637,7.071125014201777e-7,-0.000047998079465172375]],[3,"right eye_end_end",8388608,478,[[1,"right eye_end_end_end",8388608,-927,[1,5.960464899423812e-10,0.011285314336419106,3.44216815051368e-8]]],[1,1.3709068547029801e-8,0.011285322718322277,7.227063392178934e-9],[3,-0.0000025331978576933247,1.1146769729428502e-8,-6.984920419816702e-10,0.9999999999967915],[1,-0.00029028309183423673,0.0000012773255186363435,-8.004452777657305e-8]],[0,"left eye",8388608,161,[-928],[1,0.007816696539521217,0.008088074624538422,0.0008104006410576403],[3,-0.4833322786123404,0.5161297941585465,0.4833344541818849,0.5161276483913245],[1,-86.24125517318419,90.0002474051749,0.000009826573641812891]],[0,"left eye_end",8388608,480,[-929],[1,1.2433156726388006e-8,0.011285322718322277,5.856855000985206e-9],[3,1.0477378964409168e-9,5.915352208055046e-9,0.0000016901828985258776,0.9999999999985716],[1,1.200607733149561e-7,6.778492287861956e-7,0.00019368069338224458]],[3,"left eye_end_end",8388608,481,[[1,"left eye_end_end_end",8388608,-930,[1,7.078051478259795e-9,0.011285316199064255,4.842877210364804e-10]]],[1,1.672655258744271e-8,0.011285318061709404,-2.1606683109354208e-9],[3,-4.2284960954866026e-7,8.658391337221959e-9,-0.0000016913039644324944,0.9999999999984803],[1,-0.00004845499431391979,9.920966098682533e-7,-0.00019380915849106982]],[2,"jaw1",8388608,162,[-931],[1,1.862645149230957e-9,0.045013949275016785,0.015709517523646355]],[2,"jaw1_end",8388608,483,[-932],[1,-7.450580707946131e-10,0.027444317936897278,-1.0989605891964516e-9]],[3,"jaw1_end_end",8388608,484,[[11,"jaw1_end_end_end",8388608,-933,[1,-4.4703482582342247e-10,0.02744431234896183,-2.1569430685985935e-8],[3,-0.0000010203220881511088,0.0000010196818038810613,1.4551915228351714e-9,0.9999999999989597],[1,-0.00011692029896006154,0.00011684692778744354,1.6663344378198693e-7]]],[1,1.7881393032936899e-9,0.027444347739219666,1.7862767265341972e-8],[3,0.000002010551270351287,-0.000002014101482919643,-3.783497126692792e-10,0.9999999999959506],[1,0.00023039220448395494,-0.0002307990288771928,-4.3819716712579345e-8]],[0,"tongue0",8388608,162,[-934],[1,3.5762786065873797e-9,0.004420141689479351,0.005698944441974163],[3,0.14470117871230787,-1.3000424365683173e-8,0.000007537388013103071,0.9894754008172494],[1,16.639950996468475,-0.00012645551306502084,0.0008544151586764777]],[0,"tongue1",8388608,486,[-935],[1,-3.3527611797978807e-9,0.011291980743408203,-0.0012327989097684622],[3,-0.06670764023167682,-1.9519765523348155e-7,-2.3801742565346996e-8,0.9977725646331845],[1,-7.649813158440861,-0.000022500124022819532,-0.0000012292867664396407]],[0,"tongue2",8388608,487,[-936],[1,2.654269304347423e-10,0.01418344583362341,0.0005741515778936446],[3,-0.1374952653740075,5.523982732180117e-8,-4.5837314709614335e-8,0.9905024240251641],[1,-15.805867716311552,0.000005547694689655366,-0.000006073030173183047]],[0,"tongue2_end",8388608,488,[-937],[1,-1.3411045607369942e-9,0.014195075258612633,-5.79049830307099e-9],[3,0.0000014945978818981794,-0.0000014533287639974586,-3.259628789102487e-9,0.9999999999978271],[1,0.00017126830086094277,-0.00016653920828563922,-3.737748539378029e-7]],[3,"tongue2_end_end",8388608,489,[[11,"tongue2_end_end_end",8388608,-938,[1,-1.043081288010228e-9,0.014195038005709648,1.0114162840579866e-8],[3,0.0000021189916878843384,-0.0000021222513168954777,-2.3283064365282257e-10,0.9999999999955029],[1,0.00024281856102116275,-0.00024319208699148472,-2.7195748456137112e-8]]],[1,1.043081288010228e-9,0.014195079915225506,3.408640703028709e-9],[3,-0.0000035538696465228525,0.0000034507834242990154,-8.149073638008481e-10,0.9999999999877311],[1,-0.00040724346304701155,0.0003954306521184932,-9.478681427174957e-8]],[0,"Right Torso",8388608,70,[-939],[1,-0.017464520409703255,0.009573213756084442,0.030453024432063103],[3,-1.4765793285428368e-8,-1.2075035933521495e-7,0.7071068407911856,0.707106721581894],[1,0,-0.000002392899432563725,90]],[2,"Right Torso_end",8388608,491,[-940],[1,2.784654506982065e-9,0.02686261013150215,3.81842246710562e-9]],[6,"Right Torso_end_end",8388608,492,[[1,"Right Torso_end_end_end",8388608,-941,[1,-1.1431984248133631e-8,0.0268626157194376,1.240521640966108e-8]]],[1,1.9604340373291507e-9,0.0268626157194376,-2.1047890097491972e-9]],[0,"Left Torso",8388608,70,[-942],[1,0.017440930008888245,0.009573224000632763,0.030453002080321312],[3,0.500000126659862,-0.4999998882412794,-0.5000000670552164,-0.4999999180436022],[1,-90.0000221981152,89.99999487735771,-0.0000017075463256145647]],[2,"Left Torso_end",8388608,494,[-943],[1,1.7508864358362075e-9,0.026862619444727898,-2.8824433950802586e-9]],[6,"Left Torso_end_end",8388608,495,[[1,"Left Torso_end_end_end",8388608,-944,[1,-1.5832484212552345e-9,0.0268626157194376,-2.9336661988565993e-9]]],[1,-2.2165478341662492e-9,0.02686261013150215,5.820766091346741e-10]],[0,"tail0",8388608,72,[-945],[1,2.38418573772492e-9,-0.01958109252154827,0.004617891740053892],[3,0.05616177867879355,0.028151084982951425,0.004469596682825916,0.9980147262116976],[1,6.4223793484064045,3.1925924357445123,0.692349061695615]],[0,"tail1",8388608,497,[-946],[1,-1.19209286886246e-9,-0.026223542168736458,-0.0007214128854684532],[3,0.0031083005351771912,0.0014343740341220459,-0.01194275649172853,0.9999228228249882],[1,0.35822495434177337,0.16865661998027534,-1.3680525498125806]],[0,"tail2",8388608,498,[-947],[1,2.38418573772492e-9,-0.03143041208386421,0.00010329753422411159],[3,0.003111778308726112,0.0013797485805861092,-0.011948764385323093,0.999922817101038],[1,0.35854984255366873,0.16240262721771287,-1.368760051413259]],[0,"tail3",8388608,499,[-948],[1,-2.38418573772492e-9,-0.02927638776600361,0.00020010948355775326],[3,0.0031156022961344666,0.0013251705064710123,-0.011954564573702881,0.999922809686485],[1,0.35891436722033493,0.15615446645465633,-1.3694437187155908]],[0,"tail4",8388608,500,[-949],[1,-4.76837147544984e-9,-0.027391791343688965,0.00019631088071037084],[3,0.0035525737043447716,0.0014388119918525726,-0.011879632153546678,0.999922088654923],[1,0.40914076039233777,0.16974711963651254,-1.3607416889422317]],[0,"tail5",8388608,501,[-950],[1,-1.1920929132713809e-8,-0.027199802920222282,0.00030194639111869037],[3,-0.0012750914229008672,-0.008457227549468383,0.03171206615500072,0.9994604515958702],[1,-0.11553545910896909,-0.9659600928893592,3.6356494243513264]],[0,"tail6",8388608,502,[-951],[1,9.53674295089968e-9,-0.025129156187176704,0.0011446529533714056],[3,-0.014449086548818109,-0.008872484528700394,0.0315430043349346,0.9993585651775438],[1,-1.6260902547158433,-0.9658152257334518,3.629360742339713]],[0,"tail7",8388608,503,[-952],[1,-5.9604645663569045e-9,-0.024538598954677582,0.0006162720965221524],[3,-0.0035734080338886967,-0.010646847758866457,0.03040127757568557,0.9994746808747028],[1,-0.3728700575034159,-1.2092794445726276,3.488414221479557]],[0,"tail8",8388608,504,[-953],[1,8.940697071579962e-9,-0.013206311501562595,0.0002693343267310411],[3,-0.00421273810623833,-0.009717253247809712,0.030597281375363466,0.9994756796437836],[1,-0.449268537675818,-1.1002936678150768,3.5112401274933487]],[2,"tail8_end",8388608,505,[-954],[1,1.19209286886246e-9,0.013208942487835884,0]],[6,"tail8_end_end",8388608,506,[[1,"tail8_end_end_end",8388608,-955,[1,1.19209286886246e-9,0.013209017924964428,-6.556510889765832e-9]]],[1,5.9604645663569045e-9,0.013209058903157711,1.7881394143159923e-9]],[0,"right leg0",8388608,72,[-956],[1,-0.019055675715208054,0.0033091562800109386,0.016144664958119392],[3,-0.1758038810899314,-0.017633571842268422,0.6676717853270461,0.723184927674793],[1,-78.57820982882251,62.74263400658564,76.38525243107132]],[0,"right leg1",8388608,508,[-957],[1,0.011304101906716824,-0.0015700083458796144,0.04155361279845238],[3,0.06429759265723188,0.04945126062606861,0.0029156149162815385,0.9967005024532882],[1,7.347795831743105,5.636019159221763,0.6973746779464639]],[0,"right foot0",8388608,509,[-958],[1,-0.029886450618505478,0.0015699955401942134,0.032055873423814774],[3,-0.08061608046528909,-0.12210650177915211,0.006311681215104875,0.989217474812243],[1,-9.09280657404995,-13.92707573541503,1.8437953581496462]],[0,"right foot1",8388608,510,[-959],[1,0.003907094709575176,-0.00014767363609280437,0.018782703205943108],[3,0.012718700017344608,-0.019753488005658924,0.011716660245581385,0.9996553177241488],[1,1.4840307666426562,-2.2810810511675452,1.313492797221609]],[0,"right foot2",8388608,511,[-960],[1,0.005417832173407078,0.0001594980276422575,0.010887287557125092],[3,0.135298567316826,0.9880735445127315,-0.06766532475870929,0.028746689224323076],[1,8.434477156871264,175.53389993115258,15.276627672092612]],[0,"right toe0",8388608,512,[-961],[1,-0.004766051657497883,0.0004802089533768594,0.00009099081216845661],[3,0.13046292620968675,0.9907689432631921,-0.004293484967174884,0.036577205152664605],[1,1.070648052511951,175.63081923016807,14.963469722274361]],[0,"right toe1",8388608,513,[-962],[1,0.007804563734680414,-0.0004186089208815247,0.0005770097486674786],[3,-0.0011280903034880329,0.050888072283556754,-0.060021526621159046,0.9968984641645288],[1,0.22274179400602048,5.857801964075723,-6.879726116801438]],[0,"right toe2",8388608,514,[-963],[1,0.006148821674287319,0.0003150858683511615,-5.21540644005114e-10],[3,0.0000018084104049840189,-0.23793532170532997,0.000007286618322553768,0.9712810008584621],[1,0.00039994958420425553,-27.52942671179931,0.0007616980255523596]],[2,"right toe2_end",8388608,515,[-964],[1,-3.8743017682918435e-9,0.006156904622912407,7.450580707946131e-10]],[6,"right toe2_end_end",8388608,516,[[1,"right toe2_end_end_end",8388608,-965,[1,-5.9604643443123e-10,0.006156894378364086,-5.9604643443123e-10]]],[1,-1.639127722441458e-9,0.006156902760267258,2.98023217215615e-10]],[0,"left leg0",8388608,72,[-966],[1,0.01840258203446865,0.0034433561377227306,0.024012885987758636],[3,-0.026719246605534135,-0.019741520688928448,0.0797837020365437,0.9962584579872158],[1,-2.9085726705116217,-2.0361285181125104,9.208366644433342]],[0,"left leg1",8388608,518,[-967],[1,-0.001570010674186051,0.011304106563329697,0.04155363142490387],[3,0.07505410346936253,-0.006625843860994315,0.003316218579660744,0.9971519354841928],[1,8.611106043601785,-0.7856617226002104,0.32194404411108085]],[0,"left foot0",8388608,519,[-968],[1,0.0015700102085247636,-0.029886456206440926,0.03205588459968567],[3,0.09446010059390231,0.00524464439530843,-0.0064196456671164566,0.9954941342119829],[1,10.844803105330856,0.6678338961791349,-0.6755684135879525]],[0,"left foot1",8388608,520,[-969],[1,-0.00014768153778277338,0.003907082136720419,0.018782710656523705],[3,-0.0688300711131612,-0.09169756385766402,-0.0010759593875588616,0.9934046609536936],[1,-7.871803697878175,-10.506304455837528,0.6007786594490084]],[0,"left foot2",8388608,521,[-970],[1,0.0001594924251548946,0.005417830776423216,0.01088727731257677],[3,0.16557359601450405,-0.293024776702799,0.645517941625473,0.6855862101739744],[1,79.53737191070073,-90.47599166257511,52.00663712930689]],[0,"left toe0",8388608,522,[-971],[1,0.0032210317440330982,-0.00048022984992712736,-0.0035140234977006912],[3,-0.00025397410362682974,0.993890734182026,-0.00042949190776777463,0.11036738440757354],[1,0.045703432009614624,167.32702392606475,-0.03435734826850064]],[0,"left toe1",8388608,523,[-972],[1,-0.005144279450178146,0.00001669451557972934,0.0058973608538508415],[3,0.00047318134286587397,-0.25816592798791194,-0.00016007157822210818,0.9661004627380357],[1,0.047648980608224735,-29.922515804701185,-0.03171946383206957]],[0,"left toe2",8388608,524,[-973],[1,1.7881393032936899e-9,0.00008683509804541245,0.006148934364318848],[3,0.00038137636832103974,-0.05181359592711081,-0.0003230278147168311,0.9986566484443983],[1,0.04172587266780249,-5.9400470473863285,-0.03923092244094853]],[2,"left toe2_end",8388608,525,[-974],[1,4.097819306103645e-10,0.006149544846266508,-5.587935669737476e-10]],[6,"left toe2_end_end",8388608,526,[[1,"left toe2_end_end_end",8388608,-975,[1,9.31322467062623e-12,0.006149547640234232,-3.7252903539730653e-10]]],[1,-6.519258050063925e-11,0.006149547174572945,-7.823109382520954e-10]],[23,"comp_LOD_2",8388608,7,[[18,1,-976,[141,142,143,144,145,146],[7],7,147,148]],[3,1.5454308319985022e-8,0.707106721581899,-1.545430476727128e-8,0.7071068407911907],[1,99.99998474121094,99.99998474121094,99.99998474121094],[1,0.0000025044775805019677,89.99999034065368,7.675927522096591e-14]],[15,"Comp",8388608,8,[165],[3,-0.7071068407911907,1.54543154254125e-8,-1.545431187269876e-8,0.707106721581899],[1,9.999999046325684,9.999999046325684,9.999999046325684],[1,-90.00000965934633,7.675917777898835e-14,-0.0000025044787319857803]],[0,"spine0",8388608,165,[-977],[1,3.7252903539730653e-10,0.003909075167030096,-0.00092517607845366],[3,-0.013759418954332359,-0.02019218487723872,0.021461381934783252,0.9994710416742307],[1,-1.5278449136403591,-2.281549172864686,2.490613936032426]],[0,"spine1",8388608,530,[74],[1,2.38418573772492e-9,0.00814820732921362,-0.0024583544582128525],[3,-0.014868528756110217,-0.017917059571555493,0.022798139868672962,0.9994689343083488],[1,-1.6580895794748667,-2.015768713908674,2.642550980417355]],[0,"spine3",8388608,74,[-978],[1,-5.066394859198908e-9,0.007588513661175966,-0.0019066231325268745],[3,0.020843829879679646,-0.010312797462126119,0.02867264475851253,0.9993182978445878],[1,2.4254322263752033,-1.251564674977951,3.2605303745488974]],[0,"spine4",8388608,532,[75],[1,8.940696516468449e-10,0.008185500279068947,-0.0010699452832341194],[3,0.034254656149486834,-0.005485426314216125,0.05256574367670215,0.9980147149325741],[1,3.9755012009245196,-0.8382953020260973,6.001066118615762]],[0,"left arm0",8388608,75,[-979],[1,0.013951382599771023,0.016790246590971947,0.016093119978904724],[3,-0.012916867621556222,0.00014373601880273082,-0.00014094100334092016,0.9999165535215615],[1,-1.4802028695162106,0.01626094512362714,-0.016362054691447837]],[0,"left arm1",8388608,534,[-980],[1,0.0010551911545917392,-0.007742427755147219,0.021822387352585793],[3,-0.10235335396090298,0.001129400536059972,-0.0011684727766184703,0.9947467768526588],[1,-11.749275059688674,0.11503553126164667,-0.1464404324964447]],[0,"left hand",8388608,535,[-981],[1,0.00009416900866199285,0.015645749866962433,0.010464519262313843],[3,0.3301397245118249,0.0005644782763280047,-0.00025354159734460773,0.9439318722133448],[1,38.5545242496592,0.07064951765266128,-0.006069833765081632]],[2,"left finger3",8388608,536,[-982],[1,8.344650304081824e-9,0.009227232076227665,0.004294860176742077]],[0,"left finger4",8388608,537,[-983],[1,0.00005059279646957293,0.002204132964834571,0.003155963961035013],[3,0.000007673238672860348,-0.000009594779093684764,0.7071121455309554,0.7071014166947133],[1,0,0.0012435109893833497,90]],[0,"left finger5",8388608,538,[-984],[1,0.00042112517985515296,-0.0001340837770840153,0.005627484526485205],[3,-0.09230603438907505,0.09230350119162783,-0.7010510090251443,0.7010614398381622],[1,0,15.001533567975944,-90]],[0,"left finger5_end",8388608,539,[-985],[1,-8.940696516468449e-10,0.0056448024697601795,8.940696516468449e-10],[3,0.0000019192621039034926,-0.0000020400616449398495,-5.30853654365919e-8,0.999999999996076],[1,0.0002199312242558464,-0.00023377383272774185,-0.000006083583460109329]],[3,"left finger5_end_end",8388608,540,[[1,"left finger5_end_end_end",8388608,-986,[1,1.1175871339474952e-9,0.005644826218485832,-8.12113309933693e-9]]],[1,-1.639127722441458e-9,0.005644821096211672,2.4586914726398845e-9],[3,-0.0000027220794436078912,0.000002801418531795414,4.222383722630338e-7,0.9999999999922822],[1,-0.0003119274627818528,0.00032101904875022903,0.00004838407951892836]],[0,"right arm0",8388608,75,[-987],[1,-0.013974963687360287,0.016790248453617096,0.01609310694038868],[3,-0.009031942320728738,0.009235106619735695,0.7069480580786489,0.707147495224627],[1,-89.36624562339624,89.38270908907008,88.51971961785377]],[0,"right arm1",8388608,542,[-988],[1,-0.007742421701550484,0.0010551821906119585,0.021822378039360046],[3,0.0011293978723013517,0.10235323600169045,-0.00116846522389361,0.9947467890018288],[1,0.14244476872426218,11.749557580346796,-0.11994645319001446]],[0,"right hand",8388608,543,[-989],[1,0.015645867213606834,0.00009417087130714208,0.010464523918926716],[3,0.000564268567534426,-0.33015090822731785,-0.00025365272179565655,0.9439279607353295],[1,0.05143848065160351,-38.55585629010495,-0.048784345696111106]],[0,"right finger3",8388608,544,[-990],[1,0.009227292612195015,-7.599592066753758e-9,0.004294626880437136],[3,1.6298153937492528e-9,0.000002770327682799972,7.275961777491847e-11,0.9999999999961626],[1,1.867630637958631e-7,0.0003174561681857834,8.338155429893503e-9]],[0,"right finger4",8388608,545,[-991],[1,0.0022041972260922194,0.0000505955504195299,0.003155910177156329],[3,-6.984919309606769e-10,-0.000001633585839042647,1.4551918697794388e-11,0.9999999999986657],[1,-8.004127661182475e-8,-0.00018719514809904426,1.6676578047004918e-9]],[0,"right finger5",8388608,546,[-992],[1,0.00042110466165468097,0.0001340793096460402,0.005627505015581846],[3,-0.0000019479955177752215,0.13052655589795578,0.000007322112103060771,0.9914448134656862],[1,-0.00033083272104267504,15.000042036776538,0.000802737353376578]],[2,"right finger5_end",8388608,547,[-993],[1,-2.2538007016237316e-9,0.0056448327377438545,1.0002404238207419e-8]],[3,"right finger5_end_end",8388608,548,[[1,"right finger5_end_end_end",8388608,-994,[1,-1.974403973648009e-9,0.0056448327377438545,1.7881393032936899e-9]]],[1,-5.33647837031026e-9,0.005644836463034153,1.162290530487553e-8],[3,0.0000015022819752612897,-2.2382664610605817e-8,-2.478482770126758e-7,0.9999999999988407],[1,0.00017214883300648067,-0.0000025648217660946174,-0.000028401324317949088]],[0,"neck0",8388608,75,[-995],[1,-2.6822091214739885e-9,0.015256059356033802,-0.00595217477530241],[3,-0.07123410846437608,-0.014987513727382237,0.028143017193092368,0.9969498717622799],[1,-8.130615612736486,-1.4851653091889252,3.3393464157132535]],[0,"neck1",8388608,550,[-996],[1,8.940696516468449e-10,0.017543168738484383,-0.016172247007489204],[3,-0.10494259662545745,0.0000061833183705481795,-0.00008328176707578431,0.9944782775100824],[1,-12.047718701658109,-0.0002968642299670698,-0.009565049350708435]],[0,"neck2",8388608,551,[-997],[1,4.470348535789981e-9,0.017027776688337326,-0.016856519505381584],[3,-0.046461860349687426,-0.0033375966875403224,-0.003000175268067493,0.9989099833966815],[1,-5.327239229013977,-0.3980264941498488,-0.3256519505946268]],[0,"neck3",8388608,552,[166],[1,2.6822091214739885e-9,0.00766771798953414,-0.011520219966769218],[3,0.1129740622069687,-0.002462202908184354,-0.0016172785493945123,0.9935935704478913],[1,12.973139155541443,-0.25940575636329644,-0.21601506953467783]],[0,"right eye",8388608,167,[-998],[1,-0.007840261794626713,0.008088086731731892,0.0008104066364467144],[3,0.0000015153221586345103,0.000001291498019247911,0.7071119369679933,0.7071016253647057],[1,0,0.0002455702580163,90]],[0,"right eye_end",8388608,554,[-999],[1,7.450580596923828e-9,0.01128531713038683,1.2665987370041876e-8],[3,0.0000016917472294127718,6.170012056818174e-9,-4.1886227108925643e-7,0.9999999999984812],[1,0.00019385995279289637,7.071125014201777e-7,-0.000047998079465172375]],[3,"right eye_end_end",8388608,555,[[1,"right eye_end_end_end",8388608,-1000,[1,5.960464899423812e-10,0.011285314336419106,3.44216815051368e-8]]],[1,1.3709068547029801e-8,0.011285322718322277,7.227063392178934e-9],[3,-0.0000025331978576933247,1.1146769729428502e-8,-6.984920419816702e-10,0.9999999999967915],[1,-0.00029028309183423673,0.0000012773255186363435,-8.004452777657305e-8]],[0,"left eye",8388608,167,[-1001],[1,0.007816696539521217,0.008088074624538422,0.0008104006410576403],[3,-0.4833322786123404,0.5161297941585465,0.4833344541818849,0.5161276483913245],[1,-86.24125517318419,90.0002474051749,0.000009826573641812891]],[0,"left eye_end",8388608,557,[-1002],[1,1.2433156726388006e-8,0.011285322718322277,5.856855000985206e-9],[3,1.0477378964409168e-9,5.915352208055046e-9,0.0000016901828985258776,0.9999999999985716],[1,1.200607733149561e-7,6.778492287861956e-7,0.00019368069338224458]],[3,"left eye_end_end",8388608,558,[[1,"left eye_end_end_end",8388608,-1003,[1,7.078051478259795e-9,0.011285316199064255,4.842877210364804e-10]]],[1,1.672655258744271e-8,0.011285318061709404,-2.1606683109354208e-9],[3,-4.2284960954866026e-7,8.658391337221959e-9,-0.0000016913039644324944,0.9999999999984803],[1,-0.00004845499431391979,9.920966098682533e-7,-0.00019380915849106982]],[2,"jaw1",8388608,168,[-1004],[1,1.862645149230957e-9,0.045013949275016785,0.015709517523646355]],[2,"jaw1_end",8388608,560,[-1005],[1,-7.450580707946131e-10,0.027444317936897278,-1.0989605891964516e-9]],[3,"jaw1_end_end",8388608,561,[[11,"jaw1_end_end_end",8388608,-1006,[1,-4.4703482582342247e-10,0.02744431234896183,-2.1569430685985935e-8],[3,-0.0000010203220881511088,0.0000010196818038810613,1.4551915228351714e-9,0.9999999999989597],[1,-0.00011692029896006154,0.00011684692778744354,1.6663344378198693e-7]]],[1,1.7881393032936899e-9,0.027444347739219666,1.7862767265341972e-8],[3,0.000002010551270351287,-0.000002014101482919643,-3.783497126692792e-10,0.9999999999959506],[1,0.00023039220448395494,-0.0002307990288771928,-4.3819716712579345e-8]],[0,"tongue0",8388608,168,[-1007],[1,3.5762786065873797e-9,0.004420141689479351,0.005698944441974163],[3,0.14470117871230787,-1.3000424365683173e-8,0.000007537388013103071,0.9894754008172494],[1,16.639950996468475,-0.00012645551306502084,0.0008544151586764777]],[0,"tongue1",8388608,563,[-1008],[1,-3.3527611797978807e-9,0.011291980743408203,-0.0012327989097684622],[3,-0.06670764023167682,-1.9519765523348155e-7,-2.3801742565346996e-8,0.9977725646331845],[1,-7.649813158440861,-0.000022500124022819532,-0.0000012292867664396407]],[0,"tongue2",8388608,564,[-1009],[1,2.654269304347423e-10,0.01418344583362341,0.0005741515778936446],[3,-0.1374952653740075,5.523982732180117e-8,-4.5837314709614335e-8,0.9905024240251641],[1,-15.805867716311552,0.000005547694689655366,-0.000006073030173183047]],[0,"tongue2_end",8388608,565,[-1010],[1,-1.3411045607369942e-9,0.014195075258612633,-5.79049830307099e-9],[3,0.0000014945978818981794,-0.0000014533287639974586,-3.259628789102487e-9,0.9999999999978271],[1,0.00017126830086094277,-0.00016653920828563922,-3.737748539378029e-7]],[3,"tongue2_end_end",8388608,566,[[11,"tongue2_end_end_end",8388608,-1011,[1,-1.043081288010228e-9,0.014195038005709648,1.0114162840579866e-8],[3,0.0000021189916878843384,-0.0000021222513168954777,-2.3283064365282257e-10,0.9999999999955029],[1,0.00024281856102116275,-0.00024319208699148472,-2.7195748456137112e-8]]],[1,1.043081288010228e-9,0.014195079915225506,3.408640703028709e-9],[3,-0.0000035538696465228525,0.0000034507834242990154,-8.149073638008481e-10,0.9999999999877311],[1,-0.00040724346304701155,0.0003954306521184932,-9.478681427174957e-8]],[0,"Right Torso",8388608,74,[-1012],[1,-0.017464520409703255,0.009573213756084442,0.030453024432063103],[3,-1.4765793285428368e-8,-1.2075035933521495e-7,0.7071068407911856,0.707106721581894],[1,0,-0.000002392899432563725,90]],[2,"Right Torso_end",8388608,568,[-1013],[1,2.784654506982065e-9,0.02686261013150215,3.81842246710562e-9]],[6,"Right Torso_end_end",8388608,569,[[1,"Right Torso_end_end_end",8388608,-1014,[1,-1.1431984248133631e-8,0.0268626157194376,1.240521640966108e-8]]],[1,1.9604340373291507e-9,0.0268626157194376,-2.1047890097491972e-9]],[0,"Left Torso",8388608,74,[-1015],[1,0.017440930008888245,0.009573224000632763,0.030453002080321312],[3,0.500000126659862,-0.4999998882412794,-0.5000000670552164,-0.4999999180436022],[1,-90.0000221981152,89.99999487735771,-0.0000017075463256145647]],[2,"Left Torso_end",8388608,571,[-1016],[1,1.7508864358362075e-9,0.026862619444727898,-2.8824433950802586e-9]],[6,"Left Torso_end_end",8388608,572,[[1,"Left Torso_end_end_end",8388608,-1017,[1,-1.5832484212552345e-9,0.0268626157194376,-2.9336661988565993e-9]]],[1,-2.2165478341662492e-9,0.02686261013150215,5.820766091346741e-10]],[0,"tail0",8388608,76,[-1018],[1,2.38418573772492e-9,-0.01958109252154827,0.004617891740053892],[3,0.05616177867879355,0.028151084982951425,0.004469596682825916,0.9980147262116976],[1,6.4223793484064045,3.1925924357445123,0.692349061695615]],[0,"tail1",8388608,574,[-1019],[1,-1.19209286886246e-9,-0.026223542168736458,-0.0007214128854684532],[3,0.0031083005351771912,0.0014343740341220459,-0.01194275649172853,0.9999228228249882],[1,0.35822495434177337,0.16865661998027534,-1.3680525498125806]],[0,"tail2",8388608,575,[-1020],[1,2.38418573772492e-9,-0.03143041208386421,0.00010329753422411159],[3,0.003111778308726112,0.0013797485805861092,-0.011948764385323093,0.999922817101038],[1,0.35854984255366873,0.16240262721771287,-1.368760051413259]],[0,"tail3",8388608,576,[-1021],[1,-2.38418573772492e-9,-0.02927638776600361,0.00020010948355775326],[3,0.0031156022961344666,0.0013251705064710123,-0.011954564573702881,0.999922809686485],[1,0.35891436722033493,0.15615446645465633,-1.3694437187155908]],[0,"tail4",8388608,577,[-1022],[1,-4.76837147544984e-9,-0.027391791343688965,0.00019631088071037084],[3,0.0035525737043447716,0.0014388119918525726,-0.011879632153546678,0.999922088654923],[1,0.40914076039233777,0.16974711963651254,-1.3607416889422317]],[0,"tail5",8388608,578,[-1023],[1,-1.1920929132713809e-8,-0.027199802920222282,0.00030194639111869037],[3,-0.0012750914229008672,-0.008457227549468383,0.03171206615500072,0.9994604515958702],[1,-0.11553545910896909,-0.9659600928893592,3.6356494243513264]],[0,"tail6",8388608,579,[-1024],[1,9.53674295089968e-9,-0.025129156187176704,0.0011446529533714056],[3,-0.014449086548818109,-0.008872484528700394,0.0315430043349346,0.9993585651775438],[1,-1.6260902547158433,-0.9658152257334518,3.629360742339713]],[0,"tail7",8388608,580,[-1025],[1,-5.9604645663569045e-9,-0.024538598954677582,0.0006162720965221524],[3,-0.0035734080338886967,-0.010646847758866457,0.03040127757568557,0.9994746808747028],[1,-0.3728700575034159,-1.2092794445726276,3.488414221479557]],[0,"tail8",8388608,581,[-1026],[1,8.940697071579962e-9,-0.013206311501562595,0.0002693343267310411],[3,-0.00421273810623833,-0.009717253247809712,0.030597281375363466,0.9994756796437836],[1,-0.449268537675818,-1.1002936678150768,3.5112401274933487]],[2,"tail8_end",8388608,582,[-1027],[1,1.19209286886246e-9,0.013208942487835884,0]],[6,"tail8_end_end",8388608,583,[[1,"tail8_end_end_end",8388608,-1028,[1,1.19209286886246e-9,0.013209017924964428,-6.556510889765832e-9]]],[1,5.9604645663569045e-9,0.013209058903157711,1.7881394143159923e-9]],[0,"right leg0",8388608,76,[-1029],[1,-0.019055675715208054,0.0033091562800109386,0.016144664958119392],[3,-0.1758038810899314,-0.017633571842268422,0.6676717853270461,0.723184927674793],[1,-78.57820982882251,62.74263400658564,76.38525243107132]],[0,"right leg1",8388608,585,[-1030],[1,0.011304101906716824,-0.0015700083458796144,0.04155361279845238],[3,0.06429759265723188,0.04945126062606861,0.0029156149162815385,0.9967005024532882],[1,7.347795831743105,5.636019159221763,0.6973746779464639]],[0,"right foot0",8388608,586,[-1031],[1,-0.029886450618505478,0.0015699955401942134,0.032055873423814774],[3,-0.08061608046528909,-0.12210650177915211,0.006311681215104875,0.989217474812243],[1,-9.09280657404995,-13.92707573541503,1.8437953581496462]],[0,"right foot1",8388608,587,[-1032],[1,0.003907094709575176,-0.00014767363609280437,0.018782703205943108],[3,0.012718700017344608,-0.019753488005658924,0.011716660245581385,0.9996553177241488],[1,1.4840307666426562,-2.2810810511675452,1.313492797221609]],[0,"right foot2",8388608,588,[-1033],[1,0.005417832173407078,0.0001594980276422575,0.010887287557125092],[3,0.135298567316826,0.9880735445127315,-0.06766532475870929,0.028746689224323076],[1,8.434477156871264,175.53389993115258,15.276627672092612]],[0,"right toe0",8388608,589,[-1034],[1,-0.004766051657497883,0.0004802089533768594,0.00009099081216845661],[3,0.13046292620968675,0.9907689432631921,-0.004293484967174884,0.036577205152664605],[1,1.070648052511951,175.63081923016807,14.963469722274361]],[0,"right toe1",8388608,590,[-1035],[1,0.007804563734680414,-0.0004186089208815247,0.0005770097486674786],[3,-0.0011280903034880329,0.050888072283556754,-0.060021526621159046,0.9968984641645288],[1,0.22274179400602048,5.857801964075723,-6.879726116801438]],[0,"right toe2",8388608,591,[-1036],[1,0.006148821674287319,0.0003150858683511615,-5.21540644005114e-10],[3,0.0000018084104049840189,-0.23793532170532997,0.000007286618322553768,0.9712810008584621],[1,0.00039994958420425553,-27.52942671179931,0.0007616980255523596]],[2,"right toe2_end",8388608,592,[-1037],[1,-3.8743017682918435e-9,0.006156904622912407,7.450580707946131e-10]],[6,"right toe2_end_end",8388608,593,[[1,"right toe2_end_end_end",8388608,-1038,[1,-5.9604643443123e-10,0.006156894378364086,-5.9604643443123e-10]]],[1,-1.639127722441458e-9,0.006156902760267258,2.98023217215615e-10]],[0,"left leg0",8388608,76,[-1039],[1,0.01840258203446865,0.0034433561377227306,0.024012885987758636],[3,-0.026719246605534135,-0.019741520688928448,0.0797837020365437,0.9962584579872158],[1,-2.9085726705116217,-2.0361285181125104,9.208366644433342]],[0,"left leg1",8388608,595,[-1040],[1,-0.001570010674186051,0.011304106563329697,0.04155363142490387],[3,0.07505410346936253,-0.006625843860994315,0.003316218579660744,0.9971519354841928],[1,8.611106043601785,-0.7856617226002104,0.32194404411108085]],[0,"left foot0",8388608,596,[-1041],[1,0.0015700102085247636,-0.029886456206440926,0.03205588459968567],[3,0.09446010059390231,0.00524464439530843,-0.0064196456671164566,0.9954941342119829],[1,10.844803105330856,0.6678338961791349,-0.6755684135879525]],[0,"left foot1",8388608,597,[-1042],[1,-0.00014768153778277338,0.003907082136720419,0.018782710656523705],[3,-0.0688300711131612,-0.09169756385766402,-0.0010759593875588616,0.9934046609536936],[1,-7.871803697878175,-10.506304455837528,0.6007786594490084]],[0,"left foot2",8388608,598,[-1043],[1,0.0001594924251548946,0.005417830776423216,0.01088727731257677],[3,0.16557359601450405,-0.293024776702799,0.645517941625473,0.6855862101739744],[1,79.53737191070073,-90.47599166257511,52.00663712930689]],[0,"left toe0",8388608,599,[-1044],[1,0.0032210317440330982,-0.00048022984992712736,-0.0035140234977006912],[3,-0.00025397410362682974,0.993890734182026,-0.00042949190776777463,0.11036738440757354],[1,0.045703432009614624,167.32702392606475,-0.03435734826850064]],[0,"left toe1",8388608,600,[-1045],[1,-0.005144279450178146,0.00001669451557972934,0.0058973608538508415],[3,0.00047318134286587397,-0.25816592798791194,-0.00016007157822210818,0.9661004627380357],[1,0.047648980608224735,-29.922515804701185,-0.03171946383206957]],[0,"left toe2",8388608,601,[-1046],[1,1.7881393032936899e-9,0.00008683509804541245,0.006148934364318848],[3,0.00038137636832103974,-0.05181359592711081,-0.0003230278147168311,0.9986566484443983],[1,0.04172587266780249,-5.9400470473863285,-0.03923092244094853]],[2,"left toe2_end",8388608,602,[-1047],[1,4.097819306103645e-10,0.006149544846266508,-5.587935669737476e-10]],[6,"left toe2_end_end",8388608,603,[[1,"left toe2_end_end_end",8388608,-1048,[1,9.31322467062623e-12,0.006149547640234232,-3.7252903539730653e-10]]],[1,-6.519258050063925e-11,0.006149547174572945,-7.823109382520954e-10]],[23,"comp_LOD_2",8388608,8,[[18,1,-1049,[158,159,160,161,162,163],[7],8,164,165]],[3,1.5454308319985022e-8,0.707106721581899,-1.545430476727128e-8,0.7071068407911907],[1,99.99998474121094,99.99998474121094,99.99998474121094],[1,0.0000025044775805019677,89.99999034065368,7.675927522096591e-14]],[15,"Comp",8388608,9,[171],[3,-0.7071068407911907,1.54543154254125e-8,-1.545431187269876e-8,0.707106721581899],[1,9.999999046325684,9.999999046325684,9.999999046325684],[1,-90.00000965934633,7.675917777898835e-14,-0.0000025044787319857803]],[0,"spine0",8388608,171,[-1050],[1,3.7252903539730653e-10,0.003909075167030096,-0.00092517607845366],[3,-0.013759418954332359,-0.02019218487723872,0.021461381934783252,0.9994710416742307],[1,-1.5278449136403591,-2.281549172864686,2.490613936032426]],[0,"spine1",8388608,607,[78],[1,2.38418573772492e-9,0.00814820732921362,-0.0024583544582128525],[3,-0.014868528756110217,-0.017917059571555493,0.022798139868672962,0.9994689343083488],[1,-1.6580895794748667,-2.015768713908674,2.642550980417355]],[0,"spine3",8388608,78,[-1051],[1,-5.066394859198908e-9,0.007588513661175966,-0.0019066231325268745],[3,0.020843829879679646,-0.010312797462126119,0.02867264475851253,0.9993182978445878],[1,2.4254322263752033,-1.251564674977951,3.2605303745488974]],[0,"spine4",8388608,609,[79],[1,8.940696516468449e-10,0.008185500279068947,-0.0010699452832341194],[3,0.034254656149486834,-0.005485426314216125,0.05256574367670215,0.9980147149325741],[1,3.9755012009245196,-0.8382953020260973,6.001066118615762]],[0,"left arm0",8388608,79,[-1052],[1,0.013951382599771023,0.016790246590971947,0.016093119978904724],[3,-0.012916867621556222,0.00014373601880273082,-0.00014094100334092016,0.9999165535215615],[1,-1.4802028695162106,0.01626094512362714,-0.016362054691447837]],[0,"left arm1",8388608,611,[-1053],[1,0.0010551911545917392,-0.007742427755147219,0.021822387352585793],[3,-0.10235335396090298,0.001129400536059972,-0.0011684727766184703,0.9947467768526588],[1,-11.749275059688674,0.11503553126164667,-0.1464404324964447]],[0,"left hand",8388608,612,[-1054],[1,0.00009416900866199285,0.015645749866962433,0.010464519262313843],[3,0.3301397245118249,0.0005644782763280047,-0.00025354159734460773,0.9439318722133448],[1,38.5545242496592,0.07064951765266128,-0.006069833765081632]],[2,"left finger3",8388608,613,[-1055],[1,8.344650304081824e-9,0.009227232076227665,0.004294860176742077]],[0,"left finger4",8388608,614,[-1056],[1,0.00005059279646957293,0.002204132964834571,0.003155963961035013],[3,0.000007673238672860348,-0.000009594779093684764,0.7071121455309554,0.7071014166947133],[1,0,0.0012435109893833497,90]],[0,"left finger5",8388608,615,[-1057],[1,0.00042112517985515296,-0.0001340837770840153,0.005627484526485205],[3,-0.09230603438907505,0.09230350119162783,-0.7010510090251443,0.7010614398381622],[1,0,15.001533567975944,-90]],[0,"left finger5_end",8388608,616,[-1058],[1,-8.940696516468449e-10,0.0056448024697601795,8.940696516468449e-10],[3,0.0000019192621039034926,-0.0000020400616449398495,-5.30853654365919e-8,0.999999999996076],[1,0.0002199312242558464,-0.00023377383272774185,-0.000006083583460109329]],[3,"left finger5_end_end",8388608,617,[[1,"left finger5_end_end_end",8388608,-1059,[1,1.1175871339474952e-9,0.005644826218485832,-8.12113309933693e-9]]],[1,-1.639127722441458e-9,0.005644821096211672,2.4586914726398845e-9],[3,-0.0000027220794436078912,0.000002801418531795414,4.222383722630338e-7,0.9999999999922822],[1,-0.0003119274627818528,0.00032101904875022903,0.00004838407951892836]],[0,"right arm0",8388608,79,[-1060],[1,-0.013974963687360287,0.016790248453617096,0.01609310694038868],[3,-0.009031942320728738,0.009235106619735695,0.7069480580786489,0.707147495224627],[1,-89.36624562339624,89.38270908907008,88.51971961785377]],[0,"right arm1",8388608,619,[-1061],[1,-0.007742421701550484,0.0010551821906119585,0.021822378039360046],[3,0.0011293978723013517,0.10235323600169045,-0.00116846522389361,0.9947467890018288],[1,0.14244476872426218,11.749557580346796,-0.11994645319001446]],[0,"right hand",8388608,620,[-1062],[1,0.015645867213606834,0.00009417087130714208,0.010464523918926716],[3,0.000564268567534426,-0.33015090822731785,-0.00025365272179565655,0.9439279607353295],[1,0.05143848065160351,-38.55585629010495,-0.048784345696111106]],[0,"right finger3",8388608,621,[-1063],[1,0.009227292612195015,-7.599592066753758e-9,0.004294626880437136],[3,1.6298153937492528e-9,0.000002770327682799972,7.275961777491847e-11,0.9999999999961626],[1,1.867630637958631e-7,0.0003174561681857834,8.338155429893503e-9]],[0,"right finger4",8388608,622,[-1064],[1,0.0022041972260922194,0.0000505955504195299,0.003155910177156329],[3,-6.984919309606769e-10,-0.000001633585839042647,1.4551918697794388e-11,0.9999999999986657],[1,-8.004127661182475e-8,-0.00018719514809904426,1.6676578047004918e-9]],[0,"right finger5",8388608,623,[-1065],[1,0.00042110466165468097,0.0001340793096460402,0.005627505015581846],[3,-0.0000019479955177752215,0.13052655589795578,0.000007322112103060771,0.9914448134656862],[1,-0.00033083272104267504,15.000042036776538,0.000802737353376578]],[2,"right finger5_end",8388608,624,[-1066],[1,-2.2538007016237316e-9,0.0056448327377438545,1.0002404238207419e-8]],[3,"right finger5_end_end",8388608,625,[[1,"right finger5_end_end_end",8388608,-1067,[1,-1.974403973648009e-9,0.0056448327377438545,1.7881393032936899e-9]]],[1,-5.33647837031026e-9,0.005644836463034153,1.162290530487553e-8],[3,0.0000015022819752612897,-2.2382664610605817e-8,-2.478482770126758e-7,0.9999999999988407],[1,0.00017214883300648067,-0.0000025648217660946174,-0.000028401324317949088]],[0,"neck0",8388608,79,[-1068],[1,-2.6822091214739885e-9,0.015256059356033802,-0.00595217477530241],[3,-0.07123410846437608,-0.014987513727382237,0.028143017193092368,0.9969498717622799],[1,-8.130615612736486,-1.4851653091889252,3.3393464157132535]],[0,"neck1",8388608,627,[-1069],[1,8.940696516468449e-10,0.017543168738484383,-0.016172247007489204],[3,-0.10494259662545745,0.0000061833183705481795,-0.00008328176707578431,0.9944782775100824],[1,-12.047718701658109,-0.0002968642299670698,-0.009565049350708435]],[0,"neck2",8388608,628,[-1070],[1,4.470348535789981e-9,0.017027776688337326,-0.016856519505381584],[3,-0.046461860349687426,-0.0033375966875403224,-0.003000175268067493,0.9989099833966815],[1,-5.327239229013977,-0.3980264941498488,-0.3256519505946268]],[0,"neck3",8388608,629,[172],[1,2.6822091214739885e-9,0.00766771798953414,-0.011520219966769218],[3,0.1129740622069687,-0.002462202908184354,-0.0016172785493945123,0.9935935704478913],[1,12.973139155541443,-0.25940575636329644,-0.21601506953467783]],[0,"right eye",8388608,173,[-1071],[1,-0.007840261794626713,0.008088086731731892,0.0008104066364467144],[3,0.0000015153221586345103,0.000001291498019247911,0.7071119369679933,0.7071016253647057],[1,0,0.0002455702580163,90]],[0,"right eye_end",8388608,631,[-1072],[1,7.450580596923828e-9,0.01128531713038683,1.2665987370041876e-8],[3,0.0000016917472294127718,6.170012056818174e-9,-4.1886227108925643e-7,0.9999999999984812],[1,0.00019385995279289637,7.071125014201777e-7,-0.000047998079465172375]],[3,"right eye_end_end",8388608,632,[[1,"right eye_end_end_end",8388608,-1073,[1,5.960464899423812e-10,0.011285314336419106,3.44216815051368e-8]]],[1,1.3709068547029801e-8,0.011285322718322277,7.227063392178934e-9],[3,-0.0000025331978576933247,1.1146769729428502e-8,-6.984920419816702e-10,0.9999999999967915],[1,-0.00029028309183423673,0.0000012773255186363435,-8.004452777657305e-8]],[0,"left eye",8388608,173,[-1074],[1,0.007816696539521217,0.008088074624538422,0.0008104006410576403],[3,-0.4833322786123404,0.5161297941585465,0.4833344541818849,0.5161276483913245],[1,-86.24125517318419,90.0002474051749,0.000009826573641812891]],[0,"left eye_end",8388608,634,[-1075],[1,1.2433156726388006e-8,0.011285322718322277,5.856855000985206e-9],[3,1.0477378964409168e-9,5.915352208055046e-9,0.0000016901828985258776,0.9999999999985716],[1,1.200607733149561e-7,6.778492287861956e-7,0.00019368069338224458]],[3,"left eye_end_end",8388608,635,[[1,"left eye_end_end_end",8388608,-1076,[1,7.078051478259795e-9,0.011285316199064255,4.842877210364804e-10]]],[1,1.672655258744271e-8,0.011285318061709404,-2.1606683109354208e-9],[3,-4.2284960954866026e-7,8.658391337221959e-9,-0.0000016913039644324944,0.9999999999984803],[1,-0.00004845499431391979,9.920966098682533e-7,-0.00019380915849106982]],[2,"jaw1",8388608,174,[-1077],[1,1.862645149230957e-9,0.045013949275016785,0.015709517523646355]],[2,"jaw1_end",8388608,637,[-1078],[1,-7.450580707946131e-10,0.027444317936897278,-1.0989605891964516e-9]],[3,"jaw1_end_end",8388608,638,[[11,"jaw1_end_end_end",8388608,-1079,[1,-4.4703482582342247e-10,0.02744431234896183,-2.1569430685985935e-8],[3,-0.0000010203220881511088,0.0000010196818038810613,1.4551915228351714e-9,0.9999999999989597],[1,-0.00011692029896006154,0.00011684692778744354,1.6663344378198693e-7]]],[1,1.7881393032936899e-9,0.027444347739219666,1.7862767265341972e-8],[3,0.000002010551270351287,-0.000002014101482919643,-3.783497126692792e-10,0.9999999999959506],[1,0.00023039220448395494,-0.0002307990288771928,-4.3819716712579345e-8]],[0,"tongue0",8388608,174,[-1080],[1,3.5762786065873797e-9,0.004420141689479351,0.005698944441974163],[3,0.14470117871230787,-1.3000424365683173e-8,0.000007537388013103071,0.9894754008172494],[1,16.639950996468475,-0.00012645551306502084,0.0008544151586764777]],[0,"tongue1",8388608,640,[-1081],[1,-3.3527611797978807e-9,0.011291980743408203,-0.0012327989097684622],[3,-0.06670764023167682,-1.9519765523348155e-7,-2.3801742565346996e-8,0.9977725646331845],[1,-7.649813158440861,-0.000022500124022819532,-0.0000012292867664396407]],[0,"tongue2",8388608,641,[-1082],[1,2.654269304347423e-10,0.01418344583362341,0.0005741515778936446],[3,-0.1374952653740075,5.523982732180117e-8,-4.5837314709614335e-8,0.9905024240251641],[1,-15.805867716311552,0.000005547694689655366,-0.000006073030173183047]],[0,"tongue2_end",8388608,642,[-1083],[1,-1.3411045607369942e-9,0.014195075258612633,-5.79049830307099e-9],[3,0.0000014945978818981794,-0.0000014533287639974586,-3.259628789102487e-9,0.9999999999978271],[1,0.00017126830086094277,-0.00016653920828563922,-3.737748539378029e-7]],[3,"tongue2_end_end",8388608,643,[[11,"tongue2_end_end_end",8388608,-1084,[1,-1.043081288010228e-9,0.014195038005709648,1.0114162840579866e-8],[3,0.0000021189916878843384,-0.0000021222513168954777,-2.3283064365282257e-10,0.9999999999955029],[1,0.00024281856102116275,-0.00024319208699148472,-2.7195748456137112e-8]]],[1,1.043081288010228e-9,0.014195079915225506,3.408640703028709e-9],[3,-0.0000035538696465228525,0.0000034507834242990154,-8.149073638008481e-10,0.9999999999877311],[1,-0.00040724346304701155,0.0003954306521184932,-9.478681427174957e-8]],[0,"Right Torso",8388608,78,[-1085],[1,-0.017464520409703255,0.009573213756084442,0.030453024432063103],[3,-1.4765793285428368e-8,-1.2075035933521495e-7,0.7071068407911856,0.707106721581894],[1,0,-0.000002392899432563725,90]],[2,"Right Torso_end",8388608,645,[-1086],[1,2.784654506982065e-9,0.02686261013150215,3.81842246710562e-9]],[6,"Right Torso_end_end",8388608,646,[[1,"Right Torso_end_end_end",8388608,-1087,[1,-1.1431984248133631e-8,0.0268626157194376,1.240521640966108e-8]]],[1,1.9604340373291507e-9,0.0268626157194376,-2.1047890097491972e-9]],[0,"Left Torso",8388608,78,[-1088],[1,0.017440930008888245,0.009573224000632763,0.030453002080321312],[3,0.500000126659862,-0.4999998882412794,-0.5000000670552164,-0.4999999180436022],[1,-90.0000221981152,89.99999487735771,-0.0000017075463256145647]],[2,"Left Torso_end",8388608,648,[-1089],[1,1.7508864358362075e-9,0.026862619444727898,-2.8824433950802586e-9]],[6,"Left Torso_end_end",8388608,649,[[1,"Left Torso_end_end_end",8388608,-1090,[1,-1.5832484212552345e-9,0.0268626157194376,-2.9336661988565993e-9]]],[1,-2.2165478341662492e-9,0.02686261013150215,5.820766091346741e-10]],[0,"tail0",8388608,80,[-1091],[1,2.38418573772492e-9,-0.01958109252154827,0.004617891740053892],[3,0.05616177867879355,0.028151084982951425,0.004469596682825916,0.9980147262116976],[1,6.4223793484064045,3.1925924357445123,0.692349061695615]],[0,"tail1",8388608,651,[-1092],[1,-1.19209286886246e-9,-0.026223542168736458,-0.0007214128854684532],[3,0.0031083005351771912,0.0014343740341220459,-0.01194275649172853,0.9999228228249882],[1,0.35822495434177337,0.16865661998027534,-1.3680525498125806]],[0,"tail2",8388608,652,[-1093],[1,2.38418573772492e-9,-0.03143041208386421,0.00010329753422411159],[3,0.003111778308726112,0.0013797485805861092,-0.011948764385323093,0.999922817101038],[1,0.35854984255366873,0.16240262721771287,-1.368760051413259]],[0,"tail3",8388608,653,[-1094],[1,-2.38418573772492e-9,-0.02927638776600361,0.00020010948355775326],[3,0.0031156022961344666,0.0013251705064710123,-0.011954564573702881,0.999922809686485],[1,0.35891436722033493,0.15615446645465633,-1.3694437187155908]],[0,"tail4",8388608,654,[-1095],[1,-4.76837147544984e-9,-0.027391791343688965,0.00019631088071037084],[3,0.0035525737043447716,0.0014388119918525726,-0.011879632153546678,0.999922088654923],[1,0.40914076039233777,0.16974711963651254,-1.3607416889422317]],[0,"tail5",8388608,655,[-1096],[1,-1.1920929132713809e-8,-0.027199802920222282,0.00030194639111869037],[3,-0.0012750914229008672,-0.008457227549468383,0.03171206615500072,0.9994604515958702],[1,-0.11553545910896909,-0.9659600928893592,3.6356494243513264]],[0,"tail6",8388608,656,[-1097],[1,9.53674295089968e-9,-0.025129156187176704,0.0011446529533714056],[3,-0.014449086548818109,-0.008872484528700394,0.0315430043349346,0.9993585651775438],[1,-1.6260902547158433,-0.9658152257334518,3.629360742339713]],[0,"tail7",8388608,657,[-1098],[1,-5.9604645663569045e-9,-0.024538598954677582,0.0006162720965221524],[3,-0.0035734080338886967,-0.010646847758866457,0.03040127757568557,0.9994746808747028],[1,-0.3728700575034159,-1.2092794445726276,3.488414221479557]],[0,"tail8",8388608,658,[-1099],[1,8.940697071579962e-9,-0.013206311501562595,0.0002693343267310411],[3,-0.00421273810623833,-0.009717253247809712,0.030597281375363466,0.9994756796437836],[1,-0.449268537675818,-1.1002936678150768,3.5112401274933487]],[2,"tail8_end",8388608,659,[-1100],[1,1.19209286886246e-9,0.013208942487835884,0]],[6,"tail8_end_end",8388608,660,[[1,"tail8_end_end_end",8388608,-1101,[1,1.19209286886246e-9,0.013209017924964428,-6.556510889765832e-9]]],[1,5.9604645663569045e-9,0.013209058903157711,1.7881394143159923e-9]],[0,"right leg0",8388608,80,[-1102],[1,-0.019055675715208054,0.0033091562800109386,0.016144664958119392],[3,-0.1758038810899314,-0.017633571842268422,0.6676717853270461,0.723184927674793],[1,-78.57820982882251,62.74263400658564,76.38525243107132]],[0,"right leg1",8388608,662,[-1103],[1,0.011304101906716824,-0.0015700083458796144,0.04155361279845238],[3,0.06429759265723188,0.04945126062606861,0.0029156149162815385,0.9967005024532882],[1,7.347795831743105,5.636019159221763,0.6973746779464639]],[0,"right foot0",8388608,663,[-1104],[1,-0.029886450618505478,0.0015699955401942134,0.032055873423814774],[3,-0.08061608046528909,-0.12210650177915211,0.006311681215104875,0.989217474812243],[1,-9.09280657404995,-13.92707573541503,1.8437953581496462]],[0,"right foot1",8388608,664,[-1105],[1,0.003907094709575176,-0.00014767363609280437,0.018782703205943108],[3,0.012718700017344608,-0.019753488005658924,0.011716660245581385,0.9996553177241488],[1,1.4840307666426562,-2.2810810511675452,1.313492797221609]],[0,"right foot2",8388608,665,[-1106],[1,0.005417832173407078,0.0001594980276422575,0.010887287557125092],[3,0.135298567316826,0.9880735445127315,-0.06766532475870929,0.028746689224323076],[1,8.434477156871264,175.53389993115258,15.276627672092612]],[0,"right toe0",8388608,666,[-1107],[1,-0.004766051657497883,0.0004802089533768594,0.00009099081216845661],[3,0.13046292620968675,0.9907689432631921,-0.004293484967174884,0.036577205152664605],[1,1.070648052511951,175.63081923016807,14.963469722274361]],[0,"right toe1",8388608,667,[-1108],[1,0.007804563734680414,-0.0004186089208815247,0.0005770097486674786],[3,-0.0011280903034880329,0.050888072283556754,-0.060021526621159046,0.9968984641645288],[1,0.22274179400602048,5.857801964075723,-6.879726116801438]],[0,"right toe2",8388608,668,[-1109],[1,0.006148821674287319,0.0003150858683511615,-5.21540644005114e-10],[3,0.0000018084104049840189,-0.23793532170532997,0.000007286618322553768,0.9712810008584621],[1,0.00039994958420425553,-27.52942671179931,0.0007616980255523596]],[2,"right toe2_end",8388608,669,[-1110],[1,-3.8743017682918435e-9,0.006156904622912407,7.450580707946131e-10]],[6,"right toe2_end_end",8388608,670,[[1,"right toe2_end_end_end",8388608,-1111,[1,-5.9604643443123e-10,0.006156894378364086,-5.9604643443123e-10]]],[1,-1.639127722441458e-9,0.006156902760267258,2.98023217215615e-10]],[0,"left leg0",8388608,80,[-1112],[1,0.01840258203446865,0.0034433561377227306,0.024012885987758636],[3,-0.026719246605534135,-0.019741520688928448,0.0797837020365437,0.9962584579872158],[1,-2.9085726705116217,-2.0361285181125104,9.208366644433342]],[0,"left leg1",8388608,672,[-1113],[1,-0.001570010674186051,0.011304106563329697,0.04155363142490387],[3,0.07505410346936253,-0.006625843860994315,0.003316218579660744,0.9971519354841928],[1,8.611106043601785,-0.7856617226002104,0.32194404411108085]],[0,"left foot0",8388608,673,[-1114],[1,0.0015700102085247636,-0.029886456206440926,0.03205588459968567],[3,0.09446010059390231,0.00524464439530843,-0.0064196456671164566,0.9954941342119829],[1,10.844803105330856,0.6678338961791349,-0.6755684135879525]],[0,"left foot1",8388608,674,[-1115],[1,-0.00014768153778277338,0.003907082136720419,0.018782710656523705],[3,-0.0688300711131612,-0.09169756385766402,-0.0010759593875588616,0.9934046609536936],[1,-7.871803697878175,-10.506304455837528,0.6007786594490084]],[0,"left foot2",8388608,675,[-1116],[1,0.0001594924251548946,0.005417830776423216,0.01088727731257677],[3,0.16557359601450405,-0.293024776702799,0.645517941625473,0.6855862101739744],[1,79.53737191070073,-90.47599166257511,52.00663712930689]],[0,"left toe0",8388608,676,[-1117],[1,0.0032210317440330982,-0.00048022984992712736,-0.0035140234977006912],[3,-0.00025397410362682974,0.993890734182026,-0.00042949190776777463,0.11036738440757354],[1,0.045703432009614624,167.32702392606475,-0.03435734826850064]],[0,"left toe1",8388608,677,[-1118],[1,-0.005144279450178146,0.00001669451557972934,0.0058973608538508415],[3,0.00047318134286587397,-0.25816592798791194,-0.00016007157822210818,0.9661004627380357],[1,0.047648980608224735,-29.922515804701185,-0.03171946383206957]],[0,"left toe2",8388608,678,[-1119],[1,1.7881393032936899e-9,0.00008683509804541245,0.006148934364318848],[3,0.00038137636832103974,-0.05181359592711081,-0.0003230278147168311,0.9986566484443983],[1,0.04172587266780249,-5.9400470473863285,-0.03923092244094853]],[2,"left toe2_end",8388608,679,[-1120],[1,4.097819306103645e-10,0.006149544846266508,-5.587935669737476e-10]],[6,"left toe2_end_end",8388608,680,[[1,"left toe2_end_end_end",8388608,-1121,[1,9.31322467062623e-12,0.006149547640234232,-3.7252903539730653e-10]]],[1,-6.519258050063925e-11,0.006149547174572945,-7.823109382520954e-10]],[23,"comp_LOD_2",8388608,9,[[18,1,-1122,[175,176,177,178,179,180],[7],9,181,182]],[3,1.5454308319985022e-8,0.707106721581899,-1.545430476727128e-8,0.7071068407911907],[1,99.99998474121094,99.99998474121094,99.99998474121094],[1,0.0000025044775805019677,89.99999034065368,7.675927522096591e-14]],[15,"Comp",8388608,10,[177],[3,-0.7071068407911907,1.54543154254125e-8,-1.545431187269876e-8,0.707106721581899],[1,9.999999046325684,9.999999046325684,9.999999046325684],[1,-90.00000965934633,7.675917777898835e-14,-0.0000025044787319857803]],[0,"spine0",8388608,177,[-1123],[1,3.7252903539730653e-10,0.003909075167030096,-0.00092517607845366],[3,-0.013759418954332359,-0.02019218487723872,0.021461381934783252,0.9994710416742307],[1,-1.5278449136403591,-2.281549172864686,2.490613936032426]],[0,"spine1",8388608,684,[82],[1,2.38418573772492e-9,0.00814820732921362,-0.0024583544582128525],[3,-0.014868528756110217,-0.017917059571555493,0.022798139868672962,0.9994689343083488],[1,-1.6580895794748667,-2.015768713908674,2.642550980417355]],[0,"spine3",8388608,82,[-1124],[1,-5.066394859198908e-9,0.007588513661175966,-0.0019066231325268745],[3,0.020843829879679646,-0.010312797462126119,0.02867264475851253,0.9993182978445878],[1,2.4254322263752033,-1.251564674977951,3.2605303745488974]],[0,"spine4",8388608,686,[83],[1,8.940696516468449e-10,0.008185500279068947,-0.0010699452832341194],[3,0.034254656149486834,-0.005485426314216125,0.05256574367670215,0.9980147149325741],[1,3.9755012009245196,-0.8382953020260973,6.001066118615762]],[0,"left arm0",8388608,83,[-1125],[1,0.013951382599771023,0.016790246590971947,0.016093119978904724],[3,-0.012916867621556222,0.00014373601880273082,-0.00014094100334092016,0.9999165535215615],[1,-1.4802028695162106,0.01626094512362714,-0.016362054691447837]],[0,"left arm1",8388608,688,[-1126],[1,0.0010551911545917392,-0.007742427755147219,0.021822387352585793],[3,-0.10235335396090298,0.001129400536059972,-0.0011684727766184703,0.9947467768526588],[1,-11.749275059688674,0.11503553126164667,-0.1464404324964447]],[0,"left hand",8388608,689,[-1127],[1,0.00009416900866199285,0.015645749866962433,0.010464519262313843],[3,0.3301397245118249,0.0005644782763280047,-0.00025354159734460773,0.9439318722133448],[1,38.5545242496592,0.07064951765266128,-0.006069833765081632]],[2,"left finger3",8388608,690,[-1128],[1,8.344650304081824e-9,0.009227232076227665,0.004294860176742077]],[0,"left finger4",8388608,691,[-1129],[1,0.00005059279646957293,0.002204132964834571,0.003155963961035013],[3,0.000007673238672860348,-0.000009594779093684764,0.7071121455309554,0.7071014166947133],[1,0,0.0012435109893833497,90]],[0,"left finger5",8388608,692,[-1130],[1,0.00042112517985515296,-0.0001340837770840153,0.005627484526485205],[3,-0.09230603438907505,0.09230350119162783,-0.7010510090251443,0.7010614398381622],[1,0,15.001533567975944,-90]],[0,"left finger5_end",8388608,693,[-1131],[1,-8.940696516468449e-10,0.0056448024697601795,8.940696516468449e-10],[3,0.0000019192621039034926,-0.0000020400616449398495,-5.30853654365919e-8,0.999999999996076],[1,0.0002199312242558464,-0.00023377383272774185,-0.000006083583460109329]],[3,"left finger5_end_end",8388608,694,[[1,"left finger5_end_end_end",8388608,-1132,[1,1.1175871339474952e-9,0.005644826218485832,-8.12113309933693e-9]]],[1,-1.639127722441458e-9,0.005644821096211672,2.4586914726398845e-9],[3,-0.0000027220794436078912,0.000002801418531795414,4.222383722630338e-7,0.9999999999922822],[1,-0.0003119274627818528,0.00032101904875022903,0.00004838407951892836]],[0,"right arm0",8388608,83,[-1133],[1,-0.013974963687360287,0.016790248453617096,0.01609310694038868],[3,-0.009031942320728738,0.009235106619735695,0.7069480580786489,0.707147495224627],[1,-89.36624562339624,89.38270908907008,88.51971961785377]],[0,"right arm1",8388608,696,[-1134],[1,-0.007742421701550484,0.0010551821906119585,0.021822378039360046],[3,0.0011293978723013517,0.10235323600169045,-0.00116846522389361,0.9947467890018288],[1,0.14244476872426218,11.749557580346796,-0.11994645319001446]],[0,"right hand",8388608,697,[-1135],[1,0.015645867213606834,0.00009417087130714208,0.010464523918926716],[3,0.000564268567534426,-0.33015090822731785,-0.00025365272179565655,0.9439279607353295],[1,0.05143848065160351,-38.55585629010495,-0.048784345696111106]],[0,"right finger3",8388608,698,[-1136],[1,0.009227292612195015,-7.599592066753758e-9,0.004294626880437136],[3,1.6298153937492528e-9,0.000002770327682799972,7.275961777491847e-11,0.9999999999961626],[1,1.867630637958631e-7,0.0003174561681857834,8.338155429893503e-9]],[0,"right finger4",8388608,699,[-1137],[1,0.0022041972260922194,0.0000505955504195299,0.003155910177156329],[3,-6.984919309606769e-10,-0.000001633585839042647,1.4551918697794388e-11,0.9999999999986657],[1,-8.004127661182475e-8,-0.00018719514809904426,1.6676578047004918e-9]],[0,"right finger5",8388608,700,[-1138],[1,0.00042110466165468097,0.0001340793096460402,0.005627505015581846],[3,-0.0000019479955177752215,0.13052655589795578,0.000007322112103060771,0.9914448134656862],[1,-0.00033083272104267504,15.000042036776538,0.000802737353376578]],[2,"right finger5_end",8388608,701,[-1139],[1,-2.2538007016237316e-9,0.0056448327377438545,1.0002404238207419e-8]],[3,"right finger5_end_end",8388608,702,[[1,"right finger5_end_end_end",8388608,-1140,[1,-1.974403973648009e-9,0.0056448327377438545,1.7881393032936899e-9]]],[1,-5.33647837031026e-9,0.005644836463034153,1.162290530487553e-8],[3,0.0000015022819752612897,-2.2382664610605817e-8,-2.478482770126758e-7,0.9999999999988407],[1,0.00017214883300648067,-0.0000025648217660946174,-0.000028401324317949088]],[0,"neck0",8388608,83,[-1141],[1,-2.6822091214739885e-9,0.015256059356033802,-0.00595217477530241],[3,-0.07123410846437608,-0.014987513727382237,0.028143017193092368,0.9969498717622799],[1,-8.130615612736486,-1.4851653091889252,3.3393464157132535]],[0,"neck1",8388608,704,[-1142],[1,8.940696516468449e-10,0.017543168738484383,-0.016172247007489204],[3,-0.10494259662545745,0.0000061833183705481795,-0.00008328176707578431,0.9944782775100824],[1,-12.047718701658109,-0.0002968642299670698,-0.009565049350708435]],[0,"neck2",8388608,705,[-1143],[1,4.470348535789981e-9,0.017027776688337326,-0.016856519505381584],[3,-0.046461860349687426,-0.0033375966875403224,-0.003000175268067493,0.9989099833966815],[1,-5.327239229013977,-0.3980264941498488,-0.3256519505946268]],[0,"neck3",8388608,706,[178],[1,2.6822091214739885e-9,0.00766771798953414,-0.011520219966769218],[3,0.1129740622069687,-0.002462202908184354,-0.0016172785493945123,0.9935935704478913],[1,12.973139155541443,-0.25940575636329644,-0.21601506953467783]],[0,"right eye",8388608,179,[-1144],[1,-0.007840261794626713,0.008088086731731892,0.0008104066364467144],[3,0.0000015153221586345103,0.000001291498019247911,0.7071119369679933,0.7071016253647057],[1,0,0.0002455702580163,90]],[0,"right eye_end",8388608,708,[-1145],[1,7.450580596923828e-9,0.01128531713038683,1.2665987370041876e-8],[3,0.0000016917472294127718,6.170012056818174e-9,-4.1886227108925643e-7,0.9999999999984812],[1,0.00019385995279289637,7.071125014201777e-7,-0.000047998079465172375]],[3,"right eye_end_end",8388608,709,[[1,"right eye_end_end_end",8388608,-1146,[1,5.960464899423812e-10,0.011285314336419106,3.44216815051368e-8]]],[1,1.3709068547029801e-8,0.011285322718322277,7.227063392178934e-9],[3,-0.0000025331978576933247,1.1146769729428502e-8,-6.984920419816702e-10,0.9999999999967915],[1,-0.00029028309183423673,0.0000012773255186363435,-8.004452777657305e-8]],[0,"left eye",8388608,179,[-1147],[1,0.007816696539521217,0.008088074624538422,0.0008104006410576403],[3,-0.4833322786123404,0.5161297941585465,0.4833344541818849,0.5161276483913245],[1,-86.24125517318419,90.0002474051749,0.000009826573641812891]],[0,"left eye_end",8388608,711,[-1148],[1,1.2433156726388006e-8,0.011285322718322277,5.856855000985206e-9],[3,1.0477378964409168e-9,5.915352208055046e-9,0.0000016901828985258776,0.9999999999985716],[1,1.200607733149561e-7,6.778492287861956e-7,0.00019368069338224458]],[3,"left eye_end_end",8388608,712,[[1,"left eye_end_end_end",8388608,-1149,[1,7.078051478259795e-9,0.011285316199064255,4.842877210364804e-10]]],[1,1.672655258744271e-8,0.011285318061709404,-2.1606683109354208e-9],[3,-4.2284960954866026e-7,8.658391337221959e-9,-0.0000016913039644324944,0.9999999999984803],[1,-0.00004845499431391979,9.920966098682533e-7,-0.00019380915849106982]],[2,"jaw1",8388608,180,[-1150],[1,1.862645149230957e-9,0.045013949275016785,0.015709517523646355]],[2,"jaw1_end",8388608,714,[-1151],[1,-7.450580707946131e-10,0.027444317936897278,-1.0989605891964516e-9]],[3,"jaw1_end_end",8388608,715,[[11,"jaw1_end_end_end",8388608,-1152,[1,-4.4703482582342247e-10,0.02744431234896183,-2.1569430685985935e-8],[3,-0.0000010203220881511088,0.0000010196818038810613,1.4551915228351714e-9,0.9999999999989597],[1,-0.00011692029896006154,0.00011684692778744354,1.6663344378198693e-7]]],[1,1.7881393032936899e-9,0.027444347739219666,1.7862767265341972e-8],[3,0.000002010551270351287,-0.000002014101482919643,-3.783497126692792e-10,0.9999999999959506],[1,0.00023039220448395494,-0.0002307990288771928,-4.3819716712579345e-8]],[0,"tongue0",8388608,180,[-1153],[1,3.5762786065873797e-9,0.004420141689479351,0.005698944441974163],[3,0.14470117871230787,-1.3000424365683173e-8,0.000007537388013103071,0.9894754008172494],[1,16.639950996468475,-0.00012645551306502084,0.0008544151586764777]],[0,"tongue1",8388608,717,[-1154],[1,-3.3527611797978807e-9,0.011291980743408203,-0.0012327989097684622],[3,-0.06670764023167682,-1.9519765523348155e-7,-2.3801742565346996e-8,0.9977725646331845],[1,-7.649813158440861,-0.000022500124022819532,-0.0000012292867664396407]],[0,"tongue2",8388608,718,[-1155],[1,2.654269304347423e-10,0.01418344583362341,0.0005741515778936446],[3,-0.1374952653740075,5.523982732180117e-8,-4.5837314709614335e-8,0.9905024240251641],[1,-15.805867716311552,0.000005547694689655366,-0.000006073030173183047]],[0,"tongue2_end",8388608,719,[-1156],[1,-1.3411045607369942e-9,0.014195075258612633,-5.79049830307099e-9],[3,0.0000014945978818981794,-0.0000014533287639974586,-3.259628789102487e-9,0.9999999999978271],[1,0.00017126830086094277,-0.00016653920828563922,-3.737748539378029e-7]],[3,"tongue2_end_end",8388608,720,[[11,"tongue2_end_end_end",8388608,-1157,[1,-1.043081288010228e-9,0.014195038005709648,1.0114162840579866e-8],[3,0.0000021189916878843384,-0.0000021222513168954777,-2.3283064365282257e-10,0.9999999999955029],[1,0.00024281856102116275,-0.00024319208699148472,-2.7195748456137112e-8]]],[1,1.043081288010228e-9,0.014195079915225506,3.408640703028709e-9],[3,-0.0000035538696465228525,0.0000034507834242990154,-8.149073638008481e-10,0.9999999999877311],[1,-0.00040724346304701155,0.0003954306521184932,-9.478681427174957e-8]],[0,"Right Torso",8388608,82,[-1158],[1,-0.017464520409703255,0.009573213756084442,0.030453024432063103],[3,-1.4765793285428368e-8,-1.2075035933521495e-7,0.7071068407911856,0.707106721581894],[1,0,-0.000002392899432563725,90]],[2,"Right Torso_end",8388608,722,[-1159],[1,2.784654506982065e-9,0.02686261013150215,3.81842246710562e-9]],[6,"Right Torso_end_end",8388608,723,[[1,"Right Torso_end_end_end",8388608,-1160,[1,-1.1431984248133631e-8,0.0268626157194376,1.240521640966108e-8]]],[1,1.9604340373291507e-9,0.0268626157194376,-2.1047890097491972e-9]],[0,"Left Torso",8388608,82,[-1161],[1,0.017440930008888245,0.009573224000632763,0.030453002080321312],[3,0.500000126659862,-0.4999998882412794,-0.5000000670552164,-0.4999999180436022],[1,-90.0000221981152,89.99999487735771,-0.0000017075463256145647]],[2,"Left Torso_end",8388608,725,[-1162],[1,1.7508864358362075e-9,0.026862619444727898,-2.8824433950802586e-9]],[6,"Left Torso_end_end",8388608,726,[[1,"Left Torso_end_end_end",8388608,-1163,[1,-1.5832484212552345e-9,0.0268626157194376,-2.9336661988565993e-9]]],[1,-2.2165478341662492e-9,0.02686261013150215,5.820766091346741e-10]],[0,"tail0",8388608,84,[-1164],[1,2.38418573772492e-9,-0.01958109252154827,0.004617891740053892],[3,0.05616177867879355,0.028151084982951425,0.004469596682825916,0.9980147262116976],[1,6.4223793484064045,3.1925924357445123,0.692349061695615]],[0,"tail1",8388608,728,[-1165],[1,-1.19209286886246e-9,-0.026223542168736458,-0.0007214128854684532],[3,0.0031083005351771912,0.0014343740341220459,-0.01194275649172853,0.9999228228249882],[1,0.35822495434177337,0.16865661998027534,-1.3680525498125806]],[0,"tail2",8388608,729,[-1166],[1,2.38418573772492e-9,-0.03143041208386421,0.00010329753422411159],[3,0.003111778308726112,0.0013797485805861092,-0.011948764385323093,0.999922817101038],[1,0.35854984255366873,0.16240262721771287,-1.368760051413259]],[0,"tail3",8388608,730,[-1167],[1,-2.38418573772492e-9,-0.02927638776600361,0.00020010948355775326],[3,0.0031156022961344666,0.0013251705064710123,-0.011954564573702881,0.999922809686485],[1,0.35891436722033493,0.15615446645465633,-1.3694437187155908]],[0,"tail4",8388608,731,[-1168],[1,-4.76837147544984e-9,-0.027391791343688965,0.00019631088071037084],[3,0.0035525737043447716,0.0014388119918525726,-0.011879632153546678,0.999922088654923],[1,0.40914076039233777,0.16974711963651254,-1.3607416889422317]],[0,"tail5",8388608,732,[-1169],[1,-1.1920929132713809e-8,-0.027199802920222282,0.00030194639111869037],[3,-0.0012750914229008672,-0.008457227549468383,0.03171206615500072,0.9994604515958702],[1,-0.11553545910896909,-0.9659600928893592,3.6356494243513264]],[0,"tail6",8388608,733,[-1170],[1,9.53674295089968e-9,-0.025129156187176704,0.0011446529533714056],[3,-0.014449086548818109,-0.008872484528700394,0.0315430043349346,0.9993585651775438],[1,-1.6260902547158433,-0.9658152257334518,3.629360742339713]],[0,"tail7",8388608,734,[-1171],[1,-5.9604645663569045e-9,-0.024538598954677582,0.0006162720965221524],[3,-0.0035734080338886967,-0.010646847758866457,0.03040127757568557,0.9994746808747028],[1,-0.3728700575034159,-1.2092794445726276,3.488414221479557]],[0,"tail8",8388608,735,[-1172],[1,8.940697071579962e-9,-0.013206311501562595,0.0002693343267310411],[3,-0.00421273810623833,-0.009717253247809712,0.030597281375363466,0.9994756796437836],[1,-0.449268537675818,-1.1002936678150768,3.5112401274933487]],[2,"tail8_end",8388608,736,[-1173],[1,1.19209286886246e-9,0.013208942487835884,0]],[6,"tail8_end_end",8388608,737,[[1,"tail8_end_end_end",8388608,-1174,[1,1.19209286886246e-9,0.013209017924964428,-6.556510889765832e-9]]],[1,5.9604645663569045e-9,0.013209058903157711,1.7881394143159923e-9]],[0,"right leg0",8388608,84,[-1175],[1,-0.019055675715208054,0.0033091562800109386,0.016144664958119392],[3,-0.1758038810899314,-0.017633571842268422,0.6676717853270461,0.723184927674793],[1,-78.57820982882251,62.74263400658564,76.38525243107132]],[0,"right leg1",8388608,739,[-1176],[1,0.011304101906716824,-0.0015700083458796144,0.04155361279845238],[3,0.06429759265723188,0.04945126062606861,0.0029156149162815385,0.9967005024532882],[1,7.347795831743105,5.636019159221763,0.6973746779464639]],[0,"right foot0",8388608,740,[-1177],[1,-0.029886450618505478,0.0015699955401942134,0.032055873423814774],[3,-0.08061608046528909,-0.12210650177915211,0.006311681215104875,0.989217474812243],[1,-9.09280657404995,-13.92707573541503,1.8437953581496462]],[0,"right foot1",8388608,741,[-1178],[1,0.003907094709575176,-0.00014767363609280437,0.018782703205943108],[3,0.012718700017344608,-0.019753488005658924,0.011716660245581385,0.9996553177241488],[1,1.4840307666426562,-2.2810810511675452,1.313492797221609]],[0,"right foot2",8388608,742,[-1179],[1,0.005417832173407078,0.0001594980276422575,0.010887287557125092],[3,0.135298567316826,0.9880735445127315,-0.06766532475870929,0.028746689224323076],[1,8.434477156871264,175.53389993115258,15.276627672092612]],[0,"right toe0",8388608,743,[-1180],[1,-0.004766051657497883,0.0004802089533768594,0.00009099081216845661],[3,0.13046292620968675,0.9907689432631921,-0.004293484967174884,0.036577205152664605],[1,1.070648052511951,175.63081923016807,14.963469722274361]],[0,"right toe1",8388608,744,[-1181],[1,0.007804563734680414,-0.0004186089208815247,0.0005770097486674786],[3,-0.0011280903034880329,0.050888072283556754,-0.060021526621159046,0.9968984641645288],[1,0.22274179400602048,5.857801964075723,-6.879726116801438]],[0,"right toe2",8388608,745,[-1182],[1,0.006148821674287319,0.0003150858683511615,-5.21540644005114e-10],[3,0.0000018084104049840189,-0.23793532170532997,0.000007286618322553768,0.9712810008584621],[1,0.00039994958420425553,-27.52942671179931,0.0007616980255523596]],[2,"right toe2_end",8388608,746,[-1183],[1,-3.8743017682918435e-9,0.006156904622912407,7.450580707946131e-10]],[6,"right toe2_end_end",8388608,747,[[1,"right toe2_end_end_end",8388608,-1184,[1,-5.9604643443123e-10,0.006156894378364086,-5.9604643443123e-10]]],[1,-1.639127722441458e-9,0.006156902760267258,2.98023217215615e-10]],[0,"left leg0",8388608,84,[-1185],[1,0.01840258203446865,0.0034433561377227306,0.024012885987758636],[3,-0.026719246605534135,-0.019741520688928448,0.0797837020365437,0.9962584579872158],[1,-2.9085726705116217,-2.0361285181125104,9.208366644433342]],[0,"left leg1",8388608,749,[-1186],[1,-0.001570010674186051,0.011304106563329697,0.04155363142490387],[3,0.07505410346936253,-0.006625843860994315,0.003316218579660744,0.9971519354841928],[1,8.611106043601785,-0.7856617226002104,0.32194404411108085]],[0,"left foot0",8388608,750,[-1187],[1,0.0015700102085247636,-0.029886456206440926,0.03205588459968567],[3,0.09446010059390231,0.00524464439530843,-0.0064196456671164566,0.9954941342119829],[1,10.844803105330856,0.6678338961791349,-0.6755684135879525]],[0,"left foot1",8388608,751,[-1188],[1,-0.00014768153778277338,0.003907082136720419,0.018782710656523705],[3,-0.0688300711131612,-0.09169756385766402,-0.0010759593875588616,0.9934046609536936],[1,-7.871803697878175,-10.506304455837528,0.6007786594490084]],[0,"left foot2",8388608,752,[-1189],[1,0.0001594924251548946,0.005417830776423216,0.01088727731257677],[3,0.16557359601450405,-0.293024776702799,0.645517941625473,0.6855862101739744],[1,79.53737191070073,-90.47599166257511,52.00663712930689]],[0,"left toe0",8388608,753,[-1190],[1,0.0032210317440330982,-0.00048022984992712736,-0.0035140234977006912],[3,-0.00025397410362682974,0.993890734182026,-0.00042949190776777463,0.11036738440757354],[1,0.045703432009614624,167.32702392606475,-0.03435734826850064]],[0,"left toe1",8388608,754,[-1191],[1,-0.005144279450178146,0.00001669451557972934,0.0058973608538508415],[3,0.00047318134286587397,-0.25816592798791194,-0.00016007157822210818,0.9661004627380357],[1,0.047648980608224735,-29.922515804701185,-0.03171946383206957]],[0,"left toe2",8388608,755,[-1192],[1,1.7881393032936899e-9,0.00008683509804541245,0.006148934364318848],[3,0.00038137636832103974,-0.05181359592711081,-0.0003230278147168311,0.9986566484443983],[1,0.04172587266780249,-5.9400470473863285,-0.03923092244094853]],[2,"left toe2_end",8388608,756,[-1193],[1,4.097819306103645e-10,0.006149544846266508,-5.587935669737476e-10]],[6,"left toe2_end_end",8388608,757,[[1,"left toe2_end_end_end",8388608,-1194,[1,9.31322467062623e-12,0.006149547640234232,-3.7252903539730653e-10]]],[1,-6.519258050063925e-11,0.006149547174572945,-7.823109382520954e-10]],[23,"comp_LOD_2",8388608,10,[[18,1,-1195,[192,193,194,195,196,197],[7],10,198,199]],[3,1.5454308319985022e-8,0.707106721581899,-1.545430476727128e-8,0.7071068407911907],[1,99.99998474121094,99.99998474121094,99.99998474121094],[1,0.0000025044775805019677,89.99999034065368,7.675927522096591e-14]],[15,"Comp",8388608,11,[183],[3,-0.7071068407911907,1.54543154254125e-8,-1.545431187269876e-8,0.707106721581899],[1,9.999999046325684,9.999999046325684,9.999999046325684],[1,-90.00000965934633,7.675917777898835e-14,-0.0000025044787319857803]],[0,"spine0",8388608,183,[-1196],[1,3.7252903539730653e-10,0.003909075167030096,-0.00092517607845366],[3,-0.013759418954332359,-0.02019218487723872,0.021461381934783252,0.9994710416742307],[1,-1.5278449136403591,-2.281549172864686,2.490613936032426]],[0,"spine1",8388608,761,[86],[1,2.38418573772492e-9,0.00814820732921362,-0.0024583544582128525],[3,-0.014868528756110217,-0.017917059571555493,0.022798139868672962,0.9994689343083488],[1,-1.6580895794748667,-2.015768713908674,2.642550980417355]],[0,"spine3",8388608,86,[-1197],[1,-5.066394859198908e-9,0.007588513661175966,-0.0019066231325268745],[3,0.020843829879679646,-0.010312797462126119,0.02867264475851253,0.9993182978445878],[1,2.4254322263752033,-1.251564674977951,3.2605303745488974]],[0,"spine4",8388608,763,[87],[1,8.940696516468449e-10,0.008185500279068947,-0.0010699452832341194],[3,0.034254656149486834,-0.005485426314216125,0.05256574367670215,0.9980147149325741],[1,3.9755012009245196,-0.8382953020260973,6.001066118615762]],[0,"left arm0",8388608,87,[-1198],[1,0.013951382599771023,0.016790246590971947,0.016093119978904724],[3,-0.012916867621556222,0.00014373601880273082,-0.00014094100334092016,0.9999165535215615],[1,-1.4802028695162106,0.01626094512362714,-0.016362054691447837]],[0,"left arm1",8388608,765,[-1199],[1,0.0010551911545917392,-0.007742427755147219,0.021822387352585793],[3,-0.10235335396090298,0.001129400536059972,-0.0011684727766184703,0.9947467768526588],[1,-11.749275059688674,0.11503553126164667,-0.1464404324964447]],[0,"left hand",8388608,766,[-1200],[1,0.00009416900866199285,0.015645749866962433,0.010464519262313843],[3,0.3301397245118249,0.0005644782763280047,-0.00025354159734460773,0.9439318722133448],[1,38.5545242496592,0.07064951765266128,-0.006069833765081632]],[2,"left finger3",8388608,767,[-1201],[1,8.344650304081824e-9,0.009227232076227665,0.004294860176742077]],[0,"left finger4",8388608,768,[-1202],[1,0.00005059279646957293,0.002204132964834571,0.003155963961035013],[3,0.000007673238672860348,-0.000009594779093684764,0.7071121455309554,0.7071014166947133],[1,0,0.0012435109893833497,90]],[0,"left finger5",8388608,769,[-1203],[1,0.00042112517985515296,-0.0001340837770840153,0.005627484526485205],[3,-0.09230603438907505,0.09230350119162783,-0.7010510090251443,0.7010614398381622],[1,0,15.001533567975944,-90]],[0,"left finger5_end",8388608,770,[-1204],[1,-8.940696516468449e-10,0.0056448024697601795,8.940696516468449e-10],[3,0.0000019192621039034926,-0.0000020400616449398495,-5.30853654365919e-8,0.999999999996076],[1,0.0002199312242558464,-0.00023377383272774185,-0.000006083583460109329]],[3,"left finger5_end_end",8388608,771,[[1,"left finger5_end_end_end",8388608,-1205,[1,1.1175871339474952e-9,0.005644826218485832,-8.12113309933693e-9]]],[1,-1.639127722441458e-9,0.005644821096211672,2.4586914726398845e-9],[3,-0.0000027220794436078912,0.000002801418531795414,4.222383722630338e-7,0.9999999999922822],[1,-0.0003119274627818528,0.00032101904875022903,0.00004838407951892836]],[0,"right arm0",8388608,87,[-1206],[1,-0.013974963687360287,0.016790248453617096,0.01609310694038868],[3,-0.009031942320728738,0.009235106619735695,0.7069480580786489,0.707147495224627],[1,-89.36624562339624,89.38270908907008,88.51971961785377]],[0,"right arm1",8388608,773,[-1207],[1,-0.007742421701550484,0.0010551821906119585,0.021822378039360046],[3,0.0011293978723013517,0.10235323600169045,-0.00116846522389361,0.9947467890018288],[1,0.14244476872426218,11.749557580346796,-0.11994645319001446]],[0,"right hand",8388608,774,[-1208],[1,0.015645867213606834,0.00009417087130714208,0.010464523918926716],[3,0.000564268567534426,-0.33015090822731785,-0.00025365272179565655,0.9439279607353295],[1,0.05143848065160351,-38.55585629010495,-0.048784345696111106]],[0,"right finger3",8388608,775,[-1209],[1,0.009227292612195015,-7.599592066753758e-9,0.004294626880437136],[3,1.6298153937492528e-9,0.000002770327682799972,7.275961777491847e-11,0.9999999999961626],[1,1.867630637958631e-7,0.0003174561681857834,8.338155429893503e-9]],[0,"right finger4",8388608,776,[-1210],[1,0.0022041972260922194,0.0000505955504195299,0.003155910177156329],[3,-6.984919309606769e-10,-0.000001633585839042647,1.4551918697794388e-11,0.9999999999986657],[1,-8.004127661182475e-8,-0.00018719514809904426,1.6676578047004918e-9]],[0,"right finger5",8388608,777,[-1211],[1,0.00042110466165468097,0.0001340793096460402,0.005627505015581846],[3,-0.0000019479955177752215,0.13052655589795578,0.000007322112103060771,0.9914448134656862],[1,-0.00033083272104267504,15.000042036776538,0.000802737353376578]],[2,"right finger5_end",8388608,778,[-1212],[1,-2.2538007016237316e-9,0.0056448327377438545,1.0002404238207419e-8]],[3,"right finger5_end_end",8388608,779,[[1,"right finger5_end_end_end",8388608,-1213,[1,-1.974403973648009e-9,0.0056448327377438545,1.7881393032936899e-9]]],[1,-5.33647837031026e-9,0.005644836463034153,1.162290530487553e-8],[3,0.0000015022819752612897,-2.2382664610605817e-8,-2.478482770126758e-7,0.9999999999988407],[1,0.00017214883300648067,-0.0000025648217660946174,-0.000028401324317949088]],[0,"neck0",8388608,87,[-1214],[1,-2.6822091214739885e-9,0.015256059356033802,-0.00595217477530241],[3,-0.07123410846437608,-0.014987513727382237,0.028143017193092368,0.9969498717622799],[1,-8.130615612736486,-1.4851653091889252,3.3393464157132535]],[0,"neck1",8388608,781,[-1215],[1,8.940696516468449e-10,0.017543168738484383,-0.016172247007489204],[3,-0.10494259662545745,0.0000061833183705481795,-0.00008328176707578431,0.9944782775100824],[1,-12.047718701658109,-0.0002968642299670698,-0.009565049350708435]],[0,"neck2",8388608,782,[-1216],[1,4.470348535789981e-9,0.017027776688337326,-0.016856519505381584],[3,-0.046461860349687426,-0.0033375966875403224,-0.003000175268067493,0.9989099833966815],[1,-5.327239229013977,-0.3980264941498488,-0.3256519505946268]],[0,"neck3",8388608,783,[184],[1,2.6822091214739885e-9,0.00766771798953414,-0.011520219966769218],[3,0.1129740622069687,-0.002462202908184354,-0.0016172785493945123,0.9935935704478913],[1,12.973139155541443,-0.25940575636329644,-0.21601506953467783]],[0,"right eye",8388608,185,[-1217],[1,-0.007840261794626713,0.008088086731731892,0.0008104066364467144],[3,0.0000015153221586345103,0.000001291498019247911,0.7071119369679933,0.7071016253647057],[1,0,0.0002455702580163,90]],[0,"right eye_end",8388608,785,[-1218],[1,7.450580596923828e-9,0.01128531713038683,1.2665987370041876e-8],[3,0.0000016917472294127718,6.170012056818174e-9,-4.1886227108925643e-7,0.9999999999984812],[1,0.00019385995279289637,7.071125014201777e-7,-0.000047998079465172375]],[3,"right eye_end_end",8388608,786,[[1,"right eye_end_end_end",8388608,-1219,[1,5.960464899423812e-10,0.011285314336419106,3.44216815051368e-8]]],[1,1.3709068547029801e-8,0.011285322718322277,7.227063392178934e-9],[3,-0.0000025331978576933247,1.1146769729428502e-8,-6.984920419816702e-10,0.9999999999967915],[1,-0.00029028309183423673,0.0000012773255186363435,-8.004452777657305e-8]],[0,"left eye",8388608,185,[-1220],[1,0.007816696539521217,0.008088074624538422,0.0008104006410576403],[3,-0.4833322786123404,0.5161297941585465,0.4833344541818849,0.5161276483913245],[1,-86.24125517318419,90.0002474051749,0.000009826573641812891]],[0,"left eye_end",8388608,788,[-1221],[1,1.2433156726388006e-8,0.011285322718322277,5.856855000985206e-9],[3,1.0477378964409168e-9,5.915352208055046e-9,0.0000016901828985258776,0.9999999999985716],[1,1.200607733149561e-7,6.778492287861956e-7,0.00019368069338224458]],[3,"left eye_end_end",8388608,789,[[1,"left eye_end_end_end",8388608,-1222,[1,7.078051478259795e-9,0.011285316199064255,4.842877210364804e-10]]],[1,1.672655258744271e-8,0.011285318061709404,-2.1606683109354208e-9],[3,-4.2284960954866026e-7,8.658391337221959e-9,-0.0000016913039644324944,0.9999999999984803],[1,-0.00004845499431391979,9.920966098682533e-7,-0.00019380915849106982]],[2,"jaw1",8388608,186,[-1223],[1,1.862645149230957e-9,0.045013949275016785,0.015709517523646355]],[2,"jaw1_end",8388608,791,[-1224],[1,-7.450580707946131e-10,0.027444317936897278,-1.0989605891964516e-9]],[3,"jaw1_end_end",8388608,792,[[11,"jaw1_end_end_end",8388608,-1225,[1,-4.4703482582342247e-10,0.02744431234896183,-2.1569430685985935e-8],[3,-0.0000010203220881511088,0.0000010196818038810613,1.4551915228351714e-9,0.9999999999989597],[1,-0.00011692029896006154,0.00011684692778744354,1.6663344378198693e-7]]],[1,1.7881393032936899e-9,0.027444347739219666,1.7862767265341972e-8],[3,0.000002010551270351287,-0.000002014101482919643,-3.783497126692792e-10,0.9999999999959506],[1,0.00023039220448395494,-0.0002307990288771928,-4.3819716712579345e-8]],[0,"tongue0",8388608,186,[-1226],[1,3.5762786065873797e-9,0.004420141689479351,0.005698944441974163],[3,0.14470117871230787,-1.3000424365683173e-8,0.000007537388013103071,0.9894754008172494],[1,16.639950996468475,-0.00012645551306502084,0.0008544151586764777]],[0,"tongue1",8388608,794,[-1227],[1,-3.3527611797978807e-9,0.011291980743408203,-0.0012327989097684622],[3,-0.06670764023167682,-1.9519765523348155e-7,-2.3801742565346996e-8,0.9977725646331845],[1,-7.649813158440861,-0.000022500124022819532,-0.0000012292867664396407]],[0,"tongue2",8388608,795,[-1228],[1,2.654269304347423e-10,0.01418344583362341,0.0005741515778936446],[3,-0.1374952653740075,5.523982732180117e-8,-4.5837314709614335e-8,0.9905024240251641],[1,-15.805867716311552,0.000005547694689655366,-0.000006073030173183047]],[0,"tongue2_end",8388608,796,[-1229],[1,-1.3411045607369942e-9,0.014195075258612633,-5.79049830307099e-9],[3,0.0000014945978818981794,-0.0000014533287639974586,-3.259628789102487e-9,0.9999999999978271],[1,0.00017126830086094277,-0.00016653920828563922,-3.737748539378029e-7]],[3,"tongue2_end_end",8388608,797,[[11,"tongue2_end_end_end",8388608,-1230,[1,-1.043081288010228e-9,0.014195038005709648,1.0114162840579866e-8],[3,0.0000021189916878843384,-0.0000021222513168954777,-2.3283064365282257e-10,0.9999999999955029],[1,0.00024281856102116275,-0.00024319208699148472,-2.7195748456137112e-8]]],[1,1.043081288010228e-9,0.014195079915225506,3.408640703028709e-9],[3,-0.0000035538696465228525,0.0000034507834242990154,-8.149073638008481e-10,0.9999999999877311],[1,-0.00040724346304701155,0.0003954306521184932,-9.478681427174957e-8]],[0,"Right Torso",8388608,86,[-1231],[1,-0.017464520409703255,0.009573213756084442,0.030453024432063103],[3,-1.4765793285428368e-8,-1.2075035933521495e-7,0.7071068407911856,0.707106721581894],[1,0,-0.000002392899432563725,90]],[2,"Right Torso_end",8388608,799,[-1232],[1,2.784654506982065e-9,0.02686261013150215,3.81842246710562e-9]],[6,"Right Torso_end_end",8388608,800,[[1,"Right Torso_end_end_end",8388608,-1233,[1,-1.1431984248133631e-8,0.0268626157194376,1.240521640966108e-8]]],[1,1.9604340373291507e-9,0.0268626157194376,-2.1047890097491972e-9]],[0,"Left Torso",8388608,86,[-1234],[1,0.017440930008888245,0.009573224000632763,0.030453002080321312],[3,0.500000126659862,-0.4999998882412794,-0.5000000670552164,-0.4999999180436022],[1,-90.0000221981152,89.99999487735771,-0.0000017075463256145647]],[2,"Left Torso_end",8388608,802,[-1235],[1,1.7508864358362075e-9,0.026862619444727898,-2.8824433950802586e-9]],[6,"Left Torso_end_end",8388608,803,[[1,"Left Torso_end_end_end",8388608,-1236,[1,-1.5832484212552345e-9,0.0268626157194376,-2.9336661988565993e-9]]],[1,-2.2165478341662492e-9,0.02686261013150215,5.820766091346741e-10]],[0,"tail0",8388608,88,[-1237],[1,2.38418573772492e-9,-0.01958109252154827,0.004617891740053892],[3,0.05616177867879355,0.028151084982951425,0.004469596682825916,0.9980147262116976],[1,6.4223793484064045,3.1925924357445123,0.692349061695615]],[0,"tail1",8388608,805,[-1238],[1,-1.19209286886246e-9,-0.026223542168736458,-0.0007214128854684532],[3,0.0031083005351771912,0.0014343740341220459,-0.01194275649172853,0.9999228228249882],[1,0.35822495434177337,0.16865661998027534,-1.3680525498125806]],[0,"tail2",8388608,806,[-1239],[1,2.38418573772492e-9,-0.03143041208386421,0.00010329753422411159],[3,0.003111778308726112,0.0013797485805861092,-0.011948764385323093,0.999922817101038],[1,0.35854984255366873,0.16240262721771287,-1.368760051413259]],[0,"tail3",8388608,807,[-1240],[1,-2.38418573772492e-9,-0.02927638776600361,0.00020010948355775326],[3,0.0031156022961344666,0.0013251705064710123,-0.011954564573702881,0.999922809686485],[1,0.35891436722033493,0.15615446645465633,-1.3694437187155908]],[0,"tail4",8388608,808,[-1241],[1,-4.76837147544984e-9,-0.027391791343688965,0.00019631088071037084],[3,0.0035525737043447716,0.0014388119918525726,-0.011879632153546678,0.999922088654923],[1,0.40914076039233777,0.16974711963651254,-1.3607416889422317]],[0,"tail5",8388608,809,[-1242],[1,-1.1920929132713809e-8,-0.027199802920222282,0.00030194639111869037],[3,-0.0012750914229008672,-0.008457227549468383,0.03171206615500072,0.9994604515958702],[1,-0.11553545910896909,-0.9659600928893592,3.6356494243513264]],[0,"tail6",8388608,810,[-1243],[1,9.53674295089968e-9,-0.025129156187176704,0.0011446529533714056],[3,-0.014449086548818109,-0.008872484528700394,0.0315430043349346,0.9993585651775438],[1,-1.6260902547158433,-0.9658152257334518,3.629360742339713]],[0,"tail7",8388608,811,[-1244],[1,-5.9604645663569045e-9,-0.024538598954677582,0.0006162720965221524],[3,-0.0035734080338886967,-0.010646847758866457,0.03040127757568557,0.9994746808747028],[1,-0.3728700575034159,-1.2092794445726276,3.488414221479557]],[0,"tail8",8388608,812,[-1245],[1,8.940697071579962e-9,-0.013206311501562595,0.0002693343267310411],[3,-0.00421273810623833,-0.009717253247809712,0.030597281375363466,0.9994756796437836],[1,-0.449268537675818,-1.1002936678150768,3.5112401274933487]],[2,"tail8_end",8388608,813,[-1246],[1,1.19209286886246e-9,0.013208942487835884,0]],[6,"tail8_end_end",8388608,814,[[1,"tail8_end_end_end",8388608,-1247,[1,1.19209286886246e-9,0.013209017924964428,-6.556510889765832e-9]]],[1,5.9604645663569045e-9,0.013209058903157711,1.7881394143159923e-9]],[0,"right leg0",8388608,88,[-1248],[1,-0.019055675715208054,0.0033091562800109386,0.016144664958119392],[3,-0.1758038810899314,-0.017633571842268422,0.6676717853270461,0.723184927674793],[1,-78.57820982882251,62.74263400658564,76.38525243107132]],[0,"right leg1",8388608,816,[-1249],[1,0.011304101906716824,-0.0015700083458796144,0.04155361279845238],[3,0.06429759265723188,0.04945126062606861,0.0029156149162815385,0.9967005024532882],[1,7.347795831743105,5.636019159221763,0.6973746779464639]],[0,"right foot0",8388608,817,[-1250],[1,-0.029886450618505478,0.0015699955401942134,0.032055873423814774],[3,-0.08061608046528909,-0.12210650177915211,0.006311681215104875,0.989217474812243],[1,-9.09280657404995,-13.92707573541503,1.8437953581496462]],[0,"right foot1",8388608,818,[-1251],[1,0.003907094709575176,-0.00014767363609280437,0.018782703205943108],[3,0.012718700017344608,-0.019753488005658924,0.011716660245581385,0.9996553177241488],[1,1.4840307666426562,-2.2810810511675452,1.313492797221609]],[0,"right foot2",8388608,819,[-1252],[1,0.005417832173407078,0.0001594980276422575,0.010887287557125092],[3,0.135298567316826,0.9880735445127315,-0.06766532475870929,0.028746689224323076],[1,8.434477156871264,175.53389993115258,15.276627672092612]],[0,"right toe0",8388608,820,[-1253],[1,-0.004766051657497883,0.0004802089533768594,0.00009099081216845661],[3,0.13046292620968675,0.9907689432631921,-0.004293484967174884,0.036577205152664605],[1,1.070648052511951,175.63081923016807,14.963469722274361]],[0,"right toe1",8388608,821,[-1254],[1,0.007804563734680414,-0.0004186089208815247,0.0005770097486674786],[3,-0.0011280903034880329,0.050888072283556754,-0.060021526621159046,0.9968984641645288],[1,0.22274179400602048,5.857801964075723,-6.879726116801438]],[0,"right toe2",8388608,822,[-1255],[1,0.006148821674287319,0.0003150858683511615,-5.21540644005114e-10],[3,0.0000018084104049840189,-0.23793532170532997,0.000007286618322553768,0.9712810008584621],[1,0.00039994958420425553,-27.52942671179931,0.0007616980255523596]],[2,"right toe2_end",8388608,823,[-1256],[1,-3.8743017682918435e-9,0.006156904622912407,7.450580707946131e-10]],[6,"right toe2_end_end",8388608,824,[[1,"right toe2_end_end_end",8388608,-1257,[1,-5.9604643443123e-10,0.006156894378364086,-5.9604643443123e-10]]],[1,-1.639127722441458e-9,0.006156902760267258,2.98023217215615e-10]],[0,"left leg0",8388608,88,[-1258],[1,0.01840258203446865,0.0034433561377227306,0.024012885987758636],[3,-0.026719246605534135,-0.019741520688928448,0.0797837020365437,0.9962584579872158],[1,-2.9085726705116217,-2.0361285181125104,9.208366644433342]],[0,"left leg1",8388608,826,[-1259],[1,-0.001570010674186051,0.011304106563329697,0.04155363142490387],[3,0.07505410346936253,-0.006625843860994315,0.003316218579660744,0.9971519354841928],[1,8.611106043601785,-0.7856617226002104,0.32194404411108085]],[0,"left foot0",8388608,827,[-1260],[1,0.0015700102085247636,-0.029886456206440926,0.03205588459968567],[3,0.09446010059390231,0.00524464439530843,-0.0064196456671164566,0.9954941342119829],[1,10.844803105330856,0.6678338961791349,-0.6755684135879525]],[0,"left foot1",8388608,828,[-1261],[1,-0.00014768153778277338,0.003907082136720419,0.018782710656523705],[3,-0.0688300711131612,-0.09169756385766402,-0.0010759593875588616,0.9934046609536936],[1,-7.871803697878175,-10.506304455837528,0.6007786594490084]],[0,"left foot2",8388608,829,[-1262],[1,0.0001594924251548946,0.005417830776423216,0.01088727731257677],[3,0.16557359601450405,-0.293024776702799,0.645517941625473,0.6855862101739744],[1,79.53737191070073,-90.47599166257511,52.00663712930689]],[0,"left toe0",8388608,830,[-1263],[1,0.0032210317440330982,-0.00048022984992712736,-0.0035140234977006912],[3,-0.00025397410362682974,0.993890734182026,-0.00042949190776777463,0.11036738440757354],[1,0.045703432009614624,167.32702392606475,-0.03435734826850064]],[0,"left toe1",8388608,831,[-1264],[1,-0.005144279450178146,0.00001669451557972934,0.0058973608538508415],[3,0.00047318134286587397,-0.25816592798791194,-0.00016007157822210818,0.9661004627380357],[1,0.047648980608224735,-29.922515804701185,-0.03171946383206957]],[0,"left toe2",8388608,832,[-1265],[1,1.7881393032936899e-9,0.00008683509804541245,0.006148934364318848],[3,0.00038137636832103974,-0.05181359592711081,-0.0003230278147168311,0.9986566484443983],[1,0.04172587266780249,-5.9400470473863285,-0.03923092244094853]],[2,"left toe2_end",8388608,833,[-1266],[1,4.097819306103645e-10,0.006149544846266508,-5.587935669737476e-10]],[6,"left toe2_end_end",8388608,834,[[1,"left toe2_end_end_end",8388608,-1267,[1,9.31322467062623e-12,0.006149547640234232,-3.7252903539730653e-10]]],[1,-6.519258050063925e-11,0.006149547174572945,-7.823109382520954e-10]],[23,"comp_LOD_2",8388608,11,[[18,1,-1268,[209,210,211,212,213,214],[7],11,215,216]],[3,1.5454308319985022e-8,0.707106721581899,-1.545430476727128e-8,0.7071068407911907],[1,99.99998474121094,99.99998474121094,99.99998474121094],[1,0.0000025044775805019677,89.99999034065368,7.675927522096591e-14]],[15,"Comp",8388608,12,[189],[3,-0.7071068407911907,1.54543154254125e-8,-1.545431187269876e-8,0.707106721581899],[1,9.999999046325684,9.999999046325684,9.999999046325684],[1,-90.00000965934633,7.675917777898835e-14,-0.0000025044787319857803]],[0,"spine0",8388608,189,[-1269],[1,3.7252903539730653e-10,0.003909075167030096,-0.00092517607845366],[3,-0.013759418954332359,-0.02019218487723872,0.021461381934783252,0.9994710416742307],[1,-1.5278449136403591,-2.281549172864686,2.490613936032426]],[0,"spine1",8388608,838,[90],[1,2.38418573772492e-9,0.00814820732921362,-0.0024583544582128525],[3,-0.014868528756110217,-0.017917059571555493,0.022798139868672962,0.9994689343083488],[1,-1.6580895794748667,-2.015768713908674,2.642550980417355]],[0,"spine3",8388608,90,[-1270],[1,-5.066394859198908e-9,0.007588513661175966,-0.0019066231325268745],[3,0.020843829879679646,-0.010312797462126119,0.02867264475851253,0.9993182978445878],[1,2.4254322263752033,-1.251564674977951,3.2605303745488974]],[0,"spine4",8388608,840,[91],[1,8.940696516468449e-10,0.008185500279068947,-0.0010699452832341194],[3,0.034254656149486834,-0.005485426314216125,0.05256574367670215,0.9980147149325741],[1,3.9755012009245196,-0.8382953020260973,6.001066118615762]],[0,"left arm0",8388608,91,[-1271],[1,0.013951382599771023,0.016790246590971947,0.016093119978904724],[3,-0.012916867621556222,0.00014373601880273082,-0.00014094100334092016,0.9999165535215615],[1,-1.4802028695162106,0.01626094512362714,-0.016362054691447837]],[0,"left arm1",8388608,842,[-1272],[1,0.0010551911545917392,-0.007742427755147219,0.021822387352585793],[3,-0.10235335396090298,0.001129400536059972,-0.0011684727766184703,0.9947467768526588],[1,-11.749275059688674,0.11503553126164667,-0.1464404324964447]],[0,"left hand",8388608,843,[-1273],[1,0.00009416900866199285,0.015645749866962433,0.010464519262313843],[3,0.3301397245118249,0.0005644782763280047,-0.00025354159734460773,0.9439318722133448],[1,38.5545242496592,0.07064951765266128,-0.006069833765081632]],[2,"left finger3",8388608,844,[-1274],[1,8.344650304081824e-9,0.009227232076227665,0.004294860176742077]],[0,"left finger4",8388608,845,[-1275],[1,0.00005059279646957293,0.002204132964834571,0.003155963961035013],[3,0.000007673238672860348,-0.000009594779093684764,0.7071121455309554,0.7071014166947133],[1,0,0.0012435109893833497,90]],[0,"left finger5",8388608,846,[-1276],[1,0.00042112517985515296,-0.0001340837770840153,0.005627484526485205],[3,-0.09230603438907505,0.09230350119162783,-0.7010510090251443,0.7010614398381622],[1,0,15.001533567975944,-90]],[0,"left finger5_end",8388608,847,[-1277],[1,-8.940696516468449e-10,0.0056448024697601795,8.940696516468449e-10],[3,0.0000019192621039034926,-0.0000020400616449398495,-5.30853654365919e-8,0.999999999996076],[1,0.0002199312242558464,-0.00023377383272774185,-0.000006083583460109329]],[3,"left finger5_end_end",8388608,848,[[1,"left finger5_end_end_end",8388608,-1278,[1,1.1175871339474952e-9,0.005644826218485832,-8.12113309933693e-9]]],[1,-1.639127722441458e-9,0.005644821096211672,2.4586914726398845e-9],[3,-0.0000027220794436078912,0.000002801418531795414,4.222383722630338e-7,0.9999999999922822],[1,-0.0003119274627818528,0.00032101904875022903,0.00004838407951892836]],[0,"right arm0",8388608,91,[-1279],[1,-0.013974963687360287,0.016790248453617096,0.01609310694038868],[3,-0.009031942320728738,0.009235106619735695,0.7069480580786489,0.707147495224627],[1,-89.36624562339624,89.38270908907008,88.51971961785377]],[0,"right arm1",8388608,850,[-1280],[1,-0.007742421701550484,0.0010551821906119585,0.021822378039360046],[3,0.0011293978723013517,0.10235323600169045,-0.00116846522389361,0.9947467890018288],[1,0.14244476872426218,11.749557580346796,-0.11994645319001446]],[0,"right hand",8388608,851,[-1281],[1,0.015645867213606834,0.00009417087130714208,0.010464523918926716],[3,0.000564268567534426,-0.33015090822731785,-0.00025365272179565655,0.9439279607353295],[1,0.05143848065160351,-38.55585629010495,-0.048784345696111106]],[0,"right finger3",8388608,852,[-1282],[1,0.009227292612195015,-7.599592066753758e-9,0.004294626880437136],[3,1.6298153937492528e-9,0.000002770327682799972,7.275961777491847e-11,0.9999999999961626],[1,1.867630637958631e-7,0.0003174561681857834,8.338155429893503e-9]],[0,"right finger4",8388608,853,[-1283],[1,0.0022041972260922194,0.0000505955504195299,0.003155910177156329],[3,-6.984919309606769e-10,-0.000001633585839042647,1.4551918697794388e-11,0.9999999999986657],[1,-8.004127661182475e-8,-0.00018719514809904426,1.6676578047004918e-9]],[0,"right finger5",8388608,854,[-1284],[1,0.00042110466165468097,0.0001340793096460402,0.005627505015581846],[3,-0.0000019479955177752215,0.13052655589795578,0.000007322112103060771,0.9914448134656862],[1,-0.00033083272104267504,15.000042036776538,0.000802737353376578]],[2,"right finger5_end",8388608,855,[-1285],[1,-2.2538007016237316e-9,0.0056448327377438545,1.0002404238207419e-8]],[3,"right finger5_end_end",8388608,856,[[1,"right finger5_end_end_end",8388608,-1286,[1,-1.974403973648009e-9,0.0056448327377438545,1.7881393032936899e-9]]],[1,-5.33647837031026e-9,0.005644836463034153,1.162290530487553e-8],[3,0.0000015022819752612897,-2.2382664610605817e-8,-2.478482770126758e-7,0.9999999999988407],[1,0.00017214883300648067,-0.0000025648217660946174,-0.000028401324317949088]],[0,"neck0",8388608,91,[-1287],[1,-2.6822091214739885e-9,0.015256059356033802,-0.00595217477530241],[3,-0.07123410846437608,-0.014987513727382237,0.028143017193092368,0.9969498717622799],[1,-8.130615612736486,-1.4851653091889252,3.3393464157132535]],[0,"neck1",8388608,858,[-1288],[1,8.940696516468449e-10,0.017543168738484383,-0.016172247007489204],[3,-0.10494259662545745,0.0000061833183705481795,-0.00008328176707578431,0.9944782775100824],[1,-12.047718701658109,-0.0002968642299670698,-0.009565049350708435]],[0,"neck2",8388608,859,[-1289],[1,4.470348535789981e-9,0.017027776688337326,-0.016856519505381584],[3,-0.046461860349687426,-0.0033375966875403224,-0.003000175268067493,0.9989099833966815],[1,-5.327239229013977,-0.3980264941498488,-0.3256519505946268]],[0,"neck3",8388608,860,[190],[1,2.6822091214739885e-9,0.00766771798953414,-0.011520219966769218],[3,0.1129740622069687,-0.002462202908184354,-0.0016172785493945123,0.9935935704478913],[1,12.973139155541443,-0.25940575636329644,-0.21601506953467783]],[0,"right eye",8388608,191,[-1290],[1,-0.007840261794626713,0.008088086731731892,0.0008104066364467144],[3,0.0000015153221586345103,0.000001291498019247911,0.7071119369679933,0.7071016253647057],[1,0,0.0002455702580163,90]],[0,"right eye_end",8388608,862,[-1291],[1,7.450580596923828e-9,0.01128531713038683,1.2665987370041876e-8],[3,0.0000016917472294127718,6.170012056818174e-9,-4.1886227108925643e-7,0.9999999999984812],[1,0.00019385995279289637,7.071125014201777e-7,-0.000047998079465172375]],[3,"right eye_end_end",8388608,863,[[1,"right eye_end_end_end",8388608,-1292,[1,5.960464899423812e-10,0.011285314336419106,3.44216815051368e-8]]],[1,1.3709068547029801e-8,0.011285322718322277,7.227063392178934e-9],[3,-0.0000025331978576933247,1.1146769729428502e-8,-6.984920419816702e-10,0.9999999999967915],[1,-0.00029028309183423673,0.0000012773255186363435,-8.004452777657305e-8]],[0,"left eye",8388608,191,[-1293],[1,0.007816696539521217,0.008088074624538422,0.0008104006410576403],[3,-0.4833322786123404,0.5161297941585465,0.4833344541818849,0.5161276483913245],[1,-86.24125517318419,90.0002474051749,0.000009826573641812891]],[0,"left eye_end",8388608,865,[-1294],[1,1.2433156726388006e-8,0.011285322718322277,5.856855000985206e-9],[3,1.0477378964409168e-9,5.915352208055046e-9,0.0000016901828985258776,0.9999999999985716],[1,1.200607733149561e-7,6.778492287861956e-7,0.00019368069338224458]],[3,"left eye_end_end",8388608,866,[[1,"left eye_end_end_end",8388608,-1295,[1,7.078051478259795e-9,0.011285316199064255,4.842877210364804e-10]]],[1,1.672655258744271e-8,0.011285318061709404,-2.1606683109354208e-9],[3,-4.2284960954866026e-7,8.658391337221959e-9,-0.0000016913039644324944,0.9999999999984803],[1,-0.00004845499431391979,9.920966098682533e-7,-0.00019380915849106982]],[2,"jaw1",8388608,192,[-1296],[1,1.862645149230957e-9,0.045013949275016785,0.015709517523646355]],[2,"jaw1_end",8388608,868,[-1297],[1,-7.450580707946131e-10,0.027444317936897278,-1.0989605891964516e-9]],[3,"jaw1_end_end",8388608,869,[[11,"jaw1_end_end_end",8388608,-1298,[1,-4.4703482582342247e-10,0.02744431234896183,-2.1569430685985935e-8],[3,-0.0000010203220881511088,0.0000010196818038810613,1.4551915228351714e-9,0.9999999999989597],[1,-0.00011692029896006154,0.00011684692778744354,1.6663344378198693e-7]]],[1,1.7881393032936899e-9,0.027444347739219666,1.7862767265341972e-8],[3,0.000002010551270351287,-0.000002014101482919643,-3.783497126692792e-10,0.9999999999959506],[1,0.00023039220448395494,-0.0002307990288771928,-4.3819716712579345e-8]],[0,"tongue0",8388608,192,[-1299],[1,3.5762786065873797e-9,0.004420141689479351,0.005698944441974163],[3,0.14470117871230787,-1.3000424365683173e-8,0.000007537388013103071,0.9894754008172494],[1,16.639950996468475,-0.00012645551306502084,0.0008544151586764777]],[0,"tongue1",8388608,871,[-1300],[1,-3.3527611797978807e-9,0.011291980743408203,-0.0012327989097684622],[3,-0.06670764023167682,-1.9519765523348155e-7,-2.3801742565346996e-8,0.9977725646331845],[1,-7.649813158440861,-0.000022500124022819532,-0.0000012292867664396407]],[0,"tongue2",8388608,872,[-1301],[1,2.654269304347423e-10,0.01418344583362341,0.0005741515778936446],[3,-0.1374952653740075,5.523982732180117e-8,-4.5837314709614335e-8,0.9905024240251641],[1,-15.805867716311552,0.000005547694689655366,-0.000006073030173183047]],[0,"tongue2_end",8388608,873,[-1302],[1,-1.3411045607369942e-9,0.014195075258612633,-5.79049830307099e-9],[3,0.0000014945978818981794,-0.0000014533287639974586,-3.259628789102487e-9,0.9999999999978271],[1,0.00017126830086094277,-0.00016653920828563922,-3.737748539378029e-7]],[3,"tongue2_end_end",8388608,874,[[11,"tongue2_end_end_end",8388608,-1303,[1,-1.043081288010228e-9,0.014195038005709648,1.0114162840579866e-8],[3,0.0000021189916878843384,-0.0000021222513168954777,-2.3283064365282257e-10,0.9999999999955029],[1,0.00024281856102116275,-0.00024319208699148472,-2.7195748456137112e-8]]],[1,1.043081288010228e-9,0.014195079915225506,3.408640703028709e-9],[3,-0.0000035538696465228525,0.0000034507834242990154,-8.149073638008481e-10,0.9999999999877311],[1,-0.00040724346304701155,0.0003954306521184932,-9.478681427174957e-8]],[0,"Right Torso",8388608,90,[-1304],[1,-0.017464520409703255,0.009573213756084442,0.030453024432063103],[3,-1.4765793285428368e-8,-1.2075035933521495e-7,0.7071068407911856,0.707106721581894],[1,0,-0.000002392899432563725,90]],[2,"Right Torso_end",8388608,876,[-1305],[1,2.784654506982065e-9,0.02686261013150215,3.81842246710562e-9]],[6,"Right Torso_end_end",8388608,877,[[1,"Right Torso_end_end_end",8388608,-1306,[1,-1.1431984248133631e-8,0.0268626157194376,1.240521640966108e-8]]],[1,1.9604340373291507e-9,0.0268626157194376,-2.1047890097491972e-9]],[0,"Left Torso",8388608,90,[-1307],[1,0.017440930008888245,0.009573224000632763,0.030453002080321312],[3,0.500000126659862,-0.4999998882412794,-0.5000000670552164,-0.4999999180436022],[1,-90.0000221981152,89.99999487735771,-0.0000017075463256145647]],[2,"Left Torso_end",8388608,879,[-1308],[1,1.7508864358362075e-9,0.026862619444727898,-2.8824433950802586e-9]],[6,"Left Torso_end_end",8388608,880,[[1,"Left Torso_end_end_end",8388608,-1309,[1,-1.5832484212552345e-9,0.0268626157194376,-2.9336661988565993e-9]]],[1,-2.2165478341662492e-9,0.02686261013150215,5.820766091346741e-10]],[0,"tail0",8388608,92,[-1310],[1,2.38418573772492e-9,-0.01958109252154827,0.004617891740053892],[3,0.05616177867879355,0.028151084982951425,0.004469596682825916,0.9980147262116976],[1,6.4223793484064045,3.1925924357445123,0.692349061695615]],[0,"tail1",8388608,882,[-1311],[1,-1.19209286886246e-9,-0.026223542168736458,-0.0007214128854684532],[3,0.0031083005351771912,0.0014343740341220459,-0.01194275649172853,0.9999228228249882],[1,0.35822495434177337,0.16865661998027534,-1.3680525498125806]],[0,"tail2",8388608,883,[-1312],[1,2.38418573772492e-9,-0.03143041208386421,0.00010329753422411159],[3,0.003111778308726112,0.0013797485805861092,-0.011948764385323093,0.999922817101038],[1,0.35854984255366873,0.16240262721771287,-1.368760051413259]],[0,"tail3",8388608,884,[-1313],[1,-2.38418573772492e-9,-0.02927638776600361,0.00020010948355775326],[3,0.0031156022961344666,0.0013251705064710123,-0.011954564573702881,0.999922809686485],[1,0.35891436722033493,0.15615446645465633,-1.3694437187155908]],[0,"tail4",8388608,885,[-1314],[1,-4.76837147544984e-9,-0.027391791343688965,0.00019631088071037084],[3,0.0035525737043447716,0.0014388119918525726,-0.011879632153546678,0.999922088654923],[1,0.40914076039233777,0.16974711963651254,-1.3607416889422317]],[0,"tail5",8388608,886,[-1315],[1,-1.1920929132713809e-8,-0.027199802920222282,0.00030194639111869037],[3,-0.0012750914229008672,-0.008457227549468383,0.03171206615500072,0.9994604515958702],[1,-0.11553545910896909,-0.9659600928893592,3.6356494243513264]],[0,"tail6",8388608,887,[-1316],[1,9.53674295089968e-9,-0.025129156187176704,0.0011446529533714056],[3,-0.014449086548818109,-0.008872484528700394,0.0315430043349346,0.9993585651775438],[1,-1.6260902547158433,-0.9658152257334518,3.629360742339713]],[0,"tail7",8388608,888,[-1317],[1,-5.9604645663569045e-9,-0.024538598954677582,0.0006162720965221524],[3,-0.0035734080338886967,-0.010646847758866457,0.03040127757568557,0.9994746808747028],[1,-0.3728700575034159,-1.2092794445726276,3.488414221479557]],[0,"tail8",8388608,889,[-1318],[1,8.940697071579962e-9,-0.013206311501562595,0.0002693343267310411],[3,-0.00421273810623833,-0.009717253247809712,0.030597281375363466,0.9994756796437836],[1,-0.449268537675818,-1.1002936678150768,3.5112401274933487]],[2,"tail8_end",8388608,890,[-1319],[1,1.19209286886246e-9,0.013208942487835884,0]],[6,"tail8_end_end",8388608,891,[[1,"tail8_end_end_end",8388608,-1320,[1,1.19209286886246e-9,0.013209017924964428,-6.556510889765832e-9]]],[1,5.9604645663569045e-9,0.013209058903157711,1.7881394143159923e-9]],[0,"right leg0",8388608,92,[-1321],[1,-0.019055675715208054,0.0033091562800109386,0.016144664958119392],[3,-0.1758038810899314,-0.017633571842268422,0.6676717853270461,0.723184927674793],[1,-78.57820982882251,62.74263400658564,76.38525243107132]],[0,"right leg1",8388608,893,[-1322],[1,0.011304101906716824,-0.0015700083458796144,0.04155361279845238],[3,0.06429759265723188,0.04945126062606861,0.0029156149162815385,0.9967005024532882],[1,7.347795831743105,5.636019159221763,0.6973746779464639]],[0,"right foot0",8388608,894,[-1323],[1,-0.029886450618505478,0.0015699955401942134,0.032055873423814774],[3,-0.08061608046528909,-0.12210650177915211,0.006311681215104875,0.989217474812243],[1,-9.09280657404995,-13.92707573541503,1.8437953581496462]],[0,"right foot1",8388608,895,[-1324],[1,0.003907094709575176,-0.00014767363609280437,0.018782703205943108],[3,0.012718700017344608,-0.019753488005658924,0.011716660245581385,0.9996553177241488],[1,1.4840307666426562,-2.2810810511675452,1.313492797221609]],[0,"right foot2",8388608,896,[-1325],[1,0.005417832173407078,0.0001594980276422575,0.010887287557125092],[3,0.135298567316826,0.9880735445127315,-0.06766532475870929,0.028746689224323076],[1,8.434477156871264,175.53389993115258,15.276627672092612]],[0,"right toe0",8388608,897,[-1326],[1,-0.004766051657497883,0.0004802089533768594,0.00009099081216845661],[3,0.13046292620968675,0.9907689432631921,-0.004293484967174884,0.036577205152664605],[1,1.070648052511951,175.63081923016807,14.963469722274361]],[0,"right toe1",8388608,898,[-1327],[1,0.007804563734680414,-0.0004186089208815247,0.0005770097486674786],[3,-0.0011280903034880329,0.050888072283556754,-0.060021526621159046,0.9968984641645288],[1,0.22274179400602048,5.857801964075723,-6.879726116801438]],[0,"right toe2",8388608,899,[-1328],[1,0.006148821674287319,0.0003150858683511615,-5.21540644005114e-10],[3,0.0000018084104049840189,-0.23793532170532997,0.000007286618322553768,0.9712810008584621],[1,0.00039994958420425553,-27.52942671179931,0.0007616980255523596]],[2,"right toe2_end",8388608,900,[-1329],[1,-3.8743017682918435e-9,0.006156904622912407,7.450580707946131e-10]],[6,"right toe2_end_end",8388608,901,[[1,"right toe2_end_end_end",8388608,-1330,[1,-5.9604643443123e-10,0.006156894378364086,-5.9604643443123e-10]]],[1,-1.639127722441458e-9,0.006156902760267258,2.98023217215615e-10]],[0,"left leg0",8388608,92,[-1331],[1,0.01840258203446865,0.0034433561377227306,0.024012885987758636],[3,-0.026719246605534135,-0.019741520688928448,0.0797837020365437,0.9962584579872158],[1,-2.9085726705116217,-2.0361285181125104,9.208366644433342]],[0,"left leg1",8388608,903,[-1332],[1,-0.001570010674186051,0.011304106563329697,0.04155363142490387],[3,0.07505410346936253,-0.006625843860994315,0.003316218579660744,0.9971519354841928],[1,8.611106043601785,-0.7856617226002104,0.32194404411108085]],[0,"left foot0",8388608,904,[-1333],[1,0.0015700102085247636,-0.029886456206440926,0.03205588459968567],[3,0.09446010059390231,0.00524464439530843,-0.0064196456671164566,0.9954941342119829],[1,10.844803105330856,0.6678338961791349,-0.6755684135879525]],[0,"left foot1",8388608,905,[-1334],[1,-0.00014768153778277338,0.003907082136720419,0.018782710656523705],[3,-0.0688300711131612,-0.09169756385766402,-0.0010759593875588616,0.9934046609536936],[1,-7.871803697878175,-10.506304455837528,0.6007786594490084]],[0,"left foot2",8388608,906,[-1335],[1,0.0001594924251548946,0.005417830776423216,0.01088727731257677],[3,0.16557359601450405,-0.293024776702799,0.645517941625473,0.6855862101739744],[1,79.53737191070073,-90.47599166257511,52.00663712930689]],[0,"left toe0",8388608,907,[-1336],[1,0.0032210317440330982,-0.00048022984992712736,-0.0035140234977006912],[3,-0.00025397410362682974,0.993890734182026,-0.00042949190776777463,0.11036738440757354],[1,0.045703432009614624,167.32702392606475,-0.03435734826850064]],[0,"left toe1",8388608,908,[-1337],[1,-0.005144279450178146,0.00001669451557972934,0.0058973608538508415],[3,0.00047318134286587397,-0.25816592798791194,-0.00016007157822210818,0.9661004627380357],[1,0.047648980608224735,-29.922515804701185,-0.03171946383206957]],[0,"left toe2",8388608,909,[-1338],[1,1.7881393032936899e-9,0.00008683509804541245,0.006148934364318848],[3,0.00038137636832103974,-0.05181359592711081,-0.0003230278147168311,0.9986566484443983],[1,0.04172587266780249,-5.9400470473863285,-0.03923092244094853]],[2,"left toe2_end",8388608,910,[-1339],[1,4.097819306103645e-10,0.006149544846266508,-5.587935669737476e-10]],[6,"left toe2_end_end",8388608,911,[[1,"left toe2_end_end_end",8388608,-1340,[1,9.31322467062623e-12,0.006149547640234232,-3.7252903539730653e-10]]],[1,-6.519258050063925e-11,0.006149547174572945,-7.823109382520954e-10]],[23,"comp_LOD_2",8388608,12,[[18,1,-1341,[226,227,228,229,230,231],[7],12,232,233]],[3,1.5454308319985022e-8,0.707106721581899,-1.545430476727128e-8,0.7071068407911907],[1,99.99998474121094,99.99998474121094,99.99998474121094],[1,0.0000025044775805019677,89.99999034065368,7.675927522096591e-14]],[15,"Comp",8388608,13,[195],[3,-0.7071068407911907,1.54543154254125e-8,-1.545431187269876e-8,0.707106721581899],[1,9.999999046325684,9.999999046325684,9.999999046325684],[1,-90.00000965934633,7.675917777898835e-14,-0.0000025044787319857803]],[0,"spine0",8388608,195,[-1342],[1,3.7252903539730653e-10,0.003909075167030096,-0.00092517607845366],[3,-0.013759418954332359,-0.02019218487723872,0.021461381934783252,0.9994710416742307],[1,-1.5278449136403591,-2.281549172864686,2.490613936032426]],[0,"spine1",8388608,915,[94],[1,2.38418573772492e-9,0.00814820732921362,-0.0024583544582128525],[3,-0.014868528756110217,-0.017917059571555493,0.022798139868672962,0.9994689343083488],[1,-1.6580895794748667,-2.015768713908674,2.642550980417355]],[0,"spine3",8388608,94,[-1343],[1,-5.066394859198908e-9,0.007588513661175966,-0.0019066231325268745],[3,0.020843829879679646,-0.010312797462126119,0.02867264475851253,0.9993182978445878],[1,2.4254322263752033,-1.251564674977951,3.2605303745488974]],[0,"spine4",8388608,917,[95],[1,8.940696516468449e-10,0.008185500279068947,-0.0010699452832341194],[3,0.034254656149486834,-0.005485426314216125,0.05256574367670215,0.9980147149325741],[1,3.9755012009245196,-0.8382953020260973,6.001066118615762]],[0,"left arm0",8388608,95,[-1344],[1,0.013951382599771023,0.016790246590971947,0.016093119978904724],[3,-0.012916867621556222,0.00014373601880273082,-0.00014094100334092016,0.9999165535215615],[1,-1.4802028695162106,0.01626094512362714,-0.016362054691447837]],[0,"left arm1",8388608,919,[-1345],[1,0.0010551911545917392,-0.007742427755147219,0.021822387352585793],[3,-0.10235335396090298,0.001129400536059972,-0.0011684727766184703,0.9947467768526588],[1,-11.749275059688674,0.11503553126164667,-0.1464404324964447]],[0,"left hand",8388608,920,[-1346],[1,0.00009416900866199285,0.015645749866962433,0.010464519262313843],[3,0.3301397245118249,0.0005644782763280047,-0.00025354159734460773,0.9439318722133448],[1,38.5545242496592,0.07064951765266128,-0.006069833765081632]],[2,"left finger3",8388608,921,[-1347],[1,8.344650304081824e-9,0.009227232076227665,0.004294860176742077]],[0,"left finger4",8388608,922,[-1348],[1,0.00005059279646957293,0.002204132964834571,0.003155963961035013],[3,0.000007673238672860348,-0.000009594779093684764,0.7071121455309554,0.7071014166947133],[1,0,0.0012435109893833497,90]],[0,"left finger5",8388608,923,[-1349],[1,0.00042112517985515296,-0.0001340837770840153,0.005627484526485205],[3,-0.09230603438907505,0.09230350119162783,-0.7010510090251443,0.7010614398381622],[1,0,15.001533567975944,-90]],[0,"left finger5_end",8388608,924,[-1350],[1,-8.940696516468449e-10,0.0056448024697601795,8.940696516468449e-10],[3,0.0000019192621039034926,-0.0000020400616449398495,-5.30853654365919e-8,0.999999999996076],[1,0.0002199312242558464,-0.00023377383272774185,-0.000006083583460109329]],[3,"left finger5_end_end",8388608,925,[[1,"left finger5_end_end_end",8388608,-1351,[1,1.1175871339474952e-9,0.005644826218485832,-8.12113309933693e-9]]],[1,-1.639127722441458e-9,0.005644821096211672,2.4586914726398845e-9],[3,-0.0000027220794436078912,0.000002801418531795414,4.222383722630338e-7,0.9999999999922822],[1,-0.0003119274627818528,0.00032101904875022903,0.00004838407951892836]],[0,"right arm0",8388608,95,[-1352],[1,-0.013974963687360287,0.016790248453617096,0.01609310694038868],[3,-0.009031942320728738,0.009235106619735695,0.7069480580786489,0.707147495224627],[1,-89.36624562339624,89.38270908907008,88.51971961785377]],[0,"right arm1",8388608,927,[-1353],[1,-0.007742421701550484,0.0010551821906119585,0.021822378039360046],[3,0.0011293978723013517,0.10235323600169045,-0.00116846522389361,0.9947467890018288],[1,0.14244476872426218,11.749557580346796,-0.11994645319001446]],[0,"right hand",8388608,928,[-1354],[1,0.015645867213606834,0.00009417087130714208,0.010464523918926716],[3,0.000564268567534426,-0.33015090822731785,-0.00025365272179565655,0.9439279607353295],[1,0.05143848065160351,-38.55585629010495,-0.048784345696111106]],[0,"right finger3",8388608,929,[-1355],[1,0.009227292612195015,-7.599592066753758e-9,0.004294626880437136],[3,1.6298153937492528e-9,0.000002770327682799972,7.275961777491847e-11,0.9999999999961626],[1,1.867630637958631e-7,0.0003174561681857834,8.338155429893503e-9]],[0,"right finger4",8388608,930,[-1356],[1,0.0022041972260922194,0.0000505955504195299,0.003155910177156329],[3,-6.984919309606769e-10,-0.000001633585839042647,1.4551918697794388e-11,0.9999999999986657],[1,-8.004127661182475e-8,-0.00018719514809904426,1.6676578047004918e-9]],[0,"right finger5",8388608,931,[-1357],[1,0.00042110466165468097,0.0001340793096460402,0.005627505015581846],[3,-0.0000019479955177752215,0.13052655589795578,0.000007322112103060771,0.9914448134656862],[1,-0.00033083272104267504,15.000042036776538,0.000802737353376578]],[2,"right finger5_end",8388608,932,[-1358],[1,-2.2538007016237316e-9,0.0056448327377438545,1.0002404238207419e-8]],[3,"right finger5_end_end",8388608,933,[[1,"right finger5_end_end_end",8388608,-1359,[1,-1.974403973648009e-9,0.0056448327377438545,1.7881393032936899e-9]]],[1,-5.33647837031026e-9,0.005644836463034153,1.162290530487553e-8],[3,0.0000015022819752612897,-2.2382664610605817e-8,-2.478482770126758e-7,0.9999999999988407],[1,0.00017214883300648067,-0.0000025648217660946174,-0.000028401324317949088]],[0,"neck0",8388608,95,[-1360],[1,-2.6822091214739885e-9,0.015256059356033802,-0.00595217477530241],[3,-0.07123410846437608,-0.014987513727382237,0.028143017193092368,0.9969498717622799],[1,-8.130615612736486,-1.4851653091889252,3.3393464157132535]],[0,"neck1",8388608,935,[-1361],[1,8.940696516468449e-10,0.017543168738484383,-0.016172247007489204],[3,-0.10494259662545745,0.0000061833183705481795,-0.00008328176707578431,0.9944782775100824],[1,-12.047718701658109,-0.0002968642299670698,-0.009565049350708435]],[0,"neck2",8388608,936,[-1362],[1,4.470348535789981e-9,0.017027776688337326,-0.016856519505381584],[3,-0.046461860349687426,-0.0033375966875403224,-0.003000175268067493,0.9989099833966815],[1,-5.327239229013977,-0.3980264941498488,-0.3256519505946268]],[0,"neck3",8388608,937,[196],[1,2.6822091214739885e-9,0.00766771798953414,-0.011520219966769218],[3,0.1129740622069687,-0.002462202908184354,-0.0016172785493945123,0.9935935704478913],[1,12.973139155541443,-0.25940575636329644,-0.21601506953467783]],[0,"right eye",8388608,197,[-1363],[1,-0.007840261794626713,0.008088086731731892,0.0008104066364467144],[3,0.0000015153221586345103,0.000001291498019247911,0.7071119369679933,0.7071016253647057],[1,0,0.0002455702580163,90]],[0,"right eye_end",8388608,939,[-1364],[1,7.450580596923828e-9,0.01128531713038683,1.2665987370041876e-8],[3,0.0000016917472294127718,6.170012056818174e-9,-4.1886227108925643e-7,0.9999999999984812],[1,0.00019385995279289637,7.071125014201777e-7,-0.000047998079465172375]],[3,"right eye_end_end",8388608,940,[[1,"right eye_end_end_end",8388608,-1365,[1,5.960464899423812e-10,0.011285314336419106,3.44216815051368e-8]]],[1,1.3709068547029801e-8,0.011285322718322277,7.227063392178934e-9],[3,-0.0000025331978576933247,1.1146769729428502e-8,-6.984920419816702e-10,0.9999999999967915],[1,-0.00029028309183423673,0.0000012773255186363435,-8.004452777657305e-8]],[0,"left eye",8388608,197,[-1366],[1,0.007816696539521217,0.008088074624538422,0.0008104006410576403],[3,-0.4833322786123404,0.5161297941585465,0.4833344541818849,0.5161276483913245],[1,-86.24125517318419,90.0002474051749,0.000009826573641812891]],[0,"left eye_end",8388608,942,[-1367],[1,1.2433156726388006e-8,0.011285322718322277,5.856855000985206e-9],[3,1.0477378964409168e-9,5.915352208055046e-9,0.0000016901828985258776,0.9999999999985716],[1,1.200607733149561e-7,6.778492287861956e-7,0.00019368069338224458]],[3,"left eye_end_end",8388608,943,[[1,"left eye_end_end_end",8388608,-1368,[1,7.078051478259795e-9,0.011285316199064255,4.842877210364804e-10]]],[1,1.672655258744271e-8,0.011285318061709404,-2.1606683109354208e-9],[3,-4.2284960954866026e-7,8.658391337221959e-9,-0.0000016913039644324944,0.9999999999984803],[1,-0.00004845499431391979,9.920966098682533e-7,-0.00019380915849106982]],[2,"jaw1",8388608,198,[-1369],[1,1.862645149230957e-9,0.045013949275016785,0.015709517523646355]],[2,"jaw1_end",8388608,945,[-1370],[1,-7.450580707946131e-10,0.027444317936897278,-1.0989605891964516e-9]],[3,"jaw1_end_end",8388608,946,[[11,"jaw1_end_end_end",8388608,-1371,[1,-4.4703482582342247e-10,0.02744431234896183,-2.1569430685985935e-8],[3,-0.0000010203220881511088,0.0000010196818038810613,1.4551915228351714e-9,0.9999999999989597],[1,-0.00011692029896006154,0.00011684692778744354,1.6663344378198693e-7]]],[1,1.7881393032936899e-9,0.027444347739219666,1.7862767265341972e-8],[3,0.000002010551270351287,-0.000002014101482919643,-3.783497126692792e-10,0.9999999999959506],[1,0.00023039220448395494,-0.0002307990288771928,-4.3819716712579345e-8]],[0,"tongue0",8388608,198,[-1372],[1,3.5762786065873797e-9,0.004420141689479351,0.005698944441974163],[3,0.14470117871230787,-1.3000424365683173e-8,0.000007537388013103071,0.9894754008172494],[1,16.639950996468475,-0.00012645551306502084,0.0008544151586764777]],[0,"tongue1",8388608,948,[-1373],[1,-3.3527611797978807e-9,0.011291980743408203,-0.0012327989097684622],[3,-0.06670764023167682,-1.9519765523348155e-7,-2.3801742565346996e-8,0.9977725646331845],[1,-7.649813158440861,-0.000022500124022819532,-0.0000012292867664396407]],[0,"tongue2",8388608,949,[-1374],[1,2.654269304347423e-10,0.01418344583362341,0.0005741515778936446],[3,-0.1374952653740075,5.523982732180117e-8,-4.5837314709614335e-8,0.9905024240251641],[1,-15.805867716311552,0.000005547694689655366,-0.000006073030173183047]],[0,"tongue2_end",8388608,950,[-1375],[1,-1.3411045607369942e-9,0.014195075258612633,-5.79049830307099e-9],[3,0.0000014945978818981794,-0.0000014533287639974586,-3.259628789102487e-9,0.9999999999978271],[1,0.00017126830086094277,-0.00016653920828563922,-3.737748539378029e-7]],[3,"tongue2_end_end",8388608,951,[[11,"tongue2_end_end_end",8388608,-1376,[1,-1.043081288010228e-9,0.014195038005709648,1.0114162840579866e-8],[3,0.0000021189916878843384,-0.0000021222513168954777,-2.3283064365282257e-10,0.9999999999955029],[1,0.00024281856102116275,-0.00024319208699148472,-2.7195748456137112e-8]]],[1,1.043081288010228e-9,0.014195079915225506,3.408640703028709e-9],[3,-0.0000035538696465228525,0.0000034507834242990154,-8.149073638008481e-10,0.9999999999877311],[1,-0.00040724346304701155,0.0003954306521184932,-9.478681427174957e-8]],[0,"Right Torso",8388608,94,[-1377],[1,-0.017464520409703255,0.009573213756084442,0.030453024432063103],[3,-1.4765793285428368e-8,-1.2075035933521495e-7,0.7071068407911856,0.707106721581894],[1,0,-0.000002392899432563725,90]],[2,"Right Torso_end",8388608,953,[-1378],[1,2.784654506982065e-9,0.02686261013150215,3.81842246710562e-9]],[6,"Right Torso_end_end",8388608,954,[[1,"Right Torso_end_end_end",8388608,-1379,[1,-1.1431984248133631e-8,0.0268626157194376,1.240521640966108e-8]]],[1,1.9604340373291507e-9,0.0268626157194376,-2.1047890097491972e-9]],[0,"Left Torso",8388608,94,[-1380],[1,0.017440930008888245,0.009573224000632763,0.030453002080321312],[3,0.500000126659862,-0.4999998882412794,-0.5000000670552164,-0.4999999180436022],[1,-90.0000221981152,89.99999487735771,-0.0000017075463256145647]],[2,"Left Torso_end",8388608,956,[-1381],[1,1.7508864358362075e-9,0.026862619444727898,-2.8824433950802586e-9]],[6,"Left Torso_end_end",8388608,957,[[1,"Left Torso_end_end_end",8388608,-1382,[1,-1.5832484212552345e-9,0.0268626157194376,-2.9336661988565993e-9]]],[1,-2.2165478341662492e-9,0.02686261013150215,5.820766091346741e-10]],[0,"tail0",8388608,96,[-1383],[1,2.38418573772492e-9,-0.01958109252154827,0.004617891740053892],[3,0.05616177867879355,0.028151084982951425,0.004469596682825916,0.9980147262116976],[1,6.4223793484064045,3.1925924357445123,0.692349061695615]],[0,"tail1",8388608,959,[-1384],[1,-1.19209286886246e-9,-0.026223542168736458,-0.0007214128854684532],[3,0.0031083005351771912,0.0014343740341220459,-0.01194275649172853,0.9999228228249882],[1,0.35822495434177337,0.16865661998027534,-1.3680525498125806]],[0,"tail2",8388608,960,[-1385],[1,2.38418573772492e-9,-0.03143041208386421,0.00010329753422411159],[3,0.003111778308726112,0.0013797485805861092,-0.011948764385323093,0.999922817101038],[1,0.35854984255366873,0.16240262721771287,-1.368760051413259]],[0,"tail3",8388608,961,[-1386],[1,-2.38418573772492e-9,-0.02927638776600361,0.00020010948355775326],[3,0.0031156022961344666,0.0013251705064710123,-0.011954564573702881,0.999922809686485],[1,0.35891436722033493,0.15615446645465633,-1.3694437187155908]],[0,"tail4",8388608,962,[-1387],[1,-4.76837147544984e-9,-0.027391791343688965,0.00019631088071037084],[3,0.0035525737043447716,0.0014388119918525726,-0.011879632153546678,0.999922088654923],[1,0.40914076039233777,0.16974711963651254,-1.3607416889422317]],[0,"tail5",8388608,963,[-1388],[1,-1.1920929132713809e-8,-0.027199802920222282,0.00030194639111869037],[3,-0.0012750914229008672,-0.008457227549468383,0.03171206615500072,0.9994604515958702],[1,-0.11553545910896909,-0.9659600928893592,3.6356494243513264]],[0,"tail6",8388608,964,[-1389],[1,9.53674295089968e-9,-0.025129156187176704,0.0011446529533714056],[3,-0.014449086548818109,-0.008872484528700394,0.0315430043349346,0.9993585651775438],[1,-1.6260902547158433,-0.9658152257334518,3.629360742339713]],[0,"tail7",8388608,965,[-1390],[1,-5.9604645663569045e-9,-0.024538598954677582,0.0006162720965221524],[3,-0.0035734080338886967,-0.010646847758866457,0.03040127757568557,0.9994746808747028],[1,-0.3728700575034159,-1.2092794445726276,3.488414221479557]],[0,"tail8",8388608,966,[-1391],[1,8.940697071579962e-9,-0.013206311501562595,0.0002693343267310411],[3,-0.00421273810623833,-0.009717253247809712,0.030597281375363466,0.9994756796437836],[1,-0.449268537675818,-1.1002936678150768,3.5112401274933487]],[2,"tail8_end",8388608,967,[-1392],[1,1.19209286886246e-9,0.013208942487835884,0]],[6,"tail8_end_end",8388608,968,[[1,"tail8_end_end_end",8388608,-1393,[1,1.19209286886246e-9,0.013209017924964428,-6.556510889765832e-9]]],[1,5.9604645663569045e-9,0.013209058903157711,1.7881394143159923e-9]],[0,"right leg0",8388608,96,[-1394],[1,-0.019055675715208054,0.0033091562800109386,0.016144664958119392],[3,-0.1758038810899314,-0.017633571842268422,0.6676717853270461,0.723184927674793],[1,-78.57820982882251,62.74263400658564,76.38525243107132]],[0,"right leg1",8388608,970,[-1395],[1,0.011304101906716824,-0.0015700083458796144,0.04155361279845238],[3,0.06429759265723188,0.04945126062606861,0.0029156149162815385,0.9967005024532882],[1,7.347795831743105,5.636019159221763,0.6973746779464639]],[0,"right foot0",8388608,971,[-1396],[1,-0.029886450618505478,0.0015699955401942134,0.032055873423814774],[3,-0.08061608046528909,-0.12210650177915211,0.006311681215104875,0.989217474812243],[1,-9.09280657404995,-13.92707573541503,1.8437953581496462]],[0,"right foot1",8388608,972,[-1397],[1,0.003907094709575176,-0.00014767363609280437,0.018782703205943108],[3,0.012718700017344608,-0.019753488005658924,0.011716660245581385,0.9996553177241488],[1,1.4840307666426562,-2.2810810511675452,1.313492797221609]],[0,"right foot2",8388608,973,[-1398],[1,0.005417832173407078,0.0001594980276422575,0.010887287557125092],[3,0.135298567316826,0.9880735445127315,-0.06766532475870929,0.028746689224323076],[1,8.434477156871264,175.53389993115258,15.276627672092612]],[0,"right toe0",8388608,974,[-1399],[1,-0.004766051657497883,0.0004802089533768594,0.00009099081216845661],[3,0.13046292620968675,0.9907689432631921,-0.004293484967174884,0.036577205152664605],[1,1.070648052511951,175.63081923016807,14.963469722274361]],[0,"right toe1",8388608,975,[-1400],[1,0.007804563734680414,-0.0004186089208815247,0.0005770097486674786],[3,-0.0011280903034880329,0.050888072283556754,-0.060021526621159046,0.9968984641645288],[1,0.22274179400602048,5.857801964075723,-6.879726116801438]],[0,"right toe2",8388608,976,[-1401],[1,0.006148821674287319,0.0003150858683511615,-5.21540644005114e-10],[3,0.0000018084104049840189,-0.23793532170532997,0.000007286618322553768,0.9712810008584621],[1,0.00039994958420425553,-27.52942671179931,0.0007616980255523596]],[2,"right toe2_end",8388608,977,[-1402],[1,-3.8743017682918435e-9,0.006156904622912407,7.450580707946131e-10]],[6,"right toe2_end_end",8388608,978,[[1,"right toe2_end_end_end",8388608,-1403,[1,-5.9604643443123e-10,0.006156894378364086,-5.9604643443123e-10]]],[1,-1.639127722441458e-9,0.006156902760267258,2.98023217215615e-10]],[0,"left leg0",8388608,96,[-1404],[1,0.01840258203446865,0.0034433561377227306,0.024012885987758636],[3,-0.026719246605534135,-0.019741520688928448,0.0797837020365437,0.9962584579872158],[1,-2.9085726705116217,-2.0361285181125104,9.208366644433342]],[0,"left leg1",8388608,980,[-1405],[1,-0.001570010674186051,0.011304106563329697,0.04155363142490387],[3,0.07505410346936253,-0.006625843860994315,0.003316218579660744,0.9971519354841928],[1,8.611106043601785,-0.7856617226002104,0.32194404411108085]],[0,"left foot0",8388608,981,[-1406],[1,0.0015700102085247636,-0.029886456206440926,0.03205588459968567],[3,0.09446010059390231,0.00524464439530843,-0.0064196456671164566,0.9954941342119829],[1,10.844803105330856,0.6678338961791349,-0.6755684135879525]],[0,"left foot1",8388608,982,[-1407],[1,-0.00014768153778277338,0.003907082136720419,0.018782710656523705],[3,-0.0688300711131612,-0.09169756385766402,-0.0010759593875588616,0.9934046609536936],[1,-7.871803697878175,-10.506304455837528,0.6007786594490084]],[0,"left foot2",8388608,983,[-1408],[1,0.0001594924251548946,0.005417830776423216,0.01088727731257677],[3,0.16557359601450405,-0.293024776702799,0.645517941625473,0.6855862101739744],[1,79.53737191070073,-90.47599166257511,52.00663712930689]],[0,"left toe0",8388608,984,[-1409],[1,0.0032210317440330982,-0.00048022984992712736,-0.0035140234977006912],[3,-0.00025397410362682974,0.993890734182026,-0.00042949190776777463,0.11036738440757354],[1,0.045703432009614624,167.32702392606475,-0.03435734826850064]],[0,"left toe1",8388608,985,[-1410],[1,-0.005144279450178146,0.00001669451557972934,0.0058973608538508415],[3,0.00047318134286587397,-0.25816592798791194,-0.00016007157822210818,0.9661004627380357],[1,0.047648980608224735,-29.922515804701185,-0.03171946383206957]],[0,"left toe2",8388608,986,[-1411],[1,1.7881393032936899e-9,0.00008683509804541245,0.006148934364318848],[3,0.00038137636832103974,-0.05181359592711081,-0.0003230278147168311,0.9986566484443983],[1,0.04172587266780249,-5.9400470473863285,-0.03923092244094853]],[2,"left toe2_end",8388608,987,[-1412],[1,4.097819306103645e-10,0.006149544846266508,-5.587935669737476e-10]],[6,"left toe2_end_end",8388608,988,[[1,"left toe2_end_end_end",8388608,-1413,[1,9.31322467062623e-12,0.006149547640234232,-3.7252903539730653e-10]]],[1,-6.519258050063925e-11,0.006149547174572945,-7.823109382520954e-10]],[23,"comp_LOD_2",8388608,13,[[18,1,-1414,[243,244,245,246,247,248],[7],13,249,250]],[3,1.5454308319985022e-8,0.707106721581899,-1.545430476727128e-8,0.7071068407911907],[1,99.99998474121094,99.99998474121094,99.99998474121094],[1,0.0000025044775805019677,89.99999034065368,7.675927522096591e-14]],[15,"Comp",8388608,14,[200],[3,-0.7071068407911907,1.54543154254125e-8,-1.545431187269876e-8,0.707106721581899],[1,9.999999046325684,9.999999046325684,9.999999046325684],[1,-90.00000965934633,7.675917777898835e-14,-0.0000025044787319857803]],[0,"spine0",8388608,200,[-1415],[1,3.7252903539730653e-10,0.003909075167030096,-0.00092517607845366],[3,-0.013759418954332359,-0.02019218487723872,0.021461381934783252,0.9994710416742307],[1,-1.5278449136403591,-2.281549172864686,2.490613936032426]],[0,"spine1",8388608,992,[98],[1,2.38418573772492e-9,0.00814820732921362,-0.0024583544582128525],[3,-0.014868528756110217,-0.017917059571555493,0.022798139868672962,0.9994689343083488],[1,-1.6580895794748667,-2.015768713908674,2.642550980417355]],[0,"spine3",8388608,98,[-1416],[1,-5.066394859198908e-9,0.007588513661175966,-0.0019066231325268745],[3,0.020843829879679646,-0.010312797462126119,0.02867264475851253,0.9993182978445878],[1,2.4254322263752033,-1.251564674977951,3.2605303745488974]],[0,"spine4",8388608,994,[99],[1,8.940696516468449e-10,0.008185500279068947,-0.0010699452832341194],[3,0.034254656149486834,-0.005485426314216125,0.05256574367670215,0.9980147149325741],[1,3.9755012009245196,-0.8382953020260973,6.001066118615762]],[0,"left arm0",8388608,99,[-1417],[1,0.013951382599771023,0.016790246590971947,0.016093119978904724],[3,-0.012916867621556222,0.00014373601880273082,-0.00014094100334092016,0.9999165535215615],[1,-1.4802028695162106,0.01626094512362714,-0.016362054691447837]],[0,"left arm1",8388608,996,[-1418],[1,0.0010551911545917392,-0.007742427755147219,0.021822387352585793],[3,-0.10235335396090298,0.001129400536059972,-0.0011684727766184703,0.9947467768526588],[1,-11.749275059688674,0.11503553126164667,-0.1464404324964447]],[0,"left hand",8388608,997,[-1419],[1,0.00009416900866199285,0.015645749866962433,0.010464519262313843],[3,0.3301397245118249,0.0005644782763280047,-0.00025354159734460773,0.9439318722133448],[1,38.5545242496592,0.07064951765266128,-0.006069833765081632]],[2,"left finger3",8388608,998,[-1420],[1,8.344650304081824e-9,0.009227232076227665,0.004294860176742077]],[0,"left finger4",8388608,999,[-1421],[1,0.00005059279646957293,0.002204132964834571,0.003155963961035013],[3,0.000007673238672860348,-0.000009594779093684764,0.7071121455309554,0.7071014166947133],[1,0,0.0012435109893833497,90]],[0,"left finger5",8388608,1000,[-1422],[1,0.00042112517985515296,-0.0001340837770840153,0.005627484526485205],[3,-0.09230603438907505,0.09230350119162783,-0.7010510090251443,0.7010614398381622],[1,0,15.001533567975944,-90]],[0,"left finger5_end",8388608,1001,[-1423],[1,-8.940696516468449e-10,0.0056448024697601795,8.940696516468449e-10],[3,0.0000019192621039034926,-0.0000020400616449398495,-5.30853654365919e-8,0.999999999996076],[1,0.0002199312242558464,-0.00023377383272774185,-0.000006083583460109329]],[3,"left finger5_end_end",8388608,1002,[[1,"left finger5_end_end_end",8388608,-1424,[1,1.1175871339474952e-9,0.005644826218485832,-8.12113309933693e-9]]],[1,-1.639127722441458e-9,0.005644821096211672,2.4586914726398845e-9],[3,-0.0000027220794436078912,0.000002801418531795414,4.222383722630338e-7,0.9999999999922822],[1,-0.0003119274627818528,0.00032101904875022903,0.00004838407951892836]],[0,"right arm0",8388608,99,[-1425],[1,-0.013974963687360287,0.016790248453617096,0.01609310694038868],[3,-0.009031942320728738,0.009235106619735695,0.7069480580786489,0.707147495224627],[1,-89.36624562339624,89.38270908907008,88.51971961785377]],[0,"right arm1",8388608,1004,[-1426],[1,-0.007742421701550484,0.0010551821906119585,0.021822378039360046],[3,0.0011293978723013517,0.10235323600169045,-0.00116846522389361,0.9947467890018288],[1,0.14244476872426218,11.749557580346796,-0.11994645319001446]],[0,"right hand",8388608,1005,[-1427],[1,0.015645867213606834,0.00009417087130714208,0.010464523918926716],[3,0.000564268567534426,-0.33015090822731785,-0.00025365272179565655,0.9439279607353295],[1,0.05143848065160351,-38.55585629010495,-0.048784345696111106]],[0,"right finger3",8388608,1006,[-1428],[1,0.009227292612195015,-7.599592066753758e-9,0.004294626880437136],[3,1.6298153937492528e-9,0.000002770327682799972,7.275961777491847e-11,0.9999999999961626],[1,1.867630637958631e-7,0.0003174561681857834,8.338155429893503e-9]],[0,"right finger4",8388608,1007,[-1429],[1,0.0022041972260922194,0.0000505955504195299,0.003155910177156329],[3,-6.984919309606769e-10,-0.000001633585839042647,1.4551918697794388e-11,0.9999999999986657],[1,-8.004127661182475e-8,-0.00018719514809904426,1.6676578047004918e-9]],[0,"right finger5",8388608,1008,[-1430],[1,0.00042110466165468097,0.0001340793096460402,0.005627505015581846],[3,-0.0000019479955177752215,0.13052655589795578,0.000007322112103060771,0.9914448134656862],[1,-0.00033083272104267504,15.000042036776538,0.000802737353376578]],[2,"right finger5_end",8388608,1009,[-1431],[1,-2.2538007016237316e-9,0.0056448327377438545,1.0002404238207419e-8]],[3,"right finger5_end_end",8388608,1010,[[1,"right finger5_end_end_end",8388608,-1432,[1,-1.974403973648009e-9,0.0056448327377438545,1.7881393032936899e-9]]],[1,-5.33647837031026e-9,0.005644836463034153,1.162290530487553e-8],[3,0.0000015022819752612897,-2.2382664610605817e-8,-2.478482770126758e-7,0.9999999999988407],[1,0.00017214883300648067,-0.0000025648217660946174,-0.000028401324317949088]],[0,"neck0",8388608,99,[-1433],[1,-2.6822091214739885e-9,0.015256059356033802,-0.00595217477530241],[3,-0.07123410846437608,-0.014987513727382237,0.028143017193092368,0.9969498717622799],[1,-8.130615612736486,-1.4851653091889252,3.3393464157132535]],[0,"neck1",8388608,1012,[-1434],[1,8.940696516468449e-10,0.017543168738484383,-0.016172247007489204],[3,-0.10494259662545745,0.0000061833183705481795,-0.00008328176707578431,0.9944782775100824],[1,-12.047718701658109,-0.0002968642299670698,-0.009565049350708435]],[0,"neck2",8388608,1013,[-1435],[1,4.470348535789981e-9,0.017027776688337326,-0.016856519505381584],[3,-0.046461860349687426,-0.0033375966875403224,-0.003000175268067493,0.9989099833966815],[1,-5.327239229013977,-0.3980264941498488,-0.3256519505946268]],[0,"neck3",8388608,1014,[201],[1,2.6822091214739885e-9,0.00766771798953414,-0.011520219966769218],[3,0.1129740622069687,-0.002462202908184354,-0.0016172785493945123,0.9935935704478913],[1,12.973139155541443,-0.25940575636329644,-0.21601506953467783]],[0,"right eye",8388608,202,[-1436],[1,-0.007840261794626713,0.008088086731731892,0.0008104066364467144],[3,0.0000015153221586345103,0.000001291498019247911,0.7071119369679933,0.7071016253647057],[1,0,0.0002455702580163,90]],[0,"right eye_end",8388608,1016,[-1437],[1,7.450580596923828e-9,0.01128531713038683,1.2665987370041876e-8],[3,0.0000016917472294127718,6.170012056818174e-9,-4.1886227108925643e-7,0.9999999999984812],[1,0.00019385995279289637,7.071125014201777e-7,-0.000047998079465172375]],[3,"right eye_end_end",8388608,1017,[[1,"right eye_end_end_end",8388608,-1438,[1,5.960464899423812e-10,0.011285314336419106,3.44216815051368e-8]]],[1,1.3709068547029801e-8,0.011285322718322277,7.227063392178934e-9],[3,-0.0000025331978576933247,1.1146769729428502e-8,-6.984920419816702e-10,0.9999999999967915],[1,-0.00029028309183423673,0.0000012773255186363435,-8.004452777657305e-8]],[0,"left eye",8388608,202,[-1439],[1,0.007816696539521217,0.008088074624538422,0.0008104006410576403],[3,-0.4833322786123404,0.5161297941585465,0.4833344541818849,0.5161276483913245],[1,-86.24125517318419,90.0002474051749,0.000009826573641812891]],[0,"left eye_end",8388608,1019,[-1440],[1,1.2433156726388006e-8,0.011285322718322277,5.856855000985206e-9],[3,1.0477378964409168e-9,5.915352208055046e-9,0.0000016901828985258776,0.9999999999985716],[1,1.200607733149561e-7,6.778492287861956e-7,0.00019368069338224458]],[3,"left eye_end_end",8388608,1020,[[1,"left eye_end_end_end",8388608,-1441,[1,7.078051478259795e-9,0.011285316199064255,4.842877210364804e-10]]],[1,1.672655258744271e-8,0.011285318061709404,-2.1606683109354208e-9],[3,-4.2284960954866026e-7,8.658391337221959e-9,-0.0000016913039644324944,0.9999999999984803],[1,-0.00004845499431391979,9.920966098682533e-7,-0.00019380915849106982]],[2,"jaw1",8388608,203,[-1442],[1,1.862645149230957e-9,0.045013949275016785,0.015709517523646355]],[2,"jaw1_end",8388608,1022,[-1443],[1,-7.450580707946131e-10,0.027444317936897278,-1.0989605891964516e-9]],[3,"jaw1_end_end",8388608,1023,[[11,"jaw1_end_end_end",8388608,-1444,[1,-4.4703482582342247e-10,0.02744431234896183,-2.1569430685985935e-8],[3,-0.0000010203220881511088,0.0000010196818038810613,1.4551915228351714e-9,0.9999999999989597],[1,-0.00011692029896006154,0.00011684692778744354,1.6663344378198693e-7]]],[1,1.7881393032936899e-9,0.027444347739219666,1.7862767265341972e-8],[3,0.000002010551270351287,-0.000002014101482919643,-3.783497126692792e-10,0.9999999999959506],[1,0.00023039220448395494,-0.0002307990288771928,-4.3819716712579345e-8]],[0,"tongue0",8388608,203,[-1445],[1,3.5762786065873797e-9,0.004420141689479351,0.005698944441974163],[3,0.14470117871230787,-1.3000424365683173e-8,0.000007537388013103071,0.9894754008172494],[1,16.639950996468475,-0.00012645551306502084,0.0008544151586764777]],[0,"tongue1",8388608,1025,[-1446],[1,-3.3527611797978807e-9,0.011291980743408203,-0.0012327989097684622],[3,-0.06670764023167682,-1.9519765523348155e-7,-2.3801742565346996e-8,0.9977725646331845],[1,-7.649813158440861,-0.000022500124022819532,-0.0000012292867664396407]],[0,"tongue2",8388608,1026,[-1447],[1,2.654269304347423e-10,0.01418344583362341,0.0005741515778936446],[3,-0.1374952653740075,5.523982732180117e-8,-4.5837314709614335e-8,0.9905024240251641],[1,-15.805867716311552,0.000005547694689655366,-0.000006073030173183047]],[0,"tongue2_end",8388608,1027,[-1448],[1,-1.3411045607369942e-9,0.014195075258612633,-5.79049830307099e-9],[3,0.0000014945978818981794,-0.0000014533287639974586,-3.259628789102487e-9,0.9999999999978271],[1,0.00017126830086094277,-0.00016653920828563922,-3.737748539378029e-7]],[3,"tongue2_end_end",8388608,1028,[[11,"tongue2_end_end_end",8388608,-1449,[1,-1.043081288010228e-9,0.014195038005709648,1.0114162840579866e-8],[3,0.0000021189916878843384,-0.0000021222513168954777,-2.3283064365282257e-10,0.9999999999955029],[1,0.00024281856102116275,-0.00024319208699148472,-2.7195748456137112e-8]]],[1,1.043081288010228e-9,0.014195079915225506,3.408640703028709e-9],[3,-0.0000035538696465228525,0.0000034507834242990154,-8.149073638008481e-10,0.9999999999877311],[1,-0.00040724346304701155,0.0003954306521184932,-9.478681427174957e-8]],[0,"Right Torso",8388608,98,[-1450],[1,-0.017464520409703255,0.009573213756084442,0.030453024432063103],[3,-1.4765793285428368e-8,-1.2075035933521495e-7,0.7071068407911856,0.707106721581894],[1,0,-0.000002392899432563725,90]],[2,"Right Torso_end",8388608,1030,[-1451],[1,2.784654506982065e-9,0.02686261013150215,3.81842246710562e-9]],[6,"Right Torso_end_end",8388608,1031,[[1,"Right Torso_end_end_end",8388608,-1452,[1,-1.1431984248133631e-8,0.0268626157194376,1.240521640966108e-8]]],[1,1.9604340373291507e-9,0.0268626157194376,-2.1047890097491972e-9]],[0,"Left Torso",8388608,98,[-1453],[1,0.017440930008888245,0.009573224000632763,0.030453002080321312],[3,0.500000126659862,-0.4999998882412794,-0.5000000670552164,-0.4999999180436022],[1,-90.0000221981152,89.99999487735771,-0.0000017075463256145647]],[2,"Left Torso_end",8388608,1033,[-1454],[1,1.7508864358362075e-9,0.026862619444727898,-2.8824433950802586e-9]],[6,"Left Torso_end_end",8388608,1034,[[1,"Left Torso_end_end_end",8388608,-1455,[1,-1.5832484212552345e-9,0.0268626157194376,-2.9336661988565993e-9]]],[1,-2.2165478341662492e-9,0.02686261013150215,5.820766091346741e-10]],[0,"tail0",8388608,100,[-1456],[1,2.38418573772492e-9,-0.01958109252154827,0.004617891740053892],[3,0.05616177867879355,0.028151084982951425,0.004469596682825916,0.9980147262116976],[1,6.4223793484064045,3.1925924357445123,0.692349061695615]],[0,"tail1",8388608,1036,[-1457],[1,-1.19209286886246e-9,-0.026223542168736458,-0.0007214128854684532],[3,0.0031083005351771912,0.0014343740341220459,-0.01194275649172853,0.9999228228249882],[1,0.35822495434177337,0.16865661998027534,-1.3680525498125806]],[0,"tail2",8388608,1037,[-1458],[1,2.38418573772492e-9,-0.03143041208386421,0.00010329753422411159],[3,0.003111778308726112,0.0013797485805861092,-0.011948764385323093,0.999922817101038],[1,0.35854984255366873,0.16240262721771287,-1.368760051413259]],[0,"tail3",8388608,1038,[-1459],[1,-2.38418573772492e-9,-0.02927638776600361,0.00020010948355775326],[3,0.0031156022961344666,0.0013251705064710123,-0.011954564573702881,0.999922809686485],[1,0.35891436722033493,0.15615446645465633,-1.3694437187155908]],[0,"tail4",8388608,1039,[-1460],[1,-4.76837147544984e-9,-0.027391791343688965,0.00019631088071037084],[3,0.0035525737043447716,0.0014388119918525726,-0.011879632153546678,0.999922088654923],[1,0.40914076039233777,0.16974711963651254,-1.3607416889422317]],[0,"tail5",8388608,1040,[-1461],[1,-1.1920929132713809e-8,-0.027199802920222282,0.00030194639111869037],[3,-0.0012750914229008672,-0.008457227549468383,0.03171206615500072,0.9994604515958702],[1,-0.11553545910896909,-0.9659600928893592,3.6356494243513264]],[0,"tail6",8388608,1041,[-1462],[1,9.53674295089968e-9,-0.025129156187176704,0.0011446529533714056],[3,-0.014449086548818109,-0.008872484528700394,0.0315430043349346,0.9993585651775438],[1,-1.6260902547158433,-0.9658152257334518,3.629360742339713]],[0,"tail7",8388608,1042,[-1463],[1,-5.9604645663569045e-9,-0.024538598954677582,0.0006162720965221524],[3,-0.0035734080338886967,-0.010646847758866457,0.03040127757568557,0.9994746808747028],[1,-0.3728700575034159,-1.2092794445726276,3.488414221479557]],[0,"tail8",8388608,1043,[-1464],[1,8.940697071579962e-9,-0.013206311501562595,0.0002693343267310411],[3,-0.00421273810623833,-0.009717253247809712,0.030597281375363466,0.9994756796437836],[1,-0.449268537675818,-1.1002936678150768,3.5112401274933487]],[2,"tail8_end",8388608,1044,[-1465],[1,1.19209286886246e-9,0.013208942487835884,0]],[6,"tail8_end_end",8388608,1045,[[1,"tail8_end_end_end",8388608,-1466,[1,1.19209286886246e-9,0.013209017924964428,-6.556510889765832e-9]]],[1,5.9604645663569045e-9,0.013209058903157711,1.7881394143159923e-9]],[0,"right leg0",8388608,100,[-1467],[1,-0.019055675715208054,0.0033091562800109386,0.016144664958119392],[3,-0.1758038810899314,-0.017633571842268422,0.6676717853270461,0.723184927674793],[1,-78.57820982882251,62.74263400658564,76.38525243107132]],[0,"right leg1",8388608,1047,[-1468],[1,0.011304101906716824,-0.0015700083458796144,0.04155361279845238],[3,0.06429759265723188,0.04945126062606861,0.0029156149162815385,0.9967005024532882],[1,7.347795831743105,5.636019159221763,0.6973746779464639]],[0,"right foot0",8388608,1048,[-1469],[1,-0.029886450618505478,0.0015699955401942134,0.032055873423814774],[3,-0.08061608046528909,-0.12210650177915211,0.006311681215104875,0.989217474812243],[1,-9.09280657404995,-13.92707573541503,1.8437953581496462]],[0,"right foot1",8388608,1049,[-1470],[1,0.003907094709575176,-0.00014767363609280437,0.018782703205943108],[3,0.012718700017344608,-0.019753488005658924,0.011716660245581385,0.9996553177241488],[1,1.4840307666426562,-2.2810810511675452,1.313492797221609]],[0,"right foot2",8388608,1050,[-1471],[1,0.005417832173407078,0.0001594980276422575,0.010887287557125092],[3,0.135298567316826,0.9880735445127315,-0.06766532475870929,0.028746689224323076],[1,8.434477156871264,175.53389993115258,15.276627672092612]],[0,"right toe0",8388608,1051,[-1472],[1,-0.004766051657497883,0.0004802089533768594,0.00009099081216845661],[3,0.13046292620968675,0.9907689432631921,-0.004293484967174884,0.036577205152664605],[1,1.070648052511951,175.63081923016807,14.963469722274361]],[0,"right toe1",8388608,1052,[-1473],[1,0.007804563734680414,-0.0004186089208815247,0.0005770097486674786],[3,-0.0011280903034880329,0.050888072283556754,-0.060021526621159046,0.9968984641645288],[1,0.22274179400602048,5.857801964075723,-6.879726116801438]],[0,"right toe2",8388608,1053,[-1474],[1,0.006148821674287319,0.0003150858683511615,-5.21540644005114e-10],[3,0.0000018084104049840189,-0.23793532170532997,0.000007286618322553768,0.9712810008584621],[1,0.00039994958420425553,-27.52942671179931,0.0007616980255523596]],[2,"right toe2_end",8388608,1054,[-1475],[1,-3.8743017682918435e-9,0.006156904622912407,7.450580707946131e-10]],[6,"right toe2_end_end",8388608,1055,[[1,"right toe2_end_end_end",8388608,-1476,[1,-5.9604643443123e-10,0.006156894378364086,-5.9604643443123e-10]]],[1,-1.639127722441458e-9,0.006156902760267258,2.98023217215615e-10]],[0,"left leg0",8388608,100,[-1477],[1,0.01840258203446865,0.0034433561377227306,0.024012885987758636],[3,-0.026719246605534135,-0.019741520688928448,0.0797837020365437,0.9962584579872158],[1,-2.9085726705116217,-2.0361285181125104,9.208366644433342]],[0,"left leg1",8388608,1057,[-1478],[1,-0.001570010674186051,0.011304106563329697,0.04155363142490387],[3,0.07505410346936253,-0.006625843860994315,0.003316218579660744,0.9971519354841928],[1,8.611106043601785,-0.7856617226002104,0.32194404411108085]],[0,"left foot0",8388608,1058,[-1479],[1,0.0015700102085247636,-0.029886456206440926,0.03205588459968567],[3,0.09446010059390231,0.00524464439530843,-0.0064196456671164566,0.9954941342119829],[1,10.844803105330856,0.6678338961791349,-0.6755684135879525]],[0,"left foot1",8388608,1059,[-1480],[1,-0.00014768153778277338,0.003907082136720419,0.018782710656523705],[3,-0.0688300711131612,-0.09169756385766402,-0.0010759593875588616,0.9934046609536936],[1,-7.871803697878175,-10.506304455837528,0.6007786594490084]],[0,"left foot2",8388608,1060,[-1481],[1,0.0001594924251548946,0.005417830776423216,0.01088727731257677],[3,0.16557359601450405,-0.293024776702799,0.645517941625473,0.6855862101739744],[1,79.53737191070073,-90.47599166257511,52.00663712930689]],[0,"left toe0",8388608,1061,[-1482],[1,0.0032210317440330982,-0.00048022984992712736,-0.0035140234977006912],[3,-0.00025397410362682974,0.993890734182026,-0.00042949190776777463,0.11036738440757354],[1,0.045703432009614624,167.32702392606475,-0.03435734826850064]],[0,"left toe1",8388608,1062,[-1483],[1,-0.005144279450178146,0.00001669451557972934,0.0058973608538508415],[3,0.00047318134286587397,-0.25816592798791194,-0.00016007157822210818,0.9661004627380357],[1,0.047648980608224735,-29.922515804701185,-0.03171946383206957]],[0,"left toe2",8388608,1063,[-1484],[1,1.7881393032936899e-9,0.00008683509804541245,0.006148934364318848],[3,0.00038137636832103974,-0.05181359592711081,-0.0003230278147168311,0.9986566484443983],[1,0.04172587266780249,-5.9400470473863285,-0.03923092244094853]],[2,"left toe2_end",8388608,1064,[-1485],[1,4.097819306103645e-10,0.006149544846266508,-5.587935669737476e-10]],[6,"left toe2_end_end",8388608,1065,[[1,"left toe2_end_end_end",8388608,-1486,[1,9.31322467062623e-12,0.006149547640234232,-3.7252903539730653e-10]]],[1,-6.519258050063925e-11,0.006149547174572945,-7.823109382520954e-10]],[23,"comp_LOD_2",8388608,14,[[18,1,-1487,[258,259,260,261,262,263],[7],14,264,265]],[3,1.5454308319985022e-8,0.707106721581899,-1.545430476727128e-8,0.7071068407911907],[1,99.99998474121094,99.99998474121094,99.99998474121094],[1,0.0000025044775805019677,89.99999034065368,7.675927522096591e-14]],[15,"Comp",8388608,15,[206],[3,-0.7071068407911907,1.54543154254125e-8,-1.545431187269876e-8,0.707106721581899],[1,9.999999046325684,9.999999046325684,9.999999046325684],[1,-90.00000965934633,7.675917777898835e-14,-0.0000025044787319857803]],[0,"spine0",8388608,206,[-1488],[1,3.7252903539730653e-10,0.003909075167030096,-0.00092517607845366],[3,-0.013759418954332359,-0.02019218487723872,0.021461381934783252,0.9994710416742307],[1,-1.5278449136403591,-2.281549172864686,2.490613936032426]],[0,"spine1",8388608,1069,[102],[1,2.38418573772492e-9,0.00814820732921362,-0.0024583544582128525],[3,-0.014868528756110217,-0.017917059571555493,0.022798139868672962,0.9994689343083488],[1,-1.6580895794748667,-2.015768713908674,2.642550980417355]],[0,"spine3",8388608,102,[-1489],[1,-5.066394859198908e-9,0.007588513661175966,-0.0019066231325268745],[3,0.020843829879679646,-0.010312797462126119,0.02867264475851253,0.9993182978445878],[1,2.4254322263752033,-1.251564674977951,3.2605303745488974]],[0,"spine4",8388608,1071,[103],[1,8.940696516468449e-10,0.008185500279068947,-0.0010699452832341194],[3,0.034254656149486834,-0.005485426314216125,0.05256574367670215,0.9980147149325741],[1,3.9755012009245196,-0.8382953020260973,6.001066118615762]],[0,"left arm0",8388608,103,[-1490],[1,0.013951382599771023,0.016790246590971947,0.016093119978904724],[3,-0.012916867621556222,0.00014373601880273082,-0.00014094100334092016,0.9999165535215615],[1,-1.4802028695162106,0.01626094512362714,-0.016362054691447837]],[0,"left arm1",8388608,1073,[-1491],[1,0.0010551911545917392,-0.007742427755147219,0.021822387352585793],[3,-0.10235335396090298,0.001129400536059972,-0.0011684727766184703,0.9947467768526588],[1,-11.749275059688674,0.11503553126164667,-0.1464404324964447]],[0,"left hand",8388608,1074,[-1492],[1,0.00009416900866199285,0.015645749866962433,0.010464519262313843],[3,0.3301397245118249,0.0005644782763280047,-0.00025354159734460773,0.9439318722133448],[1,38.5545242496592,0.07064951765266128,-0.006069833765081632]],[2,"left finger3",8388608,1075,[-1493],[1,8.344650304081824e-9,0.009227232076227665,0.004294860176742077]],[0,"left finger4",8388608,1076,[-1494],[1,0.00005059279646957293,0.002204132964834571,0.003155963961035013],[3,0.000007673238672860348,-0.000009594779093684764,0.7071121455309554,0.7071014166947133],[1,0,0.0012435109893833497,90]],[0,"left finger5",8388608,1077,[-1495],[1,0.00042112517985515296,-0.0001340837770840153,0.005627484526485205],[3,-0.09230603438907505,0.09230350119162783,-0.7010510090251443,0.7010614398381622],[1,0,15.001533567975944,-90]],[0,"left finger5_end",8388608,1078,[-1496],[1,-8.940696516468449e-10,0.0056448024697601795,8.940696516468449e-10],[3,0.0000019192621039034926,-0.0000020400616449398495,-5.30853654365919e-8,0.999999999996076],[1,0.0002199312242558464,-0.00023377383272774185,-0.000006083583460109329]],[3,"left finger5_end_end",8388608,1079,[[1,"left finger5_end_end_end",8388608,-1497,[1,1.1175871339474952e-9,0.005644826218485832,-8.12113309933693e-9]]],[1,-1.639127722441458e-9,0.005644821096211672,2.4586914726398845e-9],[3,-0.0000027220794436078912,0.000002801418531795414,4.222383722630338e-7,0.9999999999922822],[1,-0.0003119274627818528,0.00032101904875022903,0.00004838407951892836]],[0,"right arm0",8388608,103,[-1498],[1,-0.013974963687360287,0.016790248453617096,0.01609310694038868],[3,-0.009031942320728738,0.009235106619735695,0.7069480580786489,0.707147495224627],[1,-89.36624562339624,89.38270908907008,88.51971961785377]],[0,"right arm1",8388608,1081,[-1499],[1,-0.007742421701550484,0.0010551821906119585,0.021822378039360046],[3,0.0011293978723013517,0.10235323600169045,-0.00116846522389361,0.9947467890018288],[1,0.14244476872426218,11.749557580346796,-0.11994645319001446]],[0,"right hand",8388608,1082,[-1500],[1,0.015645867213606834,0.00009417087130714208,0.010464523918926716],[3,0.000564268567534426,-0.33015090822731785,-0.00025365272179565655,0.9439279607353295],[1,0.05143848065160351,-38.55585629010495,-0.048784345696111106]],[0,"right finger3",8388608,1083,[-1501],[1,0.009227292612195015,-7.599592066753758e-9,0.004294626880437136],[3,1.6298153937492528e-9,0.000002770327682799972,7.275961777491847e-11,0.9999999999961626],[1,1.867630637958631e-7,0.0003174561681857834,8.338155429893503e-9]],[0,"right finger4",8388608,1084,[-1502],[1,0.0022041972260922194,0.0000505955504195299,0.003155910177156329],[3,-6.984919309606769e-10,-0.000001633585839042647,1.4551918697794388e-11,0.9999999999986657],[1,-8.004127661182475e-8,-0.00018719514809904426,1.6676578047004918e-9]],[0,"right finger5",8388608,1085,[-1503],[1,0.00042110466165468097,0.0001340793096460402,0.005627505015581846],[3,-0.0000019479955177752215,0.13052655589795578,0.000007322112103060771,0.9914448134656862],[1,-0.00033083272104267504,15.000042036776538,0.000802737353376578]],[2,"right finger5_end",8388608,1086,[-1504],[1,-2.2538007016237316e-9,0.0056448327377438545,1.0002404238207419e-8]],[3,"right finger5_end_end",8388608,1087,[[1,"right finger5_end_end_end",8388608,-1505,[1,-1.974403973648009e-9,0.0056448327377438545,1.7881393032936899e-9]]],[1,-5.33647837031026e-9,0.005644836463034153,1.162290530487553e-8],[3,0.0000015022819752612897,-2.2382664610605817e-8,-2.478482770126758e-7,0.9999999999988407],[1,0.00017214883300648067,-0.0000025648217660946174,-0.000028401324317949088]],[0,"neck0",8388608,103,[-1506],[1,-2.6822091214739885e-9,0.015256059356033802,-0.00595217477530241],[3,-0.07123410846437608,-0.014987513727382237,0.028143017193092368,0.9969498717622799],[1,-8.130615612736486,-1.4851653091889252,3.3393464157132535]],[0,"neck1",8388608,1089,[-1507],[1,8.940696516468449e-10,0.017543168738484383,-0.016172247007489204],[3,-0.10494259662545745,0.0000061833183705481795,-0.00008328176707578431,0.9944782775100824],[1,-12.047718701658109,-0.0002968642299670698,-0.009565049350708435]],[0,"neck2",8388608,1090,[-1508],[1,4.470348535789981e-9,0.017027776688337326,-0.016856519505381584],[3,-0.046461860349687426,-0.0033375966875403224,-0.003000175268067493,0.9989099833966815],[1,-5.327239229013977,-0.3980264941498488,-0.3256519505946268]],[0,"neck3",8388608,1091,[207],[1,2.6822091214739885e-9,0.00766771798953414,-0.011520219966769218],[3,0.1129740622069687,-0.002462202908184354,-0.0016172785493945123,0.9935935704478913],[1,12.973139155541443,-0.25940575636329644,-0.21601506953467783]],[0,"right eye",8388608,208,[-1509],[1,-0.007840261794626713,0.008088086731731892,0.0008104066364467144],[3,0.0000015153221586345103,0.000001291498019247911,0.7071119369679933,0.7071016253647057],[1,0,0.0002455702580163,90]],[0,"right eye_end",8388608,1093,[-1510],[1,7.450580596923828e-9,0.01128531713038683,1.2665987370041876e-8],[3,0.0000016917472294127718,6.170012056818174e-9,-4.1886227108925643e-7,0.9999999999984812],[1,0.00019385995279289637,7.071125014201777e-7,-0.000047998079465172375]],[3,"right eye_end_end",8388608,1094,[[1,"right eye_end_end_end",8388608,-1511,[1,5.960464899423812e-10,0.011285314336419106,3.44216815051368e-8]]],[1,1.3709068547029801e-8,0.011285322718322277,7.227063392178934e-9],[3,-0.0000025331978576933247,1.1146769729428502e-8,-6.984920419816702e-10,0.9999999999967915],[1,-0.00029028309183423673,0.0000012773255186363435,-8.004452777657305e-8]],[0,"left eye",8388608,208,[-1512],[1,0.007816696539521217,0.008088074624538422,0.0008104006410576403],[3,-0.4833322786123404,0.5161297941585465,0.4833344541818849,0.5161276483913245],[1,-86.24125517318419,90.0002474051749,0.000009826573641812891]],[0,"left eye_end",8388608,1096,[-1513],[1,1.2433156726388006e-8,0.011285322718322277,5.856855000985206e-9],[3,1.0477378964409168e-9,5.915352208055046e-9,0.0000016901828985258776,0.9999999999985716],[1,1.200607733149561e-7,6.778492287861956e-7,0.00019368069338224458]],[3,"left eye_end_end",8388608,1097,[[1,"left eye_end_end_end",8388608,-1514,[1,7.078051478259795e-9,0.011285316199064255,4.842877210364804e-10]]],[1,1.672655258744271e-8,0.011285318061709404,-2.1606683109354208e-9],[3,-4.2284960954866026e-7,8.658391337221959e-9,-0.0000016913039644324944,0.9999999999984803],[1,-0.00004845499431391979,9.920966098682533e-7,-0.00019380915849106982]],[2,"jaw1",8388608,209,[-1515],[1,1.862645149230957e-9,0.045013949275016785,0.015709517523646355]],[2,"jaw1_end",8388608,1099,[-1516],[1,-7.450580707946131e-10,0.027444317936897278,-1.0989605891964516e-9]],[3,"jaw1_end_end",8388608,1100,[[11,"jaw1_end_end_end",8388608,-1517,[1,-4.4703482582342247e-10,0.02744431234896183,-2.1569430685985935e-8],[3,-0.0000010203220881511088,0.0000010196818038810613,1.4551915228351714e-9,0.9999999999989597],[1,-0.00011692029896006154,0.00011684692778744354,1.6663344378198693e-7]]],[1,1.7881393032936899e-9,0.027444347739219666,1.7862767265341972e-8],[3,0.000002010551270351287,-0.000002014101482919643,-3.783497126692792e-10,0.9999999999959506],[1,0.00023039220448395494,-0.0002307990288771928,-4.3819716712579345e-8]],[0,"tongue0",8388608,209,[-1518],[1,3.5762786065873797e-9,0.004420141689479351,0.005698944441974163],[3,0.14470117871230787,-1.3000424365683173e-8,0.000007537388013103071,0.9894754008172494],[1,16.639950996468475,-0.00012645551306502084,0.0008544151586764777]],[0,"tongue1",8388608,1102,[-1519],[1,-3.3527611797978807e-9,0.011291980743408203,-0.0012327989097684622],[3,-0.06670764023167682,-1.9519765523348155e-7,-2.3801742565346996e-8,0.9977725646331845],[1,-7.649813158440861,-0.000022500124022819532,-0.0000012292867664396407]],[0,"tongue2",8388608,1103,[-1520],[1,2.654269304347423e-10,0.01418344583362341,0.0005741515778936446],[3,-0.1374952653740075,5.523982732180117e-8,-4.5837314709614335e-8,0.9905024240251641],[1,-15.805867716311552,0.000005547694689655366,-0.000006073030173183047]],[0,"tongue2_end",8388608,1104,[-1521],[1,-1.3411045607369942e-9,0.014195075258612633,-5.79049830307099e-9],[3,0.0000014945978818981794,-0.0000014533287639974586,-3.259628789102487e-9,0.9999999999978271],[1,0.00017126830086094277,-0.00016653920828563922,-3.737748539378029e-7]],[3,"tongue2_end_end",8388608,1105,[[11,"tongue2_end_end_end",8388608,-1522,[1,-1.043081288010228e-9,0.014195038005709648,1.0114162840579866e-8],[3,0.0000021189916878843384,-0.0000021222513168954777,-2.3283064365282257e-10,0.9999999999955029],[1,0.00024281856102116275,-0.00024319208699148472,-2.7195748456137112e-8]]],[1,1.043081288010228e-9,0.014195079915225506,3.408640703028709e-9],[3,-0.0000035538696465228525,0.0000034507834242990154,-8.149073638008481e-10,0.9999999999877311],[1,-0.00040724346304701155,0.0003954306521184932,-9.478681427174957e-8]],[0,"Right Torso",8388608,102,[-1523],[1,-0.017464520409703255,0.009573213756084442,0.030453024432063103],[3,-1.4765793285428368e-8,-1.2075035933521495e-7,0.7071068407911856,0.707106721581894],[1,0,-0.000002392899432563725,90]],[2,"Right Torso_end",8388608,1107,[-1524],[1,2.784654506982065e-9,0.02686261013150215,3.81842246710562e-9]],[6,"Right Torso_end_end",8388608,1108,[[1,"Right Torso_end_end_end",8388608,-1525,[1,-1.1431984248133631e-8,0.0268626157194376,1.240521640966108e-8]]],[1,1.9604340373291507e-9,0.0268626157194376,-2.1047890097491972e-9]],[0,"Left Torso",8388608,102,[-1526],[1,0.017440930008888245,0.009573224000632763,0.030453002080321312],[3,0.500000126659862,-0.4999998882412794,-0.5000000670552164,-0.4999999180436022],[1,-90.0000221981152,89.99999487735771,-0.0000017075463256145647]],[2,"Left Torso_end",8388608,1110,[-1527],[1,1.7508864358362075e-9,0.026862619444727898,-2.8824433950802586e-9]],[6,"Left Torso_end_end",8388608,1111,[[1,"Left Torso_end_end_end",8388608,-1528,[1,-1.5832484212552345e-9,0.0268626157194376,-2.9336661988565993e-9]]],[1,-2.2165478341662492e-9,0.02686261013150215,5.820766091346741e-10]],[0,"tail0",8388608,104,[-1529],[1,2.38418573772492e-9,-0.01958109252154827,0.004617891740053892],[3,0.05616177867879355,0.028151084982951425,0.004469596682825916,0.9980147262116976],[1,6.4223793484064045,3.1925924357445123,0.692349061695615]],[0,"tail1",8388608,1113,[-1530],[1,-1.19209286886246e-9,-0.026223542168736458,-0.0007214128854684532],[3,0.0031083005351771912,0.0014343740341220459,-0.01194275649172853,0.9999228228249882],[1,0.35822495434177337,0.16865661998027534,-1.3680525498125806]],[0,"tail2",8388608,1114,[-1531],[1,2.38418573772492e-9,-0.03143041208386421,0.00010329753422411159],[3,0.003111778308726112,0.0013797485805861092,-0.011948764385323093,0.999922817101038],[1,0.35854984255366873,0.16240262721771287,-1.368760051413259]],[0,"tail3",8388608,1115,[-1532],[1,-2.38418573772492e-9,-0.02927638776600361,0.00020010948355775326],[3,0.0031156022961344666,0.0013251705064710123,-0.011954564573702881,0.999922809686485],[1,0.35891436722033493,0.15615446645465633,-1.3694437187155908]],[0,"tail4",8388608,1116,[-1533],[1,-4.76837147544984e-9,-0.027391791343688965,0.00019631088071037084],[3,0.0035525737043447716,0.0014388119918525726,-0.011879632153546678,0.999922088654923],[1,0.40914076039233777,0.16974711963651254,-1.3607416889422317]],[0,"tail5",8388608,1117,[-1534],[1,-1.1920929132713809e-8,-0.027199802920222282,0.00030194639111869037],[3,-0.0012750914229008672,-0.008457227549468383,0.03171206615500072,0.9994604515958702],[1,-0.11553545910896909,-0.9659600928893592,3.6356494243513264]],[0,"tail6",8388608,1118,[-1535],[1,9.53674295089968e-9,-0.025129156187176704,0.0011446529533714056],[3,-0.014449086548818109,-0.008872484528700394,0.0315430043349346,0.9993585651775438],[1,-1.6260902547158433,-0.9658152257334518,3.629360742339713]],[0,"tail7",8388608,1119,[-1536],[1,-5.9604645663569045e-9,-0.024538598954677582,0.0006162720965221524],[3,-0.0035734080338886967,-0.010646847758866457,0.03040127757568557,0.9994746808747028],[1,-0.3728700575034159,-1.2092794445726276,3.488414221479557]],[0,"tail8",8388608,1120,[-1537],[1,8.940697071579962e-9,-0.013206311501562595,0.0002693343267310411],[3,-0.00421273810623833,-0.009717253247809712,0.030597281375363466,0.9994756796437836],[1,-0.449268537675818,-1.1002936678150768,3.5112401274933487]],[2,"tail8_end",8388608,1121,[-1538],[1,1.19209286886246e-9,0.013208942487835884,0]],[6,"tail8_end_end",8388608,1122,[[1,"tail8_end_end_end",8388608,-1539,[1,1.19209286886246e-9,0.013209017924964428,-6.556510889765832e-9]]],[1,5.9604645663569045e-9,0.013209058903157711,1.7881394143159923e-9]],[0,"right leg0",8388608,104,[-1540],[1,-0.019055675715208054,0.0033091562800109386,0.016144664958119392],[3,-0.1758038810899314,-0.017633571842268422,0.6676717853270461,0.723184927674793],[1,-78.57820982882251,62.74263400658564,76.38525243107132]],[0,"right leg1",8388608,1124,[-1541],[1,0.011304101906716824,-0.0015700083458796144,0.04155361279845238],[3,0.06429759265723188,0.04945126062606861,0.0029156149162815385,0.9967005024532882],[1,7.347795831743105,5.636019159221763,0.6973746779464639]],[0,"right foot0",8388608,1125,[-1542],[1,-0.029886450618505478,0.0015699955401942134,0.032055873423814774],[3,-0.08061608046528909,-0.12210650177915211,0.006311681215104875,0.989217474812243],[1,-9.09280657404995,-13.92707573541503,1.8437953581496462]],[0,"right foot1",8388608,1126,[-1543],[1,0.003907094709575176,-0.00014767363609280437,0.018782703205943108],[3,0.012718700017344608,-0.019753488005658924,0.011716660245581385,0.9996553177241488],[1,1.4840307666426562,-2.2810810511675452,1.313492797221609]],[0,"right foot2",8388608,1127,[-1544],[1,0.005417832173407078,0.0001594980276422575,0.010887287557125092],[3,0.135298567316826,0.9880735445127315,-0.06766532475870929,0.028746689224323076],[1,8.434477156871264,175.53389993115258,15.276627672092612]],[0,"right toe0",8388608,1128,[-1545],[1,-0.004766051657497883,0.0004802089533768594,0.00009099081216845661],[3,0.13046292620968675,0.9907689432631921,-0.004293484967174884,0.036577205152664605],[1,1.070648052511951,175.63081923016807,14.963469722274361]],[0,"right toe1",8388608,1129,[-1546],[1,0.007804563734680414,-0.0004186089208815247,0.0005770097486674786],[3,-0.0011280903034880329,0.050888072283556754,-0.060021526621159046,0.9968984641645288],[1,0.22274179400602048,5.857801964075723,-6.879726116801438]],[0,"right toe2",8388608,1130,[-1547],[1,0.006148821674287319,0.0003150858683511615,-5.21540644005114e-10],[3,0.0000018084104049840189,-0.23793532170532997,0.000007286618322553768,0.9712810008584621],[1,0.00039994958420425553,-27.52942671179931,0.0007616980255523596]],[2,"right toe2_end",8388608,1131,[-1548],[1,-3.8743017682918435e-9,0.006156904622912407,7.450580707946131e-10]],[6,"right toe2_end_end",8388608,1132,[[1,"right toe2_end_end_end",8388608,-1549,[1,-5.9604643443123e-10,0.006156894378364086,-5.9604643443123e-10]]],[1,-1.639127722441458e-9,0.006156902760267258,2.98023217215615e-10]],[0,"left leg0",8388608,104,[-1550],[1,0.01840258203446865,0.0034433561377227306,0.024012885987758636],[3,-0.026719246605534135,-0.019741520688928448,0.0797837020365437,0.9962584579872158],[1,-2.9085726705116217,-2.0361285181125104,9.208366644433342]],[0,"left leg1",8388608,1134,[-1551],[1,-0.001570010674186051,0.011304106563329697,0.04155363142490387],[3,0.07505410346936253,-0.006625843860994315,0.003316218579660744,0.9971519354841928],[1,8.611106043601785,-0.7856617226002104,0.32194404411108085]],[0,"left foot0",8388608,1135,[-1552],[1,0.0015700102085247636,-0.029886456206440926,0.03205588459968567],[3,0.09446010059390231,0.00524464439530843,-0.0064196456671164566,0.9954941342119829],[1,10.844803105330856,0.6678338961791349,-0.6755684135879525]],[0,"left foot1",8388608,1136,[-1553],[1,-0.00014768153778277338,0.003907082136720419,0.018782710656523705],[3,-0.0688300711131612,-0.09169756385766402,-0.0010759593875588616,0.9934046609536936],[1,-7.871803697878175,-10.506304455837528,0.6007786594490084]],[0,"left foot2",8388608,1137,[-1554],[1,0.0001594924251548946,0.005417830776423216,0.01088727731257677],[3,0.16557359601450405,-0.293024776702799,0.645517941625473,0.6855862101739744],[1,79.53737191070073,-90.47599166257511,52.00663712930689]],[0,"left toe0",8388608,1138,[-1555],[1,0.0032210317440330982,-0.00048022984992712736,-0.0035140234977006912],[3,-0.00025397410362682974,0.993890734182026,-0.00042949190776777463,0.11036738440757354],[1,0.045703432009614624,167.32702392606475,-0.03435734826850064]],[0,"left toe1",8388608,1139,[-1556],[1,-0.005144279450178146,0.00001669451557972934,0.0058973608538508415],[3,0.00047318134286587397,-0.25816592798791194,-0.00016007157822210818,0.9661004627380357],[1,0.047648980608224735,-29.922515804701185,-0.03171946383206957]],[0,"left toe2",8388608,1140,[-1557],[1,1.7881393032936899e-9,0.00008683509804541245,0.006148934364318848],[3,0.00038137636832103974,-0.05181359592711081,-0.0003230278147168311,0.9986566484443983],[1,0.04172587266780249,-5.9400470473863285,-0.03923092244094853]],[2,"left toe2_end",8388608,1141,[-1558],[1,4.097819306103645e-10,0.006149544846266508,-5.587935669737476e-10]],[6,"left toe2_end_end",8388608,1142,[[1,"left toe2_end_end_end",8388608,-1559,[1,9.31322467062623e-12,0.006149547640234232,-3.7252903539730653e-10]]],[1,-6.519258050063925e-11,0.006149547174572945,-7.823109382520954e-10]],[23,"comp_LOD_2",8388608,15,[[18,1,-1560,[275,276,277,278,279,280],[7],15,281,282]],[3,1.5454308319985022e-8,0.707106721581899,-1.545430476727128e-8,0.7071068407911907],[1,99.99998474121094,99.99998474121094,99.99998474121094],[1,0.0000025044775805019677,89.99999034065368,7.675927522096591e-14]],[15,"Comp",8388608,16,[212],[3,-0.7071068407911907,1.54543154254125e-8,-1.545431187269876e-8,0.707106721581899],[1,9.999999046325684,9.999999046325684,9.999999046325684],[1,-90.00000965934633,7.675917777898835e-14,-0.0000025044787319857803]],[0,"spine0",8388608,212,[-1561],[1,3.7252903539730653e-10,0.003909075167030096,-0.00092517607845366],[3,-0.013759418954332359,-0.02019218487723872,0.021461381934783252,0.9994710416742307],[1,-1.5278449136403591,-2.281549172864686,2.490613936032426]],[0,"spine1",8388608,1146,[106],[1,2.38418573772492e-9,0.00814820732921362,-0.0024583544582128525],[3,-0.014868528756110217,-0.017917059571555493,0.022798139868672962,0.9994689343083488],[1,-1.6580895794748667,-2.015768713908674,2.642550980417355]],[0,"spine3",8388608,106,[-1562],[1,-5.066394859198908e-9,0.007588513661175966,-0.0019066231325268745],[3,0.020843829879679646,-0.010312797462126119,0.02867264475851253,0.9993182978445878],[1,2.4254322263752033,-1.251564674977951,3.2605303745488974]],[0,"spine4",8388608,1148,[107],[1,8.940696516468449e-10,0.008185500279068947,-0.0010699452832341194],[3,0.034254656149486834,-0.005485426314216125,0.05256574367670215,0.9980147149325741],[1,3.9755012009245196,-0.8382953020260973,6.001066118615762]],[0,"left arm0",8388608,107,[-1563],[1,0.013951382599771023,0.016790246590971947,0.016093119978904724],[3,-0.012916867621556222,0.00014373601880273082,-0.00014094100334092016,0.9999165535215615],[1,-1.4802028695162106,0.01626094512362714,-0.016362054691447837]],[0,"left arm1",8388608,1150,[-1564],[1,0.0010551911545917392,-0.007742427755147219,0.021822387352585793],[3,-0.10235335396090298,0.001129400536059972,-0.0011684727766184703,0.9947467768526588],[1,-11.749275059688674,0.11503553126164667,-0.1464404324964447]],[0,"left hand",8388608,1151,[-1565],[1,0.00009416900866199285,0.015645749866962433,0.010464519262313843],[3,0.3301397245118249,0.0005644782763280047,-0.00025354159734460773,0.9439318722133448],[1,38.5545242496592,0.07064951765266128,-0.006069833765081632]],[2,"left finger3",8388608,1152,[-1566],[1,8.344650304081824e-9,0.009227232076227665,0.004294860176742077]],[0,"left finger4",8388608,1153,[-1567],[1,0.00005059279646957293,0.002204132964834571,0.003155963961035013],[3,0.000007673238672860348,-0.000009594779093684764,0.7071121455309554,0.7071014166947133],[1,0,0.0012435109893833497,90]],[0,"left finger5",8388608,1154,[-1568],[1,0.00042112517985515296,-0.0001340837770840153,0.005627484526485205],[3,-0.09230603438907505,0.09230350119162783,-0.7010510090251443,0.7010614398381622],[1,0,15.001533567975944,-90]],[0,"left finger5_end",8388608,1155,[-1569],[1,-8.940696516468449e-10,0.0056448024697601795,8.940696516468449e-10],[3,0.0000019192621039034926,-0.0000020400616449398495,-5.30853654365919e-8,0.999999999996076],[1,0.0002199312242558464,-0.00023377383272774185,-0.000006083583460109329]],[3,"left finger5_end_end",8388608,1156,[[1,"left finger5_end_end_end",8388608,-1570,[1,1.1175871339474952e-9,0.005644826218485832,-8.12113309933693e-9]]],[1,-1.639127722441458e-9,0.005644821096211672,2.4586914726398845e-9],[3,-0.0000027220794436078912,0.000002801418531795414,4.222383722630338e-7,0.9999999999922822],[1,-0.0003119274627818528,0.00032101904875022903,0.00004838407951892836]],[0,"right arm0",8388608,107,[-1571],[1,-0.013974963687360287,0.016790248453617096,0.01609310694038868],[3,-0.009031942320728738,0.009235106619735695,0.7069480580786489,0.707147495224627],[1,-89.36624562339624,89.38270908907008,88.51971961785377]],[0,"right arm1",8388608,1158,[-1572],[1,-0.007742421701550484,0.0010551821906119585,0.021822378039360046],[3,0.0011293978723013517,0.10235323600169045,-0.00116846522389361,0.9947467890018288],[1,0.14244476872426218,11.749557580346796,-0.11994645319001446]],[0,"right hand",8388608,1159,[-1573],[1,0.015645867213606834,0.00009417087130714208,0.010464523918926716],[3,0.000564268567534426,-0.33015090822731785,-0.00025365272179565655,0.9439279607353295],[1,0.05143848065160351,-38.55585629010495,-0.048784345696111106]],[0,"right finger3",8388608,1160,[-1574],[1,0.009227292612195015,-7.599592066753758e-9,0.004294626880437136],[3,1.6298153937492528e-9,0.000002770327682799972,7.275961777491847e-11,0.9999999999961626],[1,1.867630637958631e-7,0.0003174561681857834,8.338155429893503e-9]],[0,"right finger4",8388608,1161,[-1575],[1,0.0022041972260922194,0.0000505955504195299,0.003155910177156329],[3,-6.984919309606769e-10,-0.000001633585839042647,1.4551918697794388e-11,0.9999999999986657],[1,-8.004127661182475e-8,-0.00018719514809904426,1.6676578047004918e-9]],[0,"right finger5",8388608,1162,[-1576],[1,0.00042110466165468097,0.0001340793096460402,0.005627505015581846],[3,-0.0000019479955177752215,0.13052655589795578,0.000007322112103060771,0.9914448134656862],[1,-0.00033083272104267504,15.000042036776538,0.000802737353376578]],[2,"right finger5_end",8388608,1163,[-1577],[1,-2.2538007016237316e-9,0.0056448327377438545,1.0002404238207419e-8]],[3,"right finger5_end_end",8388608,1164,[[1,"right finger5_end_end_end",8388608,-1578,[1,-1.974403973648009e-9,0.0056448327377438545,1.7881393032936899e-9]]],[1,-5.33647837031026e-9,0.005644836463034153,1.162290530487553e-8],[3,0.0000015022819752612897,-2.2382664610605817e-8,-2.478482770126758e-7,0.9999999999988407],[1,0.00017214883300648067,-0.0000025648217660946174,-0.000028401324317949088]],[0,"neck0",8388608,107,[-1579],[1,-2.6822091214739885e-9,0.015256059356033802,-0.00595217477530241],[3,-0.07123410846437608,-0.014987513727382237,0.028143017193092368,0.9969498717622799],[1,-8.130615612736486,-1.4851653091889252,3.3393464157132535]],[0,"neck1",8388608,1166,[-1580],[1,8.940696516468449e-10,0.017543168738484383,-0.016172247007489204],[3,-0.10494259662545745,0.0000061833183705481795,-0.00008328176707578431,0.9944782775100824],[1,-12.047718701658109,-0.0002968642299670698,-0.009565049350708435]],[0,"neck2",8388608,1167,[-1581],[1,4.470348535789981e-9,0.017027776688337326,-0.016856519505381584],[3,-0.046461860349687426,-0.0033375966875403224,-0.003000175268067493,0.9989099833966815],[1,-5.327239229013977,-0.3980264941498488,-0.3256519505946268]],[0,"neck3",8388608,1168,[213],[1,2.6822091214739885e-9,0.00766771798953414,-0.011520219966769218],[3,0.1129740622069687,-0.002462202908184354,-0.0016172785493945123,0.9935935704478913],[1,12.973139155541443,-0.25940575636329644,-0.21601506953467783]],[0,"right eye",8388608,214,[-1582],[1,-0.007840261794626713,0.008088086731731892,0.0008104066364467144],[3,0.0000015153221586345103,0.000001291498019247911,0.7071119369679933,0.7071016253647057],[1,0,0.0002455702580163,90]],[0,"right eye_end",8388608,1170,[-1583],[1,7.450580596923828e-9,0.01128531713038683,1.2665987370041876e-8],[3,0.0000016917472294127718,6.170012056818174e-9,-4.1886227108925643e-7,0.9999999999984812],[1,0.00019385995279289637,7.071125014201777e-7,-0.000047998079465172375]],[3,"right eye_end_end",8388608,1171,[[1,"right eye_end_end_end",8388608,-1584,[1,5.960464899423812e-10,0.011285314336419106,3.44216815051368e-8]]],[1,1.3709068547029801e-8,0.011285322718322277,7.227063392178934e-9],[3,-0.0000025331978576933247,1.1146769729428502e-8,-6.984920419816702e-10,0.9999999999967915],[1,-0.00029028309183423673,0.0000012773255186363435,-8.004452777657305e-8]],[0,"left eye",8388608,214,[-1585],[1,0.007816696539521217,0.008088074624538422,0.0008104006410576403],[3,-0.4833322786123404,0.5161297941585465,0.4833344541818849,0.5161276483913245],[1,-86.24125517318419,90.0002474051749,0.000009826573641812891]],[0,"left eye_end",8388608,1173,[-1586],[1,1.2433156726388006e-8,0.011285322718322277,5.856855000985206e-9],[3,1.0477378964409168e-9,5.915352208055046e-9,0.0000016901828985258776,0.9999999999985716],[1,1.200607733149561e-7,6.778492287861956e-7,0.00019368069338224458]],[3,"left eye_end_end",8388608,1174,[[1,"left eye_end_end_end",8388608,-1587,[1,7.078051478259795e-9,0.011285316199064255,4.842877210364804e-10]]],[1,1.672655258744271e-8,0.011285318061709404,-2.1606683109354208e-9],[3,-4.2284960954866026e-7,8.658391337221959e-9,-0.0000016913039644324944,0.9999999999984803],[1,-0.00004845499431391979,9.920966098682533e-7,-0.00019380915849106982]],[2,"jaw1",8388608,215,[-1588],[1,1.862645149230957e-9,0.045013949275016785,0.015709517523646355]],[2,"jaw1_end",8388608,1176,[-1589],[1,-7.450580707946131e-10,0.027444317936897278,-1.0989605891964516e-9]],[3,"jaw1_end_end",8388608,1177,[[11,"jaw1_end_end_end",8388608,-1590,[1,-4.4703482582342247e-10,0.02744431234896183,-2.1569430685985935e-8],[3,-0.0000010203220881511088,0.0000010196818038810613,1.4551915228351714e-9,0.9999999999989597],[1,-0.00011692029896006154,0.00011684692778744354,1.6663344378198693e-7]]],[1,1.7881393032936899e-9,0.027444347739219666,1.7862767265341972e-8],[3,0.000002010551270351287,-0.000002014101482919643,-3.783497126692792e-10,0.9999999999959506],[1,0.00023039220448395494,-0.0002307990288771928,-4.3819716712579345e-8]],[0,"tongue0",8388608,215,[-1591],[1,3.5762786065873797e-9,0.004420141689479351,0.005698944441974163],[3,0.14470117871230787,-1.3000424365683173e-8,0.000007537388013103071,0.9894754008172494],[1,16.639950996468475,-0.00012645551306502084,0.0008544151586764777]],[0,"tongue1",8388608,1179,[-1592],[1,-3.3527611797978807e-9,0.011291980743408203,-0.0012327989097684622],[3,-0.06670764023167682,-1.9519765523348155e-7,-2.3801742565346996e-8,0.9977725646331845],[1,-7.649813158440861,-0.000022500124022819532,-0.0000012292867664396407]],[0,"tongue2",8388608,1180,[-1593],[1,2.654269304347423e-10,0.01418344583362341,0.0005741515778936446],[3,-0.1374952653740075,5.523982732180117e-8,-4.5837314709614335e-8,0.9905024240251641],[1,-15.805867716311552,0.000005547694689655366,-0.000006073030173183047]],[0,"tongue2_end",8388608,1181,[-1594],[1,-1.3411045607369942e-9,0.014195075258612633,-5.79049830307099e-9],[3,0.0000014945978818981794,-0.0000014533287639974586,-3.259628789102487e-9,0.9999999999978271],[1,0.00017126830086094277,-0.00016653920828563922,-3.737748539378029e-7]],[3,"tongue2_end_end",8388608,1182,[[11,"tongue2_end_end_end",8388608,-1595,[1,-1.043081288010228e-9,0.014195038005709648,1.0114162840579866e-8],[3,0.0000021189916878843384,-0.0000021222513168954777,-2.3283064365282257e-10,0.9999999999955029],[1,0.00024281856102116275,-0.00024319208699148472,-2.7195748456137112e-8]]],[1,1.043081288010228e-9,0.014195079915225506,3.408640703028709e-9],[3,-0.0000035538696465228525,0.0000034507834242990154,-8.149073638008481e-10,0.9999999999877311],[1,-0.00040724346304701155,0.0003954306521184932,-9.478681427174957e-8]],[0,"Right Torso",8388608,106,[-1596],[1,-0.017464520409703255,0.009573213756084442,0.030453024432063103],[3,-1.4765793285428368e-8,-1.2075035933521495e-7,0.7071068407911856,0.707106721581894],[1,0,-0.000002392899432563725,90]],[2,"Right Torso_end",8388608,1184,[-1597],[1,2.784654506982065e-9,0.02686261013150215,3.81842246710562e-9]],[6,"Right Torso_end_end",8388608,1185,[[1,"Right Torso_end_end_end",8388608,-1598,[1,-1.1431984248133631e-8,0.0268626157194376,1.240521640966108e-8]]],[1,1.9604340373291507e-9,0.0268626157194376,-2.1047890097491972e-9]],[0,"Left Torso",8388608,106,[-1599],[1,0.017440930008888245,0.009573224000632763,0.030453002080321312],[3,0.500000126659862,-0.4999998882412794,-0.5000000670552164,-0.4999999180436022],[1,-90.0000221981152,89.99999487735771,-0.0000017075463256145647]],[2,"Left Torso_end",8388608,1187,[-1600],[1,1.7508864358362075e-9,0.026862619444727898,-2.8824433950802586e-9]],[6,"Left Torso_end_end",8388608,1188,[[1,"Left Torso_end_end_end",8388608,-1601,[1,-1.5832484212552345e-9,0.0268626157194376,-2.9336661988565993e-9]]],[1,-2.2165478341662492e-9,0.02686261013150215,5.820766091346741e-10]],[0,"tail0",8388608,108,[-1602],[1,2.38418573772492e-9,-0.01958109252154827,0.004617891740053892],[3,0.05616177867879355,0.028151084982951425,0.004469596682825916,0.9980147262116976],[1,6.4223793484064045,3.1925924357445123,0.692349061695615]],[0,"tail1",8388608,1190,[-1603],[1,-1.19209286886246e-9,-0.026223542168736458,-0.0007214128854684532],[3,0.0031083005351771912,0.0014343740341220459,-0.01194275649172853,0.9999228228249882],[1,0.35822495434177337,0.16865661998027534,-1.3680525498125806]],[0,"tail2",8388608,1191,[-1604],[1,2.38418573772492e-9,-0.03143041208386421,0.00010329753422411159],[3,0.003111778308726112,0.0013797485805861092,-0.011948764385323093,0.999922817101038],[1,0.35854984255366873,0.16240262721771287,-1.368760051413259]],[0,"tail3",8388608,1192,[-1605],[1,-2.38418573772492e-9,-0.02927638776600361,0.00020010948355775326],[3,0.0031156022961344666,0.0013251705064710123,-0.011954564573702881,0.999922809686485],[1,0.35891436722033493,0.15615446645465633,-1.3694437187155908]],[0,"tail4",8388608,1193,[-1606],[1,-4.76837147544984e-9,-0.027391791343688965,0.00019631088071037084],[3,0.0035525737043447716,0.0014388119918525726,-0.011879632153546678,0.999922088654923],[1,0.40914076039233777,0.16974711963651254,-1.3607416889422317]],[0,"tail5",8388608,1194,[-1607],[1,-1.1920929132713809e-8,-0.027199802920222282,0.00030194639111869037],[3,-0.0012750914229008672,-0.008457227549468383,0.03171206615500072,0.9994604515958702],[1,-0.11553545910896909,-0.9659600928893592,3.6356494243513264]],[0,"tail6",8388608,1195,[-1608],[1,9.53674295089968e-9,-0.025129156187176704,0.0011446529533714056],[3,-0.014449086548818109,-0.008872484528700394,0.0315430043349346,0.9993585651775438],[1,-1.6260902547158433,-0.9658152257334518,3.629360742339713]],[0,"tail7",8388608,1196,[-1609],[1,-5.9604645663569045e-9,-0.024538598954677582,0.0006162720965221524],[3,-0.0035734080338886967,-0.010646847758866457,0.03040127757568557,0.9994746808747028],[1,-0.3728700575034159,-1.2092794445726276,3.488414221479557]],[0,"tail8",8388608,1197,[-1610],[1,8.940697071579962e-9,-0.013206311501562595,0.0002693343267310411],[3,-0.00421273810623833,-0.009717253247809712,0.030597281375363466,0.9994756796437836],[1,-0.449268537675818,-1.1002936678150768,3.5112401274933487]],[2,"tail8_end",8388608,1198,[-1611],[1,1.19209286886246e-9,0.013208942487835884,0]],[6,"tail8_end_end",8388608,1199,[[1,"tail8_end_end_end",8388608,-1612,[1,1.19209286886246e-9,0.013209017924964428,-6.556510889765832e-9]]],[1,5.9604645663569045e-9,0.013209058903157711,1.7881394143159923e-9]],[0,"right leg0",8388608,108,[-1613],[1,-0.019055675715208054,0.0033091562800109386,0.016144664958119392],[3,-0.1758038810899314,-0.017633571842268422,0.6676717853270461,0.723184927674793],[1,-78.57820982882251,62.74263400658564,76.38525243107132]],[0,"right leg1",8388608,1201,[-1614],[1,0.011304101906716824,-0.0015700083458796144,0.04155361279845238],[3,0.06429759265723188,0.04945126062606861,0.0029156149162815385,0.9967005024532882],[1,7.347795831743105,5.636019159221763,0.6973746779464639]],[0,"right foot0",8388608,1202,[-1615],[1,-0.029886450618505478,0.0015699955401942134,0.032055873423814774],[3,-0.08061608046528909,-0.12210650177915211,0.006311681215104875,0.989217474812243],[1,-9.09280657404995,-13.92707573541503,1.8437953581496462]],[0,"right foot1",8388608,1203,[-1616],[1,0.003907094709575176,-0.00014767363609280437,0.018782703205943108],[3,0.012718700017344608,-0.019753488005658924,0.011716660245581385,0.9996553177241488],[1,1.4840307666426562,-2.2810810511675452,1.313492797221609]],[0,"right foot2",8388608,1204,[-1617],[1,0.005417832173407078,0.0001594980276422575,0.010887287557125092],[3,0.135298567316826,0.9880735445127315,-0.06766532475870929,0.028746689224323076],[1,8.434477156871264,175.53389993115258,15.276627672092612]],[0,"right toe0",8388608,1205,[-1618],[1,-0.004766051657497883,0.0004802089533768594,0.00009099081216845661],[3,0.13046292620968675,0.9907689432631921,-0.004293484967174884,0.036577205152664605],[1,1.070648052511951,175.63081923016807,14.963469722274361]],[0,"right toe1",8388608,1206,[-1619],[1,0.007804563734680414,-0.0004186089208815247,0.0005770097486674786],[3,-0.0011280903034880329,0.050888072283556754,-0.060021526621159046,0.9968984641645288],[1,0.22274179400602048,5.857801964075723,-6.879726116801438]],[0,"right toe2",8388608,1207,[-1620],[1,0.006148821674287319,0.0003150858683511615,-5.21540644005114e-10],[3,0.0000018084104049840189,-0.23793532170532997,0.000007286618322553768,0.9712810008584621],[1,0.00039994958420425553,-27.52942671179931,0.0007616980255523596]],[2,"right toe2_end",8388608,1208,[-1621],[1,-3.8743017682918435e-9,0.006156904622912407,7.450580707946131e-10]],[6,"right toe2_end_end",8388608,1209,[[1,"right toe2_end_end_end",8388608,-1622,[1,-5.9604643443123e-10,0.006156894378364086,-5.9604643443123e-10]]],[1,-1.639127722441458e-9,0.006156902760267258,2.98023217215615e-10]],[0,"left leg0",8388608,108,[-1623],[1,0.01840258203446865,0.0034433561377227306,0.024012885987758636],[3,-0.026719246605534135,-0.019741520688928448,0.0797837020365437,0.9962584579872158],[1,-2.9085726705116217,-2.0361285181125104,9.208366644433342]],[0,"left leg1",8388608,1211,[-1624],[1,-0.001570010674186051,0.011304106563329697,0.04155363142490387],[3,0.07505410346936253,-0.006625843860994315,0.003316218579660744,0.9971519354841928],[1,8.611106043601785,-0.7856617226002104,0.32194404411108085]],[0,"left foot0",8388608,1212,[-1625],[1,0.0015700102085247636,-0.029886456206440926,0.03205588459968567],[3,0.09446010059390231,0.00524464439530843,-0.0064196456671164566,0.9954941342119829],[1,10.844803105330856,0.6678338961791349,-0.6755684135879525]],[0,"left foot1",8388608,1213,[-1626],[1,-0.00014768153778277338,0.003907082136720419,0.018782710656523705],[3,-0.0688300711131612,-0.09169756385766402,-0.0010759593875588616,0.9934046609536936],[1,-7.871803697878175,-10.506304455837528,0.6007786594490084]],[0,"left foot2",8388608,1214,[-1627],[1,0.0001594924251548946,0.005417830776423216,0.01088727731257677],[3,0.16557359601450405,-0.293024776702799,0.645517941625473,0.6855862101739744],[1,79.53737191070073,-90.47599166257511,52.00663712930689]],[0,"left toe0",8388608,1215,[-1628],[1,0.0032210317440330982,-0.00048022984992712736,-0.0035140234977006912],[3,-0.00025397410362682974,0.993890734182026,-0.00042949190776777463,0.11036738440757354],[1,0.045703432009614624,167.32702392606475,-0.03435734826850064]],[0,"left toe1",8388608,1216,[-1629],[1,-0.005144279450178146,0.00001669451557972934,0.0058973608538508415],[3,0.00047318134286587397,-0.25816592798791194,-0.00016007157822210818,0.9661004627380357],[1,0.047648980608224735,-29.922515804701185,-0.03171946383206957]],[0,"left toe2",8388608,1217,[-1630],[1,1.7881393032936899e-9,0.00008683509804541245,0.006148934364318848],[3,0.00038137636832103974,-0.05181359592711081,-0.0003230278147168311,0.9986566484443983],[1,0.04172587266780249,-5.9400470473863285,-0.03923092244094853]],[2,"left toe2_end",8388608,1218,[-1631],[1,4.097819306103645e-10,0.006149544846266508,-5.587935669737476e-10]],[6,"left toe2_end_end",8388608,1219,[[1,"left toe2_end_end_end",8388608,-1632,[1,9.31322467062623e-12,0.006149547640234232,-3.7252903539730653e-10]]],[1,-6.519258050063925e-11,0.006149547174572945,-7.823109382520954e-10]],[23,"comp_LOD_2",8388608,16,[[18,1,-1633,[292,293,294,295,296,297],[7],16,298,299]],[3,1.5454308319985022e-8,0.707106721581899,-1.545430476727128e-8,0.7071068407911907],[1,99.99998474121094,99.99998474121094,99.99998474121094],[1,0.0000025044775805019677,89.99999034065368,7.675927522096591e-14]],[15,"Comp",8388608,17,[218],[3,-0.7071068407911907,1.54543154254125e-8,-1.545431187269876e-8,0.707106721581899],[1,9.999999046325684,9.999999046325684,9.999999046325684],[1,-90.00000965934633,7.675917777898835e-14,-0.0000025044787319857803]],[0,"spine0",8388608,218,[-1634],[1,3.7252903539730653e-10,0.003909075167030096,-0.00092517607845366],[3,-0.013759418954332359,-0.02019218487723872,0.021461381934783252,0.9994710416742307],[1,-1.5278449136403591,-2.281549172864686,2.490613936032426]],[0,"spine1",8388608,1223,[110],[1,2.38418573772492e-9,0.00814820732921362,-0.0024583544582128525],[3,-0.014868528756110217,-0.017917059571555493,0.022798139868672962,0.9994689343083488],[1,-1.6580895794748667,-2.015768713908674,2.642550980417355]],[0,"spine3",8388608,110,[-1635],[1,-5.066394859198908e-9,0.007588513661175966,-0.0019066231325268745],[3,0.020843829879679646,-0.010312797462126119,0.02867264475851253,0.9993182978445878],[1,2.4254322263752033,-1.251564674977951,3.2605303745488974]],[0,"spine4",8388608,1225,[111],[1,8.940696516468449e-10,0.008185500279068947,-0.0010699452832341194],[3,0.034254656149486834,-0.005485426314216125,0.05256574367670215,0.9980147149325741],[1,3.9755012009245196,-0.8382953020260973,6.001066118615762]],[0,"left arm0",8388608,111,[-1636],[1,0.013951382599771023,0.016790246590971947,0.016093119978904724],[3,-0.012916867621556222,0.00014373601880273082,-0.00014094100334092016,0.9999165535215615],[1,-1.4802028695162106,0.01626094512362714,-0.016362054691447837]],[0,"left arm1",8388608,1227,[-1637],[1,0.0010551911545917392,-0.007742427755147219,0.021822387352585793],[3,-0.10235335396090298,0.001129400536059972,-0.0011684727766184703,0.9947467768526588],[1,-11.749275059688674,0.11503553126164667,-0.1464404324964447]],[0,"left hand",8388608,1228,[-1638],[1,0.00009416900866199285,0.015645749866962433,0.010464519262313843],[3,0.3301397245118249,0.0005644782763280047,-0.00025354159734460773,0.9439318722133448],[1,38.5545242496592,0.07064951765266128,-0.006069833765081632]],[2,"left finger3",8388608,1229,[-1639],[1,8.344650304081824e-9,0.009227232076227665,0.004294860176742077]],[0,"left finger4",8388608,1230,[-1640],[1,0.00005059279646957293,0.002204132964834571,0.003155963961035013],[3,0.000007673238672860348,-0.000009594779093684764,0.7071121455309554,0.7071014166947133],[1,0,0.0012435109893833497,90]],[0,"left finger5",8388608,1231,[-1641],[1,0.00042112517985515296,-0.0001340837770840153,0.005627484526485205],[3,-0.09230603438907505,0.09230350119162783,-0.7010510090251443,0.7010614398381622],[1,0,15.001533567975944,-90]],[0,"left finger5_end",8388608,1232,[-1642],[1,-8.940696516468449e-10,0.0056448024697601795,8.940696516468449e-10],[3,0.0000019192621039034926,-0.0000020400616449398495,-5.30853654365919e-8,0.999999999996076],[1,0.0002199312242558464,-0.00023377383272774185,-0.000006083583460109329]],[3,"left finger5_end_end",8388608,1233,[[1,"left finger5_end_end_end",8388608,-1643,[1,1.1175871339474952e-9,0.005644826218485832,-8.12113309933693e-9]]],[1,-1.639127722441458e-9,0.005644821096211672,2.4586914726398845e-9],[3,-0.0000027220794436078912,0.000002801418531795414,4.222383722630338e-7,0.9999999999922822],[1,-0.0003119274627818528,0.00032101904875022903,0.00004838407951892836]],[0,"right arm0",8388608,111,[-1644],[1,-0.013974963687360287,0.016790248453617096,0.01609310694038868],[3,-0.009031942320728738,0.009235106619735695,0.7069480580786489,0.707147495224627],[1,-89.36624562339624,89.38270908907008,88.51971961785377]],[0,"right arm1",8388608,1235,[-1645],[1,-0.007742421701550484,0.0010551821906119585,0.021822378039360046],[3,0.0011293978723013517,0.10235323600169045,-0.00116846522389361,0.9947467890018288],[1,0.14244476872426218,11.749557580346796,-0.11994645319001446]],[0,"right hand",8388608,1236,[-1646],[1,0.015645867213606834,0.00009417087130714208,0.010464523918926716],[3,0.000564268567534426,-0.33015090822731785,-0.00025365272179565655,0.9439279607353295],[1,0.05143848065160351,-38.55585629010495,-0.048784345696111106]],[0,"right finger3",8388608,1237,[-1647],[1,0.009227292612195015,-7.599592066753758e-9,0.004294626880437136],[3,1.6298153937492528e-9,0.000002770327682799972,7.275961777491847e-11,0.9999999999961626],[1,1.867630637958631e-7,0.0003174561681857834,8.338155429893503e-9]],[0,"right finger4",8388608,1238,[-1648],[1,0.0022041972260922194,0.0000505955504195299,0.003155910177156329],[3,-6.984919309606769e-10,-0.000001633585839042647,1.4551918697794388e-11,0.9999999999986657],[1,-8.004127661182475e-8,-0.00018719514809904426,1.6676578047004918e-9]],[0,"right finger5",8388608,1239,[-1649],[1,0.00042110466165468097,0.0001340793096460402,0.005627505015581846],[3,-0.0000019479955177752215,0.13052655589795578,0.000007322112103060771,0.9914448134656862],[1,-0.00033083272104267504,15.000042036776538,0.000802737353376578]],[2,"right finger5_end",8388608,1240,[-1650],[1,-2.2538007016237316e-9,0.0056448327377438545,1.0002404238207419e-8]],[3,"right finger5_end_end",8388608,1241,[[1,"right finger5_end_end_end",8388608,-1651,[1,-1.974403973648009e-9,0.0056448327377438545,1.7881393032936899e-9]]],[1,-5.33647837031026e-9,0.005644836463034153,1.162290530487553e-8],[3,0.0000015022819752612897,-2.2382664610605817e-8,-2.478482770126758e-7,0.9999999999988407],[1,0.00017214883300648067,-0.0000025648217660946174,-0.000028401324317949088]],[0,"neck0",8388608,111,[-1652],[1,-2.6822091214739885e-9,0.015256059356033802,-0.00595217477530241],[3,-0.07123410846437608,-0.014987513727382237,0.028143017193092368,0.9969498717622799],[1,-8.130615612736486,-1.4851653091889252,3.3393464157132535]],[0,"neck1",8388608,1243,[-1653],[1,8.940696516468449e-10,0.017543168738484383,-0.016172247007489204],[3,-0.10494259662545745,0.0000061833183705481795,-0.00008328176707578431,0.9944782775100824],[1,-12.047718701658109,-0.0002968642299670698,-0.009565049350708435]],[0,"neck2",8388608,1244,[-1654],[1,4.470348535789981e-9,0.017027776688337326,-0.016856519505381584],[3,-0.046461860349687426,-0.0033375966875403224,-0.003000175268067493,0.9989099833966815],[1,-5.327239229013977,-0.3980264941498488,-0.3256519505946268]],[0,"neck3",8388608,1245,[219],[1,2.6822091214739885e-9,0.00766771798953414,-0.011520219966769218],[3,0.1129740622069687,-0.002462202908184354,-0.0016172785493945123,0.9935935704478913],[1,12.973139155541443,-0.25940575636329644,-0.21601506953467783]],[0,"right eye",8388608,220,[-1655],[1,-0.007840261794626713,0.008088086731731892,0.0008104066364467144],[3,0.0000015153221586345103,0.000001291498019247911,0.7071119369679933,0.7071016253647057],[1,0,0.0002455702580163,90]],[0,"right eye_end",8388608,1247,[-1656],[1,7.450580596923828e-9,0.01128531713038683,1.2665987370041876e-8],[3,0.0000016917472294127718,6.170012056818174e-9,-4.1886227108925643e-7,0.9999999999984812],[1,0.00019385995279289637,7.071125014201777e-7,-0.000047998079465172375]],[3,"right eye_end_end",8388608,1248,[[1,"right eye_end_end_end",8388608,-1657,[1,5.960464899423812e-10,0.011285314336419106,3.44216815051368e-8]]],[1,1.3709068547029801e-8,0.011285322718322277,7.227063392178934e-9],[3,-0.0000025331978576933247,1.1146769729428502e-8,-6.984920419816702e-10,0.9999999999967915],[1,-0.00029028309183423673,0.0000012773255186363435,-8.004452777657305e-8]],[0,"left eye",8388608,220,[-1658],[1,0.007816696539521217,0.008088074624538422,0.0008104006410576403],[3,-0.4833322786123404,0.5161297941585465,0.4833344541818849,0.5161276483913245],[1,-86.24125517318419,90.0002474051749,0.000009826573641812891]],[0,"left eye_end",8388608,1250,[-1659],[1,1.2433156726388006e-8,0.011285322718322277,5.856855000985206e-9],[3,1.0477378964409168e-9,5.915352208055046e-9,0.0000016901828985258776,0.9999999999985716],[1,1.200607733149561e-7,6.778492287861956e-7,0.00019368069338224458]],[3,"left eye_end_end",8388608,1251,[[1,"left eye_end_end_end",8388608,-1660,[1,7.078051478259795e-9,0.011285316199064255,4.842877210364804e-10]]],[1,1.672655258744271e-8,0.011285318061709404,-2.1606683109354208e-9],[3,-4.2284960954866026e-7,8.658391337221959e-9,-0.0000016913039644324944,0.9999999999984803],[1,-0.00004845499431391979,9.920966098682533e-7,-0.00019380915849106982]],[2,"jaw1",8388608,221,[-1661],[1,1.862645149230957e-9,0.045013949275016785,0.015709517523646355]],[2,"jaw1_end",8388608,1253,[-1662],[1,-7.450580707946131e-10,0.027444317936897278,-1.0989605891964516e-9]],[3,"jaw1_end_end",8388608,1254,[[11,"jaw1_end_end_end",8388608,-1663,[1,-4.4703482582342247e-10,0.02744431234896183,-2.1569430685985935e-8],[3,-0.0000010203220881511088,0.0000010196818038810613,1.4551915228351714e-9,0.9999999999989597],[1,-0.00011692029896006154,0.00011684692778744354,1.6663344378198693e-7]]],[1,1.7881393032936899e-9,0.027444347739219666,1.7862767265341972e-8],[3,0.000002010551270351287,-0.000002014101482919643,-3.783497126692792e-10,0.9999999999959506],[1,0.00023039220448395494,-0.0002307990288771928,-4.3819716712579345e-8]],[0,"tongue0",8388608,221,[-1664],[1,3.5762786065873797e-9,0.004420141689479351,0.005698944441974163],[3,0.14470117871230787,-1.3000424365683173e-8,0.000007537388013103071,0.9894754008172494],[1,16.639950996468475,-0.00012645551306502084,0.0008544151586764777]],[0,"tongue1",8388608,1256,[-1665],[1,-3.3527611797978807e-9,0.011291980743408203,-0.0012327989097684622],[3,-0.06670764023167682,-1.9519765523348155e-7,-2.3801742565346996e-8,0.9977725646331845],[1,-7.649813158440861,-0.000022500124022819532,-0.0000012292867664396407]],[0,"tongue2",8388608,1257,[-1666],[1,2.654269304347423e-10,0.01418344583362341,0.0005741515778936446],[3,-0.1374952653740075,5.523982732180117e-8,-4.5837314709614335e-8,0.9905024240251641],[1,-15.805867716311552,0.000005547694689655366,-0.000006073030173183047]],[0,"tongue2_end",8388608,1258,[-1667],[1,-1.3411045607369942e-9,0.014195075258612633,-5.79049830307099e-9],[3,0.0000014945978818981794,-0.0000014533287639974586,-3.259628789102487e-9,0.9999999999978271],[1,0.00017126830086094277,-0.00016653920828563922,-3.737748539378029e-7]],[3,"tongue2_end_end",8388608,1259,[[11,"tongue2_end_end_end",8388608,-1668,[1,-1.043081288010228e-9,0.014195038005709648,1.0114162840579866e-8],[3,0.0000021189916878843384,-0.0000021222513168954777,-2.3283064365282257e-10,0.9999999999955029],[1,0.00024281856102116275,-0.00024319208699148472,-2.7195748456137112e-8]]],[1,1.043081288010228e-9,0.014195079915225506,3.408640703028709e-9],[3,-0.0000035538696465228525,0.0000034507834242990154,-8.149073638008481e-10,0.9999999999877311],[1,-0.00040724346304701155,0.0003954306521184932,-9.478681427174957e-8]],[0,"Right Torso",8388608,110,[-1669],[1,-0.017464520409703255,0.009573213756084442,0.030453024432063103],[3,-1.4765793285428368e-8,-1.2075035933521495e-7,0.7071068407911856,0.707106721581894],[1,0,-0.000002392899432563725,90]],[2,"Right Torso_end",8388608,1261,[-1670],[1,2.784654506982065e-9,0.02686261013150215,3.81842246710562e-9]],[6,"Right Torso_end_end",8388608,1262,[[1,"Right Torso_end_end_end",8388608,-1671,[1,-1.1431984248133631e-8,0.0268626157194376,1.240521640966108e-8]]],[1,1.9604340373291507e-9,0.0268626157194376,-2.1047890097491972e-9]],[0,"Left Torso",8388608,110,[-1672],[1,0.017440930008888245,0.009573224000632763,0.030453002080321312],[3,0.500000126659862,-0.4999998882412794,-0.5000000670552164,-0.4999999180436022],[1,-90.0000221981152,89.99999487735771,-0.0000017075463256145647]],[2,"Left Torso_end",8388608,1264,[-1673],[1,1.7508864358362075e-9,0.026862619444727898,-2.8824433950802586e-9]],[6,"Left Torso_end_end",8388608,1265,[[1,"Left Torso_end_end_end",8388608,-1674,[1,-1.5832484212552345e-9,0.0268626157194376,-2.9336661988565993e-9]]],[1,-2.2165478341662492e-9,0.02686261013150215,5.820766091346741e-10]],[0,"tail0",8388608,112,[-1675],[1,2.38418573772492e-9,-0.01958109252154827,0.004617891740053892],[3,0.05616177867879355,0.028151084982951425,0.004469596682825916,0.9980147262116976],[1,6.4223793484064045,3.1925924357445123,0.692349061695615]],[0,"tail1",8388608,1267,[-1676],[1,-1.19209286886246e-9,-0.026223542168736458,-0.0007214128854684532],[3,0.0031083005351771912,0.0014343740341220459,-0.01194275649172853,0.9999228228249882],[1,0.35822495434177337,0.16865661998027534,-1.3680525498125806]],[0,"tail2",8388608,1268,[-1677],[1,2.38418573772492e-9,-0.03143041208386421,0.00010329753422411159],[3,0.003111778308726112,0.0013797485805861092,-0.011948764385323093,0.999922817101038],[1,0.35854984255366873,0.16240262721771287,-1.368760051413259]],[0,"tail3",8388608,1269,[-1678],[1,-2.38418573772492e-9,-0.02927638776600361,0.00020010948355775326],[3,0.0031156022961344666,0.0013251705064710123,-0.011954564573702881,0.999922809686485],[1,0.35891436722033493,0.15615446645465633,-1.3694437187155908]],[0,"tail4",8388608,1270,[-1679],[1,-4.76837147544984e-9,-0.027391791343688965,0.00019631088071037084],[3,0.0035525737043447716,0.0014388119918525726,-0.011879632153546678,0.999922088654923],[1,0.40914076039233777,0.16974711963651254,-1.3607416889422317]],[0,"tail5",8388608,1271,[-1680],[1,-1.1920929132713809e-8,-0.027199802920222282,0.00030194639111869037],[3,-0.0012750914229008672,-0.008457227549468383,0.03171206615500072,0.9994604515958702],[1,-0.11553545910896909,-0.9659600928893592,3.6356494243513264]],[0,"tail6",8388608,1272,[-1681],[1,9.53674295089968e-9,-0.025129156187176704,0.0011446529533714056],[3,-0.014449086548818109,-0.008872484528700394,0.0315430043349346,0.9993585651775438],[1,-1.6260902547158433,-0.9658152257334518,3.629360742339713]],[0,"tail7",8388608,1273,[-1682],[1,-5.9604645663569045e-9,-0.024538598954677582,0.0006162720965221524],[3,-0.0035734080338886967,-0.010646847758866457,0.03040127757568557,0.9994746808747028],[1,-0.3728700575034159,-1.2092794445726276,3.488414221479557]],[0,"tail8",8388608,1274,[-1683],[1,8.940697071579962e-9,-0.013206311501562595,0.0002693343267310411],[3,-0.00421273810623833,-0.009717253247809712,0.030597281375363466,0.9994756796437836],[1,-0.449268537675818,-1.1002936678150768,3.5112401274933487]],[2,"tail8_end",8388608,1275,[-1684],[1,1.19209286886246e-9,0.013208942487835884,0]],[6,"tail8_end_end",8388608,1276,[[1,"tail8_end_end_end",8388608,-1685,[1,1.19209286886246e-9,0.013209017924964428,-6.556510889765832e-9]]],[1,5.9604645663569045e-9,0.013209058903157711,1.7881394143159923e-9]],[0,"right leg0",8388608,112,[-1686],[1,-0.019055675715208054,0.0033091562800109386,0.016144664958119392],[3,-0.1758038810899314,-0.017633571842268422,0.6676717853270461,0.723184927674793],[1,-78.57820982882251,62.74263400658564,76.38525243107132]],[0,"right leg1",8388608,1278,[-1687],[1,0.011304101906716824,-0.0015700083458796144,0.04155361279845238],[3,0.06429759265723188,0.04945126062606861,0.0029156149162815385,0.9967005024532882],[1,7.347795831743105,5.636019159221763,0.6973746779464639]],[0,"right foot0",8388608,1279,[-1688],[1,-0.029886450618505478,0.0015699955401942134,0.032055873423814774],[3,-0.08061608046528909,-0.12210650177915211,0.006311681215104875,0.989217474812243],[1,-9.09280657404995,-13.92707573541503,1.8437953581496462]],[0,"right foot1",8388608,1280,[-1689],[1,0.003907094709575176,-0.00014767363609280437,0.018782703205943108],[3,0.012718700017344608,-0.019753488005658924,0.011716660245581385,0.9996553177241488],[1,1.4840307666426562,-2.2810810511675452,1.313492797221609]],[0,"right foot2",8388608,1281,[-1690],[1,0.005417832173407078,0.0001594980276422575,0.010887287557125092],[3,0.135298567316826,0.9880735445127315,-0.06766532475870929,0.028746689224323076],[1,8.434477156871264,175.53389993115258,15.276627672092612]],[0,"right toe0",8388608,1282,[-1691],[1,-0.004766051657497883,0.0004802089533768594,0.00009099081216845661],[3,0.13046292620968675,0.9907689432631921,-0.004293484967174884,0.036577205152664605],[1,1.070648052511951,175.63081923016807,14.963469722274361]],[0,"right toe1",8388608,1283,[-1692],[1,0.007804563734680414,-0.0004186089208815247,0.0005770097486674786],[3,-0.0011280903034880329,0.050888072283556754,-0.060021526621159046,0.9968984641645288],[1,0.22274179400602048,5.857801964075723,-6.879726116801438]],[0,"right toe2",8388608,1284,[-1693],[1,0.006148821674287319,0.0003150858683511615,-5.21540644005114e-10],[3,0.0000018084104049840189,-0.23793532170532997,0.000007286618322553768,0.9712810008584621],[1,0.00039994958420425553,-27.52942671179931,0.0007616980255523596]],[2,"right toe2_end",8388608,1285,[-1694],[1,-3.8743017682918435e-9,0.006156904622912407,7.450580707946131e-10]],[6,"right toe2_end_end",8388608,1286,[[1,"right toe2_end_end_end",8388608,-1695,[1,-5.9604643443123e-10,0.006156894378364086,-5.9604643443123e-10]]],[1,-1.639127722441458e-9,0.006156902760267258,2.98023217215615e-10]],[0,"left leg0",8388608,112,[-1696],[1,0.01840258203446865,0.0034433561377227306,0.024012885987758636],[3,-0.026719246605534135,-0.019741520688928448,0.0797837020365437,0.9962584579872158],[1,-2.9085726705116217,-2.0361285181125104,9.208366644433342]],[0,"left leg1",8388608,1288,[-1697],[1,-0.001570010674186051,0.011304106563329697,0.04155363142490387],[3,0.07505410346936253,-0.006625843860994315,0.003316218579660744,0.9971519354841928],[1,8.611106043601785,-0.7856617226002104,0.32194404411108085]],[0,"left foot0",8388608,1289,[-1698],[1,0.0015700102085247636,-0.029886456206440926,0.03205588459968567],[3,0.09446010059390231,0.00524464439530843,-0.0064196456671164566,0.9954941342119829],[1,10.844803105330856,0.6678338961791349,-0.6755684135879525]],[0,"left foot1",8388608,1290,[-1699],[1,-0.00014768153778277338,0.003907082136720419,0.018782710656523705],[3,-0.0688300711131612,-0.09169756385766402,-0.0010759593875588616,0.9934046609536936],[1,-7.871803697878175,-10.506304455837528,0.6007786594490084]],[0,"left foot2",8388608,1291,[-1700],[1,0.0001594924251548946,0.005417830776423216,0.01088727731257677],[3,0.16557359601450405,-0.293024776702799,0.645517941625473,0.6855862101739744],[1,79.53737191070073,-90.47599166257511,52.00663712930689]],[0,"left toe0",8388608,1292,[-1701],[1,0.0032210317440330982,-0.00048022984992712736,-0.0035140234977006912],[3,-0.00025397410362682974,0.993890734182026,-0.00042949190776777463,0.11036738440757354],[1,0.045703432009614624,167.32702392606475,-0.03435734826850064]],[0,"left toe1",8388608,1293,[-1702],[1,-0.005144279450178146,0.00001669451557972934,0.0058973608538508415],[3,0.00047318134286587397,-0.25816592798791194,-0.00016007157822210818,0.9661004627380357],[1,0.047648980608224735,-29.922515804701185,-0.03171946383206957]],[0,"left toe2",8388608,1294,[-1703],[1,1.7881393032936899e-9,0.00008683509804541245,0.006148934364318848],[3,0.00038137636832103974,-0.05181359592711081,-0.0003230278147168311,0.9986566484443983],[1,0.04172587266780249,-5.9400470473863285,-0.03923092244094853]],[2,"left toe2_end",8388608,1295,[-1704],[1,4.097819306103645e-10,0.006149544846266508,-5.587935669737476e-10]],[6,"left toe2_end_end",8388608,1296,[[1,"left toe2_end_end_end",8388608,-1705,[1,9.31322467062623e-12,0.006149547640234232,-3.7252903539730653e-10]]],[1,-6.519258050063925e-11,0.006149547174572945,-7.823109382520954e-10]],[23,"comp_LOD_2",8388608,17,[[18,1,-1706,[309,310,311,312,313,314],[7],17,315,316]],[3,1.5454308319985022e-8,0.707106721581899,-1.545430476727128e-8,0.7071068407911907],[1,99.99998474121094,99.99998474121094,99.99998474121094],[1,0.0000025044775805019677,89.99999034065368,7.675927522096591e-14]],[15,"Comp",8388608,18,[224],[3,-0.7071068407911907,1.54543154254125e-8,-1.545431187269876e-8,0.707106721581899],[1,9.999999046325684,9.999999046325684,9.999999046325684],[1,-90.00000965934633,7.675917777898835e-14,-0.0000025044787319857803]],[0,"spine0",8388608,224,[-1707],[1,3.7252903539730653e-10,0.003909075167030096,-0.00092517607845366],[3,-0.013759418954332359,-0.02019218487723872,0.021461381934783252,0.9994710416742307],[1,-1.5278449136403591,-2.281549172864686,2.490613936032426]],[0,"spine1",8388608,1300,[114],[1,2.38418573772492e-9,0.00814820732921362,-0.0024583544582128525],[3,-0.014868528756110217,-0.017917059571555493,0.022798139868672962,0.9994689343083488],[1,-1.6580895794748667,-2.015768713908674,2.642550980417355]],[0,"spine3",8388608,114,[-1708],[1,-5.066394859198908e-9,0.007588513661175966,-0.0019066231325268745],[3,0.020843829879679646,-0.010312797462126119,0.02867264475851253,0.9993182978445878],[1,2.4254322263752033,-1.251564674977951,3.2605303745488974]],[0,"spine4",8388608,1302,[115],[1,8.940696516468449e-10,0.008185500279068947,-0.0010699452832341194],[3,0.034254656149486834,-0.005485426314216125,0.05256574367670215,0.9980147149325741],[1,3.9755012009245196,-0.8382953020260973,6.001066118615762]],[0,"left arm0",8388608,115,[-1709],[1,0.013951382599771023,0.016790246590971947,0.016093119978904724],[3,-0.012916867621556222,0.00014373601880273082,-0.00014094100334092016,0.9999165535215615],[1,-1.4802028695162106,0.01626094512362714,-0.016362054691447837]],[0,"left arm1",8388608,1304,[-1710],[1,0.0010551911545917392,-0.007742427755147219,0.021822387352585793],[3,-0.10235335396090298,0.001129400536059972,-0.0011684727766184703,0.9947467768526588],[1,-11.749275059688674,0.11503553126164667,-0.1464404324964447]],[0,"left hand",8388608,1305,[-1711],[1,0.00009416900866199285,0.015645749866962433,0.010464519262313843],[3,0.3301397245118249,0.0005644782763280047,-0.00025354159734460773,0.9439318722133448],[1,38.5545242496592,0.07064951765266128,-0.006069833765081632]],[2,"left finger3",8388608,1306,[-1712],[1,8.344650304081824e-9,0.009227232076227665,0.004294860176742077]],[0,"left finger4",8388608,1307,[-1713],[1,0.00005059279646957293,0.002204132964834571,0.003155963961035013],[3,0.000007673238672860348,-0.000009594779093684764,0.7071121455309554,0.7071014166947133],[1,0,0.0012435109893833497,90]],[0,"left finger5",8388608,1308,[-1714],[1,0.00042112517985515296,-0.0001340837770840153,0.005627484526485205],[3,-0.09230603438907505,0.09230350119162783,-0.7010510090251443,0.7010614398381622],[1,0,15.001533567975944,-90]],[0,"left finger5_end",8388608,1309,[-1715],[1,-8.940696516468449e-10,0.0056448024697601795,8.940696516468449e-10],[3,0.0000019192621039034926,-0.0000020400616449398495,-5.30853654365919e-8,0.999999999996076],[1,0.0002199312242558464,-0.00023377383272774185,-0.000006083583460109329]],[3,"left finger5_end_end",8388608,1310,[[1,"left finger5_end_end_end",8388608,-1716,[1,1.1175871339474952e-9,0.005644826218485832,-8.12113309933693e-9]]],[1,-1.639127722441458e-9,0.005644821096211672,2.4586914726398845e-9],[3,-0.0000027220794436078912,0.000002801418531795414,4.222383722630338e-7,0.9999999999922822],[1,-0.0003119274627818528,0.00032101904875022903,0.00004838407951892836]],[0,"right arm0",8388608,115,[-1717],[1,-0.013974963687360287,0.016790248453617096,0.01609310694038868],[3,-0.009031942320728738,0.009235106619735695,0.7069480580786489,0.707147495224627],[1,-89.36624562339624,89.38270908907008,88.51971961785377]],[0,"right arm1",8388608,1312,[-1718],[1,-0.007742421701550484,0.0010551821906119585,0.021822378039360046],[3,0.0011293978723013517,0.10235323600169045,-0.00116846522389361,0.9947467890018288],[1,0.14244476872426218,11.749557580346796,-0.11994645319001446]],[0,"right hand",8388608,1313,[-1719],[1,0.015645867213606834,0.00009417087130714208,0.010464523918926716],[3,0.000564268567534426,-0.33015090822731785,-0.00025365272179565655,0.9439279607353295],[1,0.05143848065160351,-38.55585629010495,-0.048784345696111106]],[0,"right finger3",8388608,1314,[-1720],[1,0.009227292612195015,-7.599592066753758e-9,0.004294626880437136],[3,1.6298153937492528e-9,0.000002770327682799972,7.275961777491847e-11,0.9999999999961626],[1,1.867630637958631e-7,0.0003174561681857834,8.338155429893503e-9]],[0,"right finger4",8388608,1315,[-1721],[1,0.0022041972260922194,0.0000505955504195299,0.003155910177156329],[3,-6.984919309606769e-10,-0.000001633585839042647,1.4551918697794388e-11,0.9999999999986657],[1,-8.004127661182475e-8,-0.00018719514809904426,1.6676578047004918e-9]],[0,"right finger5",8388608,1316,[-1722],[1,0.00042110466165468097,0.0001340793096460402,0.005627505015581846],[3,-0.0000019479955177752215,0.13052655589795578,0.000007322112103060771,0.9914448134656862],[1,-0.00033083272104267504,15.000042036776538,0.000802737353376578]],[2,"right finger5_end",8388608,1317,[-1723],[1,-2.2538007016237316e-9,0.0056448327377438545,1.0002404238207419e-8]],[3,"right finger5_end_end",8388608,1318,[[1,"right finger5_end_end_end",8388608,-1724,[1,-1.974403973648009e-9,0.0056448327377438545,1.7881393032936899e-9]]],[1,-5.33647837031026e-9,0.005644836463034153,1.162290530487553e-8],[3,0.0000015022819752612897,-2.2382664610605817e-8,-2.478482770126758e-7,0.9999999999988407],[1,0.00017214883300648067,-0.0000025648217660946174,-0.000028401324317949088]],[0,"neck0",8388608,115,[-1725],[1,-2.6822091214739885e-9,0.015256059356033802,-0.00595217477530241],[3,-0.07123410846437608,-0.014987513727382237,0.028143017193092368,0.9969498717622799],[1,-8.130615612736486,-1.4851653091889252,3.3393464157132535]],[0,"neck1",8388608,1320,[-1726],[1,8.940696516468449e-10,0.017543168738484383,-0.016172247007489204],[3,-0.10494259662545745,0.0000061833183705481795,-0.00008328176707578431,0.9944782775100824],[1,-12.047718701658109,-0.0002968642299670698,-0.009565049350708435]],[0,"neck2",8388608,1321,[-1727],[1,4.470348535789981e-9,0.017027776688337326,-0.016856519505381584],[3,-0.046461860349687426,-0.0033375966875403224,-0.003000175268067493,0.9989099833966815],[1,-5.327239229013977,-0.3980264941498488,-0.3256519505946268]],[0,"neck3",8388608,1322,[225],[1,2.6822091214739885e-9,0.00766771798953414,-0.011520219966769218],[3,0.1129740622069687,-0.002462202908184354,-0.0016172785493945123,0.9935935704478913],[1,12.973139155541443,-0.25940575636329644,-0.21601506953467783]],[0,"right eye",8388608,226,[-1728],[1,-0.007840261794626713,0.008088086731731892,0.0008104066364467144],[3,0.0000015153221586345103,0.000001291498019247911,0.7071119369679933,0.7071016253647057],[1,0,0.0002455702580163,90]],[0,"right eye_end",8388608,1324,[-1729],[1,7.450580596923828e-9,0.01128531713038683,1.2665987370041876e-8],[3,0.0000016917472294127718,6.170012056818174e-9,-4.1886227108925643e-7,0.9999999999984812],[1,0.00019385995279289637,7.071125014201777e-7,-0.000047998079465172375]],[3,"right eye_end_end",8388608,1325,[[1,"right eye_end_end_end",8388608,-1730,[1,5.960464899423812e-10,0.011285314336419106,3.44216815051368e-8]]],[1,1.3709068547029801e-8,0.011285322718322277,7.227063392178934e-9],[3,-0.0000025331978576933247,1.1146769729428502e-8,-6.984920419816702e-10,0.9999999999967915],[1,-0.00029028309183423673,0.0000012773255186363435,-8.004452777657305e-8]],[0,"left eye",8388608,226,[-1731],[1,0.007816696539521217,0.008088074624538422,0.0008104006410576403],[3,-0.4833322786123404,0.5161297941585465,0.4833344541818849,0.5161276483913245],[1,-86.24125517318419,90.0002474051749,0.000009826573641812891]],[0,"left eye_end",8388608,1327,[-1732],[1,1.2433156726388006e-8,0.011285322718322277,5.856855000985206e-9],[3,1.0477378964409168e-9,5.915352208055046e-9,0.0000016901828985258776,0.9999999999985716],[1,1.200607733149561e-7,6.778492287861956e-7,0.00019368069338224458]],[3,"left eye_end_end",8388608,1328,[[1,"left eye_end_end_end",8388608,-1733,[1,7.078051478259795e-9,0.011285316199064255,4.842877210364804e-10]]],[1,1.672655258744271e-8,0.011285318061709404,-2.1606683109354208e-9],[3,-4.2284960954866026e-7,8.658391337221959e-9,-0.0000016913039644324944,0.9999999999984803],[1,-0.00004845499431391979,9.920966098682533e-7,-0.00019380915849106982]],[2,"jaw1",8388608,227,[-1734],[1,1.862645149230957e-9,0.045013949275016785,0.015709517523646355]],[2,"jaw1_end",8388608,1330,[-1735],[1,-7.450580707946131e-10,0.027444317936897278,-1.0989605891964516e-9]],[3,"jaw1_end_end",8388608,1331,[[11,"jaw1_end_end_end",8388608,-1736,[1,-4.4703482582342247e-10,0.02744431234896183,-2.1569430685985935e-8],[3,-0.0000010203220881511088,0.0000010196818038810613,1.4551915228351714e-9,0.9999999999989597],[1,-0.00011692029896006154,0.00011684692778744354,1.6663344378198693e-7]]],[1,1.7881393032936899e-9,0.027444347739219666,1.7862767265341972e-8],[3,0.000002010551270351287,-0.000002014101482919643,-3.783497126692792e-10,0.9999999999959506],[1,0.00023039220448395494,-0.0002307990288771928,-4.3819716712579345e-8]],[0,"tongue0",8388608,227,[-1737],[1,3.5762786065873797e-9,0.004420141689479351,0.005698944441974163],[3,0.14470117871230787,-1.3000424365683173e-8,0.000007537388013103071,0.9894754008172494],[1,16.639950996468475,-0.00012645551306502084,0.0008544151586764777]],[0,"tongue1",8388608,1333,[-1738],[1,-3.3527611797978807e-9,0.011291980743408203,-0.0012327989097684622],[3,-0.06670764023167682,-1.9519765523348155e-7,-2.3801742565346996e-8,0.9977725646331845],[1,-7.649813158440861,-0.000022500124022819532,-0.0000012292867664396407]],[0,"tongue2",8388608,1334,[-1739],[1,2.654269304347423e-10,0.01418344583362341,0.0005741515778936446],[3,-0.1374952653740075,5.523982732180117e-8,-4.5837314709614335e-8,0.9905024240251641],[1,-15.805867716311552,0.000005547694689655366,-0.000006073030173183047]],[0,"tongue2_end",8388608,1335,[-1740],[1,-1.3411045607369942e-9,0.014195075258612633,-5.79049830307099e-9],[3,0.0000014945978818981794,-0.0000014533287639974586,-3.259628789102487e-9,0.9999999999978271],[1,0.00017126830086094277,-0.00016653920828563922,-3.737748539378029e-7]],[3,"tongue2_end_end",8388608,1336,[[11,"tongue2_end_end_end",8388608,-1741,[1,-1.043081288010228e-9,0.014195038005709648,1.0114162840579866e-8],[3,0.0000021189916878843384,-0.0000021222513168954777,-2.3283064365282257e-10,0.9999999999955029],[1,0.00024281856102116275,-0.00024319208699148472,-2.7195748456137112e-8]]],[1,1.043081288010228e-9,0.014195079915225506,3.408640703028709e-9],[3,-0.0000035538696465228525,0.0000034507834242990154,-8.149073638008481e-10,0.9999999999877311],[1,-0.00040724346304701155,0.0003954306521184932,-9.478681427174957e-8]],[0,"Right Torso",8388608,114,[-1742],[1,-0.017464520409703255,0.009573213756084442,0.030453024432063103],[3,-1.4765793285428368e-8,-1.2075035933521495e-7,0.7071068407911856,0.707106721581894],[1,0,-0.000002392899432563725,90]],[2,"Right Torso_end",8388608,1338,[-1743],[1,2.784654506982065e-9,0.02686261013150215,3.81842246710562e-9]],[6,"Right Torso_end_end",8388608,1339,[[1,"Right Torso_end_end_end",8388608,-1744,[1,-1.1431984248133631e-8,0.0268626157194376,1.240521640966108e-8]]],[1,1.9604340373291507e-9,0.0268626157194376,-2.1047890097491972e-9]],[0,"Left Torso",8388608,114,[-1745],[1,0.017440930008888245,0.009573224000632763,0.030453002080321312],[3,0.500000126659862,-0.4999998882412794,-0.5000000670552164,-0.4999999180436022],[1,-90.0000221981152,89.99999487735771,-0.0000017075463256145647]],[2,"Left Torso_end",8388608,1341,[-1746],[1,1.7508864358362075e-9,0.026862619444727898,-2.8824433950802586e-9]],[6,"Left Torso_end_end",8388608,1342,[[1,"Left Torso_end_end_end",8388608,-1747,[1,-1.5832484212552345e-9,0.0268626157194376,-2.9336661988565993e-9]]],[1,-2.2165478341662492e-9,0.02686261013150215,5.820766091346741e-10]],[0,"tail0",8388608,116,[-1748],[1,2.38418573772492e-9,-0.01958109252154827,0.004617891740053892],[3,0.05616177867879355,0.028151084982951425,0.004469596682825916,0.9980147262116976],[1,6.4223793484064045,3.1925924357445123,0.692349061695615]],[0,"tail1",8388608,1344,[-1749],[1,-1.19209286886246e-9,-0.026223542168736458,-0.0007214128854684532],[3,0.0031083005351771912,0.0014343740341220459,-0.01194275649172853,0.9999228228249882],[1,0.35822495434177337,0.16865661998027534,-1.3680525498125806]],[0,"tail2",8388608,1345,[-1750],[1,2.38418573772492e-9,-0.03143041208386421,0.00010329753422411159],[3,0.003111778308726112,0.0013797485805861092,-0.011948764385323093,0.999922817101038],[1,0.35854984255366873,0.16240262721771287,-1.368760051413259]],[0,"tail3",8388608,1346,[-1751],[1,-2.38418573772492e-9,-0.02927638776600361,0.00020010948355775326],[3,0.0031156022961344666,0.0013251705064710123,-0.011954564573702881,0.999922809686485],[1,0.35891436722033493,0.15615446645465633,-1.3694437187155908]],[0,"tail4",8388608,1347,[-1752],[1,-4.76837147544984e-9,-0.027391791343688965,0.00019631088071037084],[3,0.0035525737043447716,0.0014388119918525726,-0.011879632153546678,0.999922088654923],[1,0.40914076039233777,0.16974711963651254,-1.3607416889422317]],[0,"tail5",8388608,1348,[-1753],[1,-1.1920929132713809e-8,-0.027199802920222282,0.00030194639111869037],[3,-0.0012750914229008672,-0.008457227549468383,0.03171206615500072,0.9994604515958702],[1,-0.11553545910896909,-0.9659600928893592,3.6356494243513264]],[0,"tail6",8388608,1349,[-1754],[1,9.53674295089968e-9,-0.025129156187176704,0.0011446529533714056],[3,-0.014449086548818109,-0.008872484528700394,0.0315430043349346,0.9993585651775438],[1,-1.6260902547158433,-0.9658152257334518,3.629360742339713]],[0,"tail7",8388608,1350,[-1755],[1,-5.9604645663569045e-9,-0.024538598954677582,0.0006162720965221524],[3,-0.0035734080338886967,-0.010646847758866457,0.03040127757568557,0.9994746808747028],[1,-0.3728700575034159,-1.2092794445726276,3.488414221479557]],[0,"tail8",8388608,1351,[-1756],[1,8.940697071579962e-9,-0.013206311501562595,0.0002693343267310411],[3,-0.00421273810623833,-0.009717253247809712,0.030597281375363466,0.9994756796437836],[1,-0.449268537675818,-1.1002936678150768,3.5112401274933487]],[2,"tail8_end",8388608,1352,[-1757],[1,1.19209286886246e-9,0.013208942487835884,0]],[6,"tail8_end_end",8388608,1353,[[1,"tail8_end_end_end",8388608,-1758,[1,1.19209286886246e-9,0.013209017924964428,-6.556510889765832e-9]]],[1,5.9604645663569045e-9,0.013209058903157711,1.7881394143159923e-9]],[0,"right leg0",8388608,116,[-1759],[1,-0.019055675715208054,0.0033091562800109386,0.016144664958119392],[3,-0.1758038810899314,-0.017633571842268422,0.6676717853270461,0.723184927674793],[1,-78.57820982882251,62.74263400658564,76.38525243107132]],[0,"right leg1",8388608,1355,[-1760],[1,0.011304101906716824,-0.0015700083458796144,0.04155361279845238],[3,0.06429759265723188,0.04945126062606861,0.0029156149162815385,0.9967005024532882],[1,7.347795831743105,5.636019159221763,0.6973746779464639]],[0,"right foot0",8388608,1356,[-1761],[1,-0.029886450618505478,0.0015699955401942134,0.032055873423814774],[3,-0.08061608046528909,-0.12210650177915211,0.006311681215104875,0.989217474812243],[1,-9.09280657404995,-13.92707573541503,1.8437953581496462]],[0,"right foot1",8388608,1357,[-1762],[1,0.003907094709575176,-0.00014767363609280437,0.018782703205943108],[3,0.012718700017344608,-0.019753488005658924,0.011716660245581385,0.9996553177241488],[1,1.4840307666426562,-2.2810810511675452,1.313492797221609]],[0,"right foot2",8388608,1358,[-1763],[1,0.005417832173407078,0.0001594980276422575,0.010887287557125092],[3,0.135298567316826,0.9880735445127315,-0.06766532475870929,0.028746689224323076],[1,8.434477156871264,175.53389993115258,15.276627672092612]],[0,"right toe0",8388608,1359,[-1764],[1,-0.004766051657497883,0.0004802089533768594,0.00009099081216845661],[3,0.13046292620968675,0.9907689432631921,-0.004293484967174884,0.036577205152664605],[1,1.070648052511951,175.63081923016807,14.963469722274361]],[0,"right toe1",8388608,1360,[-1765],[1,0.007804563734680414,-0.0004186089208815247,0.0005770097486674786],[3,-0.0011280903034880329,0.050888072283556754,-0.060021526621159046,0.9968984641645288],[1,0.22274179400602048,5.857801964075723,-6.879726116801438]],[0,"right toe2",8388608,1361,[-1766],[1,0.006148821674287319,0.0003150858683511615,-5.21540644005114e-10],[3,0.0000018084104049840189,-0.23793532170532997,0.000007286618322553768,0.9712810008584621],[1,0.00039994958420425553,-27.52942671179931,0.0007616980255523596]],[2,"right toe2_end",8388608,1362,[-1767],[1,-3.8743017682918435e-9,0.006156904622912407,7.450580707946131e-10]],[6,"right toe2_end_end",8388608,1363,[[1,"right toe2_end_end_end",8388608,-1768,[1,-5.9604643443123e-10,0.006156894378364086,-5.9604643443123e-10]]],[1,-1.639127722441458e-9,0.006156902760267258,2.98023217215615e-10]],[0,"left leg0",8388608,116,[-1769],[1,0.01840258203446865,0.0034433561377227306,0.024012885987758636],[3,-0.026719246605534135,-0.019741520688928448,0.0797837020365437,0.9962584579872158],[1,-2.9085726705116217,-2.0361285181125104,9.208366644433342]],[0,"left leg1",8388608,1365,[-1770],[1,-0.001570010674186051,0.011304106563329697,0.04155363142490387],[3,0.07505410346936253,-0.006625843860994315,0.003316218579660744,0.9971519354841928],[1,8.611106043601785,-0.7856617226002104,0.32194404411108085]],[0,"left foot0",8388608,1366,[-1771],[1,0.0015700102085247636,-0.029886456206440926,0.03205588459968567],[3,0.09446010059390231,0.00524464439530843,-0.0064196456671164566,0.9954941342119829],[1,10.844803105330856,0.6678338961791349,-0.6755684135879525]],[0,"left foot1",8388608,1367,[-1772],[1,-0.00014768153778277338,0.003907082136720419,0.018782710656523705],[3,-0.0688300711131612,-0.09169756385766402,-0.0010759593875588616,0.9934046609536936],[1,-7.871803697878175,-10.506304455837528,0.6007786594490084]],[0,"left foot2",8388608,1368,[-1773],[1,0.0001594924251548946,0.005417830776423216,0.01088727731257677],[3,0.16557359601450405,-0.293024776702799,0.645517941625473,0.6855862101739744],[1,79.53737191070073,-90.47599166257511,52.00663712930689]],[0,"left toe0",8388608,1369,[-1774],[1,0.0032210317440330982,-0.00048022984992712736,-0.0035140234977006912],[3,-0.00025397410362682974,0.993890734182026,-0.00042949190776777463,0.11036738440757354],[1,0.045703432009614624,167.32702392606475,-0.03435734826850064]],[0,"left toe1",8388608,1370,[-1775],[1,-0.005144279450178146,0.00001669451557972934,0.0058973608538508415],[3,0.00047318134286587397,-0.25816592798791194,-0.00016007157822210818,0.9661004627380357],[1,0.047648980608224735,-29.922515804701185,-0.03171946383206957]],[0,"left toe2",8388608,1371,[-1776],[1,1.7881393032936899e-9,0.00008683509804541245,0.006148934364318848],[3,0.00038137636832103974,-0.05181359592711081,-0.0003230278147168311,0.9986566484443983],[1,0.04172587266780249,-5.9400470473863285,-0.03923092244094853]],[2,"left toe2_end",8388608,1372,[-1777],[1,4.097819306103645e-10,0.006149544846266508,-5.587935669737476e-10]],[6,"left toe2_end_end",8388608,1373,[[1,"left toe2_end_end_end",8388608,-1778,[1,9.31322467062623e-12,0.006149547640234232,-3.7252903539730653e-10]]],[1,-6.519258050063925e-11,0.006149547174572945,-7.823109382520954e-10]],[23,"comp_LOD_2",8388608,18,[[18,1,-1779,[326,327,328,329,330,331],[7],18,332,333]],[3,1.5454308319985022e-8,0.707106721581899,-1.545430476727128e-8,0.7071068407911907],[1,99.99998474121094,99.99998474121094,99.99998474121094],[1,0.0000025044775805019677,89.99999034065368,7.675927522096591e-14]],[15,"Comp",8388608,19,[230],[3,-0.7071068407911907,1.54543154254125e-8,-1.545431187269876e-8,0.707106721581899],[1,9.999999046325684,9.999999046325684,9.999999046325684],[1,-90.00000965934633,7.675917777898835e-14,-0.0000025044787319857803]],[0,"spine0",8388608,230,[-1780],[1,3.7252903539730653e-10,0.003909075167030096,-0.00092517607845366],[3,-0.013759418954332359,-0.02019218487723872,0.021461381934783252,0.9994710416742307],[1,-1.5278449136403591,-2.281549172864686,2.490613936032426]],[0,"spine1",8388608,1377,[118],[1,2.38418573772492e-9,0.00814820732921362,-0.0024583544582128525],[3,-0.014868528756110217,-0.017917059571555493,0.022798139868672962,0.9994689343083488],[1,-1.6580895794748667,-2.015768713908674,2.642550980417355]],[0,"spine3",8388608,118,[-1781],[1,-5.066394859198908e-9,0.007588513661175966,-0.0019066231325268745],[3,0.020843829879679646,-0.010312797462126119,0.02867264475851253,0.9993182978445878],[1,2.4254322263752033,-1.251564674977951,3.2605303745488974]],[0,"spine4",8388608,1379,[119],[1,8.940696516468449e-10,0.008185500279068947,-0.0010699452832341194],[3,0.034254656149486834,-0.005485426314216125,0.05256574367670215,0.9980147149325741],[1,3.9755012009245196,-0.8382953020260973,6.001066118615762]],[0,"left arm0",8388608,119,[-1782],[1,0.013951382599771023,0.016790246590971947,0.016093119978904724],[3,-0.012916867621556222,0.00014373601880273082,-0.00014094100334092016,0.9999165535215615],[1,-1.4802028695162106,0.01626094512362714,-0.016362054691447837]],[0,"left arm1",8388608,1381,[-1783],[1,0.0010551911545917392,-0.007742427755147219,0.021822387352585793],[3,-0.10235335396090298,0.001129400536059972,-0.0011684727766184703,0.9947467768526588],[1,-11.749275059688674,0.11503553126164667,-0.1464404324964447]],[0,"left hand",8388608,1382,[-1784],[1,0.00009416900866199285,0.015645749866962433,0.010464519262313843],[3,0.3301397245118249,0.0005644782763280047,-0.00025354159734460773,0.9439318722133448],[1,38.5545242496592,0.07064951765266128,-0.006069833765081632]],[2,"left finger3",8388608,1383,[-1785],[1,8.344650304081824e-9,0.009227232076227665,0.004294860176742077]],[0,"left finger4",8388608,1384,[-1786],[1,0.00005059279646957293,0.002204132964834571,0.003155963961035013],[3,0.000007673238672860348,-0.000009594779093684764,0.7071121455309554,0.7071014166947133],[1,0,0.0012435109893833497,90]],[0,"left finger5",8388608,1385,[-1787],[1,0.00042112517985515296,-0.0001340837770840153,0.005627484526485205],[3,-0.09230603438907505,0.09230350119162783,-0.7010510090251443,0.7010614398381622],[1,0,15.001533567975944,-90]],[0,"left finger5_end",8388608,1386,[-1788],[1,-8.940696516468449e-10,0.0056448024697601795,8.940696516468449e-10],[3,0.0000019192621039034926,-0.0000020400616449398495,-5.30853654365919e-8,0.999999999996076],[1,0.0002199312242558464,-0.00023377383272774185,-0.000006083583460109329]],[3,"left finger5_end_end",8388608,1387,[[1,"left finger5_end_end_end",8388608,-1789,[1,1.1175871339474952e-9,0.005644826218485832,-8.12113309933693e-9]]],[1,-1.639127722441458e-9,0.005644821096211672,2.4586914726398845e-9],[3,-0.0000027220794436078912,0.000002801418531795414,4.222383722630338e-7,0.9999999999922822],[1,-0.0003119274627818528,0.00032101904875022903,0.00004838407951892836]],[0,"right arm0",8388608,119,[-1790],[1,-0.013974963687360287,0.016790248453617096,0.01609310694038868],[3,-0.009031942320728738,0.009235106619735695,0.7069480580786489,0.707147495224627],[1,-89.36624562339624,89.38270908907008,88.51971961785377]],[0,"right arm1",8388608,1389,[-1791],[1,-0.007742421701550484,0.0010551821906119585,0.021822378039360046],[3,0.0011293978723013517,0.10235323600169045,-0.00116846522389361,0.9947467890018288],[1,0.14244476872426218,11.749557580346796,-0.11994645319001446]],[0,"right hand",8388608,1390,[-1792],[1,0.015645867213606834,0.00009417087130714208,0.010464523918926716],[3,0.000564268567534426,-0.33015090822731785,-0.00025365272179565655,0.9439279607353295],[1,0.05143848065160351,-38.55585629010495,-0.048784345696111106]],[0,"right finger3",8388608,1391,[-1793],[1,0.009227292612195015,-7.599592066753758e-9,0.004294626880437136],[3,1.6298153937492528e-9,0.000002770327682799972,7.275961777491847e-11,0.9999999999961626],[1,1.867630637958631e-7,0.0003174561681857834,8.338155429893503e-9]],[0,"right finger4",8388608,1392,[-1794],[1,0.0022041972260922194,0.0000505955504195299,0.003155910177156329],[3,-6.984919309606769e-10,-0.000001633585839042647,1.4551918697794388e-11,0.9999999999986657],[1,-8.004127661182475e-8,-0.00018719514809904426,1.6676578047004918e-9]],[0,"right finger5",8388608,1393,[-1795],[1,0.00042110466165468097,0.0001340793096460402,0.005627505015581846],[3,-0.0000019479955177752215,0.13052655589795578,0.000007322112103060771,0.9914448134656862],[1,-0.00033083272104267504,15.000042036776538,0.000802737353376578]],[2,"right finger5_end",8388608,1394,[-1796],[1,-2.2538007016237316e-9,0.0056448327377438545,1.0002404238207419e-8]],[3,"right finger5_end_end",8388608,1395,[[1,"right finger5_end_end_end",8388608,-1797,[1,-1.974403973648009e-9,0.0056448327377438545,1.7881393032936899e-9]]],[1,-5.33647837031026e-9,0.005644836463034153,1.162290530487553e-8],[3,0.0000015022819752612897,-2.2382664610605817e-8,-2.478482770126758e-7,0.9999999999988407],[1,0.00017214883300648067,-0.0000025648217660946174,-0.000028401324317949088]],[0,"neck0",8388608,119,[-1798],[1,-2.6822091214739885e-9,0.015256059356033802,-0.00595217477530241],[3,-0.07123410846437608,-0.014987513727382237,0.028143017193092368,0.9969498717622799],[1,-8.130615612736486,-1.4851653091889252,3.3393464157132535]],[0,"neck1",8388608,1397,[-1799],[1,8.940696516468449e-10,0.017543168738484383,-0.016172247007489204],[3,-0.10494259662545745,0.0000061833183705481795,-0.00008328176707578431,0.9944782775100824],[1,-12.047718701658109,-0.0002968642299670698,-0.009565049350708435]],[0,"neck2",8388608,1398,[-1800],[1,4.470348535789981e-9,0.017027776688337326,-0.016856519505381584],[3,-0.046461860349687426,-0.0033375966875403224,-0.003000175268067493,0.9989099833966815],[1,-5.327239229013977,-0.3980264941498488,-0.3256519505946268]],[0,"neck3",8388608,1399,[231],[1,2.6822091214739885e-9,0.00766771798953414,-0.011520219966769218],[3,0.1129740622069687,-0.002462202908184354,-0.0016172785493945123,0.9935935704478913],[1,12.973139155541443,-0.25940575636329644,-0.21601506953467783]],[0,"right eye",8388608,232,[-1801],[1,-0.007840261794626713,0.008088086731731892,0.0008104066364467144],[3,0.0000015153221586345103,0.000001291498019247911,0.7071119369679933,0.7071016253647057],[1,0,0.0002455702580163,90]],[0,"right eye_end",8388608,1401,[-1802],[1,7.450580596923828e-9,0.01128531713038683,1.2665987370041876e-8],[3,0.0000016917472294127718,6.170012056818174e-9,-4.1886227108925643e-7,0.9999999999984812],[1,0.00019385995279289637,7.071125014201777e-7,-0.000047998079465172375]],[3,"right eye_end_end",8388608,1402,[[1,"right eye_end_end_end",8388608,-1803,[1,5.960464899423812e-10,0.011285314336419106,3.44216815051368e-8]]],[1,1.3709068547029801e-8,0.011285322718322277,7.227063392178934e-9],[3,-0.0000025331978576933247,1.1146769729428502e-8,-6.984920419816702e-10,0.9999999999967915],[1,-0.00029028309183423673,0.0000012773255186363435,-8.004452777657305e-8]],[0,"left eye",8388608,232,[-1804],[1,0.007816696539521217,0.008088074624538422,0.0008104006410576403],[3,-0.4833322786123404,0.5161297941585465,0.4833344541818849,0.5161276483913245],[1,-86.24125517318419,90.0002474051749,0.000009826573641812891]],[0,"left eye_end",8388608,1404,[-1805],[1,1.2433156726388006e-8,0.011285322718322277,5.856855000985206e-9],[3,1.0477378964409168e-9,5.915352208055046e-9,0.0000016901828985258776,0.9999999999985716],[1,1.200607733149561e-7,6.778492287861956e-7,0.00019368069338224458]],[3,"left eye_end_end",8388608,1405,[[1,"left eye_end_end_end",8388608,-1806,[1,7.078051478259795e-9,0.011285316199064255,4.842877210364804e-10]]],[1,1.672655258744271e-8,0.011285318061709404,-2.1606683109354208e-9],[3,-4.2284960954866026e-7,8.658391337221959e-9,-0.0000016913039644324944,0.9999999999984803],[1,-0.00004845499431391979,9.920966098682533e-7,-0.00019380915849106982]],[2,"jaw1",8388608,233,[-1807],[1,1.862645149230957e-9,0.045013949275016785,0.015709517523646355]],[2,"jaw1_end",8388608,1407,[-1808],[1,-7.450580707946131e-10,0.027444317936897278,-1.0989605891964516e-9]],[3,"jaw1_end_end",8388608,1408,[[11,"jaw1_end_end_end",8388608,-1809,[1,-4.4703482582342247e-10,0.02744431234896183,-2.1569430685985935e-8],[3,-0.0000010203220881511088,0.0000010196818038810613,1.4551915228351714e-9,0.9999999999989597],[1,-0.00011692029896006154,0.00011684692778744354,1.6663344378198693e-7]]],[1,1.7881393032936899e-9,0.027444347739219666,1.7862767265341972e-8],[3,0.000002010551270351287,-0.000002014101482919643,-3.783497126692792e-10,0.9999999999959506],[1,0.00023039220448395494,-0.0002307990288771928,-4.3819716712579345e-8]],[0,"tongue0",8388608,233,[-1810],[1,3.5762786065873797e-9,0.004420141689479351,0.005698944441974163],[3,0.14470117871230787,-1.3000424365683173e-8,0.000007537388013103071,0.9894754008172494],[1,16.639950996468475,-0.00012645551306502084,0.0008544151586764777]],[0,"tongue1",8388608,1410,[-1811],[1,-3.3527611797978807e-9,0.011291980743408203,-0.0012327989097684622],[3,-0.06670764023167682,-1.9519765523348155e-7,-2.3801742565346996e-8,0.9977725646331845],[1,-7.649813158440861,-0.000022500124022819532,-0.0000012292867664396407]],[0,"tongue2",8388608,1411,[-1812],[1,2.654269304347423e-10,0.01418344583362341,0.0005741515778936446],[3,-0.1374952653740075,5.523982732180117e-8,-4.5837314709614335e-8,0.9905024240251641],[1,-15.805867716311552,0.000005547694689655366,-0.000006073030173183047]],[0,"tongue2_end",8388608,1412,[-1813],[1,-1.3411045607369942e-9,0.014195075258612633,-5.79049830307099e-9],[3,0.0000014945978818981794,-0.0000014533287639974586,-3.259628789102487e-9,0.9999999999978271],[1,0.00017126830086094277,-0.00016653920828563922,-3.737748539378029e-7]],[3,"tongue2_end_end",8388608,1413,[[11,"tongue2_end_end_end",8388608,-1814,[1,-1.043081288010228e-9,0.014195038005709648,1.0114162840579866e-8],[3,0.0000021189916878843384,-0.0000021222513168954777,-2.3283064365282257e-10,0.9999999999955029],[1,0.00024281856102116275,-0.00024319208699148472,-2.7195748456137112e-8]]],[1,1.043081288010228e-9,0.014195079915225506,3.408640703028709e-9],[3,-0.0000035538696465228525,0.0000034507834242990154,-8.149073638008481e-10,0.9999999999877311],[1,-0.00040724346304701155,0.0003954306521184932,-9.478681427174957e-8]],[0,"Right Torso",8388608,118,[-1815],[1,-0.017464520409703255,0.009573213756084442,0.030453024432063103],[3,-1.4765793285428368e-8,-1.2075035933521495e-7,0.7071068407911856,0.707106721581894],[1,0,-0.000002392899432563725,90]],[2,"Right Torso_end",8388608,1415,[-1816],[1,2.784654506982065e-9,0.02686261013150215,3.81842246710562e-9]],[6,"Right Torso_end_end",8388608,1416,[[1,"Right Torso_end_end_end",8388608,-1817,[1,-1.1431984248133631e-8,0.0268626157194376,1.240521640966108e-8]]],[1,1.9604340373291507e-9,0.0268626157194376,-2.1047890097491972e-9]],[0,"Left Torso",8388608,118,[-1818],[1,0.017440930008888245,0.009573224000632763,0.030453002080321312],[3,0.500000126659862,-0.4999998882412794,-0.5000000670552164,-0.4999999180436022],[1,-90.0000221981152,89.99999487735771,-0.0000017075463256145647]],[2,"Left Torso_end",8388608,1418,[-1819],[1,1.7508864358362075e-9,0.026862619444727898,-2.8824433950802586e-9]],[6,"Left Torso_end_end",8388608,1419,[[1,"Left Torso_end_end_end",8388608,-1820,[1,-1.5832484212552345e-9,0.0268626157194376,-2.9336661988565993e-9]]],[1,-2.2165478341662492e-9,0.02686261013150215,5.820766091346741e-10]],[0,"tail0",8388608,120,[-1821],[1,2.38418573772492e-9,-0.01958109252154827,0.004617891740053892],[3,0.05616177867879355,0.028151084982951425,0.004469596682825916,0.9980147262116976],[1,6.4223793484064045,3.1925924357445123,0.692349061695615]],[0,"tail1",8388608,1421,[-1822],[1,-1.19209286886246e-9,-0.026223542168736458,-0.0007214128854684532],[3,0.0031083005351771912,0.0014343740341220459,-0.01194275649172853,0.9999228228249882],[1,0.35822495434177337,0.16865661998027534,-1.3680525498125806]],[0,"tail2",8388608,1422,[-1823],[1,2.38418573772492e-9,-0.03143041208386421,0.00010329753422411159],[3,0.003111778308726112,0.0013797485805861092,-0.011948764385323093,0.999922817101038],[1,0.35854984255366873,0.16240262721771287,-1.368760051413259]],[0,"tail3",8388608,1423,[-1824],[1,-2.38418573772492e-9,-0.02927638776600361,0.00020010948355775326],[3,0.0031156022961344666,0.0013251705064710123,-0.011954564573702881,0.999922809686485],[1,0.35891436722033493,0.15615446645465633,-1.3694437187155908]],[0,"tail4",8388608,1424,[-1825],[1,-4.76837147544984e-9,-0.027391791343688965,0.00019631088071037084],[3,0.0035525737043447716,0.0014388119918525726,-0.011879632153546678,0.999922088654923],[1,0.40914076039233777,0.16974711963651254,-1.3607416889422317]],[0,"tail5",8388608,1425,[-1826],[1,-1.1920929132713809e-8,-0.027199802920222282,0.00030194639111869037],[3,-0.0012750914229008672,-0.008457227549468383,0.03171206615500072,0.9994604515958702],[1,-0.11553545910896909,-0.9659600928893592,3.6356494243513264]],[0,"tail6",8388608,1426,[-1827],[1,9.53674295089968e-9,-0.025129156187176704,0.0011446529533714056],[3,-0.014449086548818109,-0.008872484528700394,0.0315430043349346,0.9993585651775438],[1,-1.6260902547158433,-0.9658152257334518,3.629360742339713]],[0,"tail7",8388608,1427,[-1828],[1,-5.9604645663569045e-9,-0.024538598954677582,0.0006162720965221524],[3,-0.0035734080338886967,-0.010646847758866457,0.03040127757568557,0.9994746808747028],[1,-0.3728700575034159,-1.2092794445726276,3.488414221479557]],[0,"tail8",8388608,1428,[-1829],[1,8.940697071579962e-9,-0.013206311501562595,0.0002693343267310411],[3,-0.00421273810623833,-0.009717253247809712,0.030597281375363466,0.9994756796437836],[1,-0.449268537675818,-1.1002936678150768,3.5112401274933487]],[2,"tail8_end",8388608,1429,[-1830],[1,1.19209286886246e-9,0.013208942487835884,0]],[6,"tail8_end_end",8388608,1430,[[1,"tail8_end_end_end",8388608,-1831,[1,1.19209286886246e-9,0.013209017924964428,-6.556510889765832e-9]]],[1,5.9604645663569045e-9,0.013209058903157711,1.7881394143159923e-9]],[0,"right leg0",8388608,120,[-1832],[1,-0.019055675715208054,0.0033091562800109386,0.016144664958119392],[3,-0.1758038810899314,-0.017633571842268422,0.6676717853270461,0.723184927674793],[1,-78.57820982882251,62.74263400658564,76.38525243107132]],[0,"right leg1",8388608,1432,[-1833],[1,0.011304101906716824,-0.0015700083458796144,0.04155361279845238],[3,0.06429759265723188,0.04945126062606861,0.0029156149162815385,0.9967005024532882],[1,7.347795831743105,5.636019159221763,0.6973746779464639]],[0,"right foot0",8388608,1433,[-1834],[1,-0.029886450618505478,0.0015699955401942134,0.032055873423814774],[3,-0.08061608046528909,-0.12210650177915211,0.006311681215104875,0.989217474812243],[1,-9.09280657404995,-13.92707573541503,1.8437953581496462]],[0,"right foot1",8388608,1434,[-1835],[1,0.003907094709575176,-0.00014767363609280437,0.018782703205943108],[3,0.012718700017344608,-0.019753488005658924,0.011716660245581385,0.9996553177241488],[1,1.4840307666426562,-2.2810810511675452,1.313492797221609]],[0,"right foot2",8388608,1435,[-1836],[1,0.005417832173407078,0.0001594980276422575,0.010887287557125092],[3,0.135298567316826,0.9880735445127315,-0.06766532475870929,0.028746689224323076],[1,8.434477156871264,175.53389993115258,15.276627672092612]],[0,"right toe0",8388608,1436,[-1837],[1,-0.004766051657497883,0.0004802089533768594,0.00009099081216845661],[3,0.13046292620968675,0.9907689432631921,-0.004293484967174884,0.036577205152664605],[1,1.070648052511951,175.63081923016807,14.963469722274361]],[0,"right toe1",8388608,1437,[-1838],[1,0.007804563734680414,-0.0004186089208815247,0.0005770097486674786],[3,-0.0011280903034880329,0.050888072283556754,-0.060021526621159046,0.9968984641645288],[1,0.22274179400602048,5.857801964075723,-6.879726116801438]],[0,"right toe2",8388608,1438,[-1839],[1,0.006148821674287319,0.0003150858683511615,-5.21540644005114e-10],[3,0.0000018084104049840189,-0.23793532170532997,0.000007286618322553768,0.9712810008584621],[1,0.00039994958420425553,-27.52942671179931,0.0007616980255523596]],[2,"right toe2_end",8388608,1439,[-1840],[1,-3.8743017682918435e-9,0.006156904622912407,7.450580707946131e-10]],[6,"right toe2_end_end",8388608,1440,[[1,"right toe2_end_end_end",8388608,-1841,[1,-5.9604643443123e-10,0.006156894378364086,-5.9604643443123e-10]]],[1,-1.639127722441458e-9,0.006156902760267258,2.98023217215615e-10]],[0,"left leg0",8388608,120,[-1842],[1,0.01840258203446865,0.0034433561377227306,0.024012885987758636],[3,-0.026719246605534135,-0.019741520688928448,0.0797837020365437,0.9962584579872158],[1,-2.9085726705116217,-2.0361285181125104,9.208366644433342]],[0,"left leg1",8388608,1442,[-1843],[1,-0.001570010674186051,0.011304106563329697,0.04155363142490387],[3,0.07505410346936253,-0.006625843860994315,0.003316218579660744,0.9971519354841928],[1,8.611106043601785,-0.7856617226002104,0.32194404411108085]],[0,"left foot0",8388608,1443,[-1844],[1,0.0015700102085247636,-0.029886456206440926,0.03205588459968567],[3,0.09446010059390231,0.00524464439530843,-0.0064196456671164566,0.9954941342119829],[1,10.844803105330856,0.6678338961791349,-0.6755684135879525]],[0,"left foot1",8388608,1444,[-1845],[1,-0.00014768153778277338,0.003907082136720419,0.018782710656523705],[3,-0.0688300711131612,-0.09169756385766402,-0.0010759593875588616,0.9934046609536936],[1,-7.871803697878175,-10.506304455837528,0.6007786594490084]],[0,"left foot2",8388608,1445,[-1846],[1,0.0001594924251548946,0.005417830776423216,0.01088727731257677],[3,0.16557359601450405,-0.293024776702799,0.645517941625473,0.6855862101739744],[1,79.53737191070073,-90.47599166257511,52.00663712930689]],[0,"left toe0",8388608,1446,[-1847],[1,0.0032210317440330982,-0.00048022984992712736,-0.0035140234977006912],[3,-0.00025397410362682974,0.993890734182026,-0.00042949190776777463,0.11036738440757354],[1,0.045703432009614624,167.32702392606475,-0.03435734826850064]],[0,"left toe1",8388608,1447,[-1848],[1,-0.005144279450178146,0.00001669451557972934,0.0058973608538508415],[3,0.00047318134286587397,-0.25816592798791194,-0.00016007157822210818,0.9661004627380357],[1,0.047648980608224735,-29.922515804701185,-0.03171946383206957]],[0,"left toe2",8388608,1448,[-1849],[1,1.7881393032936899e-9,0.00008683509804541245,0.006148934364318848],[3,0.00038137636832103974,-0.05181359592711081,-0.0003230278147168311,0.9986566484443983],[1,0.04172587266780249,-5.9400470473863285,-0.03923092244094853]],[2,"left toe2_end",8388608,1449,[-1850],[1,4.097819306103645e-10,0.006149544846266508,-5.587935669737476e-10]],[6,"left toe2_end_end",8388608,1450,[[1,"left toe2_end_end_end",8388608,-1851,[1,9.31322467062623e-12,0.006149547640234232,-3.7252903539730653e-10]]],[1,-6.519258050063925e-11,0.006149547174572945,-7.823109382520954e-10]],[23,"comp_LOD_2",8388608,19,[[18,1,-1852,[343,344,345,346,347,348],[7],19,349,350]],[3,1.5454308319985022e-8,0.707106721581899,-1.545430476727128e-8,0.7071068407911907],[1,99.99998474121094,99.99998474121094,99.99998474121094],[1,0.0000025044775805019677,89.99999034065368,7.675927522096591e-14]],[8,"Line",8388608,121,[[9,"Quad<ModelComponent>",-1853,[360],[7],361]],[1,0.01,0.005,0.003],[3,-0.7071067811865475,0,0,0.7071067811865476],[1,0.12,0.12,0.12],[1,-90,0,0]],[15,"Comp",8388608,22,[236],[3,-0.7071068407911907,1.54543154254125e-8,-1.545431187269876e-8,0.707106721581899],[1,9.999999046325684,9.999999046325684,9.999999046325684],[1,-90.00000965934633,7.675917777898835e-14,-0.0000025044787319857803]],[0,"spine0",8388608,236,[-1854],[1,3.7252903539730653e-10,0.003909075167030096,-0.00092517607845366],[3,-0.013759418954332359,-0.02019218487723872,0.021461381934783252,0.9994710416742307],[1,-1.5278449136403591,-2.281549172864686,2.490613936032426]],[0,"spine1",8388608,1455,[122],[1,2.38418573772492e-9,0.00814820732921362,-0.0024583544582128525],[3,-0.014868528756110217,-0.017917059571555493,0.022798139868672962,0.9994689343083488],[1,-1.6580895794748667,-2.015768713908674,2.642550980417355]],[0,"spine3",8388608,122,[-1855],[1,-5.066394859198908e-9,0.007588513661175966,-0.0019066231325268745],[3,0.020843829879679646,-0.010312797462126119,0.02867264475851253,0.9993182978445878],[1,2.4254322263752033,-1.251564674977951,3.2605303745488974]],[0,"spine4",8388608,1457,[123],[1,8.940696516468449e-10,0.008185500279068947,-0.0010699452832341194],[3,0.034254656149486834,-0.005485426314216125,0.05256574367670215,0.9980147149325741],[1,3.9755012009245196,-0.8382953020260973,6.001066118615762]],[0,"left arm0",8388608,123,[-1856],[1,0.013951382599771023,0.016790246590971947,0.016093119978904724],[3,-0.012916867621556222,0.00014373601880273082,-0.00014094100334092016,0.9999165535215615],[1,-1.4802028695162106,0.01626094512362714,-0.016362054691447837]],[0,"left arm1",8388608,1459,[-1857],[1,0.0010551911545917392,-0.007742427755147219,0.021822387352585793],[3,-0.10235335396090298,0.001129400536059972,-0.0011684727766184703,0.9947467768526588],[1,-11.749275059688674,0.11503553126164667,-0.1464404324964447]],[0,"left hand",8388608,1460,[-1858],[1,0.00009416900866199285,0.015645749866962433,0.010464519262313843],[3,0.3301397245118249,0.0005644782763280047,-0.00025354159734460773,0.9439318722133448],[1,38.5545242496592,0.07064951765266128,-0.006069833765081632]],[2,"left finger3",8388608,1461,[-1859],[1,8.344650304081824e-9,0.009227232076227665,0.004294860176742077]],[0,"left finger4",8388608,1462,[-1860],[1,0.00005059279646957293,0.002204132964834571,0.003155963961035013],[3,0.000007673238672860348,-0.000009594779093684764,0.7071121455309554,0.7071014166947133],[1,0,0.0012435109893833497,90]],[0,"left finger5",8388608,1463,[-1861],[1,0.00042112517985515296,-0.0001340837770840153,0.005627484526485205],[3,-0.09230603438907505,0.09230350119162783,-0.7010510090251443,0.7010614398381622],[1,0,15.001533567975944,-90]],[0,"left finger5_end",8388608,1464,[-1862],[1,-8.940696516468449e-10,0.0056448024697601795,8.940696516468449e-10],[3,0.0000019192621039034926,-0.0000020400616449398495,-5.30853654365919e-8,0.999999999996076],[1,0.0002199312242558464,-0.00023377383272774185,-0.000006083583460109329]],[3,"left finger5_end_end",8388608,1465,[[1,"left finger5_end_end_end",8388608,-1863,[1,1.1175871339474952e-9,0.005644826218485832,-8.12113309933693e-9]]],[1,-1.639127722441458e-9,0.005644821096211672,2.4586914726398845e-9],[3,-0.0000027220794436078912,0.000002801418531795414,4.222383722630338e-7,0.9999999999922822],[1,-0.0003119274627818528,0.00032101904875022903,0.00004838407951892836]],[0,"right arm0",8388608,123,[-1864],[1,-0.013974963687360287,0.016790248453617096,0.01609310694038868],[3,-0.009031942320728738,0.009235106619735695,0.7069480580786489,0.707147495224627],[1,-89.36624562339624,89.38270908907008,88.51971961785377]],[0,"right arm1",8388608,1467,[-1865],[1,-0.007742421701550484,0.0010551821906119585,0.021822378039360046],[3,0.0011293978723013517,0.10235323600169045,-0.00116846522389361,0.9947467890018288],[1,0.14244476872426218,11.749557580346796,-0.11994645319001446]],[0,"right hand",8388608,1468,[-1866],[1,0.015645867213606834,0.00009417087130714208,0.010464523918926716],[3,0.000564268567534426,-0.33015090822731785,-0.00025365272179565655,0.9439279607353295],[1,0.05143848065160351,-38.55585629010495,-0.048784345696111106]],[0,"right finger3",8388608,1469,[-1867],[1,0.009227292612195015,-7.599592066753758e-9,0.004294626880437136],[3,1.6298153937492528e-9,0.000002770327682799972,7.275961777491847e-11,0.9999999999961626],[1,1.867630637958631e-7,0.0003174561681857834,8.338155429893503e-9]],[0,"right finger4",8388608,1470,[-1868],[1,0.0022041972260922194,0.0000505955504195299,0.003155910177156329],[3,-6.984919309606769e-10,-0.000001633585839042647,1.4551918697794388e-11,0.9999999999986657],[1,-8.004127661182475e-8,-0.00018719514809904426,1.6676578047004918e-9]],[0,"right finger5",8388608,1471,[-1869],[1,0.00042110466165468097,0.0001340793096460402,0.005627505015581846],[3,-0.0000019479955177752215,0.13052655589795578,0.000007322112103060771,0.9914448134656862],[1,-0.00033083272104267504,15.000042036776538,0.000802737353376578]],[2,"right finger5_end",8388608,1472,[-1870],[1,-2.2538007016237316e-9,0.0056448327377438545,1.0002404238207419e-8]],[3,"right finger5_end_end",8388608,1473,[[1,"right finger5_end_end_end",8388608,-1871,[1,-1.974403973648009e-9,0.0056448327377438545,1.7881393032936899e-9]]],[1,-5.33647837031026e-9,0.005644836463034153,1.162290530487553e-8],[3,0.0000015022819752612897,-2.2382664610605817e-8,-2.478482770126758e-7,0.9999999999988407],[1,0.00017214883300648067,-0.0000025648217660946174,-0.000028401324317949088]],[0,"neck0",8388608,123,[-1872],[1,-2.6822091214739885e-9,0.015256059356033802,-0.00595217477530241],[3,-0.07123410846437608,-0.014987513727382237,0.028143017193092368,0.9969498717622799],[1,-8.130615612736486,-1.4851653091889252,3.3393464157132535]],[0,"neck1",8388608,1475,[-1873],[1,8.940696516468449e-10,0.017543168738484383,-0.016172247007489204],[3,-0.10494259662545745,0.0000061833183705481795,-0.00008328176707578431,0.9944782775100824],[1,-12.047718701658109,-0.0002968642299670698,-0.009565049350708435]],[0,"neck2",8388608,1476,[-1874],[1,4.470348535789981e-9,0.017027776688337326,-0.016856519505381584],[3,-0.046461860349687426,-0.0033375966875403224,-0.003000175268067493,0.9989099833966815],[1,-5.327239229013977,-0.3980264941498488,-0.3256519505946268]],[0,"neck3",8388608,1477,[237],[1,2.6822091214739885e-9,0.00766771798953414,-0.011520219966769218],[3,0.1129740622069687,-0.002462202908184354,-0.0016172785493945123,0.9935935704478913],[1,12.973139155541443,-0.25940575636329644,-0.21601506953467783]],[0,"right eye",8388608,238,[-1875],[1,-0.007840261794626713,0.008088086731731892,0.0008104066364467144],[3,0.0000015153221586345103,0.000001291498019247911,0.7071119369679933,0.7071016253647057],[1,0,0.0002455702580163,90]],[0,"right eye_end",8388608,1479,[-1876],[1,7.450580596923828e-9,0.01128531713038683,1.2665987370041876e-8],[3,0.0000016917472294127718,6.170012056818174e-9,-4.1886227108925643e-7,0.9999999999984812],[1,0.00019385995279289637,7.071125014201777e-7,-0.000047998079465172375]],[3,"right eye_end_end",8388608,1480,[[1,"right eye_end_end_end",8388608,-1877,[1,5.960464899423812e-10,0.011285314336419106,3.44216815051368e-8]]],[1,1.3709068547029801e-8,0.011285322718322277,7.227063392178934e-9],[3,-0.0000025331978576933247,1.1146769729428502e-8,-6.984920419816702e-10,0.9999999999967915],[1,-0.00029028309183423673,0.0000012773255186363435,-8.004452777657305e-8]],[0,"left eye",8388608,238,[-1878],[1,0.007816696539521217,0.008088074624538422,0.0008104006410576403],[3,-0.4833322786123404,0.5161297941585465,0.4833344541818849,0.5161276483913245],[1,-86.24125517318419,90.0002474051749,0.000009826573641812891]],[0,"left eye_end",8388608,1482,[-1879],[1,1.2433156726388006e-8,0.011285322718322277,5.856855000985206e-9],[3,1.0477378964409168e-9,5.915352208055046e-9,0.0000016901828985258776,0.9999999999985716],[1,1.200607733149561e-7,6.778492287861956e-7,0.00019368069338224458]],[3,"left eye_end_end",8388608,1483,[[1,"left eye_end_end_end",8388608,-1880,[1,7.078051478259795e-9,0.011285316199064255,4.842877210364804e-10]]],[1,1.672655258744271e-8,0.011285318061709404,-2.1606683109354208e-9],[3,-4.2284960954866026e-7,8.658391337221959e-9,-0.0000016913039644324944,0.9999999999984803],[1,-0.00004845499431391979,9.920966098682533e-7,-0.00019380915849106982]],[2,"jaw1",8388608,239,[-1881],[1,1.862645149230957e-9,0.045013949275016785,0.015709517523646355]],[2,"jaw1_end",8388608,1485,[-1882],[1,-7.450580707946131e-10,0.027444317936897278,-1.0989605891964516e-9]],[3,"jaw1_end_end",8388608,1486,[[11,"jaw1_end_end_end",8388608,-1883,[1,-4.4703482582342247e-10,0.02744431234896183,-2.1569430685985935e-8],[3,-0.0000010203220881511088,0.0000010196818038810613,1.4551915228351714e-9,0.9999999999989597],[1,-0.00011692029896006154,0.00011684692778744354,1.6663344378198693e-7]]],[1,1.7881393032936899e-9,0.027444347739219666,1.7862767265341972e-8],[3,0.000002010551270351287,-0.000002014101482919643,-3.783497126692792e-10,0.9999999999959506],[1,0.00023039220448395494,-0.0002307990288771928,-4.3819716712579345e-8]],[0,"tongue0",8388608,239,[-1884],[1,3.5762786065873797e-9,0.004420141689479351,0.005698944441974163],[3,0.14470117871230787,-1.3000424365683173e-8,0.000007537388013103071,0.9894754008172494],[1,16.639950996468475,-0.00012645551306502084,0.0008544151586764777]],[0,"tongue1",8388608,1488,[-1885],[1,-3.3527611797978807e-9,0.011291980743408203,-0.0012327989097684622],[3,-0.06670764023167682,-1.9519765523348155e-7,-2.3801742565346996e-8,0.9977725646331845],[1,-7.649813158440861,-0.000022500124022819532,-0.0000012292867664396407]],[0,"tongue2",8388608,1489,[-1886],[1,2.654269304347423e-10,0.01418344583362341,0.0005741515778936446],[3,-0.1374952653740075,5.523982732180117e-8,-4.5837314709614335e-8,0.9905024240251641],[1,-15.805867716311552,0.000005547694689655366,-0.000006073030173183047]],[0,"tongue2_end",8388608,1490,[-1887],[1,-1.3411045607369942e-9,0.014195075258612633,-5.79049830307099e-9],[3,0.0000014945978818981794,-0.0000014533287639974586,-3.259628789102487e-9,0.9999999999978271],[1,0.00017126830086094277,-0.00016653920828563922,-3.737748539378029e-7]],[3,"tongue2_end_end",8388608,1491,[[11,"tongue2_end_end_end",8388608,-1888,[1,-1.043081288010228e-9,0.014195038005709648,1.0114162840579866e-8],[3,0.0000021189916878843384,-0.0000021222513168954777,-2.3283064365282257e-10,0.9999999999955029],[1,0.00024281856102116275,-0.00024319208699148472,-2.7195748456137112e-8]]],[1,1.043081288010228e-9,0.014195079915225506,3.408640703028709e-9],[3,-0.0000035538696465228525,0.0000034507834242990154,-8.149073638008481e-10,0.9999999999877311],[1,-0.00040724346304701155,0.0003954306521184932,-9.478681427174957e-8]],[0,"Right Torso",8388608,122,[-1889],[1,-0.017464520409703255,0.009573213756084442,0.030453024432063103],[3,-1.4765793285428368e-8,-1.2075035933521495e-7,0.7071068407911856,0.707106721581894],[1,0,-0.000002392899432563725,90]],[2,"Right Torso_end",8388608,1493,[-1890],[1,2.784654506982065e-9,0.02686261013150215,3.81842246710562e-9]],[6,"Right Torso_end_end",8388608,1494,[[1,"Right Torso_end_end_end",8388608,-1891,[1,-1.1431984248133631e-8,0.0268626157194376,1.240521640966108e-8]]],[1,1.9604340373291507e-9,0.0268626157194376,-2.1047890097491972e-9]],[0,"Left Torso",8388608,122,[-1892],[1,0.017440930008888245,0.009573224000632763,0.030453002080321312],[3,0.500000126659862,-0.4999998882412794,-0.5000000670552164,-0.4999999180436022],[1,-90.0000221981152,89.99999487735771,-0.0000017075463256145647]],[2,"Left Torso_end",8388608,1496,[-1893],[1,1.7508864358362075e-9,0.026862619444727898,-2.8824433950802586e-9]],[6,"Left Torso_end_end",8388608,1497,[[1,"Left Torso_end_end_end",8388608,-1894,[1,-1.5832484212552345e-9,0.0268626157194376,-2.9336661988565993e-9]]],[1,-2.2165478341662492e-9,0.02686261013150215,5.820766091346741e-10]],[0,"tail0",8388608,124,[-1895],[1,2.38418573772492e-9,-0.01958109252154827,0.004617891740053892],[3,0.05616177867879355,0.028151084982951425,0.004469596682825916,0.9980147262116976],[1,6.4223793484064045,3.1925924357445123,0.692349061695615]],[0,"tail1",8388608,1499,[-1896],[1,-1.19209286886246e-9,-0.026223542168736458,-0.0007214128854684532],[3,0.0031083005351771912,0.0014343740341220459,-0.01194275649172853,0.9999228228249882],[1,0.35822495434177337,0.16865661998027534,-1.3680525498125806]],[0,"tail2",8388608,1500,[-1897],[1,2.38418573772492e-9,-0.03143041208386421,0.00010329753422411159],[3,0.003111778308726112,0.0013797485805861092,-0.011948764385323093,0.999922817101038],[1,0.35854984255366873,0.16240262721771287,-1.368760051413259]],[0,"tail3",8388608,1501,[-1898],[1,-2.38418573772492e-9,-0.02927638776600361,0.00020010948355775326],[3,0.0031156022961344666,0.0013251705064710123,-0.011954564573702881,0.999922809686485],[1,0.35891436722033493,0.15615446645465633,-1.3694437187155908]],[0,"tail4",8388608,1502,[-1899],[1,-4.76837147544984e-9,-0.027391791343688965,0.00019631088071037084],[3,0.0035525737043447716,0.0014388119918525726,-0.011879632153546678,0.999922088654923],[1,0.40914076039233777,0.16974711963651254,-1.3607416889422317]],[0,"tail5",8388608,1503,[-1900],[1,-1.1920929132713809e-8,-0.027199802920222282,0.00030194639111869037],[3,-0.0012750914229008672,-0.008457227549468383,0.03171206615500072,0.9994604515958702],[1,-0.11553545910896909,-0.9659600928893592,3.6356494243513264]],[0,"tail6",8388608,1504,[-1901],[1,9.53674295089968e-9,-0.025129156187176704,0.0011446529533714056],[3,-0.014449086548818109,-0.008872484528700394,0.0315430043349346,0.9993585651775438],[1,-1.6260902547158433,-0.9658152257334518,3.629360742339713]],[0,"tail7",8388608,1505,[-1902],[1,-5.9604645663569045e-9,-0.024538598954677582,0.0006162720965221524],[3,-0.0035734080338886967,-0.010646847758866457,0.03040127757568557,0.9994746808747028],[1,-0.3728700575034159,-1.2092794445726276,3.488414221479557]],[0,"tail8",8388608,1506,[-1903],[1,8.940697071579962e-9,-0.013206311501562595,0.0002693343267310411],[3,-0.00421273810623833,-0.009717253247809712,0.030597281375363466,0.9994756796437836],[1,-0.449268537675818,-1.1002936678150768,3.5112401274933487]],[2,"tail8_end",8388608,1507,[-1904],[1,1.19209286886246e-9,0.013208942487835884,0]],[6,"tail8_end_end",8388608,1508,[[1,"tail8_end_end_end",8388608,-1905,[1,1.19209286886246e-9,0.013209017924964428,-6.556510889765832e-9]]],[1,5.9604645663569045e-9,0.013209058903157711,1.7881394143159923e-9]],[0,"right leg0",8388608,124,[-1906],[1,-0.019055675715208054,0.0033091562800109386,0.016144664958119392],[3,-0.1758038810899314,-0.017633571842268422,0.6676717853270461,0.723184927674793],[1,-78.57820982882251,62.74263400658564,76.38525243107132]],[0,"right leg1",8388608,1510,[-1907],[1,0.011304101906716824,-0.0015700083458796144,0.04155361279845238],[3,0.06429759265723188,0.04945126062606861,0.0029156149162815385,0.9967005024532882],[1,7.347795831743105,5.636019159221763,0.6973746779464639]],[0,"right foot0",8388608,1511,[-1908],[1,-0.029886450618505478,0.0015699955401942134,0.032055873423814774],[3,-0.08061608046528909,-0.12210650177915211,0.006311681215104875,0.989217474812243],[1,-9.09280657404995,-13.92707573541503,1.8437953581496462]],[0,"right foot1",8388608,1512,[-1909],[1,0.003907094709575176,-0.00014767363609280437,0.018782703205943108],[3,0.012718700017344608,-0.019753488005658924,0.011716660245581385,0.9996553177241488],[1,1.4840307666426562,-2.2810810511675452,1.313492797221609]],[0,"right foot2",8388608,1513,[-1910],[1,0.005417832173407078,0.0001594980276422575,0.010887287557125092],[3,0.135298567316826,0.9880735445127315,-0.06766532475870929,0.028746689224323076],[1,8.434477156871264,175.53389993115258,15.276627672092612]],[0,"right toe0",8388608,1514,[-1911],[1,-0.004766051657497883,0.0004802089533768594,0.00009099081216845661],[3,0.13046292620968675,0.9907689432631921,-0.004293484967174884,0.036577205152664605],[1,1.070648052511951,175.63081923016807,14.963469722274361]],[0,"right toe1",8388608,1515,[-1912],[1,0.007804563734680414,-0.0004186089208815247,0.0005770097486674786],[3,-0.0011280903034880329,0.050888072283556754,-0.060021526621159046,0.9968984641645288],[1,0.22274179400602048,5.857801964075723,-6.879726116801438]],[0,"right toe2",8388608,1516,[-1913],[1,0.006148821674287319,0.0003150858683511615,-5.21540644005114e-10],[3,0.0000018084104049840189,-0.23793532170532997,0.000007286618322553768,0.9712810008584621],[1,0.00039994958420425553,-27.52942671179931,0.0007616980255523596]],[2,"right toe2_end",8388608,1517,[-1914],[1,-3.8743017682918435e-9,0.006156904622912407,7.450580707946131e-10]],[6,"right toe2_end_end",8388608,1518,[[1,"right toe2_end_end_end",8388608,-1915,[1,-5.9604643443123e-10,0.006156894378364086,-5.9604643443123e-10]]],[1,-1.639127722441458e-9,0.006156902760267258,2.98023217215615e-10]],[0,"left leg0",8388608,124,[-1916],[1,0.01840258203446865,0.0034433561377227306,0.024012885987758636],[3,-0.026719246605534135,-0.019741520688928448,0.0797837020365437,0.9962584579872158],[1,-2.9085726705116217,-2.0361285181125104,9.208366644433342]],[0,"left leg1",8388608,1520,[-1917],[1,-0.001570010674186051,0.011304106563329697,0.04155363142490387],[3,0.07505410346936253,-0.006625843860994315,0.003316218579660744,0.9971519354841928],[1,8.611106043601785,-0.7856617226002104,0.32194404411108085]],[0,"left foot0",8388608,1521,[-1918],[1,0.0015700102085247636,-0.029886456206440926,0.03205588459968567],[3,0.09446010059390231,0.00524464439530843,-0.0064196456671164566,0.9954941342119829],[1,10.844803105330856,0.6678338961791349,-0.6755684135879525]],[0,"left foot1",8388608,1522,[-1919],[1,-0.00014768153778277338,0.003907082136720419,0.018782710656523705],[3,-0.0688300711131612,-0.09169756385766402,-0.0010759593875588616,0.9934046609536936],[1,-7.871803697878175,-10.506304455837528,0.6007786594490084]],[0,"left foot2",8388608,1523,[-1920],[1,0.0001594924251548946,0.005417830776423216,0.01088727731257677],[3,0.16557359601450405,-0.293024776702799,0.645517941625473,0.6855862101739744],[1,79.53737191070073,-90.47599166257511,52.00663712930689]],[0,"left toe0",8388608,1524,[-1921],[1,0.0032210317440330982,-0.00048022984992712736,-0.0035140234977006912],[3,-0.00025397410362682974,0.993890734182026,-0.00042949190776777463,0.11036738440757354],[1,0.045703432009614624,167.32702392606475,-0.03435734826850064]],[0,"left toe1",8388608,1525,[-1922],[1,-0.005144279450178146,0.00001669451557972934,0.0058973608538508415],[3,0.00047318134286587397,-0.25816592798791194,-0.00016007157822210818,0.9661004627380357],[1,0.047648980608224735,-29.922515804701185,-0.03171946383206957]],[0,"left toe2",8388608,1526,[-1923],[1,1.7881393032936899e-9,0.00008683509804541245,0.006148934364318848],[3,0.00038137636832103974,-0.05181359592711081,-0.0003230278147168311,0.9986566484443983],[1,0.04172587266780249,-5.9400470473863285,-0.03923092244094853]],[2,"left toe2_end",8388608,1527,[-1924],[1,4.097819306103645e-10,0.006149544846266508,-5.587935669737476e-10]],[6,"left toe2_end_end",8388608,1528,[[1,"left toe2_end_end_end",8388608,-1925,[1,9.31322467062623e-12,0.006149547640234232,-3.7252903539730653e-10]]],[1,-6.519258050063925e-11,0.006149547174572945,-7.823109382520954e-10]],[23,"comp_LOD_2",8388608,22,[[18,1,-1926,[362,363,364,365,366,367],[7],22,368,369]],[3,1.5454308319985022e-8,0.707106721581899,-1.545430476727128e-8,0.7071068407911907],[1,99.99998474121094,99.99998474121094,99.99998474121094],[1,0.0000025044775805019677,89.99999034065368,7.675927522096591e-14]],[8,"Level",8388608,22,[[9,"Quad<ModelComponent>",-1927,[370],[7],371]],[1,0.9124999999999943,1.6999999999999957,0.5999999999999996],[3,-0.3707452120036063,-0.6021195792999934,-0.3707452120036063,0.6021195792999934],[1,0.5396874999999999,1,0.5396875],[1,-63.244,-90,0]],[15,"Rex",8388608,23,[241],[3,-0.7071068407911907,1.54543154254125e-8,-1.545431009634189e-8,0.707106721581899],[1,30.000001907348633,30.000001907348633,30.000001907348633],[1,-90.00000965934633,2.2069466650210085e-13,-0.000002504478588050316]],[0,"spine0",8388608,241,[-1928],[1,-6.854534273514901e-9,0.07877195626497269,-0.013744966126978397],[3,2.026558085787785e-7,-2.158951912699821e-8,-0.015860354249784204,0.9998742166707919],[1,0.00002319215389442785,-0.000002106405829544599,-1.8175389261952233]],[0,"spine1",8388608,1533,[-1929],[1,-4.76837147544984e-9,0.061337050050497055,0.0018308778526261449],[3,-0.012480432381501448,0.0012796535375935835,0.0001905299464757343,0.9999212793979004],[1,-1.4302161708867016,0.14689860720516074,0.02000130597038661]],[0,"spine2",8388608,1534,[125],[1,-2.179294744664162e-9,0.05492871627211571,0.01098576094955206],[3,-0.012532318150449001,0.00048085139668369747,0.00019388940051920267,0.999921333001057],[1,-1.4361460649805409,0.05537563322055659,0.021525791691167126]],[0,"neck0",8388608,125,[-1930],[1,-7.078051478259795e-9,0.04211192950606346,1.0315329035393006e-7],[3,-0.0005883895722116908,-0.00005161291421731661,-0.0127104118817957,0.9999190450049511],[1,-0.06751602511397936,-0.006773106854063248,-1.456541398518078]],[0,"neck1",8388608,1536,[-1931],[1,2.60770322002557e-10,0.0411965511739254,-0.015563108026981354],[3,-0.009696724695162563,-0.0005131170550781441,-0.012714672663948705,0.9998720154800426],[1,-1.1121973072308242,-0.07294301261217552,-1.4563943628046192]],[0,"neck2",8388608,1537,[126],[1,6.854534273514901e-9,0.037732791155576706,-0.02116204984486103],[3,-0.0009035277414265922,-0.000028915307505489253,0.022024719614710385,0.999757017743521],[1,-0.10353902472119537,-0.0010332817830915923,2.52405301461983]],[6,"jaw1",8388608,242,[[1,"jaw1_end",8388608,-1932,[1,-6.556510889765832e-9,0.09419991821050644,-1.4305114426349519e-8]]],[1,-2.8908253568715736e-8,0.13693000376224518,0.058116521686315536]],[2,"tongue0",8388608,242,[-1933],[1,-0.00016162573592737317,0.03543540835380554,0.01778269372880459]],[2,"tongue1",8388608,1540,[-1934],[1,-2.4437904144747336e-8,0.04174715653061867,0.0033206080552190542]],[2,"tongue2",8388608,1541,[-1935],[1,-8.940697071579962e-9,0.02426048368215561,0.012947525829076767]],[6,"tongue3",8388608,1542,[[1,"tongue3_end",8388608,-1936,[1,-4.172325152040912e-9,0.015985950827598572,3.203749798785793e-8]]],[1,-3.278255444882916e-9,0.015977483242750168,0.0005208633374422789]],[3,"left eye",8388608,243,[[1,"left eye_end",8388608,-1937,[1,-4.64543710165799e-8,0.04114336892962456,4.1127204752910984e-8]]],[1,-0.04098759964108467,-0.000008142390470311511,-0.000010864635441976134],[3,0.5000000670552244,0.49999994784593305,-0.5000000074505787,0.4999999776482559],[1,90.00000853773666,89.9999948773579,0.0000017075469362810637]],[3,"right eye",8388608,243,[[1,"right eye_end",8388608,-1938,[1,2.3841859597695247e-9,0.04114336892962456,-6.631016447045113e-8]]],[1,0.041299138218164444,-0.000008175969014700968,-0.000010865889635169879],[3,-2.6669002751840063e-7,-1.3127678013940832e-7,-0.7071068407911596,0.7071067215818679],[1,0,0.00004321897260670373,-90]],[2,"gums0",8388608,126,[-1939],[1,0.0000037754327877337346,0.09280084818601608,0.05733678862452507]],[6,"gums1",8388608,1546,[[1,"gums1_end",8388608,-1940,[1,-7.525086331838793e-9,0.0988367572426796,1.3392418729551991e-8]]],[1,-3.434717754657868e-8,0.09877724945545197,0.0034282682463526726]],[0,"left arm0",8388608,125,[-1941],[1,0.057121630758047104,0.0006674621836282313,0.09870003908872604],[3,1.2836479121731573e-7,-2.675903420234358e-7,0.7071068407911597,0.7071067215818682],[1,0,0.000020802406625061505,90]],[2,"left arm1",8388608,1548,[-1942],[1,0.00738108716905117,-0.004490721970796585,0.055844224989414215]],[2,"left arm2",8388608,1549,[-1943],[1,0.019911641255021095,-0.014342796057462692,0.02117042988538742]],[3,"left hand",8388608,1550,[[1,"left hand_end",8388608,-1944,[1,-1.116888626029322e-8,0.03183209151029587,2.9802322831784522e-9]]],[1,0.03108891285955906,0.00015409791376441717,-0.006836477667093277],[3,1.223189126493137e-9,0.7071066023725875,-1.2231884603593109e-9,0.7071069600004624],[1,1.982262291231949e-7,89.99997102196103,3.8481377509200026e-15]],[0,"right arm0",8388608,125,[-1945],[1,-0.057455312460660934,0.0006674248143099248,0.09870008379220963],[3,1.270682496543303e-7,-2.6728162541031934e-7,0.7071068407911599,0.7071067215818683],[1,0,0.000020592293053078554,90]],[2,"right arm1",8388608,1552,[-1946],[1,0.007381103001534939,0.00449072290211916,0.055844176560640335]],[2,"right arm2",8388608,1553,[-1947],[1,0.019911693409085274,0.014342772774398327,0.02117045223712921]],[6,"right hand",8388608,1554,[[1,"right hand_end",8388608,-1948,[1,-7.748603536583687e-9,0.03183211758732796,1.7881393032936899e-9]]],[1,0.031088950112462044,-0.00015411520143970847,-0.0068364511243999004]],[2,"tail0",8388608,241,[127],[1,2.98023217215615e-10,-0.043349072337150574,0.02319210022687912]],[0,"tail2",8388608,127,[-1949],[1,3.278255444882916e-9,0.028673293069005013,0.03741476312279701],[3,-0.1463028361912643,-0.0031393783138678106,-0.029767610547375464,0.9887868899760424],[1,-16.857889406881938,-0.8562391486881605,-3.3220968644411064]],[0,"tail3",8388608,1557,[-1950],[1,1.0132789718397817e-8,-0.05554788187146187,-0.007466486655175686],[3,0.09494443132963278,0.0072947534858505475,-0.07108727019031248,0.9929143676813036],[1,11.038012381050205,1.6195251459964273,-8.035228916583923]],[0,"tail4",8388608,1558,[-1951],[1,1.609325472884393e-8,-0.06739231199026108,-0.002113461960107088],[3,0.006820988279404807,-0.00039031670343481656,-0.054395384318661796,0.9984961011123621],[1,0.7826753350080019,-0.0021555531781887283,-6.236490212522566]],[0,"tail5",8388608,1559,[-1952],[1,1.19209286886246e-9,-0.07259248942136765,0.0014650400262326002],[3,0.0008365347639303857,-0.0006950338629516917,-0.04438412131482432,0.9990139473063572],[1,0.09259519111682747,-0.07560974996830438,-5.08778088208825]],[0,"tail6",8388608,1560,[-1953],[1,3.5762786065873797e-9,-0.05376419052481651,-0.0062611037865281105],[3,0.001969906548234029,-0.002679234667020104,-0.10770912724115443,0.9941768882239916],[1,0.1958976710785521,-0.28759079430592827,-12.367096013120024]],[0,"tail7",8388608,1561,[-1954],[1,4.76837147544984e-9,-0.07518549263477325,0.005933812353760004],[3,-0.013193755150629824,-0.005816172228140279,-0.10758953329513013,0.9940908355331386],[1,-1.612133905663804,-0.844764244139603,-12.342441233968547]],[3,"tail8",8388608,1562,[[11,"tail8_end",8388608,-1955,[1,-3.5762788286319847e-8,0.062399204820394516,2.2053718851111626e-8],[3,0.012616081921405656,-2.5136068525690244e-7,3.5509499297531833e-9,0.9999204140714846],[1,1.4457348497626914,-0.000028806654019159696,4.3485242300333716e-8]]],[1,2.3841858265427618e-8,-0.06231822818517685,0.00542650930583477],[3,-0.016207116097005432,-0.007421924903127784,-0.10749437161865337,0.9940458764508112],[1,-1.9836743502560787,-1.0697836291392055,-12.325669471136049]],[0,"right hips",8388608,127,[-1956],[1,-0.07262660562992096,0.056321874260902405,0.028782740235328674],[3,0.12713794579505222,-0.13161570008993848,0.6888955327203541,0.7013816330834373],[1,87.05281218027297,-87.42188324321727,68.88999343280895]],[0,"right leg",8388608,1564,[-1957],[1,0.0787106528878212,0.022728530690073967,0.15399332344532013],[3,0.00016585554169924136,-0.08756036341608862,-0.00006945778319603457,0.9961591993381371],[1,0.01823573169606766,-10.046542688751542,-0.009592846908120064]],[0,"right foot0",8388608,1565,[128],[1,-0.0883268266916275,0.005133435595780611,0.11515156924724579],[3,-0.009426835727851626,-0.019704889095284298,0.004074029539524737,0.9997530967179914],[1,-1.0708710628614262,-2.2537183949254382,0.4880259575630826]],[0,"right toe4",8388608,128,[-1958],[1,0.020304696634411812,0.03182518109679222,0.01232586894184351],[3,-0.01078285820479739,0.9220756162332387,-0.005324676092143047,0.38682287386030023],[1,0.08467296092854346,134.4836336978424,-1.3754963523379382]],[3,"right toe5",8388608,1567,[[1,"right toe5_end",8388608,-1959,[1,-1.1920929132713809e-8,0.054233431816101074,1.2516975012033527e-8]]],[1,0.0000135266782308463,0.015547888353466988,0.051956962794065475],[3,0.010853503842249031,0.4367399816379527,-0.010621456440634157,0.8994596014031463],[1,1.6505495924126328,51.806488355413194,-0.551584894711655]],[0,"right toe0",8388608,128,[-1960],[1,0.021201718598604202,-0.0286203995347023,0.012293793261051178],[3,-0.013495336170392896,0.9144976656284729,-0.007183138684849091,0.4043022359329169],[1,0.12757335377155019,132.30120670259808,-1.747289317784149]],[3,"right toe1",8388608,1569,[[1,"right toe1_end",8388608,-1961,[1,-4.76837147544984e-9,0.05509554222226143,-4.172325152040912e-9]]],[1,-0.00003206998007954098,-0.014214979484677315,0.05323018878698349],[3,0.011071948134110925,0.43673189683782826,-0.010254113749277712,0.8994651273952565],[1,1.6546669091619952,51.80469363099904,-0.5028049730548294]],[0,"right toe2",8388608,128,[-1962],[1,0.02653280645608902,-0.000630076217930764,0.01244011614471674],[3,-0.015041340360735785,0.4171336055722677,0.003564208564841841,0.9087137115724283],[1,-1.7369357931023066,49.30851569071817,-0.34783373798251754]],[3,"right toe3",8388608,1571,[[1,"right toe3_end",8388608,-1963,[1,-1.4901161415892261e-9,0.0625266581773758,1.0728836485895954e-8]]],[1,0.06242888793349266,0.003494626609608531,-0.0001004348523565568],[3,-0.3150244009852979,0.3026074423629366,-0.6446926496929564,0.6273434067895283],[1,-170.30717056578715,-118.50977148063112,-88.27120179526563]],[0,"left hips",8388608,127,[-1964],[1,0.07238125801086426,0.055608052760362625,0.007350327912718058],[3,-0.09909267676186734,0.12780582843715071,0.6899002757468734,0.7056089009883945],[1,-84.86090407816651,87.21833796480693,71.49036939819935]],[0,"left leg",8388608,1573,[-1965],[1,0.07867277413606644,-0.022724544629454613,0.15399987995624542],[3,-0.008269071729324173,0.18907960103011726,0.018132800566027066,0.9817595064325374],[1,-1.3239799931495186,21.82404057532572,1.8611264911661038]],[0,"left foot0",8388608,1574,[129],[1,-0.08832308650016785,-0.0051322509534657,0.11515699326992035],[3,0.0006225957155467718,-0.2243345815876749,-0.009178129911173429,0.9744687628702069],[1,-0.1664457992252052,-25.93013280769849,-1.0409463270308141]],[0,"left toe2",8388608,129,[-1966],[1,0.026105668395757675,0.000630056718364358,0.012440131045877934],[3,-0.02414956312096774,0.02414963948941873,-0.7066943036979001,0.7066942440932554],[1,0,3.9143656053224514,-90]],[3,"left toe3",8388608,1576,[[1,"left toe3_end",8388608,-1967,[1,-8.19563861220729e-10,0.06294131278991699,1.0132789718397817e-8]]],[1,0.0034570214338600636,0.06284616142511368,-0.00010489056148799136],[3,-0.2385337007941343,0.010195467421105074,0.0014426207352583246,0.9710796284934278],[1,-27.600310427552138,1.174043591841035,-0.11815119665201147]],[0,"left toe4",8388608,129,[-1968],[1,0.02030131034553051,-0.030976975336670876,0.012335235252976418],[3,-6.53242450096096e-8,0.7278718487987087,7.61482695548525e-8,0.6857131847400485],[1,-0.000011484352045950562,93.41655814402924,5.349355643977248e-7]],[3,"left toe5",8388608,1578,[[1,"left toe5_end",8388608,-1969,[1,3.5762786065873797e-9,0.05455484241247177,-1.0132789718397817e-8]]],[1,2.9057263262188826e-9,-0.016561513766646385,0.05198023468255997],[3,-0.006879618952719742,0.32164529413210596,0.02565029299164152,0.9464877379423251],[1,-1.6934704389571835,37.576030488745076,2.529271614988526]],[0,"left toe0",8388608,129,[-1970],[1,0.021205546334385872,0.026720888912677765,0.012335237115621567],[3,-7.781015799049788e-8,0.7278718487987074,8.730418151272753e-8,0.6857131847400473],[1,-0.000013395948886175925,93.41655814402922,3.7010836673501673e-7]],[3,"left toe1",8388608,1580,[[1,"left toe1_end",8388608,-1971,[1,-1.3262033249361593e-8,0.05557970702648163,-1.512467839859255e-8]]],[1,-2.6635824657006424e-9,0.01605047658085823,0.053211718797683716],[3,0.0029948160624233455,0.32529363151587903,-0.009132470036667605,0.9455642137702722],[1,0.6650134106821881,37.973646891402495,-0.8779365900216632]],[53,"rex_LOD_2",8388608,23,[[18,1,-1972,[377,378,379,380,381,382],[7],23,383,384]],[3,0.5000000670552244,0.49999994784593305,-0.5000000074505787,0.4999999776482559],[1,90.00000853773666,89.9999948773579,0.0000017075469362810637]],[15,"Rap",8388608,20,[246],[3,-0.7071068407911907,1.545431364905563e-8,-1.5454308319985022e-8,0.707106721581899],[1,35,35,35],[1,-90.00000965934633,2.2069469095738317e-13,-0.0000025044783001793626]],[0,"spine0",8388608,246,[-1973],[1,3.3527614018424856e-10,0.006136342883110046,-0.0014270639512687922],[3,-0.02443160337152881,-0.022943109595223044,0.0201146698579882,0.9992357632387373],[1,-2.7480321522213016,-2.573826232055118,2.368116817714365]],[0,"spine1",8388608,1584,[-1974],[1,-5.9604643443123e-10,0.009312824346125126,-0.00239212135784328],[3,-0.025184007676141137,-0.0196636675519513,0.015162793177541899,0.9993744021330692],[1,-2.8524780959480984,-2.2097527491683993,1.793480864622867]],[0,"spine2",8388608,1585,[-1975],[1,-1.19209286886246e-9,0.007389235310256481,-0.0007077457848936319],[3,0.010935029975929024,-0.012035389463467102,0.021190295053382935,0.9996432093079205],[1,1.2830845805767541,-1.406603116942589,2.41299472347885]],[0,"spine3",8388608,1586,[-1976],[1,1.303851610012785e-10,0.008432909846305847,-0.001710528158582747],[3,0.009986723487370066,-0.010896543660344557,0.02164148477368679,0.9996565294275005],[1,1.1721922639861158,-1.27427577244788,2.4673723030040087]],[0,"spine4",8388608,1587,[130],[1,-1.6111880718483462e-9,0.008760550990700722,0.0009084802586585283],[3,0.023264478545279663,-0.005376115361179491,0.045743241224262356,0.9986678213019273],[1,2.702782389747391,-0.7402840141679439,5.227724451695554]],[0,"left arm0",8388608,130,[-1977],[1,0.01678166352212429,0.003843718208372593,0.01704486459493637],[3,0.06211955844699958,-0.0006931657552918404,0.000722125405369433,0.9980682133574261],[1,7.123023909707795,-0.08441796991511402,0.07765543025290726]],[0,"left arm1",8388608,1589,[131],[1,0.002040128456428647,0.0028534443117678165,0.027775166556239128],[3,-0.10235316970570892,0.0011289024170732995,-0.0011684694235126894,0.994746796380734],[1,-11.749253906162236,0.11497881707942949,-0.1464341866827959]],[0,"left finger6",8388608,131,[-1978],[1,-0.004345767665654421,-0.0027997016441076994,0.021122794598340988],[3,0.042911894828107505,-0.043951351409270395,0.7057449255925163,0.7057980929359144],[1,89.92273789153168,-90.00712280016079,82.95716981899638]],[0,"left finger7",8388608,1591,[-1979],[1,-0.0033442748244851828,0.0026702468749135733,0.0071599893271923065],[3,0.04291528529478036,-0.04394778676980856,-0.7057345022206643,0.7058085311906158],[1,0,-6.958944736564372,-90]],[3,"left finger8",8388608,1592,[[1,"left finger8_end",8388608,-1980,[1,1.639127722441458e-9,0.007925841957330704,-2.444721924899085e-10]]],[1,-0.0004964705440215766,-0.007903050631284714,-0.0003384559240657836],[3,0.06142204776297102,-0.0006906230868557941,0.0007109157913413585,0.9981113914223667],[1,7.0429408639736115,-0.0839939613753073,0.07645020131928479]],[0,"left finger3",8388608,131,[-1981],[1,-1.415610295651959e-9,-0.003664781805127859,0.02361919730901718],[3,0.061421936546286346,-0.0006887890441339772,0.000711245733717938,0.9981113992987272],[1,7.042927986733109,-0.08378650601282547,0.07650085680498905]],[0,"left finger4",8388608,1594,[-1982],[1,0.00006173096335260198,-0.0014206927735358477,0.0068187834694981575],[3,0.04291125041504749,-0.043951947519393436,0.7057447478009807,0.7057982727723268],[1,89.92245162352819,-90.00693723984652,82.95717372248231]],[3,"left finger5",8388608,1595,[[1,"left finger5_end",8388608,-1983,[1,1.5273690090467085e-9,0.01039195153862238,2.607703164514419e-9]]],[1,-0.008789131417870522,-0.00016358729044441134,0.005542309954762459],[3,-0.049579054244646356,0.04854435858687916,-0.7054333704961869,0.7053716200840409],[1,0,8.04116950159453,-90]],[0,"left finger0",8388608,131,[-1984],[1,0.004507369827479124,-0.004883136600255966,0.019688822329044342],[3,0.04291191348322144,-0.04395131791101415,0.7057448068546176,0.7057982126166317],[1,89.92258273948352,-90.00696341415573,82.95717101211484]],[0,"left finger1",8388608,1597,[-1985],[1,-0.004400424659252167,-0.0019052952993661165,0.004933197516947985],[3,-0.0006897126619303882,-0.061422029236350324,0.0007111226625290711,0.99811139304463],[1,-0.07388088823220039,-7.0428271276087315,0.08618929241197136]],[3,"left finger2",8388608,1598,[[1,"left finger2_end",8388608,-1986,[1,1.1175871339474952e-10,0.006281689275056124,1.9697472541935213e-9]]],[1,-0.005897655617445707,-0.001855254522524774,0.0011114660883322358],[3,0.04291460916750315,-0.04394846660365915,-0.7057343525925261,0.7058086795825025],[1,0,-6.958833908777449,-90]],[0,"right arm0",8388608,130,[-1987],[1,-0.016805235296487808,0.0038437184412032366,0.017044860869646072],[3,0.043394638960881575,-0.044454897530476316,0.7056103165445806,0.7058716233004884],[1,89.7865366216498,-89.87261399620158,82.87706909566757]],[0,"right arm1",8388608,1600,[132],[1,0.002853442681953311,0.0020401189103722572,0.02777515910565853],[3,0.0011288907858823176,0.10235308123633922,-0.0011684726938453703,0.9947468054930283],[1,0.14238703490861612,11.749539693283234,-0.11995327445419976]],[0,"right finger6",8388608,132,[-1988],[1,-0.0027996874414384365,-0.004345774184912443,0.021122805774211884],[3,-0.0006887954862275872,-0.061421981024616816,0.0007112255179817629,0.9981113965715712],[1,-0.07377526620041537,-7.042821664582796,0.08619459751518821]],[0,"right finger7",8388608,1602,[-1989],[1,-0.003344250377267599,-0.002670247806236148,0.0071600014343857765],[3,-0.0006896776228519604,-0.0614219847051367,0.0007110737700869976,0.9981113958440472],[1,-0.07387722859076269,-7.042822021155266,0.08618345041350875]],[3,"right finger8",8388608,1603,[[1,"right finger8_end",8388608,-1990,[1,5.513429712777906e-9,0.007925831712782383,1.247972281070986e-9]]],[1,-0.007903031073510647,-0.0004964724066667259,-0.00033846235601231456],[3,-0.000690654577497668,-0.06142204033876392,0.0007109249302496036,0.9981113918509402],[1,-0.07399001086996873,-7.042828334097344,0.08617330713999664]],[0,"right finger3",8388608,132,[-1991],[1,-0.003664761781692505,-3.5762786065873797e-9,0.02361920103430748],[3,-0.0006887954862275872,-0.061421981024616816,0.0007112255179817629,0.9981113965715712],[1,-0.07377526620041537,-7.042821664582796,0.08619459751518821]],[0,"right finger4",8388608,1605,[-1992],[1,-0.0014206956839188933,0.0000617306650383398,0.006818781606853008],[3,-0.0006897156906438388,-0.06142198470340455,0.0007110765058270861,0.9981113958158997],[1,-0.0738815633520291,-7.042822017520631,0.08618403125030016]],[3,"right finger5",8388608,1606,[[1,"right finger5_end",8388608,-1993,[1,-5.811452652437765e-9,0.01039194781333208,-2.197921178392903e-9]]],[1,-0.0087891248986125,0.0001635877852095291,0.00554230809211731],[3,-0.0007775086613122394,0.06938312249841522,0.0006146960700724433,0.9975895949444304],[1,-0.09376854933974299,7.957169543924637,0.06408745408308406]],[0,"right finger0",8388608,132,[-1994],[1,-0.004883085377514362,0.004507404752075672,0.019688935950398445],[3,-0.0006887954862275872,-0.061421981024616816,0.0007112255179817629,0.9981113965715712],[1,-0.07377526620041537,-7.042821664582796,0.08619459751518821]],[0,"right finger1",8388608,1608,[-1995],[1,-0.004400453995913267,0.0019052857533097267,0.004933169577270746],[3,-0.0006897156324366608,-0.0614219847034477,0.0007110755745049844,0.9981113958166009],[1,-0.07388156324947487,-7.0428220175896525,0.08618392432045532]],[3,"right finger2",8388608,1609,[[1,"right finger2_end",8388608,-1996,[1,5.9604645663569045e-9,0.006281698122620583,-3.3853575498454802e-9]]],[1,-0.005897653289139271,0.0018552541732788086,0.0011114648077636957],[3,-0.0006906201187373032,-0.06142203662910394,0.0007109223110857104,0.9981113921049354],[1,-0.07398608839280943,-7.04282791131622,0.08617276476308627]],[0,"neck0",8388608,130,[-1997],[1,-3.2037497099679513e-9,0.011111360974609852,0.003563487436622381],[3,-0.05415776212446365,-0.015673452526640656,0.028092875249285852,0.9980140630511142],[1,-6.165410620017269,-1.621056885347618,3.311927081126803]],[0,"neck1",8388608,1611,[-1998],[1,-2.98023217215615e-10,0.0062774051912128925,-0.00410560704767704],[3,-0.08966264868752813,-0.0009737873910163207,-0.0005594561804697564,0.9959715599238949],[1,-10.288461070754654,-0.11688660195574159,-0.053845445684746494]],[0,"neck2",8388608,1612,[-1999],[1,-7.450580430390374e-11,0.0052847303450107574,-0.006477942690253258],[3,-0.03310535025500392,-0.00407697437089932,-0.003582932669522528,0.9994371299176142],[1,-3.7959988108354192,-0.48053312020982336,-0.394879482527021]],[0,"neck3",8388608,1613,[247],[1,4.4703482582342247e-10,0.005175611469894648,-0.009956556372344494],[3,0.1097725207973913,-0.0022896964163004354,-0.0014697322959371477,0.9939530123980135],[1,12.604037086545514,-0.24230764825624343,-0.1962029725687631]],[6,"facial right",8388608,32,[[1,"facial right_end",8388608,-2000,[1,2.9802322831784522e-9,0.020877547562122345,-6.966292875887348e-9]]],[1,-0.004972147289663553,0.02323892153799534,-0.0007019501645117998]],[3,"facial left",8388608,32,[[1,"facial left_end",8388608,-2001,[1,8.568167286782113e-10,0.020877551287412643,1.266598714799727e-9]]],[1,0.004376347176730633,0.023286135867238045,-0.000610654940828681],[3,1.020744707630372e-8,-8.758644790014262e-8,0.7071068705935041,0.7071066917795742],[1,0,0.0000016541878159955739,90]],[3,"left eye",8388608,32,[[1,"left eye_end",8388608,-2002,[1,4.0009616952829674e-8,0.020877547562122345,1.989305076222081e-8]]],[1,0.007816694676876068,0.004855139646679163,-0.0005104455631226301],[3,-0.4974182708716994,0.5025755030158159,0.4974130256631019,0.5025666219239862],[1,-89.40923043063424,90.00021249067133,-0.0008082926587832862]],[3,"facial down",8388608,32,[[1,"facial down_end",8388608,-2003,[1,-2.38418573772492e-9,0.0208775345236063,5.7369469175228005e-9]]],[1,-0.00010118782665813342,0.0382038950920105,-0.001761037390679121],[3,0.00019762107640772304,0.027702124713359824,0.9996162029499676,-0.000005671407491620731],[1,-176.825164120377,-179.97734498003916,-0.000022311792150195157]],[3,"right eye",8388608,32,[[1,"right eye_end",8388608,-2004,[1,-5.587935447692871e-9,0.020877541974186897,8.940696516468449e-10]]],[1,-0.007840259931981564,0.004855108447372913,-0.0005104326992295682],[3,-0.000004122019059970457,0.0000059066849982143965,0.7071109236787789,0.7071026386333629],[1,0,-0.0006680056962100314,90]],[0,"tongue0",8388608,248,[-2005],[1,5.9604643443123e-10,0.007476067636162043,0.00844585057348013],[3,0.14470158115352674,-8.09338962678829e-7,0.0000075048867718142726,0.9894753419639576],[1,16.639997603994093,-0.00021621019955646604,0.0008375253860280748]],[0,"tongue1",8388608,1620,[-2006],[1,0,0.009285949170589447,-0.00020238566503394395],[3,-0.000007194468252753639,5.871989401064034e-7,0.000007559196546522802,0.9999999999453768],[1,-0.0008244258421684543,0.00006729427400246825,0.0008662196331352479]],[3,"tongue2",8388608,1621,[[1,"tongue2_end",8388608,-2007,[1,0,0.009665919467806816,-1.1846423397798844e-8]]],[1,-1.7881393032936899e-9,0.00953700952231884,0.0015734168700873852],[3,-0.0000068105296119141,2.1944291005412067e-7,0.000007557217486073403,0.9999999999482285],[1,-0.0007804293961320656,0.000025152203055154416,0.0008659931623574263]],[3,"jaw1",8388608,248,[[1,"jaw1_end",8388608,-2008,[1,2.38418573772492e-9,0.024566248059272766,1.512467839859255e-8]]],[1,1.7881393032936899e-9,0.03447001799941063,0.015642423182725906],[3,-0.000007077587724402676,-0.0000016866254099124525,0.000007322059900226215,0.9999999999467253],[1,-0.0008110303963978463,-0.00019326709680230037,0.0008390476271420361]],[0,"right leg0",8388608,133,[-2009],[1,-0.01905568316578865,0.0004546025302261114,0.015213022008538246],[3,-0.17785023268328573,0.020265245941758638,0.6699854775070273,0.7204707311689366],[1,-82.16966369115825,69.23780358133965,73.37573459358418]],[0,"right leg1",8388608,1624,[-2010],[1,0.011830153875052929,0.005615810863673687,0.04575785622000694],[3,0.07421629799238305,0.020908709399497166,0.003722633662365716,0.997016002370157],[1,8.501899179187863,2.357948838487365,0.6031400140632077]],[0,"right foot0",8388608,1625,[249],[1,-0.024167373776435852,-0.005615834146738052,0.028443854302167892],[3,-0.08061645305448968,-0.12210674028886478,0.0063115340708462956,0.9892174159458647],[1,-9.092850681330166,-13.927103805247068,1.8437860478257406]],[0,"right toe3",8388608,250,[-2011],[1,0.0051707010716199875,-0.005034505855292082,0.000486021745018661],[3,-0.09527645081561366,0.6747166984011005,-0.089204905745727,0.7264449460279797],[1,-1.0705488113058321,85.63083507197072,-14.961749049774335]],[0,"right toe4",8388608,1627,[-2012],[1,0.00003912072497769259,-0.0009624829399399459,0.006962400861084461],[3,-0.019880966596395596,0.35771207889038753,-0.05723422587730518,0.9318642922503984],[1,0.2247600806246628,42.01394582402905,-6.943607528256003]],[3,"right toe5",8388608,1628,[[1,"right toe5_end",8388608,-2013,[1,-4.440891999238953e-18,0.006882984656840563,-2.980232449711906e-10]]],[1,-0.004092148505151272,0.00007404133793897927,0.005533925257623196],[3,-0.000003851366154606075,-0.5275889472886025,0.00000714525982263592,0.8494997955461888],[1,0.00005706950095668717,-63.68538798476834,0.0009284019006364583]],[0,"right toe0",8388608,250,[-2014],[1,0.0047660404816269875,0.004738344810903072,-0.00009099074668483809],[3,0.0042941635988303925,-0.03657727732310943,0.13046305037654934,0.9907689213076178],[1,1.0707295193042492,-4.369200006209172,14.963480993410622]],[0,"right toe1",8388608,1630,[-2015],[1,0.0078045520931482315,0.0020730358082801104,0.0005770075367763638],[3,-0.001128621387382462,0.050887964123917655,-0.06002164940686158,0.9968984616918449],[1,0.22268066484699953,5.857785937256673,-6.879743333266996]],[3,"right toe2",8388608,1631,[[1,"right toe2_end",8388608,-2016,[1,-5.662441182607836e-9,0.006672547664493322,2.533197429599454e-9]]],[1,0.006148831453174353,0.002591283293440938,1.5832484212552345e-9],[3,0.0000023585570943415933,-0.2379354341648002,0.000007691452844440242,0.971280973304886],[1,0.0004722193016381901,-27.52943998046925,0.0007917563394937316]],[0,"right claw0",8388608,249,[-2017],[1,0.0007721730507910252,-0.008722227066755295,0.007967600598931313],[3,-0.0000025569461284647272,0.000005755573965551217,0.00000845338308816606,0.999999999944438],[1,-0.00029301001857948313,0.0006595426707539052,0.0009686846607019436]],[3,"right claw1",8388608,1633,[[1,"right claw1_end",8388608,-2018,[1,2.98023217215615e-10,0.019258832558989525,8.940696516468449e-10]]],[1,0.011945203877985477,-0.0035537611693143845,-0.014682830311357975],[3,-0.000002631452389177881,0.000005736017100981615,0.000008412055648922045,0.9999999999447056],[1,-0.00030154776104337637,0.000657301678863356,0.0009639488417656074]],[0,"tail0",8388608,133,[-2019],[1,-1.7881393032936899e-9,-0.021330013871192932,0.01197218056768179],[3,0.03965515667346802,0.029825434269129803,0.0550589266769855,0.9972494304902054],[1,4.375311874265729,3.1798398908889918,6.441023183002347]],[0,"tail1",8388608,1635,[-2020],[1,3.5762786065873797e-9,-0.011852532625198364,-0.0007820019382052124],[3,0.008202091906412407,0.005046298798562692,0.03852565268371837,0.9992112062232329],[1,0.9196460730927681,0.5432211855561329,4.420359033449537]],[0,"tail2",8388608,1636,[-2021],[1,5.9604645663569045e-9,-0.0095637496560812,-0.00047620327677577734],[3,-0.011139223526711622,0.0057910597859745176,0.038360335534204544,0.9991851009615187],[1,-1.30481599996516,0.7141440432337758,4.389087881368125]],[0,"tail3",8388608,1637,[-2022],[1,8.335336865172849e-9,-0.008867786265909672,-0.00032850803108885884],[3,-0.0154714971326145,0.005952051679916446,0.03827477143116253,0.9991297451928691],[1,-1.803018086775701,0.7515309744362392,4.375849102858241]],[0,"tail4",8388608,1638,[-2023],[1,1.7881393032936899e-9,-0.009247753769159317,0.0008474430651403964],[3,-0.05025408392748448,0.005035158688131844,0.01878929315385856,0.9985470127582242],[1,-5.774891784632758,0.6848357963710222,2.121454741811426]],[0,"tail5",8388608,1639,[-2024],[1,4.172325152040912e-9,-0.009859621524810791,-0.0009705275297164917],[3,0.06173731078799804,-0.011392463117960001,0.00018867715168469868,0.9980273947350866],[1,7.078864867225113,-1.304353077500048,-0.059018682062780145]],[0,"tail6",8388608,1640,[-2025],[1,-1.4901161415892261e-9,-0.010103093460202217,0.0011121081188321114],[3,-0.05659515416709156,-0.011642833252771134,0.0010709838254645341,0.9983287464319041],[1,-6.486948003139501,-1.3251210401429965,0.19802857500182264]],[0,"tail7",8388608,1641,[-2026],[1,1.1175871339474952e-9,-0.011288122273981571,-0.00011392786836950108],[3,0.013825285306723311,-0.013218420613385117,-0.000948558972955096,0.9998166007216274],[1,1.582738980428874,-1.5131186103052847,-0.12961845539995664]],[0,"tail8",8388608,1642,[-2027],[1,2.6822091214739885e-9,-0.0113936522975564,-0.00022619709488935769],[3,0.024788325904215147,-0.012316831512661622,-0.0010085908099989774,0.9996163350530708],[1,2.8391911683651196,-1.4081450949649523,-0.1505181892801957]],[0,"tail9",8388608,1643,[-2028],[1,-7.1525572131747595e-9,-0.008997928351163864,0.0003088857338298112],[3,-0.015303138615712872,-0.011302014792302787,-0.0004550526201377547,0.9998189192735132],[1,-1.7541566153453036,-1.2957896235541686,-0.03231641645904276]],[0,"tail10",8388608,1644,[-2029],[1,4.172325152040912e-9,-0.010187804698944092,0.00020333804422989488],[3,-0.02430352398028845,-0.010115237040459212,-0.00029950696818820127,0.9996534054347691],[1,-2.7854577140083756,-1.1596323336731569,-0.006138355243051012]],[3,"tail11",8388608,1645,[[11,"tail11_end",8388608,-2030,[1,-1.7881393032936899e-9,0.014969524927437305,-5.699694050065318e-9],[3,-0.0678038007575209,1.2666034032288826e-7,-3.6755410179991807e-9,0.9976986742513083],[1,-7.775708965422763,0.000014452245938741162,-0.0000014043350119690551]]],[1,1.19209286886246e-9,-0.014869323000311852,-0.001440257765352726],[3,0.0641143115460958,-0.008737050228345412,-0.0010215376075935177,0.9979037906878568],[1,7.350720152735696,-0.9916427583713855,-0.1810052558123102]],[0,"left leg0",8388608,133,[-2031],[1,0.018341973423957825,0.0005686721415258944,0.02371845953166485],[3,-0.059312799378750024,0.008447008391998514,0.07803680918249539,0.9951486804953803],[1,-6.9391765369367295,1.5119400789025952,8.87703726528248]],[0,"left leg1",8388608,1647,[-2032],[1,0.005615829024463892,0.011830146424472332,0.04575786739587784],[3,0.12167748863638429,-0.0014848681233614938,0.008157222568458671,0.9925350591519513],[1,13.980570664107205,-0.28265763113048126,0.9071050678907172]],[0,"left foot0",8388608,1648,[251],[1,-0.0056158192455768585,-0.024167375639081,0.028443854302167892],[3,0.09446038147516805,0.005244198633049949,-0.006419538878395956,0.9954941105967688],[1,10.844835055272458,0.6677820741062617,-0.6755608700291829]],[0,"left toe0",8388608,252,[-2033],[1,0.00009099714225158095,-0.004738352261483669,0.004766042344272137],[3,0.00041404998355187877,-0.05181380027437721,-0.0002794852792177566,0.9986566379650801],[1,0.04572348559152735,-5.940071036858776,-0.0344420229264882]],[0,"left toe1",8388608,1650,[-2034],[1,-0.0005770096322521567,-0.002687971107661724,0.007804455701261759],[3,0.00039830285108509916,0.0605900612035852,-0.00030199798679294816,0.9981626093154365],[1,0.04765510015661467,6.947378898331921,-0.03177737590548919]],[3,"left toe2",8388608,1651,[[1,"left toe2_end",8388608,-2035,[1,-2.2351741291171123e-10,0.00645874161273241,1.1102229998097382e-18]]],[1,-8.940696516468449e-10,-0.0019763486925512552,0.006148929707705975],[3,0.00038142458880916034,-0.05181382255040501,-0.0003235289497147746,0.9986566365057697],[1,0.041728406572960126,-5.9400730306495175,-0.03928856691909781]],[0,"left toe3",8388608,252,[-2036],[1,-0.0004860118788201362,0.0050345007330179214,0.005170698743313551],[3,-0.10411987546039528,-0.05828465573026303,0.002757470380755551,0.9928516237573546],[1,-11.915082710907141,-6.613988900819584,1.0091855612067413]],[0,"left toe4",8388608,1653,[-2037],[1,0.00003912120882887393,0.0004225992306601256,0.006962402258068323],[3,0.000398199882238931,0.0605900501044245,-0.00030017827020632293,0.9981626105791598],[1,0.0476306875527382,6.947377527036639,-0.03156995032740742]],[3,"left toe5",8388608,1654,[[1,"left toe5_end",8388608,-2038,[1,-3.725290215195187e-11,0.006898330058902502,-1.490116086078075e-10]]],[1,-0.00003912124884664081,0.0004658419347833842,0.006882472429424524],[3,0.00004524483307372373,0.6695190080315481,-0.0005006977013898457,0.7427947530369131],[1,0.04226530576820558,84.05993241325626,-0.03914715528676]],[0,"left claw0",8388608,251,[-2039],[1,-0.008722207508981228,0.0007721720612607896,0.007967598736286163],[3,-0.0000045867960453209906,0.0000045453076248021775,0.7071120263611805,0.707101535943521],[1,0,-0.0007433276312427485,90]],[3,"left claw1",8388608,1656,[[1,"left claw1_end",8388608,-2040,[1,8.568167841893626e-10,0.019258836284279823,-4.582107138162428e-9]]],[1,0.011945197358727455,0.003553769551217556,-0.0146828293800354],[3,-3.678724169550181e-8,0.000006524614036286139,0.0000074706044866579266,0.9999999999508091],[1,-0.000004221092893115245,0.0007476657260223088,0.0008560681874791743]],[53,"rap_LOD_2",8388608,20,[[18,1,-2041,[394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411],[7],20,412,413]],[3,0.5000000670552244,0.49999994784593305,-0.5000000074505787,0.4999999776482559],[1,90.00000853773666,89.9999948773579,0.0000017075469362810637]],[62,"Cube",8388608,254,[-2042]],[66,1,false,false,1659,[[421,null],6,0],[42,[4,4294939182]],[35,3,1,2],[5],[5],[35,3,30,60],[5],[5],[43,3,4.71238898038469],[5],[35,3,0.3,1],[5],[5],[5],[[44,[10,15]]],[70,[28]],[74,true,0,[10,1]],[76,[5],[5],[5],[5]],[47,[5],[5],[5],[10,1]],[48,[5],[5],[5]],[82,true,0.8,[5],[5],[5],[68,1,30,[29,[0,1],[[79,0.04444444444444444,1,1],[80,-0.562962962962963,-0.6074074074074074,1,-0.6074074074074074,1]]]]],[84,true,true,[10,0.7853981633974483],[10,0.7853981633974483],[10,0.8552113334772213]],[86,true,3,3,2,[5],[43,3,1]],[49,[10,1],[5],[28],[28],-2043],[88,0,422]],[101,"Directional Light",33,[[136,15000,100000,2.604166666666667,-2044,[137]]],[1,0.763,-7.09,18.751],[3,-0.33375837511925477,0.20532641086746783,-0.07472937436729404,0.9169852412360363],[1,-37.198,19.858,-15.908999999999999]],[61,"Responisve","0dLV1lXMxAorRkyZzhNv/a",24,[[138,-2045,37]]],[61,"TouchAreaController","cbdS8PWC5K/7ZHW8F95fDM",24,[[139,-2047,-2046,27,37,140]]],[140,27],[54,"IronSource","c0HBwLvpVGZIfoccaEg+GP",24,[1664]]],0,[0,1,1,0,-1,39,0,-2,40,0,-3,41,0,-4,42,0,-5,43,0,-6,44,0,-7,45,0,-8,46,0,-9,47,0,-10,48,0,-11,49,0,-12,50,0,-13,51,0,-14,52,0,-15,53,0,-1,277,0,-2,278,0,-3,279,0,-4,280,0,-5,281,0,-6,282,0,-7,283,0,-8,284,0,-9,285,0,-10,286,0,-11,287,0,-12,288,0,-13,289,0,-14,290,0,-15,291,0,-16,142,0,-1,65,0,-2,69,0,-3,73,0,-4,77,0,-5,81,0,-6,85,0,-7,89,0,-8,93,0,-9,97,0,-10,101,0,-11,105,0,-12,109,0,-13,113,0,-14,117,0,-15,121,0,1,4,0,16,259,0,1,4,0,1,4,0,-1,258,0,-2,135,0,-3,38,0,-5,28,0,-6,54,0,-7,35,0,-8,25,0,1,5,0,12,64,0,13,27,0,1,5,0,1,5,0,1,5,0,-1,297,0,-2,372,0,-3,64,0,1,6,0,1,6,0,1,6,0,1,6,0,-1,375,0,-2,451,0,-3,157,0,1,7,0,1,7,0,1,7,0,1,7,0,-1,452,0,-2,528,0,-3,163,0,1,8,0,1,8,0,1,8,0,1,8,0,-1,529,0,-2,605,0,-3,169,0,1,9,0,1,9,0,1,9,0,1,9,0,-1,606,0,-2,682,0,-3,175,0,1,10,0,1,10,0,1,10,0,1,10,0,-1,683,0,-2,759,0,-3,181,0,1,11,0,1,11,0,1,11,0,1,11,0,-1,760,0,-2,836,0,-3,187,0,1,12,0,1,12,0,1,12,0,1,12,0,-1,837,0,-2,913,0,-3,193,0,1,13,0,1,13,0,1,13,0,1,13,0,-1,914,0,-2,990,0,-3,199,0,1,14,0,1,14,0,1,14,0,1,14,0,-1,991,0,-2,1067,0,-3,204,0,1,15,0,1,15,0,1,15,0,1,15,0,-1,1068,0,-2,1144,0,-3,210,0,1,16,0,1,16,0,1,16,0,1,16,0,-1,1145,0,-2,1221,0,-3,216,0,1,17,0,1,17,0,1,17,0,1,17,0,-1,1222,0,-2,1298,0,-3,222,0,1,18,0,1,18,0,1,18,0,1,18,0,-1,1299,0,-2,1375,0,-3,228,0,1,19,0,1,19,0,1,19,0,1,19,0,-1,1376,0,-2,1452,0,-3,234,0,1,20,0,12,253,0,13,27,0,1,20,0,1,20,0,1,20,0,-1,1583,0,-2,1658,0,-3,253,0,-1,27,0,-1,262,0,-2,264,0,-3,266,0,-4,268,0,-5,270,0,-6,272,0,-7,274,0,1,22,0,1,22,0,1,22,0,1,22,0,-1,1454,0,-2,1530,0,-3,1531,0,1,23,0,1,23,0,1,23,0,1,23,0,-1,1532,0,-2,1582,0,14,31,0,15,31,0,14,31,0,15,260,0,-1,256,0,-2,34,0,-3,1662,0,-4,261,0,-6,1663,0,-7,1665,0,1,25,0,1,25,0,1,25,0,-1,29,0,-2,26,0,1,26,0,1,26,0,1,26,0,1,26,0,-1,57,0,1,28,0,1,28,0,1,28,0,-1,136,0,-2,137,0,1,29,0,1,29,0,-1,56,0,-2,138,0,-3,139,0,-1,329,0,-2,330,0,-3,331,0,-4,332,0,-5,333,0,-1,151,0,-1,373,0,-1,1615,0,-2,1616,0,-3,1617,0,-4,1618,0,-5,1619,0,-1,141,0,-2,36,0,-3,134,0,-4,1661,0,-1,260,0,1,34,0,1,35,0,1,35,0,1,35,0,-1,143,0,-3,240,0,-4,245,0,-1,157,0,-2,163,0,-3,169,0,-4,175,0,-5,181,0,-6,187,0,-7,193,0,-8,199,0,-9,204,0,-10,210,0,-11,216,0,-12,222,0,-13,228,0,-14,234,0,-15,244,0,-16,64,0,-1,97,0,-2,101,0,-3,105,0,-4,109,0,-5,113,0,-6,117,0,-1,65,0,-2,69,0,-3,73,0,-4,77,0,-5,81,0,-6,85,0,-7,89,0,-8,93,0,-1,48,0,-2,49,0,-3,50,0,-4,51,0,-5,52,0,-6,53,0,-1,40,0,-2,41,0,-3,42,0,-4,43,0,-5,44,0,-6,45,0,-7,46,0,-8,47,0,-1,152,0,-2,158,0,-3,164,0,-4,170,0,-5,176,0,-6,182,0,-7,188,0,-8,194,0,-9,205,0,-10,211,0,-11,217,0,-12,223,0,-13,229,0,-14,235,0,1,38,0,1,38,0,1,39,0,1,39,0,1,40,0,1,40,0,1,41,0,1,41,0,1,42,0,1,42,0,1,43,0,1,43,0,1,44,0,1,44,0,1,45,0,1,45,0,1,46,0,1,46,0,1,47,0,1,47,0,1,48,0,1,48,0,1,49,0,1,49,0,1,50,0,1,50,0,1,51,0,1,51,0,1,52,0,1,52,0,1,53,0,1,53,0,1,54,0,-1,55,0,1,55,0,1,55,0,1,55,0,1,56,0,1,56,0,1,56,0,1,57,0,1,57,0,1,57,0,-1,292,0,-2,293,0,-3,294,0,1,59,0,1,59,0,1,59,0,-1,303,0,-2,314,0,-3,325,0,-1,305,0,-2,308,0,-3,311,0,-1,316,0,-2,319,0,-3,322,0,-1,338,0,-2,349,0,-3,361,0,1,64,0,-1,152,0,-1,378,0,-2,414,0,-3,417,0,-1,380,0,-2,388,0,-3,396,0,-1,420,0,-2,431,0,-3,441,0,-1,158,0,-1,455,0,-2,491,0,-3,494,0,-1,457,0,-2,465,0,-3,473,0,-1,497,0,-2,508,0,-3,518,0,-1,164,0,-1,532,0,-2,568,0,-3,571,0,-1,534,0,-2,542,0,-3,550,0,-1,574,0,-2,585,0,-3,595,0,-1,170,0,-1,609,0,-2,645,0,-3,648,0,-1,611,0,-2,619,0,-3,627,0,-1,651,0,-2,662,0,-3,672,0,-1,176,0,-1,686,0,-2,722,0,-3,725,0,-1,688,0,-2,696,0,-3,704,0,-1,728,0,-2,739,0,-3,749,0,-1,182,0,-1,763,0,-2,799,0,-3,802,0,-1,765,0,-2,773,0,-3,781,0,-1,805,0,-2,816,0,-3,826,0,-1,188,0,-1,840,0,-2,876,0,-3,879,0,-1,842,0,-2,850,0,-3,858,0,-1,882,0,-2,893,0,-3,903,0,-1,194,0,-1,917,0,-2,953,0,-3,956,0,-1,919,0,-2,927,0,-3,935,0,-1,959,0,-2,970,0,-3,980,0,-2,205,0,-1,994,0,-2,1030,0,-3,1033,0,-1,996,0,-2,1004,0,-3,1012,0,-1,1036,0,-2,1047,0,-3,1057,0,-2,211,0,-1,1071,0,-2,1107,0,-3,1110,0,-1,1073,0,-2,1081,0,-3,1089,0,-1,1113,0,-2,1124,0,-3,1134,0,-2,217,0,-1,1148,0,-2,1184,0,-3,1187,0,-1,1150,0,-2,1158,0,-3,1166,0,-1,1190,0,-2,1201,0,-3,1211,0,-2,223,0,-1,1225,0,-2,1261,0,-3,1264,0,-1,1227,0,-2,1235,0,-3,1243,0,-1,1267,0,-2,1278,0,-3,1288,0,-2,229,0,-1,1302,0,-2,1338,0,-3,1341,0,-1,1304,0,-2,1312,0,-3,1320,0,-1,1344,0,-2,1355,0,-3,1365,0,-2,235,0,-1,1379,0,-2,1415,0,-3,1418,0,-1,1381,0,-2,1389,0,-3,1397,0,-1,1421,0,-2,1432,0,-3,1442,0,-1,1453,0,-1,1457,0,-2,1493,0,-3,1496,0,-1,1459,0,-2,1467,0,-3,1475,0,-1,1499,0,-2,1510,0,-3,1520,0,-1,1536,0,-2,1548,0,-3,1552,0,-1,242,0,-2,243,0,-3,1546,0,-1,1557,0,-2,1564,0,-3,1573,0,-1,1567,0,-2,1569,0,-3,1571,0,-1,1576,0,-2,1578,0,-3,1580,0,-1,1589,0,-2,1600,0,-3,1611,0,-1,1591,0,-2,1594,0,-3,1597,0,-1,1602,0,-2,1605,0,-3,1608,0,-1,1624,0,-2,1635,0,-3,1647,0,-1,257,0,1,134,0,1,135,0,1,135,0,1,136,0,1,136,0,1,137,0,1,137,0,1,138,0,1,138,0,1,139,0,1,139,0,-1,276,0,-2,295,0,-1,298,0,-2,146,0,-1,334,0,-2,337,0,-1,148,0,-2,347,0,-1,341,0,-2,344,0,-1,150,0,-2,370,0,-1,364,0,-2,367,0,10,151,0,1,152,0,-1,376,0,-1,155,0,-2,156,0,-1,400,0,-2,403,0,-1,406,0,-2,409,0,1,157,0,1,158,0,-1,453,0,-1,161,0,-2,162,0,-1,477,0,-2,480,0,-1,483,0,-2,486,0,1,163,0,1,164,0,-1,530,0,-1,167,0,-2,168,0,-1,554,0,-2,557,0,-1,560,0,-2,563,0,1,169,0,1,170,0,-1,607,0,-1,173,0,-2,174,0,-1,631,0,-2,634,0,-1,637,0,-2,640,0,1,175,0,1,176,0,-1,684,0,-1,179,0,-2,180,0,-1,708,0,-2,711,0,-1,714,0,-2,717,0,1,181,0,1,182,0,-1,761,0,-1,185,0,-2,186,0,-1,785,0,-2,788,0,-1,791,0,-2,794,0,1,187,0,1,188,0,-1,838,0,-1,191,0,-2,192,0,-1,862,0,-2,865,0,-1,868,0,-2,871,0,1,193,0,1,194,0,-1,915,0,-1,197,0,-2,198,0,-1,939,0,-2,942,0,-1,945,0,-2,948,0,1,199,0,-1,992,0,-1,202,0,-2,203,0,-1,1016,0,-2,1019,0,-1,1022,0,-2,1025,0,1,204,0,1,205,0,-1,1069,0,-1,208,0,-2,209,0,-1,1093,0,-2,1096,0,-1,1099,0,-2,1102,0,1,210,0,1,211,0,-1,1146,0,-1,214,0,-2,215,0,-1,1170,0,-2,1173,0,-1,1176,0,-2,1179,0,1,216,0,1,217,0,-1,1223,0,-1,220,0,-2,221,0,-1,1247,0,-2,1250,0,-1,1253,0,-2,1256,0,1,222,0,1,223,0,-1,1300,0,-1,226,0,-2,227,0,-1,1324,0,-2,1327,0,-1,1330,0,-2,1333,0,1,228,0,1,229,0,-1,1377,0,-1,232,0,-2,233,0,-1,1401,0,-2,1404,0,-1,1407,0,-2,1410,0,1,234,0,1,235,0,-1,1455,0,-1,238,0,-2,239,0,-1,1479,0,-2,1482,0,-1,1485,0,-2,1488,0,-2,244,0,-1,1533,0,-2,1556,0,-1,1539,0,-2,1540,0,-1,1544,0,-2,1545,0,1,244,0,-2,254,0,-1,1584,0,-2,248,0,-1,1620,0,-2,1623,0,-1,250,0,-2,1633,0,-1,1627,0,-2,1630,0,-1,252,0,-2,1656,0,-1,1650,0,-2,1653,0,1,253,0,-1,255,0,-1,1659,0,10,255,0,-1,259,0,-1,263,0,-1,265,0,-1,267,0,-1,269,0,-1,271,0,-1,273,0,-1,275,0,1,277,0,1,278,0,1,279,0,1,280,0,1,281,0,1,282,0,1,283,0,1,284,0,1,285,0,1,286,0,1,287,0,1,288,0,1,289,0,1,290,0,1,291,0,1,292,0,1,293,0,1,294,0,-1,296,0,1,296,0,-1,299,0,-1,300,0,-1,301,0,-1,302,0,-1,304,0,-1,306,0,-1,307,0,0,307,0,-1,309,0,-1,310,0,0,310,0,-1,312,0,-1,313,0,0,313,0,-1,315,0,-1,317,0,-1,318,0,0,318,0,-1,320,0,-1,321,0,0,321,0,-1,323,0,-1,324,0,0,324,0,-1,326,0,-1,327,0,-1,328,0,0,329,0,0,330,0,0,331,0,0,332,0,0,333,0,-1,335,0,-1,336,0,0,336,0,0,337,0,-1,339,0,-1,340,0,-1,342,0,-1,343,0,0,343,0,-1,345,0,-1,346,0,0,346,0,-1,348,0,0,348,0,-1,350,0,-1,351,0,-1,352,0,-1,353,0,-1,354,0,-1,355,0,-1,356,0,-1,357,0,-1,358,0,-1,359,0,-1,360,0,0,360,0,-1,362,0,-1,363,0,-1,365,0,-1,366,0,0,366,0,-1,368,0,-1,369,0,0,369,0,-1,371,0,0,371,0,1,372,0,-1,374,0,10,374,0,-1,377,0,-1,379,0,-1,381,0,-1,382,0,-1,383,0,-1,384,0,-1,385,0,-1,386,0,-1,387,0,0,387,0,-1,389,0,-1,390,0,-1,391,0,-1,392,0,-1,393,0,-1,394,0,-1,395,0,0,395,0,-1,397,0,-1,398,0,-1,399,0,-1,401,0,-1,402,0,0,402,0,-1,404,0,-1,405,0,0,405,0,-1,407,0,-1,408,0,0,408,0,-1,410,0,-1,411,0,-1,412,0,-1,413,0,0,413,0,-1,415,0,-1,416,0,0,416,0,-1,418,0,-1,419,0,0,419,0,-1,421,0,-1,422,0,-1,423,0,-1,424,0,-1,425,0,-1,426,0,-1,427,0,-1,428,0,-1,429,0,-1,430,0,0,430,0,-1,432,0,-1,433,0,-1,434,0,-1,435,0,-1,436,0,-1,437,0,-1,438,0,-1,439,0,-1,440,0,0,440,0,-1,442,0,-1,443,0,-1,444,0,-1,445,0,-1,446,0,-1,447,0,-1,448,0,-1,449,0,-1,450,0,0,450,0,1,451,0,-1,454,0,-1,456,0,-1,458,0,-1,459,0,-1,460,0,-1,461,0,-1,462,0,-1,463,0,-1,464,0,0,464,0,-1,466,0,-1,467,0,-1,468,0,-1,469,0,-1,470,0,-1,471,0,-1,472,0,0,472,0,-1,474,0,-1,475,0,-1,476,0,-1,478,0,-1,479,0,0,479,0,-1,481,0,-1,482,0,0,482,0,-1,484,0,-1,485,0,0,485,0,-1,487,0,-1,488,0,-1,489,0,-1,490,0,0,490,0,-1,492,0,-1,493,0,0,493,0,-1,495,0,-1,496,0,0,496,0,-1,498,0,-1,499,0,-1,500,0,-1,501,0,-1,502,0,-1,503,0,-1,504,0,-1,505,0,-1,506,0,-1,507,0,0,507,0,-1,509,0,-1,510,0,-1,511,0,-1,512,0,-1,513,0,-1,514,0,-1,515,0,-1,516,0,-1,517,0,0,517,0,-1,519,0,-1,520,0,-1,521,0,-1,522,0,-1,523,0,-1,524,0,-1,525,0,-1,526,0,-1,527,0,0,527,0,1,528,0,-1,531,0,-1,533,0,-1,535,0,-1,536,0,-1,537,0,-1,538,0,-1,539,0,-1,540,0,-1,541,0,0,541,0,-1,543,0,-1,544,0,-1,545,0,-1,546,0,-1,547,0,-1,548,0,-1,549,0,0,549,0,-1,551,0,-1,552,0,-1,553,0,-1,555,0,-1,556,0,0,556,0,-1,558,0,-1,559,0,0,559,0,-1,561,0,-1,562,0,0,562,0,-1,564,0,-1,565,0,-1,566,0,-1,567,0,0,567,0,-1,569,0,-1,570,0,0,570,0,-1,572,0,-1,573,0,0,573,0,-1,575,0,-1,576,0,-1,577,0,-1,578,0,-1,579,0,-1,580,0,-1,581,0,-1,582,0,-1,583,0,-1,584,0,0,584,0,-1,586,0,-1,587,0,-1,588,0,-1,589,0,-1,590,0,-1,591,0,-1,592,0,-1,593,0,-1,594,0,0,594,0,-1,596,0,-1,597,0,-1,598,0,-1,599,0,-1,600,0,-1,601,0,-1,602,0,-1,603,0,-1,604,0,0,604,0,1,605,0,-1,608,0,-1,610,0,-1,612,0,-1,613,0,-1,614,0,-1,615,0,-1,616,0,-1,617,0,-1,618,0,0,618,0,-1,620,0,-1,621,0,-1,622,0,-1,623,0,-1,624,0,-1,625,0,-1,626,0,0,626,0,-1,628,0,-1,629,0,-1,630,0,-1,632,0,-1,633,0,0,633,0,-1,635,0,-1,636,0,0,636,0,-1,638,0,-1,639,0,0,639,0,-1,641,0,-1,642,0,-1,643,0,-1,644,0,0,644,0,-1,646,0,-1,647,0,0,647,0,-1,649,0,-1,650,0,0,650,0,-1,652,0,-1,653,0,-1,654,0,-1,655,0,-1,656,0,-1,657,0,-1,658,0,-1,659,0,-1,660,0,-1,661,0,0,661,0,-1,663,0,-1,664,0,-1,665,0,-1,666,0,-1,667,0,-1,668,0,-1,669,0,-1,670,0,-1,671,0,0,671,0,-1,673,0,-1,674,0,-1,675,0,-1,676,0,-1,677,0,-1,678,0,-1,679,0,-1,680,0,-1,681,0,0,681,0,1,682,0,-1,685,0,-1,687,0,-1,689,0,-1,690,0,-1,691,0,-1,692,0,-1,693,0,-1,694,0,-1,695,0,0,695,0,-1,697,0,-1,698,0,-1,699,0,-1,700,0,-1,701,0,-1,702,0,-1,703,0,0,703,0,-1,705,0,-1,706,0,-1,707,0,-1,709,0,-1,710,0,0,710,0,-1,712,0,-1,713,0,0,713,0,-1,715,0,-1,716,0,0,716,0,-1,718,0,-1,719,0,-1,720,0,-1,721,0,0,721,0,-1,723,0,-1,724,0,0,724,0,-1,726,0,-1,727,0,0,727,0,-1,729,0,-1,730,0,-1,731,0,-1,732,0,-1,733,0,-1,734,0,-1,735,0,-1,736,0,-1,737,0,-1,738,0,0,738,0,-1,740,0,-1,741,0,-1,742,0,-1,743,0,-1,744,0,-1,745,0,-1,746,0,-1,747,0,-1,748,0,0,748,0,-1,750,0,-1,751,0,-1,752,0,-1,753,0,-1,754,0,-1,755,0,-1,756,0,-1,757,0,-1,758,0,0,758,0,1,759,0,-1,762,0,-1,764,0,-1,766,0,-1,767,0,-1,768,0,-1,769,0,-1,770,0,-1,771,0,-1,772,0,0,772,0,-1,774,0,-1,775,0,-1,776,0,-1,777,0,-1,778,0,-1,779,0,-1,780,0,0,780,0,-1,782,0,-1,783,0,-1,784,0,-1,786,0,-1,787,0,0,787,0,-1,789,0,-1,790,0,0,790,0,-1,792,0,-1,793,0,0,793,0,-1,795,0,-1,796,0,-1,797,0,-1,798,0,0,798,0,-1,800,0,-1,801,0,0,801,0,-1,803,0,-1,804,0,0,804,0,-1,806,0,-1,807,0,-1,808,0,-1,809,0,-1,810,0,-1,811,0,-1,812,0,-1,813,0,-1,814,0,-1,815,0,0,815,0,-1,817,0,-1,818,0,-1,819,0,-1,820,0,-1,821,0,-1,822,0,-1,823,0,-1,824,0,-1,825,0,0,825,0,-1,827,0,-1,828,0,-1,829,0,-1,830,0,-1,831,0,-1,832,0,-1,833,0,-1,834,0,-1,835,0,0,835,0,1,836,0,-1,839,0,-1,841,0,-1,843,0,-1,844,0,-1,845,0,-1,846,0,-1,847,0,-1,848,0,-1,849,0,0,849,0,-1,851,0,-1,852,0,-1,853,0,-1,854,0,-1,855,0,-1,856,0,-1,857,0,0,857,0,-1,859,0,-1,860,0,-1,861,0,-1,863,0,-1,864,0,0,864,0,-1,866,0,-1,867,0,0,867,0,-1,869,0,-1,870,0,0,870,0,-1,872,0,-1,873,0,-1,874,0,-1,875,0,0,875,0,-1,877,0,-1,878,0,0,878,0,-1,880,0,-1,881,0,0,881,0,-1,883,0,-1,884,0,-1,885,0,-1,886,0,-1,887,0,-1,888,0,-1,889,0,-1,890,0,-1,891,0,-1,892,0,0,892,0,-1,894,0,-1,895,0,-1,896,0,-1,897,0,-1,898,0,-1,899,0,-1,900,0,-1,901,0,-1,902,0,0,902,0,-1,904,0,-1,905,0,-1,906,0,-1,907,0,-1,908,0,-1,909,0,-1,910,0,-1,911,0,-1,912,0,0,912,0,1,913,0,-1,916,0,-1,918,0,-1,920,0,-1,921,0,-1,922,0,-1,923,0,-1,924,0,-1,925,0,-1,926,0,0,926,0,-1,928,0,-1,929,0,-1,930,0,-1,931,0,-1,932,0,-1,933,0,-1,934,0,0,934,0,-1,936,0,-1,937,0,-1,938,0,-1,940,0,-1,941,0,0,941,0,-1,943,0,-1,944,0,0,944,0,-1,946,0,-1,947,0,0,947,0,-1,949,0,-1,950,0,-1,951,0,-1,952,0,0,952,0,-1,954,0,-1,955,0,0,955,0,-1,957,0,-1,958,0,0,958,0,-1,960,0,-1,961,0,-1,962,0,-1,963,0,-1,964,0,-1,965,0,-1,966,0,-1,967,0,-1,968,0,-1,969,0,0,969,0,-1,971,0,-1,972,0,-1,973,0,-1,974,0,-1,975,0,-1,976,0,-1,977,0,-1,978,0,-1,979,0,0,979,0,-1,981,0,-1,982,0,-1,983,0,-1,984,0,-1,985,0,-1,986,0,-1,987,0,-1,988,0,-1,989,0,0,989,0,1,990,0,-1,993,0,-1,995,0,-1,997,0,-1,998,0,-1,999,0,-1,1000,0,-1,1001,0,-1,1002,0,-1,1003,0,0,1003,0,-1,1005,0,-1,1006,0,-1,1007,0,-1,1008,0,-1,1009,0,-1,1010,0,-1,1011,0,0,1011,0,-1,1013,0,-1,1014,0,-1,1015,0,-1,1017,0,-1,1018,0,0,1018,0,-1,1020,0,-1,1021,0,0,1021,0,-1,1023,0,-1,1024,0,0,1024,0,-1,1026,0,-1,1027,0,-1,1028,0,-1,1029,0,0,1029,0,-1,1031,0,-1,1032,0,0,1032,0,-1,1034,0,-1,1035,0,0,1035,0,-1,1037,0,-1,1038,0,-1,1039,0,-1,1040,0,-1,1041,0,-1,1042,0,-1,1043,0,-1,1044,0,-1,1045,0,-1,1046,0,0,1046,0,-1,1048,0,-1,1049,0,-1,1050,0,-1,1051,0,-1,1052,0,-1,1053,0,-1,1054,0,-1,1055,0,-1,1056,0,0,1056,0,-1,1058,0,-1,1059,0,-1,1060,0,-1,1061,0,-1,1062,0,-1,1063,0,-1,1064,0,-1,1065,0,-1,1066,0,0,1066,0,1,1067,0,-1,1070,0,-1,1072,0,-1,1074,0,-1,1075,0,-1,1076,0,-1,1077,0,-1,1078,0,-1,1079,0,-1,1080,0,0,1080,0,-1,1082,0,-1,1083,0,-1,1084,0,-1,1085,0,-1,1086,0,-1,1087,0,-1,1088,0,0,1088,0,-1,1090,0,-1,1091,0,-1,1092,0,-1,1094,0,-1,1095,0,0,1095,0,-1,1097,0,-1,1098,0,0,1098,0,-1,1100,0,-1,1101,0,0,1101,0,-1,1103,0,-1,1104,0,-1,1105,0,-1,1106,0,0,1106,0,-1,1108,0,-1,1109,0,0,1109,0,-1,1111,0,-1,1112,0,0,1112,0,-1,1114,0,-1,1115,0,-1,1116,0,-1,1117,0,-1,1118,0,-1,1119,0,-1,1120,0,-1,1121,0,-1,1122,0,-1,1123,0,0,1123,0,-1,1125,0,-1,1126,0,-1,1127,0,-1,1128,0,-1,1129,0,-1,1130,0,-1,1131,0,-1,1132,0,-1,1133,0,0,1133,0,-1,1135,0,-1,1136,0,-1,1137,0,-1,1138,0,-1,1139,0,-1,1140,0,-1,1141,0,-1,1142,0,-1,1143,0,0,1143,0,1,1144,0,-1,1147,0,-1,1149,0,-1,1151,0,-1,1152,0,-1,1153,0,-1,1154,0,-1,1155,0,-1,1156,0,-1,1157,0,0,1157,0,-1,1159,0,-1,1160,0,-1,1161,0,-1,1162,0,-1,1163,0,-1,1164,0,-1,1165,0,0,1165,0,-1,1167,0,-1,1168,0,-1,1169,0,-1,1171,0,-1,1172,0,0,1172,0,-1,1174,0,-1,1175,0,0,1175,0,-1,1177,0,-1,1178,0,0,1178,0,-1,1180,0,-1,1181,0,-1,1182,0,-1,1183,0,0,1183,0,-1,1185,0,-1,1186,0,0,1186,0,-1,1188,0,-1,1189,0,0,1189,0,-1,1191,0,-1,1192,0,-1,1193,0,-1,1194,0,-1,1195,0,-1,1196,0,-1,1197,0,-1,1198,0,-1,1199,0,-1,1200,0,0,1200,0,-1,1202,0,-1,1203,0,-1,1204,0,-1,1205,0,-1,1206,0,-1,1207,0,-1,1208,0,-1,1209,0,-1,1210,0,0,1210,0,-1,1212,0,-1,1213,0,-1,1214,0,-1,1215,0,-1,1216,0,-1,1217,0,-1,1218,0,-1,1219,0,-1,1220,0,0,1220,0,1,1221,0,-1,1224,0,-1,1226,0,-1,1228,0,-1,1229,0,-1,1230,0,-1,1231,0,-1,1232,0,-1,1233,0,-1,1234,0,0,1234,0,-1,1236,0,-1,1237,0,-1,1238,0,-1,1239,0,-1,1240,0,-1,1241,0,-1,1242,0,0,1242,0,-1,1244,0,-1,1245,0,-1,1246,0,-1,1248,0,-1,1249,0,0,1249,0,-1,1251,0,-1,1252,0,0,1252,0,-1,1254,0,-1,1255,0,0,1255,0,-1,1257,0,-1,1258,0,-1,1259,0,-1,1260,0,0,1260,0,-1,1262,0,-1,1263,0,0,1263,0,-1,1265,0,-1,1266,0,0,1266,0,-1,1268,0,-1,1269,0,-1,1270,0,-1,1271,0,-1,1272,0,-1,1273,0,-1,1274,0,-1,1275,0,-1,1276,0,-1,1277,0,0,1277,0,-1,1279,0,-1,1280,0,-1,1281,0,-1,1282,0,-1,1283,0,-1,1284,0,-1,1285,0,-1,1286,0,-1,1287,0,0,1287,0,-1,1289,0,-1,1290,0,-1,1291,0,-1,1292,0,-1,1293,0,-1,1294,0,-1,1295,0,-1,1296,0,-1,1297,0,0,1297,0,1,1298,0,-1,1301,0,-1,1303,0,-1,1305,0,-1,1306,0,-1,1307,0,-1,1308,0,-1,1309,0,-1,1310,0,-1,1311,0,0,1311,0,-1,1313,0,-1,1314,0,-1,1315,0,-1,1316,0,-1,1317,0,-1,1318,0,-1,1319,0,0,1319,0,-1,1321,0,-1,1322,0,-1,1323,0,-1,1325,0,-1,1326,0,0,1326,0,-1,1328,0,-1,1329,0,0,1329,0,-1,1331,0,-1,1332,0,0,1332,0,-1,1334,0,-1,1335,0,-1,1336,0,-1,1337,0,0,1337,0,-1,1339,0,-1,1340,0,0,1340,0,-1,1342,0,-1,1343,0,0,1343,0,-1,1345,0,-1,1346,0,-1,1347,0,-1,1348,0,-1,1349,0,-1,1350,0,-1,1351,0,-1,1352,0,-1,1353,0,-1,1354,0,0,1354,0,-1,1356,0,-1,1357,0,-1,1358,0,-1,1359,0,-1,1360,0,-1,1361,0,-1,1362,0,-1,1363,0,-1,1364,0,0,1364,0,-1,1366,0,-1,1367,0,-1,1368,0,-1,1369,0,-1,1370,0,-1,1371,0,-1,1372,0,-1,1373,0,-1,1374,0,0,1374,0,1,1375,0,-1,1378,0,-1,1380,0,-1,1382,0,-1,1383,0,-1,1384,0,-1,1385,0,-1,1386,0,-1,1387,0,-1,1388,0,0,1388,0,-1,1390,0,-1,1391,0,-1,1392,0,-1,1393,0,-1,1394,0,-1,1395,0,-1,1396,0,0,1396,0,-1,1398,0,-1,1399,0,-1,1400,0,-1,1402,0,-1,1403,0,0,1403,0,-1,1405,0,-1,1406,0,0,1406,0,-1,1408,0,-1,1409,0,0,1409,0,-1,1411,0,-1,1412,0,-1,1413,0,-1,1414,0,0,1414,0,-1,1416,0,-1,1417,0,0,1417,0,-1,1419,0,-1,1420,0,0,1420,0,-1,1422,0,-1,1423,0,-1,1424,0,-1,1425,0,-1,1426,0,-1,1427,0,-1,1428,0,-1,1429,0,-1,1430,0,-1,1431,0,0,1431,0,-1,1433,0,-1,1434,0,-1,1435,0,-1,1436,0,-1,1437,0,-1,1438,0,-1,1439,0,-1,1440,0,-1,1441,0,0,1441,0,-1,1443,0,-1,1444,0,-1,1445,0,-1,1446,0,-1,1447,0,-1,1448,0,-1,1449,0,-1,1450,0,-1,1451,0,0,1451,0,1,1452,0,1,1453,0,-1,1456,0,-1,1458,0,-1,1460,0,-1,1461,0,-1,1462,0,-1,1463,0,-1,1464,0,-1,1465,0,-1,1466,0,0,1466,0,-1,1468,0,-1,1469,0,-1,1470,0,-1,1471,0,-1,1472,0,-1,1473,0,-1,1474,0,0,1474,0,-1,1476,0,-1,1477,0,-1,1478,0,-1,1480,0,-1,1481,0,0,1481,0,-1,1483,0,-1,1484,0,0,1484,0,-1,1486,0,-1,1487,0,0,1487,0,-1,1489,0,-1,1490,0,-1,1491,0,-1,1492,0,0,1492,0,-1,1494,0,-1,1495,0,0,1495,0,-1,1497,0,-1,1498,0,0,1498,0,-1,1500,0,-1,1501,0,-1,1502,0,-1,1503,0,-1,1504,0,-1,1505,0,-1,1506,0,-1,1507,0,-1,1508,0,-1,1509,0,0,1509,0,-1,1511,0,-1,1512,0,-1,1513,0,-1,1514,0,-1,1515,0,-1,1516,0,-1,1517,0,-1,1518,0,-1,1519,0,0,1519,0,-1,1521,0,-1,1522,0,-1,1523,0,-1,1524,0,-1,1525,0,-1,1526,0,-1,1527,0,-1,1528,0,-1,1529,0,0,1529,0,1,1530,0,1,1531,0,-1,1534,0,-1,1535,0,-1,1537,0,-1,1538,0,0,1539,0,-1,1541,0,-1,1542,0,-1,1543,0,0,1543,0,0,1544,0,0,1545,0,-1,1547,0,0,1547,0,-1,1549,0,-1,1550,0,-1,1551,0,0,1551,0,-1,1553,0,-1,1554,0,-1,1555,0,0,1555,0,-1,1558,0,-1,1559,0,-1,1560,0,-1,1561,0,-1,1562,0,-1,1563,0,0,1563,0,-1,1565,0,-1,1566,0,-1,1568,0,0,1568,0,-1,1570,0,0,1570,0,-1,1572,0,0,1572,0,-1,1574,0,-1,1575,0,-1,1577,0,0,1577,0,-1,1579,0,0,1579,0,-1,1581,0,0,1581,0,1,1582,0,-1,1585,0,-1,1586,0,-1,1587,0,-1,1588,0,-1,1590,0,-1,1592,0,-1,1593,0,0,1593,0,-1,1595,0,-1,1596,0,0,1596,0,-1,1598,0,-1,1599,0,0,1599,0,-1,1601,0,-1,1603,0,-1,1604,0,0,1604,0,-1,1606,0,-1,1607,0,0,1607,0,-1,1609,0,-1,1610,0,0,1610,0,-1,1612,0,-1,1613,0,-1,1614,0,0,1615,0,0,1616,0,0,1617,0,0,1618,0,0,1619,0,-1,1621,0,-1,1622,0,0,1622,0,0,1623,0,-1,1625,0,-1,1626,0,-1,1628,0,-1,1629,0,0,1629,0,-1,1631,0,-1,1632,0,0,1632,0,-1,1634,0,0,1634,0,-1,1636,0,-1,1637,0,-1,1638,0,-1,1639,0,-1,1640,0,-1,1641,0,-1,1642,0,-1,1643,0,-1,1644,0,-1,1645,0,-1,1646,0,0,1646,0,-1,1648,0,-1,1649,0,-1,1651,0,-1,1652,0,0,1652,0,-1,1654,0,-1,1655,0,0,1655,0,-1,1657,0,0,1657,0,1,1658,0,-1,1660,0,10,1660,0,1,1661,0,1,1662,0,17,1664,0,1,1663,0,18,24,1,0,4,2,0,276,3,0,36,4,0,34,5,0,143,6,0,65,7,0,69,8,0,73,9,0,77,10,0,81,11,0,85,12,0,89,13,0,93,14,0,97,15,0,101,16,0,105,17,0,109,18,0,113,19,0,117,20,0,245,21,0,24,22,0,121,23,0,240,27,19,275,27,20,271,27,21,267,27,22,273,27,23,269,27,24,265,27,25,263,30,0,145,31,0,143,32,0,247,33,0,34,37,26,54,37,27,121,37,28,255,37,29,151,37,30,38,37,31,39,37,32,257,37,1,256,58,0,142,59,0,142,60,0,302,61,0,304,62,0,315,63,0,144,66,0,377,67,0,379,68,0,153,70,0,454,71,0,456,72,0,159,74,0,531,75,0,533,76,0,165,78,0,608,79,0,610,80,0,171,82,0,685,83,0,687,84,0,177,86,0,762,87,0,764,88,0,183,90,0,839,91,0,841,92,0,189,94,0,916,95,0,918,96,0,195,98,0,993,99,0,995,100,0,200,102,0,1070,103,0,1072,104,0,206,106,0,1147,107,0,1149,108,0,212,110,0,1224,111,0,1226,112,0,218,114,0,1301,115,0,1303,116,0,224,118,0,1378,119,0,1380,120,0,230,122,0,1456,123,0,1458,124,0,236,125,0,1535,126,0,1538,127,0,1556,128,0,1566,129,0,1575,130,0,1588,131,0,1590,132,0,1601,133,0,246,140,1,261,144,0,297,145,0,328,147,0,340,149,0,363,153,0,375,154,0,399,159,0,452,160,0,476,165,0,529,166,0,553,171,0,606,172,0,630,177,0,683,178,0,707,183,0,760,184,0,784,189,0,837,190,0,861,195,0,914,196,0,938,200,0,991,201,0,1015,206,0,1068,207,0,1092,212,0,1145,213,0,1169,218,0,1222,219,0,1246,224,0,1299,225,0,1323,230,0,1376,231,0,1400,236,0,1454,237,0,1478,241,0,1532,246,0,1583,247,0,1614,249,0,1626,251,0,1649,1664,1,1665,2047],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,263,265,267,269,271,273,275],[3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,-1,8,3,-1,8,3,-1,8,3,-1,8,3,3,3,3,-1,8,3,-1,8,33,-1,8,-1,-2,2,-1,2,-1,2,-1,2,-1,2,-1,2,-1,2,-1,2,-1,2,-1,-2,2,-1,-2,2,-1,-2,2,-1,-2,2,-1,-2,2,-1,2,-1,-2,2,-1,-2,2,-1,-2,2,-1,-1,2,-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,2,5,-1,2,-1,-2,-3,-4,-5,-1,11,-1,2,11,-1,2,-1,-2,-3,-4,-5,-6,2,5,-1,2,-1,-2,-3,-4,-5,-1,2,-1,-2,-3,-4,-5,-6,2,5,-1,2,-1,-2,-3,-4,-5,-1,2,-1,-2,-3,-4,-5,-6,2,5,-1,2,-1,-2,-3,-4,-5,-1,2,-1,-2,-3,-4,-5,-6,2,5,-1,2,-1,-2,-3,-4,-5,-1,2,-1,-2,-3,-4,-5,-6,2,5,-1,2,-1,-2,-3,-4,-5,-1,2,-1,-2,-3,-4,-5,-6,2,5,-1,2,-1,-2,-3,-4,-5,-1,2,-1,-2,-3,-4,-5,-6,2,5,-1,2,-1,-2,-3,-4,-5,-1,2,-1,-2,-3,-4,-5,-6,2,5,-1,2,-1,-2,-3,-4,-5,-1,-2,-3,-4,-5,-6,2,5,-1,2,-1,-2,-3,-4,-5,-1,2,-1,-2,-3,-4,-5,-6,2,5,-1,2,-1,-2,-3,-4,-5,-1,2,-1,-2,-3,-4,-5,-6,2,5,-1,2,-1,-2,-3,-4,-5,-1,2,-1,-2,-3,-4,-5,-6,2,5,-1,2,-1,-2,-3,-4,-5,-1,2,-1,-2,-3,-4,-5,-6,2,5,-1,2,-1,-2,-3,-4,-5,-1,2,-1,-2,-3,-4,-5,-6,2,5,-1,2,-1,-2,-3,-4,-5,-1,2,-1,2,-1,-2,-3,-4,-5,-6,2,5,-1,2,-1,-2,-3,-4,-5,-1,-2,-3,-4,-5,-6,2,5,-1,-2,-3,-4,-5,-6,8,-1,2,-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,2,5,-1,2,-1,-2,-3,-4,-5,-1,11,-1,2,11,-1,8,34,35,9,9,9,9,9,9,9],[5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,62,23,24,24,63,25,25,64,26,26,65,27,27,66,67,68,23,28,28,29,30,30,29,31,31,20,69,70,20,71,20,72,15,73,32,74,32,75,15,76,15,77,15,78,16,15,79,16,15,80,16,15,81,16,15,82,16,15,83,16,84,16,21,85,16,21,86,21,87,88,89,90,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,4,33,34,91,1,35,36,37,38,39,40,19,41,42,18,6,1,0,0,0,0,0,4,7,8,9,1,10,11,12,13,14,6,1,0,0,0,0,0,4,7,8,9,1,10,11,12,13,14,6,1,0,0,0,0,0,4,7,8,9,1,10,11,12,13,14,6,1,0,0,0,0,0,4,7,8,9,1,10,11,12,13,14,6,1,0,0,0,0,0,4,7,8,9,1,10,11,12,13,14,6,1,0,0,0,0,0,4,7,8,9,1,10,11,12,13,14,6,1,0,0,0,0,0,4,7,8,9,1,10,11,12,13,14,6,1,0,0,0,0,0,4,7,8,9,1,10,11,12,13,14,0,0,0,0,0,4,7,8,9,1,10,11,12,13,14,6,1,0,0,0,0,0,4,7,8,9,1,10,11,12,13,14,6,1,0,0,0,0,0,4,7,8,9,1,10,11,12,13,14,6,1,0,0,0,0,0,4,7,8,9,1,10,11,12,13,14,6,1,0,0,0,0,0,4,7,8,9,1,10,11,12,13,14,6,1,0,0,0,0,0,4,7,8,9,1,10,11,12,13,14,6,1,6,1,0,0,0,0,0,4,7,8,9,1,10,11,12,13,14,17,17,17,17,17,4,92,93,43,94,95,96,97,98,43,99,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,4,33,34,100,1,35,36,37,38,39,40,19,41,42,18,44,44,101,102,103,104,105,106,107,108,109]],[[[32,"DinoAttack2",".mp3",1.404],-1],0,0,[],[],[]],[[{"name":"chest_2","rect":{"x":6,"y":5,"width":382,"height":356},"offset":{"x":0,"y":0},"originalSize":{"width":394,"height":366},"rotated":false,"capInsets":[0,0,0,0],"packable":true}],[2],0,[0],[7],[110]],[[{"name":"light","rect":{"x":0,"y":0,"width":720,"height":722},"offset":{"x":0,"y":0},"originalSize":{"width":720,"height":722},"rotated":false,"capInsets":[0,0,0,0],"packable":true}],[2],0,[0],[7],[111]]]]
