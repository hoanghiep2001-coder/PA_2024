{"version":3,"sources":["file:///D:/PA_2024/3D/MergeDino/MergeDino_Op10/assets/Script/Controller/CharacterControl.ts"],"names":["_decorator","BoxCollider","Component","ERigidBodyType","math","Node","RigidBody","SkeletalAnimation","Vec3","Constants","AudioManager","ccclass","property","CharacterControl","onLoad","level","active","node","start","getComponent","play","setScale","rigidbody","collider","on","e","otherCollider","name","isCollide","playSound","SoundTrack","Dino_AttkSound","loop","isFight","isFight_2","isCharacterCollideBoos","isCharacter_2CollideBoos","scheduleOnce","isFailStep1","isFailStep2","die","isDoneStep1","isDoneStep2","stopSound","Run","type","DYNAMIC","setLinearVelocity","isRun","runStep2","update","dt","isFightStep1","isFightStep2"],"mappings":"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","sourcesContent":["\r\nimport { _decorator, BoxCollider, Component, ERigidBodyType, ICollisionEvent, math, Node, RigidBody, SkeletalAnimation, Vec3 } from 'cc';\r\nimport { Constants } from '../Data/Constant';\r\nimport { AudioManager } from '../Plugin/AudioManager';\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass('CharacterControl')\r\nexport class CharacterControl extends Component {\r\n\r\n    @property(AudioManager)\r\n    AudioManager: AudioManager = null;\r\n    @property(Node)\r\n    level: Node = null;\r\n\r\n\r\n    isRun: boolean = false;\r\n    isFight: boolean = false;\r\n    isFight_2: boolean = false;\r\n    rigidbody: RigidBody;\r\n    collider: BoxCollider;\r\n    isCollide: boolean = false;\r\n\r\n\r\n    protected onLoad(): void {\r\n        this.level.active = false;\r\n        this.node.active = false;\r\n    }\r\n\r\n\r\n    protected start(): void {\r\n        this.getComponent(SkeletalAnimation).play(\"Idle_2\");\r\n        this.node.setScale(new Vec3(0, 0, 0));\r\n\r\n        this.rigidbody = this.node.getComponent(RigidBody);\r\n        this.collider = this.node.getComponent(BoxCollider)\r\n\r\n        this.collider.on(\"onCollisionEnter\", (e: ICollisionEvent) => {\r\n            if (e.otherCollider.node.name === \"Rex\") {\r\n                if (this.isCollide) {\r\n                    return;\r\n                }\r\n\r\n                this.isCollide = true;\r\n                this.AudioManager.playSound(Constants.SoundTrack.Dino_AttkSound);\r\n                this.AudioManager.Dino_AttkSound.loop = true;\r\n                this.getComponent(SkeletalAnimation).play(\"Atk_1\");\r\n                this.node.name === \"Rap\" ? this.isFight = true : this.isFight_2 = true;\r\n                this.node.name === \"Rap\" ? Constants.isCharacterCollideBoos = true : Constants.isCharacter_2CollideBoos = true;\r\n                this.scheduleOnce(() => {\r\n                    this.node.name === \"Rap\" ? Constants.isFailStep1 = true : Constants.isFailStep2 = true;\r\n                    this.die();\r\n                }, 2)\r\n            }\r\n        });\r\n    }\r\n\r\n\r\n    private die(): void {\r\n        this.getComponent(SkeletalAnimation).play(\"Die\");\r\n        this.node.name === \"Rap\" ? Constants.isDoneStep1 = true : Constants.isDoneStep2 = true;\r\n        this.AudioManager.stopSound(Constants.SoundTrack.Dino_AttkSound);\r\n    }\r\n\r\n\r\n    private Run(): void {\r\n        this.rigidbody.type = ERigidBodyType.DYNAMIC;\r\n        this.rigidbody.setLinearVelocity(new math.Vec3(2, 0, -8))\r\n        if (!this.isRun) {\r\n            this.isRun = true;\r\n            this.getComponent(SkeletalAnimation).play(\"Run\");\r\n        }\r\n\r\n    }\r\n\r\n\r\n    private runStep2(): void {\r\n        this.rigidbody.type = ERigidBodyType.DYNAMIC;\r\n        this.rigidbody.setLinearVelocity(new math.Vec3(-3, 0, -8))\r\n        if (!this.isRun) {\r\n            this.isRun = true;\r\n            this.getComponent(SkeletalAnimation).play(\"Run\");\r\n        }\r\n    }\r\n\r\n\r\n    protected update(dt: number): void {\r\n        if (Constants.isFightStep1 && !this.isFight && this.node.name === \"Rap\") {\r\n            this.Run();\r\n        }\r\n\r\n        if (Constants.isFightStep2 && !this.isFight_2) {\r\n            this.runStep2();\r\n        }\r\n    }\r\n}\r\n\r\n"]}