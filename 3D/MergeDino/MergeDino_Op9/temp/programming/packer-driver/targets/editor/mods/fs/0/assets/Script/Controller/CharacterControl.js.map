{"version":3,"sources":["file:///D:/PA_2024/3D/MergeDino/MergeDino_Op9/assets/Script/Controller/CharacterControl.ts"],"names":["_decorator","BoxCollider","Component","ERigidBodyType","math","Node","RigidBody","SkeletalAnimation","ccclass","property","CharacterControl","onLoad","level","active","node","start","getComponent","play","rigidbody","collider","on","e","otherCollider","name","isRun","isFight","Run","type","DYNAMIC","setLinearVelocity","Vec3","update","dt"],"mappings":";;;;;;;;;;;;;;;;AACSA,MAAAA,U,OAAAA,U;AAAYC,MAAAA,W,OAAAA,W;AAAaC,MAAAA,S,OAAAA,S;AAAWC,MAAAA,c,OAAAA,c;AAAiCC,MAAAA,I,OAAAA,I;AAAMC,MAAAA,I,OAAAA,I;AAAMC,MAAAA,S,OAAAA,S;AAAWC,MAAAA,iB,OAAAA,iB;;;;;;;OAC/F;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBT,U;;kCAGjBU,gB,WADZF,OAAO,CAAC,kBAAD,C,UAGHC,QAAQ,CAACJ,IAAD,C,oCAHb,MACaK,gBADb,SACsCR,SADtC,CACgD;AAAA;AAAA;;AAAA;;AAAA,yCAM3B,KAN2B;;AAAA,2CAOzB,KAPyB;;AAAA;;AAAA;AAAA;;AAYlCS,QAAAA,MAAM,GAAS;AACrB,eAAKC,KAAL,CAAWC,MAAX,GAAoB,KAApB;AACA,eAAKC,IAAL,CAAUD,MAAV,GAAmB,KAAnB;AACH;;AAGSE,QAAAA,KAAK,GAAS;AACpB,eAAKC,YAAL,CAAkBT,iBAAlB,EAAqCU,IAArC,CAA0C,QAA1C;AAEA,eAAKC,SAAL,GAAiB,KAAKJ,IAAL,CAAUE,YAAV,CAAuBV,SAAvB,CAAjB;AACA,eAAKa,QAAL,GAAgB,KAAKL,IAAL,CAAUE,YAAV,CAAuBf,WAAvB,CAAhB;AAEA,eAAKkB,QAAL,CAAcC,EAAd,CAAiB,kBAAjB,EAAsCC,CAAD,IAAwB;AACzD,gBAAIA,CAAC,CAACC,aAAF,CAAgBR,IAAhB,CAAqBS,IAArB,KAA8B,oBAAlC,EAAwD;AACpD,mBAAKC,KAAL,GAAa,KAAb;AACA,mBAAKC,OAAL,GAAe,IAAf;AACH;AACJ,WALD;AAMH;;AAEOC,QAAAA,GAAG,GAAS;AAChB,eAAKR,SAAL,CAAeS,IAAf,GAAsBxB,cAAc,CAACyB,OAArC;AACA,eAAKV,SAAL,CAAeW,iBAAf,CAAiC,IAAIzB,IAAI,CAAC0B,IAAT,CAAc,CAAd,EAAiB,CAAjB,EAAoB,CAAC,EAArB,CAAjC;AACH;;AAESC,QAAAA,MAAM,CAACC,EAAD,EAAmB;AAC/B,cAAI,KAAKR,KAAT,EAAgB,KAAKE,GAAL;AACnB;;AAvC2C,O;;;;;iBAG9B,I","sourcesContent":["\nimport { _decorator, BoxCollider, Component, ERigidBodyType, ICollisionEvent, math, Node, RigidBody, SkeletalAnimation } from 'cc';\nconst { ccclass, property } = _decorator;\n\n@ccclass('CharacterControl')\nexport class CharacterControl extends Component {\n\n    @property(Node)\n    level: Node = null;\n\n\n    isRun: boolean = false;\n    isFight: boolean = false;\n    rigidbody: RigidBody;\n    collider: BoxCollider;\n\n\n    protected onLoad(): void {\n        this.level.active = false;\n        this.node.active = false;\n    }\n\n\n    protected start(): void {\n        this.getComponent(SkeletalAnimation).play(\"Idle_2\")\n\n        this.rigidbody = this.node.getComponent(RigidBody);\n        this.collider = this.node.getComponent(BoxCollider)\n\n        this.collider.on(\"onCollisionEnter\", (e: ICollisionEvent) => {\n            if (e.otherCollider.node.name === \"Robot_melee02_base\") {\n                this.isRun = false;\n                this.isFight = true;\n            }\n        });\n    }\n\n    private Run(): void {\n        this.rigidbody.type = ERigidBodyType.DYNAMIC;\n        this.rigidbody.setLinearVelocity(new math.Vec3(2, 0, -10))\n    }\n\n    protected update(dt: number): void {\n        if (this.isRun) this.Run()\n    }\n}\n\n"]}