{"version":3,"sources":["file:///D:/PlayableAds/PA_2024/3D/MergeDino/MergeDino_Op9/assets/Script/Controller/GamePlay.ts"],"names":["_decorator","Animation","Component","Vec3","tween","CharacterControl","GameController","AudioManager","Constants","NodesController","Utils","ccclass","property","GamePlay","onLoad","initGame","start","handleGamePlay","registerEvent","handleMergeStep1","isMergeStep1Flag","Camera","getComponent","play","dinoLevels","forEach","level","active","scheduleOnce","FX_Merge","dinosStep1","dino","mergeDinoStep1","MainCharacter_1","to","scale","call","console","log","update","dt","isDoneMergeStep1"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAASA,MAAAA,U,OAAAA,U;AAAYC,MAAAA,S,OAAAA,S;AAA4CC,MAAAA,S,OAAAA,S;AAA+GC,MAAAA,I,OAAAA,I;AAAgDC,MAAAA,K,OAAAA,K;;AACvNC,MAAAA,gB,iBAAAA,gB;;AAEAC,MAAAA,c,iBAAAA,c;;AAEAC,MAAAA,Y,iBAAAA,Y;;AACAC,MAAAA,S,iBAAAA,S;;AACAC,MAAAA,e,iBAAAA,e;;AACAC,MAAAA,K,iBAAAA,K;;;;;;;OACH;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBZ,U;;0BAEjBa,Q,WADZF,OAAO,CAAC,UAAD,C,UAIHC,QAAQ;AAAA;AAAA,6C,UAERA,QAAQ;AAAA;AAAA,2C,UAERA,QAAQ;AAAA;AAAA,uC,oCARb,MACaC,QADb,SAC8BX,SAD9B,CACwC;AAAA;AAAA;;AAAA;;AAAA;;AAAA;;AAAA,oDAiBR,KAjBQ;AAAA;;AAoB1BY,QAAAA,MAAM,GAAS,CAExB;;AAGMC,QAAAA,QAAQ,GAAS,CAEvB;;AAGSC,QAAAA,KAAK,GAAS;AACpB,eAAKC,cAAL;AACA,eAAKC,aAAL;AACH;;AAGOD,QAAAA,cAAc,GAAS,CAE9B;;AAGOC,QAAAA,aAAa,GAAS,CAE7B;;AAGOC,QAAAA,gBAAgB,GAAS;AAC7B,eAAKC,gBAAL,GAAwB,IAAxB;AAEA,eAAKX,eAAL,CAAqBY,MAArB,CAA4BC,YAA5B,CAAyCrB,SAAzC,EAAoDsB,IAApD;AACA,eAAKd,eAAL,CAAqBe,UAArB,CAAgCC,OAAhC,CAAwCC,KAAK,IAAIA,KAAK,CAACC,MAAN,GAAe,KAAhE;AACA,eAAKC,YAAL,CAAkB,MAAM;AACpB,iBAAKnB,eAAL,CAAqBoB,QAArB,CAA8BN,IAA9B;AACH,WAFD,EAEG,CAFH;AAIA,eAAKK,YAAL,CAAkB,MAAM;AACpB,iBAAKnB,eAAL,CAAqBqB,UAArB,CAAgCL,OAAhC,CAAwCM,IAAI,IAAI;AAAA;AAAA,gCAAMlB,QAAN,CAAemB,cAAf,CAA8BD,IAA9B,CAAhD;AACH,WAFD,EAEG,CAFH;AAIA,eAAKH,YAAL,CAAkB,MAAM;AACpB,iBAAKnB,eAAL,CAAqBwB,eAArB,CAAqCN,MAArC,GAA8C,IAA9C;AACA,iBAAKlB,eAAL,CAAqBwB,eAArB,CAAqCX,YAArC;AAAA;AAAA,sDAAoEI,KAApE,CAA0EC,MAA1E,GAAmF,IAAnF;AACAvB,YAAAA,KAAK,CAAC,KAAKK,eAAL,CAAqBwB,eAAtB,CAAL,CACCC,EADD,CACI,GADJ,EACS;AAACC,cAAAA,KAAK,EAAE,IAAIhC,IAAJ,CAAS,KAAT,EAAgB,KAAhB,EAAuB,KAAvB;AAAR,aADT,EAECiC,IAFD,CAEM,MAAM;AACRC,cAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AAEH,aALD,EAMCtB,KAND;AAOH,WAVD,EAUG,GAVH;AAaA,eAAKY,YAAL,CAAkB,MAAM;AACpB,iBAAKnB,eAAL,CAAqBe,UAArB,CAAgCC,OAAhC,CAAwCC,KAAK,IAAIA,KAAK,CAACC,MAAN,GAAe,IAAhE;AACH,WAFD,EAEG,CAFH;AAGH;;AAGSY,QAAAA,MAAM,CAACC,EAAD,EAAmB;AAC/B;AAAA;AAAA,sCAAUC,gBAAV,IAA8B,CAAC,KAAKrB,gBAApC,IAAwD,KAAKD,gBAAL,EAAxD;AACH;;AAhFmC,O;;;;;iBAID,I;;;;;;;iBAEF,I;;;;;;;iBAEJ,I","sourcesContent":["import { _decorator, Animation, AudioSource, Camera, view, Vec2, Component, EventTouch, Graphics, log, math, Node, PhysicsSystem, quat, RigidBody, SkeletalAnimation, Skeleton, Vec3, UITransform, ParticleSystem, PrivateNode, tween } from 'cc';\r\nimport { CharacterControl } from './CharacterControl';\r\nimport { RangerControl } from './RangerControl';\r\nimport { GameController } from './GameController';\r\nimport { TouchAreaController } from './TouchAreaController';\r\nimport { AudioManager } from '../Plugin/AudioManager';\r\nimport { Constants } from '../Data/Constant';\r\nimport { NodesController } from './NodesController';\r\nimport { Utils } from '../Plugin/Utils';\r\nconst { ccclass, property } = _decorator;\r\n@ccclass('GamePlay')\r\nexport class GamePlay extends Component {\r\n\r\n    // Script\r\n    @property(NodesController)\r\n    NodesController: NodesController = null;\r\n    @property(GameController)\r\n    GameController: GameController = null;\r\n    @property(AudioManager)\r\n    AudioManager: AudioManager = null;\r\n\r\n    // Component\r\n\r\n    \r\n    // 3D\r\n\r\n\r\n    // state\r\n    isMergeStep1Flag: boolean = false;\r\n\r\n\r\n    protected onLoad(): void {\r\n       \r\n    }\r\n\r\n\r\n    public initGame(): void {\r\n    \r\n    }\r\n\r\n\r\n    protected start(): void {\r\n        this.handleGamePlay();\r\n        this.registerEvent();\r\n    }\r\n\r\n\r\n    private handleGamePlay(): void {\r\n\r\n    }\r\n\r\n\r\n    private registerEvent(): void {\r\n   \r\n    }\r\n\r\n\r\n    private handleMergeStep1(): void {\r\n        this.isMergeStep1Flag = true;\r\n\r\n        this.NodesController.Camera.getComponent(Animation).play();\r\n        this.NodesController.dinoLevels.forEach(level => level.active = false);\r\n        this.scheduleOnce(() => {\r\n            this.NodesController.FX_Merge.play();\r\n        }, 1);\r\n\r\n        this.scheduleOnce(() => {\r\n            this.NodesController.dinosStep1.forEach(dino => Utils.GamePlay.mergeDinoStep1(dino));\r\n        }, 2);\r\n\r\n        this.scheduleOnce(() => {\r\n            this.NodesController.MainCharacter_1.active = true;\r\n            this.NodesController.MainCharacter_1.getComponent(CharacterControl).level.active = true;\r\n            tween(this.NodesController.MainCharacter_1)\r\n            .to(0.5, {scale: new Vec3(0.004, 0.004, 0.004)})\r\n            .call(() => {\r\n                console.log(\"check\");\r\n                \r\n            })\r\n            .start();\r\n        }, 2.5);\r\n\r\n\r\n        this.scheduleOnce(() => {\r\n            this.NodesController.dinoLevels.forEach(level => level.active = true);\r\n        }, 4)\r\n    }\r\n\r\n\r\n    protected update(dt: number): void {\r\n        Constants.isDoneMergeStep1 && !this.isMergeStep1Flag && this.handleMergeStep1();\r\n    }\r\n}\r\n"]}