{"version":3,"sources":["file:///D:/playable-ads-hiepdh/FishIO/FishIO_Op6/assets/scripts/JavaScript/PlayerController.js"],"names":["Constants","require","cc","Class","extends","Component","properties","speed","score","isLive","isMove","isLevelUp","isLevel3","isReplay","forceReplay","trackEnTry","sp","spine","eater","Node","dieBg","JoyStick","powerController","touchArea","Mouth","spineFish","Skeleton","targetPosition","Vec2","gc","rigidBody","RigidBody","collide","CircleCollider","transformSound","AudioClip","start","JoyStickComponent","getComponent","gameController","onBeginContact","contact","selfCollider","otherCollider","tag","scheduleOnce","ironSource","SoundState","audioEngine","play","handlePowerUp","node","linearVelocity","handlePowerUpLv2","onCollisionEnter","other","self","isTransforming","handleUpTime","handleDie","Animation","destroy","getChildByName","setAnimation","timeScale","die","active","playAudio","audioBossAtk","handleMoveToEater","currentPosition","getPosition","targetPos","lerp","setPosition","move","positionTouch","direction","sub","position","normalize","velocity","mul","update","dt"],"mappings":"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","sourcesContent":["const { Constants } = require(\"../Data/Constant\");\r\n\r\ncc.Class({\r\n  extends: cc.Component,\r\n\r\n  properties: {\r\n    speed: 150,\r\n    score: 0,\r\n    isLive: true,\r\n    isMove: false,\r\n    isLevelUp: false,\r\n    isLevel3: false,\r\n    isReplay: false,\r\n    forceReplay: false,\r\n\r\n    trackEnTry: sp.spine.trackEnTry,\r\n\r\n    eater: cc.Node,\r\n    dieBg: cc.Node,\r\n    JoyStick: cc.Node,\r\n    powerController: cc.Node,\r\n    touchArea: cc.Node,\r\n    Mouth: cc.Node,\r\n    spineFish: sp.Skeleton,\r\n    targetPosition: cc.Vec2,\r\n    gc: cc.Node,\r\n    rigidBody: cc.RigidBody,\r\n    collide: cc.CircleCollider,\r\n\r\n    transformSound: cc.AudioClip\r\n  },\r\n\r\n\r\n  start() {\r\n    this.JoyStickComponent = this.JoyStick.getComponent(\"JoyStick\");\r\n    this.gameController = this.gc.getComponent(\"GameController\");\r\n\r\n    this.rigidBody.onBeginContact = (contact, selfCollider, otherCollider) => {\r\n      if (otherCollider.tag == 4 && this.isLive) {\r\n        this.scheduleOnce(() => {\r\n          if(Constants.ironSource.SoundState) {\r\n            cc.audioEngine.play(this.transformSound, false, 1);\r\n          }\r\n        }, 0.7)\r\n        this.powerController.getComponent(\"PowerController\").handlePowerUp(this.node, otherCollider.node);\r\n        this.rigidBody.linearVelocity = new cc.Vec2(0, 0);\r\n        this.scheduleOnce(() => {\r\n          this.isLevelUp = true;\r\n        }, 2);\r\n      }\r\n\r\n      if (otherCollider.tag == 8 && this.isLive) {\r\n        this.scheduleOnce(() => {\r\n          if(Constants.ironSource.SoundState) {\r\n            cc.audioEngine.play(this.transformSound, false, 1);\r\n          }\r\n        }, 0.7)\r\n        this.rigidBody.linearVelocity = new cc.Vec2(0, 0);\r\n        this.isLevel3 = true;\r\n        this.powerController.getComponent(\"PowerController\").handlePowerUpLv2(this.node,  otherCollider.node);\r\n      };\r\n    };\r\n\r\n  },\r\n\r\n\r\n  onCollisionEnter(other, self) {\r\n    if (other.tag == 3) {\r\n      if (this.isLive && !this.isLevelUp && !this.powerController.getComponent(\"PowerController\").isTransforming) {\r\n        this.isLive = false;\r\n        this.eater = other.node;\r\n\r\n        this.handleUpTime();\r\n        this.handleDie(other);\r\n        this.dieBg.getComponent(cc.Animation).play(\"Die_Anim\");\r\n        this.collide.destroy();\r\n        this.rigidBody.destroy();\r\n      }\r\n    }\r\n\r\n    if(other.tag == 10) {\r\n      if (this.isLive && !this.isLevel3) {\r\n        this.isLive = false;\r\n        this.eater = other.node;\r\n\r\n        this.handleUpTime();\r\n        this.handleDie(other);\r\n        this.dieBg.getComponent(cc.Animation).play(\"Die_Anim\");\r\n        this.collide.destroy();\r\n        this.rigidBody.destroy();\r\n      }\r\n    }\r\n  },\r\n\r\n\r\n  handleUpTime() {\r\n    let spine = this.eater.getChildByName(\"Body\")\r\n      .getChildByName(\"Spine_Fish\").getComponent(sp.Skeleton);\r\n    this.trackEnTry = spine.setAnimation(0, \"eat\", false);\r\n    spine.timeScale = 1.5;\r\n  },\r\n\r\n\r\n  die() {\r\n    this.node.getChildByName(\"Body\").active = false;\r\n    this.node.getChildByName(\"Die\").active = true;\r\n    this.getComponent(cc.Animation).play(\"EnemyDieAnim\");\r\n    this.isLive = false;\r\n\r\n    // FINISH\r\n    // this.scheduleOnce(function(){\r\n    //   this.gameController.showPopupInstall();\r\n    // },1)\r\n  },\r\n\r\n\r\n  handleDie(other) {\r\n    if (this.isLive && !this.isReplay) {\r\n      return;\r\n    }\r\n\r\n    this.node.getChildByName(\"Body\").active = false;\r\n    this.isReplay = true;\r\n\r\n    if(Constants.ironSource.SoundState) {\r\n      this.gameController.playAudio(this.gameController.audioBossAtk);\r\n    }\r\n    \r\n    this.scheduleOnce(() => {\r\n      this.forceReplay = true;\r\n      this.isReplay = false;\r\n      this.die();\r\n      this.node.getChildByName(\"Atk\").getComponent(sp.Skeleton).setAnimation(0, \"bite\", false);\r\n    }, 1)\r\n  },\r\n\r\n\r\n  handleMoveToEater() {\r\n    if (this.isReplay) {\r\n      const currentPosition = this.node.getPosition();\r\n      const targetPos = this.eater.getPosition();\r\n      currentPosition.lerp(targetPos, 0.09, currentPosition);\r\n      this.node.setPosition(currentPosition);\r\n    }\r\n  },\r\n\r\n\r\n  move() {\r\n    if (this.isMove && this.isLive) {\r\n      // const currentPosition = this.node.getPosition();\r\n      this.targetPosition = this.touchArea.getComponent(\"TouchArea\").positionTouch;\r\n      const direction = this.targetPosition.sub(this.node.position).normalize();\r\n      let velocity;\r\n      this.isLevelUp ? velocity = direction.mul(this.speed + 100) : velocity = direction.mul(this.speed + 20)\r\n \r\n      this.rigidBody.linearVelocity = velocity;\r\n\r\n    }\r\n  },\r\n\r\n\r\n  update(dt) {\r\n    this.handleMoveToEater();\r\n  },\r\n});\r\n"]}