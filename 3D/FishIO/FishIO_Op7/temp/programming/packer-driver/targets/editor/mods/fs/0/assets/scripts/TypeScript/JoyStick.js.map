{"version":3,"sources":["file:///D:/playable-ads-hiepdh/FishIO/FishIO_Op6/assets/scripts/TypeScript/JoyStick.ts"],"names":["_decorator","Component","ccclass","property","JoyStick"],"mappings":";;;;;;;;AAESA,MAAAA,U,OAAAA,U;AAAYC,MAAAA,S,OAAAA,S;;;;;;;OAEf;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBH,U;;0BAGjBI,Q,GADZF,O,UAAD,MACaE,QADb,SAC8BH,SAD9B,CACwC,CAGtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAEA;AAGA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AA/FsC,O","sourcesContent":["\n\nimport { _decorator, Component, CircleCollider2D, Node, Prefab,Animation,Camera,Label, instantiate, RigidBody2D, Vec2, Vec3, toRadian, math, Skeleton, sp, tween, EventTouch } from 'cc';\nimport EnemiesController from '../Controller/EnemiesController';\nconst { ccclass, property } = _decorator;\n\n@ccclass\nexport class JoyStick extends Component {\n\n\n  // @property(PhysicsCircleCollider)\n  // Player_PhysicCircleCollide: PhysicsCircleCollider = null;\n  // @property(Node)\n  // Player: Node = null;\n  // @property(EnemiesController)\n  // EnemiesController: EnemiesController = null;\n  // // @property(Label)\n  // // Player_Level: Label = null;\n\n  // // @property(Node)\n  // // HideMask: Node = null;\n  // // @property(Node)\n  // // stick: Node = null;\n  // // @property(Node)\n  // // heart: Node = null;\n\n  // startPos: Vec2 = new Vec2(0,0);\n  // // joyStick_Max: number = 50;\n  // // joyStick_Vector: Vec2 = v2();\n  // isTouch: boolean = false;\n\n  // angle: number = null;\n  // angleMove: number | null = null;\n  // radian: number = null;\n  // currentPos: Vec2 = null;\n  // setTimeOut: any;\n\n  // start() {\n  //   // let canvas: Camera = null;\n  //   // tween(canvas)\n  //   // .to(1, {zoomRatio: 0.5})\n  //   // canvas.designResolution = siz\n  //   // this.Player = this.Player_PhysicCircleCollide.getComponent(\"PlayerController\");\n  //   // this.HideMask.on(Node.EventType.TOUCH_START, this.stickStart, this);\n  //   // this.HideMask.on(Node.EventType.TOUCH_MOVE, this.stickMove, this);\n  //   // this.HideMask.on(Node.EventType.TOUCH_CANCEL, this.stickEnd, this);\n  //   // this.HideMask.on(Node.EventType.TOUCH_END, this.stickEnd, this);\n  // }\n\n\n  // onLoad() {\n\n  // }\n\n\n  // public handleFixCircleCldFishes(): void {\n  //   // this.EnemiesController.Fishes_Lv1.forEach(fish => {\n  //   //   fish.getComponent(PhysicsCircleCollider).radius = 5;\n  //   // })\n\n  //   // this.EnemiesController.Fishes_Lv2.forEach(fish => {\n  //   //   fish.getComponent(PhysicsCircleCollider).radius = 5;\n  //   // })\n  // }\n\n\n  // public stickStart(event: EventTouch): void {\n  //   this.isTouch = true;\n  //   this.currentPos = event.getLocation();\n  //   // this.joyStick_Vector = this.node.convertToNodeSpaceAR(this.currentPos);\n  //   // this.setLimitStickVector(this.joyStick_Vector);\n  //   // this.stick.setPosition(this.joyStick_Vector);\n\n  //   this.node.x = this.currentPos.x - winSize.width / 2;\n  //   this.node.y = this.currentPos.y - winSize.height / 2;\n\n  //   this.Player_PhysicCircleCollide.radius = 24;\n  // }\n\n\n\n  // public stickEnd(event: Touch) {\n  //   this.isTouch = false;\n  //   this.Player.getComponent(\"PlayerController\").isMove = false;\n  //   this.Player_PhysicCircleCollide.radius = 40;\n  //   if(this.Player.getComponent(\"PlayerController\").isLive) {\n  //     this.Player.getComponent(RigidBody).linearVelocity = new Vec2(0, 0);\n  //   }\n\n  //   // this.EnemiesController.Fishes_Lv1.forEach(fish => {\n  //   //   fish.getComponent(PhysicsCircleCollider).radius = 27;\n  //   // })\n\n  //   // this.EnemiesController.Fishes_Lv2.forEach(fish => {\n  //   //   fish.getComponent(PhysicsCircleCollider).radius = 34;\n  //   // })\n  // }\n\n\n  // protected update(dt: number): void {\n  //   // this.handleRotatePlayer();\n  //   // console.log(this.Player_PhysicCircleCollide.radius);\n  // }\n}\n"]}